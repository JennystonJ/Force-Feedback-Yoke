
Force Feedback Yoke.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f3c0  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000410  0800f550  0800f550  00010550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800f960  0800f960  0001132c  2**0
                  CONTENTS
  4 .ARM          00000008  0800f960  0800f960  00010960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800f968  0800f968  0001132c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800f968  0800f968  00010968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800f96c  0800f96c  0001096c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000032c  20000000  0800f970  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .ccmram       00000000  10000000  10000000  0001132c  2**0
                  CONTENTS
 10 .bss          00000dac  2000032c  2000032c  0001132c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200010d8  200010d8  0001132c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001132c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00020806  00000000  00000000  0001135c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00005142  00000000  00000000  00031b62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001b80  00000000  00000000  00036ca8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000014fc  00000000  00000000  00038828  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00008f75  00000000  00000000  00039d24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00026778  00000000  00000000  00042c99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c328b  00000000  00000000  00069411  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0012c69c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000808c  00000000  00000000  0012c6e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000085  00000000  00000000  0013476c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000032c 	.word	0x2000032c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800f538 	.word	0x0800f538

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000330 	.word	0x20000330
 80001cc:	0800f538 	.word	0x0800f538

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <ButtonInit>:
 8000ba8:	b480      	push	{r7}
 8000baa:	b083      	sub	sp, #12
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	6078      	str	r0, [r7, #4]
 8000bb0:	6039      	str	r1, [r7, #0]
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	683a      	ldr	r2, [r7, #0]
 8000bb6:	601a      	str	r2, [r3, #0]
 8000bb8:	687b      	ldr	r3, [r7, #4]
 8000bba:	2200      	movs	r2, #0
 8000bbc:	605a      	str	r2, [r3, #4]
 8000bbe:	687b      	ldr	r3, [r7, #4]
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	741a      	strb	r2, [r3, #16]
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	721a      	strb	r2, [r3, #8]
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	7a1a      	ldrb	r2, [r3, #8]
 8000bce:	687b      	ldr	r3, [r7, #4]
 8000bd0:	725a      	strb	r2, [r3, #9]
 8000bd2:	687b      	ldr	r3, [r7, #4]
 8000bd4:	2200      	movs	r2, #0
 8000bd6:	60da      	str	r2, [r3, #12]
 8000bd8:	bf00      	nop
 8000bda:	370c      	adds	r7, #12
 8000bdc:	46bd      	mov	sp, r7
 8000bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000be2:	4770      	bx	lr

08000be4 <ButtonIsPressed>:
 8000be4:	b480      	push	{r7}
 8000be6:	b083      	sub	sp, #12
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
 8000bec:	687b      	ldr	r3, [r7, #4]
 8000bee:	7a1b      	ldrb	r3, [r3, #8]
 8000bf0:	4618      	mov	r0, r3
 8000bf2:	370c      	adds	r7, #12
 8000bf4:	46bd      	mov	sp, r7
 8000bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bfa:	4770      	bx	lr

08000bfc <ButtonProcessInt>:
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	b084      	sub	sp, #16
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	6878      	ldr	r0, [r7, #4]
 8000c0a:	4798      	blx	r3
 8000c0c:	4603      	mov	r3, r0
 8000c0e:	2b01      	cmp	r3, #1
 8000c10:	bf0c      	ite	eq
 8000c12:	2301      	moveq	r3, #1
 8000c14:	2300      	movne	r3, #0
 8000c16:	73fb      	strb	r3, [r7, #15]
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	7a5b      	ldrb	r3, [r3, #9]
 8000c1c:	7bfa      	ldrb	r2, [r7, #15]
 8000c1e:	429a      	cmp	r2, r3
 8000c20:	bf14      	ite	ne
 8000c22:	2301      	movne	r3, #1
 8000c24:	2300      	moveq	r3, #0
 8000c26:	73bb      	strb	r3, [r7, #14]
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	7c1b      	ldrb	r3, [r3, #16]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d106      	bne.n	8000c3e <ButtonProcessInt+0x42>
 8000c30:	7bbb      	ldrb	r3, [r7, #14]
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	d003      	beq.n	8000c3e <ButtonProcessInt+0x42>
 8000c36:	687b      	ldr	r3, [r7, #4]
 8000c38:	2201      	movs	r2, #1
 8000c3a:	741a      	strb	r2, [r3, #16]
 8000c3c:	e028      	b.n	8000c90 <ButtonProcessInt+0x94>
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	7c1b      	ldrb	r3, [r3, #16]
 8000c42:	2b01      	cmp	r3, #1
 8000c44:	d121      	bne.n	8000c8a <ButtonProcessInt+0x8e>
 8000c46:	7bbb      	ldrb	r3, [r7, #14]
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d003      	beq.n	8000c54 <ButtonProcessInt+0x58>
 8000c4c:	687b      	ldr	r3, [r7, #4]
 8000c4e:	2200      	movs	r2, #0
 8000c50:	60da      	str	r2, [r3, #12]
 8000c52:	e01d      	b.n	8000c90 <ButtonProcessInt+0x94>
 8000c54:	687b      	ldr	r3, [r7, #4]
 8000c56:	68db      	ldr	r3, [r3, #12]
 8000c58:	1c5a      	adds	r2, r3, #1
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	60da      	str	r2, [r3, #12]
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	68db      	ldr	r3, [r3, #12]
 8000c62:	2b09      	cmp	r3, #9
 8000c64:	dd14      	ble.n	8000c90 <ButtonProcessInt+0x94>
 8000c66:	687b      	ldr	r3, [r7, #4]
 8000c68:	2200      	movs	r2, #0
 8000c6a:	60da      	str	r2, [r3, #12]
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	7bfa      	ldrb	r2, [r7, #15]
 8000c70:	721a      	strb	r2, [r3, #8]
 8000c72:	687b      	ldr	r3, [r7, #4]
 8000c74:	2200      	movs	r2, #0
 8000c76:	741a      	strb	r2, [r3, #16]
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	685b      	ldr	r3, [r3, #4]
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d007      	beq.n	8000c90 <ButtonProcessInt+0x94>
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	685b      	ldr	r3, [r3, #4]
 8000c84:	6878      	ldr	r0, [r7, #4]
 8000c86:	4798      	blx	r3
 8000c88:	e002      	b.n	8000c90 <ButtonProcessInt+0x94>
 8000c8a:	687b      	ldr	r3, [r7, #4]
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	741a      	strb	r2, [r3, #16]
 8000c90:	687b      	ldr	r3, [r7, #4]
 8000c92:	7bfa      	ldrb	r2, [r7, #15]
 8000c94:	725a      	strb	r2, [r3, #9]
 8000c96:	bf00      	nop
 8000c98:	3710      	adds	r7, #16
 8000c9a:	46bd      	mov	sp, r7
 8000c9c:	bd80      	pop	{r7, pc}

08000c9e <ButtonSetStateChangedCallback>:
 8000c9e:	b480      	push	{r7}
 8000ca0:	b083      	sub	sp, #12
 8000ca2:	af00      	add	r7, sp, #0
 8000ca4:	6078      	str	r0, [r7, #4]
 8000ca6:	6039      	str	r1, [r7, #0]
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	683a      	ldr	r2, [r7, #0]
 8000cac:	605a      	str	r2, [r3, #4]
 8000cae:	bf00      	nop
 8000cb0:	370c      	adds	r7, #12
 8000cb2:	46bd      	mov	sp, r7
 8000cb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb8:	4770      	bx	lr

08000cba <EncoderInit>:
 8000cba:	b580      	push	{r7, lr}
 8000cbc:	b084      	sub	sp, #16
 8000cbe:	af00      	add	r7, sp, #0
 8000cc0:	60f8      	str	r0, [r7, #12]
 8000cc2:	1d3b      	adds	r3, r7, #4
 8000cc4:	e883 0006 	stmia.w	r3, {r1, r2}
 8000cc8:	68fb      	ldr	r3, [r7, #12]
 8000cca:	461a      	mov	r2, r3
 8000ccc:	1d3b      	adds	r3, r7, #4
 8000cce:	e893 0003 	ldmia.w	r3, {r0, r1}
 8000cd2:	e882 0003 	stmia.w	r2, {r0, r1}
 8000cd6:	68fb      	ldr	r3, [r7, #12]
 8000cd8:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8000cdc:	611a      	str	r2, [r3, #16]
 8000cde:	f001 fab7 	bl	8002250 <GetEncoderSensorCount>
 8000ce2:	4602      	mov	r2, r0
 8000ce4:	68fb      	ldr	r3, [r7, #12]
 8000ce6:	609a      	str	r2, [r3, #8]
 8000ce8:	68fb      	ldr	r3, [r7, #12]
 8000cea:	689a      	ldr	r2, [r3, #8]
 8000cec:	68fb      	ldr	r3, [r7, #12]
 8000cee:	60da      	str	r2, [r3, #12]
 8000cf0:	68fb      	ldr	r3, [r7, #12]
 8000cf2:	f04f 0200 	mov.w	r2, #0
 8000cf6:	615a      	str	r2, [r3, #20]
 8000cf8:	bf00      	nop
 8000cfa:	3710      	adds	r7, #16
 8000cfc:	46bd      	mov	sp, r7
 8000cfe:	bd80      	pop	{r7, pc}

08000d00 <EncoderGetCount>:
 8000d00:	b480      	push	{r7}
 8000d02:	b083      	sub	sp, #12
 8000d04:	af00      	add	r7, sp, #0
 8000d06:	6078      	str	r0, [r7, #4]
 8000d08:	687b      	ldr	r3, [r7, #4]
 8000d0a:	689b      	ldr	r3, [r3, #8]
 8000d0c:	4618      	mov	r0, r3
 8000d0e:	370c      	adds	r7, #12
 8000d10:	46bd      	mov	sp, r7
 8000d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d16:	4770      	bx	lr

08000d18 <EncoderUpdate>:
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	b086      	sub	sp, #24
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	6078      	str	r0, [r7, #4]
 8000d20:	ed87 0a00 	vstr	s0, [r7]
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	685b      	ldr	r3, [r3, #4]
 8000d28:	687a      	ldr	r2, [r7, #4]
 8000d2a:	4610      	mov	r0, r2
 8000d2c:	4798      	blx	r3
 8000d2e:	6138      	str	r0, [r7, #16]
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	691b      	ldr	r3, [r3, #16]
 8000d34:	0fda      	lsrs	r2, r3, #31
 8000d36:	4413      	add	r3, r2
 8000d38:	105b      	asrs	r3, r3, #1
 8000d3a:	60fb      	str	r3, [r7, #12]
 8000d3c:	693a      	ldr	r2, [r7, #16]
 8000d3e:	68fb      	ldr	r3, [r7, #12]
 8000d40:	441a      	add	r2, r3
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	68db      	ldr	r3, [r3, #12]
 8000d46:	429a      	cmp	r2, r3
 8000d48:	da08      	bge.n	8000d5c <EncoderUpdate+0x44>
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	691a      	ldr	r2, [r3, #16]
 8000d4e:	687b      	ldr	r3, [r7, #4]
 8000d50:	68db      	ldr	r3, [r3, #12]
 8000d52:	1ad3      	subs	r3, r2, r3
 8000d54:	693a      	ldr	r2, [r7, #16]
 8000d56:	4413      	add	r3, r2
 8000d58:	617b      	str	r3, [r7, #20]
 8000d5a:	e015      	b.n	8000d88 <EncoderUpdate+0x70>
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	68da      	ldr	r2, [r3, #12]
 8000d60:	68fb      	ldr	r3, [r7, #12]
 8000d62:	4413      	add	r3, r2
 8000d64:	693a      	ldr	r2, [r7, #16]
 8000d66:	429a      	cmp	r2, r3
 8000d68:	dd09      	ble.n	8000d7e <EncoderUpdate+0x66>
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	691a      	ldr	r2, [r3, #16]
 8000d6e:	693b      	ldr	r3, [r7, #16]
 8000d70:	1ad2      	subs	r2, r2, r3
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	68db      	ldr	r3, [r3, #12]
 8000d76:	4413      	add	r3, r2
 8000d78:	425b      	negs	r3, r3
 8000d7a:	617b      	str	r3, [r7, #20]
 8000d7c:	e004      	b.n	8000d88 <EncoderUpdate+0x70>
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	68db      	ldr	r3, [r3, #12]
 8000d82:	693a      	ldr	r2, [r7, #16]
 8000d84:	1ad3      	subs	r3, r2, r3
 8000d86:	617b      	str	r3, [r7, #20]
 8000d88:	697b      	ldr	r3, [r7, #20]
 8000d8a:	ee07 3a90 	vmov	s15, r3
 8000d8e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000d92:	ed97 7a00 	vldr	s14, [r7]
 8000d96:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000d9a:	687b      	ldr	r3, [r7, #4]
 8000d9c:	edc3 7a05 	vstr	s15, [r3, #20]
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	689a      	ldr	r2, [r3, #8]
 8000da4:	697b      	ldr	r3, [r7, #20]
 8000da6:	441a      	add	r2, r3
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	609a      	str	r2, [r3, #8]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	693a      	ldr	r2, [r7, #16]
 8000db0:	60da      	str	r2, [r3, #12]
 8000db2:	bf00      	nop
 8000db4:	3718      	adds	r7, #24
 8000db6:	46bd      	mov	sp, r7
 8000db8:	bd80      	pop	{r7, pc}
	...

08000dbc <FFBInit>:
 */

#include "utilities/utilities.h"
#include "force_feedback_controller.h"

void FFBInit(FFBController_t *ffb) {
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	b086      	sub	sp, #24
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
	ffb->constantGain = 0;
 8000dc4:	687b      	ldr	r3, [r7, #4]
 8000dc6:	f04f 0200 	mov.w	r2, #0
 8000dca:	609a      	str	r2, [r3, #8]
	ffb->periodicGain = 0;
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	f04f 0200 	mov.w	r2, #0
 8000dd2:	60da      	str	r2, [r3, #12]
	ffb->springGain = 165;
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	4a20      	ldr	r2, [pc, #128]	@ (8000e58 <FFBInit+0x9c>)
 8000dd8:	611a      	str	r2, [r3, #16]
	ffb->damperGain = 2;
 8000dda:	687b      	ldr	r3, [r7, #4]
 8000ddc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000de0:	615a      	str	r2, [r3, #20]

	ffb->gain = 1;
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000de8:	605a      	str	r2, [r3, #4]
	ffb->motorKtConstant = 0.0265;
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	4a1b      	ldr	r2, [pc, #108]	@ (8000e5c <FFBInit+0xa0>)
 8000dee:	601a      	str	r2, [r3, #0]
	ffb->lockAngle = 90;
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	4a1b      	ldr	r2, [pc, #108]	@ (8000e60 <FFBInit+0xa4>)
 8000df4:	619a      	str	r2, [r3, #24]

	// Initialize all forces to 0
	FFBSetConstantStrength(ffb, 0);
 8000df6:	ed9f 0a1b 	vldr	s0, [pc, #108]	@ 8000e64 <FFBInit+0xa8>
 8000dfa:	6878      	ldr	r0, [r7, #4]
 8000dfc:	f000 f834 	bl	8000e68 <FFBSetConstantStrength>
	FFBPeriodicInit(&ffb->param.periodic, 0, 0, 0);
 8000e00:	687b      	ldr	r3, [r7, #4]
 8000e02:	3320      	adds	r3, #32
 8000e04:	ed9f 1a17 	vldr	s2, [pc, #92]	@ 8000e64 <FFBInit+0xa8>
 8000e08:	eddf 0a16 	vldr	s1, [pc, #88]	@ 8000e64 <FFBInit+0xa8>
 8000e0c:	ed9f 0a15 	vldr	s0, [pc, #84]	@ 8000e64 <FFBInit+0xa8>
 8000e10:	4618      	mov	r0, r3
 8000e12:	f000 f863 	bl	8000edc <FFBPeriodicInit>
	FFBSpringParam_t spring = {
 8000e16:	f04f 0300 	mov.w	r3, #0
 8000e1a:	60fb      	str	r3, [r7, #12]
 8000e1c:	f04f 0300 	mov.w	r3, #0
 8000e20:	613b      	str	r3, [r7, #16]
 8000e22:	f04f 0300 	mov.w	r3, #0
 8000e26:	617b      	str	r3, [r7, #20]
			.offset = 0,
			.strength = 0,
			.minimumSpringForce = 0
	};
	FFBSetSpringParams(ffb, spring);
 8000e28:	edd7 6a03 	vldr	s13, [r7, #12]
 8000e2c:	ed97 7a04 	vldr	s14, [r7, #16]
 8000e30:	edd7 7a05 	vldr	s15, [r7, #20]
 8000e34:	eeb0 0a66 	vmov.f32	s0, s13
 8000e38:	eef0 0a47 	vmov.f32	s1, s14
 8000e3c:	eeb0 1a67 	vmov.f32	s2, s15
 8000e40:	6878      	ldr	r0, [r7, #4]
 8000e42:	f000 f820 	bl	8000e86 <FFBSetSpringParams>
	FFBSetDamper(ffb, 0);
 8000e46:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 8000e64 <FFBInit+0xa8>
 8000e4a:	6878      	ldr	r0, [r7, #4]
 8000e4c:	f000 f837 	bl	8000ebe <FFBSetDamper>
}
 8000e50:	bf00      	nop
 8000e52:	3718      	adds	r7, #24
 8000e54:	46bd      	mov	sp, r7
 8000e56:	bd80      	pop	{r7, pc}
 8000e58:	43250000 	.word	0x43250000
 8000e5c:	3cd91687 	.word	0x3cd91687
 8000e60:	42b40000 	.word	0x42b40000
 8000e64:	00000000 	.word	0x00000000

08000e68 <FFBSetConstantStrength>:

void FFBSetConstantStrength(FFBController_t *ffb, float constantStrength) {
 8000e68:	b480      	push	{r7}
 8000e6a:	b083      	sub	sp, #12
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]
 8000e70:	ed87 0a00 	vstr	s0, [r7]
	ffb->param.constantStrength = constantStrength;
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	683a      	ldr	r2, [r7, #0]
 8000e78:	61da      	str	r2, [r3, #28]
}
 8000e7a:	bf00      	nop
 8000e7c:	370c      	adds	r7, #12
 8000e7e:	46bd      	mov	sp, r7
 8000e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e84:	4770      	bx	lr

08000e86 <FFBSetSpringParams>:

void FFBSetPeriodicParams(FFBController_t *ffb, FFBPeriodicParam_t periodic) {
	ffb->param.periodic = periodic;
}

void FFBSetSpringParams(FFBController_t *ffb, FFBSpringParam_t spring) {
 8000e86:	b480      	push	{r7}
 8000e88:	b085      	sub	sp, #20
 8000e8a:	af00      	add	r7, sp, #0
 8000e8c:	60f8      	str	r0, [r7, #12]
 8000e8e:	eef0 6a40 	vmov.f32	s13, s0
 8000e92:	eeb0 7a60 	vmov.f32	s14, s1
 8000e96:	eef0 7a41 	vmov.f32	s15, s2
 8000e9a:	edc7 6a00 	vstr	s13, [r7]
 8000e9e:	ed87 7a01 	vstr	s14, [r7, #4]
 8000ea2:	edc7 7a02 	vstr	s15, [r7, #8]
	ffb->param.spring = spring;
 8000ea6:	68fb      	ldr	r3, [r7, #12]
 8000ea8:	3330      	adds	r3, #48	@ 0x30
 8000eaa:	463a      	mov	r2, r7
 8000eac:	ca07      	ldmia	r2, {r0, r1, r2}
 8000eae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
}
 8000eb2:	bf00      	nop
 8000eb4:	3714      	adds	r7, #20
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr

08000ebe <FFBSetDamper>:

void FFBSetDamper(FFBController_t *ffb, float damperStrength) {
 8000ebe:	b480      	push	{r7}
 8000ec0:	b083      	sub	sp, #12
 8000ec2:	af00      	add	r7, sp, #0
 8000ec4:	6078      	str	r0, [r7, #4]
 8000ec6:	ed87 0a00 	vstr	s0, [r7]
	ffb->param.damperStrength = damperStrength;
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	683a      	ldr	r2, [r7, #0]
 8000ece:	63da      	str	r2, [r3, #60]	@ 0x3c
}
 8000ed0:	bf00      	nop
 8000ed2:	370c      	adds	r7, #12
 8000ed4:	46bd      	mov	sp, r7
 8000ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eda:	4770      	bx	lr

08000edc <FFBPeriodicInit>:
#include <math.h>

#define PI 3.141592653589793f

void FFBPeriodicInit(FFBPeriodicParam_t *peri, float amplitude, float frequency,
		float offset) {
 8000edc:	b480      	push	{r7}
 8000ede:	b085      	sub	sp, #20
 8000ee0:	af00      	add	r7, sp, #0
 8000ee2:	60f8      	str	r0, [r7, #12]
 8000ee4:	ed87 0a02 	vstr	s0, [r7, #8]
 8000ee8:	edc7 0a01 	vstr	s1, [r7, #4]
 8000eec:	ed87 1a00 	vstr	s2, [r7]
	// Initialize FFB periodic parameters
	peri->amplitude = amplitude;
 8000ef0:	68fb      	ldr	r3, [r7, #12]
 8000ef2:	68ba      	ldr	r2, [r7, #8]
 8000ef4:	601a      	str	r2, [r3, #0]
	peri->frequency = frequency;
 8000ef6:	68fb      	ldr	r3, [r7, #12]
 8000ef8:	687a      	ldr	r2, [r7, #4]
 8000efa:	605a      	str	r2, [r3, #4]
	peri->offset = offset;
 8000efc:	68fb      	ldr	r3, [r7, #12]
 8000efe:	683a      	ldr	r2, [r7, #0]
 8000f00:	609a      	str	r2, [r3, #8]

	// Reset time to 0
	peri->time = 0;
 8000f02:	68fb      	ldr	r3, [r7, #12]
 8000f04:	2200      	movs	r2, #0
 8000f06:	60da      	str	r2, [r3, #12]
}
 8000f08:	bf00      	nop
 8000f0a:	3714      	adds	r7, #20
 8000f0c:	46bd      	mov	sp, r7
 8000f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f12:	4770      	bx	lr

08000f14 <MotorInit>:
 8000f14:	b490      	push	{r4, r7}
 8000f16:	b084      	sub	sp, #16
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	60f8      	str	r0, [r7, #12]
 8000f1c:	4638      	mov	r0, r7
 8000f1e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8000f22:	68fb      	ldr	r3, [r7, #12]
 8000f24:	461c      	mov	r4, r3
 8000f26:	463b      	mov	r3, r7
 8000f28:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8000f2c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8000f30:	bf00      	nop
 8000f32:	3710      	adds	r7, #16
 8000f34:	46bd      	mov	sp, r7
 8000f36:	bc90      	pop	{r4, r7}
 8000f38:	4770      	bx	lr

08000f3a <UsbReportInit>:
 8000f3a:	b580      	push	{r7, lr}
 8000f3c:	b082      	sub	sp, #8
 8000f3e:	af00      	add	r7, sp, #0
 8000f40:	6078      	str	r0, [r7, #4]
 8000f42:	6039      	str	r1, [r7, #0]
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	2200      	movs	r2, #0
 8000f48:	701a      	strb	r2, [r3, #0]
 8000f4a:	687b      	ldr	r3, [r7, #4]
 8000f4c:	3301      	adds	r3, #1
 8000f4e:	2240      	movs	r2, #64	@ 0x40
 8000f50:	2100      	movs	r1, #0
 8000f52:	4618      	mov	r0, r3
 8000f54:	f00c fc62 	bl	800d81c <memset>
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	f8a3 2042 	strh.w	r2, [r3, #66]	@ 0x42
 8000f60:	bf00      	nop
 8000f62:	3708      	adds	r7, #8
 8000f64:	46bd      	mov	sp, r7
 8000f66:	bd80      	pop	{r7, pc}

08000f68 <UsbReportLoad>:
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	b084      	sub	sp, #16
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	60f8      	str	r0, [r7, #12]
 8000f70:	60b9      	str	r1, [r7, #8]
 8000f72:	4613      	mov	r3, r2
 8000f74:	80fb      	strh	r3, [r7, #6]
 8000f76:	68bb      	ldr	r3, [r7, #8]
 8000f78:	781a      	ldrb	r2, [r3, #0]
 8000f7a:	68fb      	ldr	r3, [r7, #12]
 8000f7c:	701a      	strb	r2, [r3, #0]
 8000f7e:	68fb      	ldr	r3, [r7, #12]
 8000f80:	1c58      	adds	r0, r3, #1
 8000f82:	68bb      	ldr	r3, [r7, #8]
 8000f84:	1c59      	adds	r1, r3, #1
 8000f86:	88fb      	ldrh	r3, [r7, #6]
 8000f88:	3b01      	subs	r3, #1
 8000f8a:	461a      	mov	r2, r3
 8000f8c:	f00c fcc5 	bl	800d91a <memcpy>
 8000f90:	68fb      	ldr	r3, [r7, #12]
 8000f92:	2200      	movs	r2, #0
 8000f94:	f8a3 2042 	strh.w	r2, [r3, #66]	@ 0x42
 8000f98:	bf00      	nop
 8000f9a:	3710      	adds	r7, #16
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	bd80      	pop	{r7, pc}

08000fa0 <UsbReportParseNextFloat>:
 8000fa0:	b580      	push	{r7, lr}
 8000fa2:	b084      	sub	sp, #16
 8000fa4:	af00      	add	r7, sp, #0
 8000fa6:	6078      	str	r0, [r7, #4]
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	3301      	adds	r3, #1
 8000fac:	687a      	ldr	r2, [r7, #4]
 8000fae:	f8b2 2042 	ldrh.w	r2, [r2, #66]	@ 0x42
 8000fb2:	4413      	add	r3, r2
 8000fb4:	60fb      	str	r3, [r7, #12]
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8000fbc:	f107 0008 	add.w	r0, r7, #8
 8000fc0:	2204      	movs	r2, #4
 8000fc2:	68f9      	ldr	r1, [r7, #12]
 8000fc4:	f000 f810 	bl	8000fe8 <ParseBytesEndian>
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	f8b3 3042 	ldrh.w	r3, [r3, #66]	@ 0x42
 8000fce:	3304      	adds	r3, #4
 8000fd0:	b29a      	uxth	r2, r3
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	f8a3 2042 	strh.w	r2, [r3, #66]	@ 0x42
 8000fd8:	68bb      	ldr	r3, [r7, #8]
 8000fda:	ee07 3a90 	vmov	s15, r3
 8000fde:	eeb0 0a67 	vmov.f32	s0, s15
 8000fe2:	3710      	adds	r7, #16
 8000fe4:	46bd      	mov	sp, r7
 8000fe6:	bd80      	pop	{r7, pc}

08000fe8 <ParseBytesEndian>:
 8000fe8:	b480      	push	{r7}
 8000fea:	b087      	sub	sp, #28
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	60f8      	str	r0, [r7, #12]
 8000ff0:	60b9      	str	r1, [r7, #8]
 8000ff2:	603b      	str	r3, [r7, #0]
 8000ff4:	4613      	mov	r3, r2
 8000ff6:	71fb      	strb	r3, [r7, #7]
 8000ff8:	683b      	ldr	r3, [r7, #0]
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d018      	beq.n	8001030 <ParseBytesEndian+0x48>
 8000ffe:	683b      	ldr	r3, [r7, #0]
 8001000:	2b01      	cmp	r3, #1
 8001002:	d128      	bne.n	8001056 <ParseBytesEndian+0x6e>
 8001004:	2300      	movs	r3, #0
 8001006:	617b      	str	r3, [r7, #20]
 8001008:	e00d      	b.n	8001026 <ParseBytesEndian+0x3e>
 800100a:	79fa      	ldrb	r2, [r7, #7]
 800100c:	697b      	ldr	r3, [r7, #20]
 800100e:	1ad3      	subs	r3, r2, r3
 8001010:	3b01      	subs	r3, #1
 8001012:	68ba      	ldr	r2, [r7, #8]
 8001014:	441a      	add	r2, r3
 8001016:	697b      	ldr	r3, [r7, #20]
 8001018:	68f9      	ldr	r1, [r7, #12]
 800101a:	440b      	add	r3, r1
 800101c:	7812      	ldrb	r2, [r2, #0]
 800101e:	701a      	strb	r2, [r3, #0]
 8001020:	697b      	ldr	r3, [r7, #20]
 8001022:	3301      	adds	r3, #1
 8001024:	617b      	str	r3, [r7, #20]
 8001026:	79fb      	ldrb	r3, [r7, #7]
 8001028:	697a      	ldr	r2, [r7, #20]
 800102a:	429a      	cmp	r2, r3
 800102c:	dbed      	blt.n	800100a <ParseBytesEndian+0x22>
 800102e:	e013      	b.n	8001058 <ParseBytesEndian+0x70>
 8001030:	2300      	movs	r3, #0
 8001032:	613b      	str	r3, [r7, #16]
 8001034:	e00a      	b.n	800104c <ParseBytesEndian+0x64>
 8001036:	693b      	ldr	r3, [r7, #16]
 8001038:	68ba      	ldr	r2, [r7, #8]
 800103a:	441a      	add	r2, r3
 800103c:	693b      	ldr	r3, [r7, #16]
 800103e:	68f9      	ldr	r1, [r7, #12]
 8001040:	440b      	add	r3, r1
 8001042:	7812      	ldrb	r2, [r2, #0]
 8001044:	701a      	strb	r2, [r3, #0]
 8001046:	693b      	ldr	r3, [r7, #16]
 8001048:	3301      	adds	r3, #1
 800104a:	613b      	str	r3, [r7, #16]
 800104c:	79fb      	ldrb	r3, [r7, #7]
 800104e:	693a      	ldr	r2, [r7, #16]
 8001050:	429a      	cmp	r2, r3
 8001052:	dbf0      	blt.n	8001036 <ParseBytesEndian+0x4e>
 8001054:	e000      	b.n	8001058 <ParseBytesEndian+0x70>
 8001056:	bf00      	nop
 8001058:	bf00      	nop
 800105a:	371c      	adds	r7, #28
 800105c:	46bd      	mov	sp, r7
 800105e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001062:	4770      	bx	lr

08001064 <Constrain>:
 8001064:	b480      	push	{r7}
 8001066:	b085      	sub	sp, #20
 8001068:	af00      	add	r7, sp, #0
 800106a:	60f8      	str	r0, [r7, #12]
 800106c:	60b9      	str	r1, [r7, #8]
 800106e:	607a      	str	r2, [r7, #4]
 8001070:	68fa      	ldr	r2, [r7, #12]
 8001072:	68bb      	ldr	r3, [r7, #8]
 8001074:	429a      	cmp	r2, r3
 8001076:	da01      	bge.n	800107c <Constrain+0x18>
 8001078:	68bb      	ldr	r3, [r7, #8]
 800107a:	e006      	b.n	800108a <Constrain+0x26>
 800107c:	68fa      	ldr	r2, [r7, #12]
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	429a      	cmp	r2, r3
 8001082:	dd01      	ble.n	8001088 <Constrain+0x24>
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	e000      	b.n	800108a <Constrain+0x26>
 8001088:	68fb      	ldr	r3, [r7, #12]
 800108a:	4618      	mov	r0, r3
 800108c:	3714      	adds	r7, #20
 800108e:	46bd      	mov	sp, r7
 8001090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001094:	4770      	bx	lr

08001096 <ButtonStateChangedCallback>:
// Private function prototypes
void ProcessEncoders(int deltaTimeUs);
void CommandLineMode(void);

// Callbacks
void ButtonStateChangedCallback(Button_t *button) {
 8001096:	b480      	push	{r7}
 8001098:	b083      	sub	sp, #12
 800109a:	af00      	add	r7, sp, #0
 800109c:	6078      	str	r0, [r7, #4]
	if(button == &btnAccept) {
		// Add implementation for accept button here
	}
}
 800109e:	bf00      	nop
 80010a0:	370c      	adds	r7, #12
 80010a2:	46bd      	mov	sp, r7
 80010a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010a8:	4770      	bx	lr
	...

080010ac <ButtonReadState>:

int ButtonReadState(Button_t *button) {
 80010ac:	b580      	push	{r7, lr}
 80010ae:	b082      	sub	sp, #8
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	6078      	str	r0, [r7, #4]
	if(button == &btnAccept) {
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	4a0c      	ldr	r2, [pc, #48]	@ (80010e8 <ButtonReadState+0x3c>)
 80010b8:	4293      	cmp	r3, r2
 80010ba:	d10f      	bne.n	80010dc <ButtonReadState+0x30>
		if(ButtonIsPressed(&btnAccept)) {
 80010bc:	480a      	ldr	r0, [pc, #40]	@ (80010e8 <ButtonReadState+0x3c>)
 80010be:	f7ff fd91 	bl	8000be4 <ButtonIsPressed>
 80010c2:	4603      	mov	r3, r0
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d009      	beq.n	80010dc <ButtonReadState+0x30>
			return GPIOGetState(&gpioAccept) == GPIO_HIGH ? 1 : 0;
 80010c8:	4808      	ldr	r0, [pc, #32]	@ (80010ec <ButtonReadState+0x40>)
 80010ca:	f001 faf7 	bl	80026bc <GPIOGetState>
 80010ce:	4603      	mov	r3, r0
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	bf0c      	ite	eq
 80010d4:	2301      	moveq	r3, #1
 80010d6:	2300      	movne	r3, #0
 80010d8:	b2db      	uxtb	r3, r3
 80010da:	e000      	b.n	80010de <ButtonReadState+0x32>
		}
	}

	return 0;
 80010dc:	2300      	movs	r3, #0
}
 80010de:	4618      	mov	r0, r3
 80010e0:	3708      	adds	r7, #8
 80010e2:	46bd      	mov	sp, r7
 80010e4:	bd80      	pop	{r7, pc}
 80010e6:	bf00      	nop
 80010e8:	20000418 	.word	0x20000418
 80010ec:	200004f8 	.word	0x200004f8

080010f0 <ApplicationInit>:

void ApplicationInit(void) {
 80010f0:	b580      	push	{r7, lr}
 80010f2:	af00      	add	r7, sp, #0


	UsbReportInit(&usbReport, USB_REPORT_IN_LITTLE_ENDIAN);
 80010f4:	2100      	movs	r1, #0
 80010f6:	4818      	ldr	r0, [pc, #96]	@ (8001158 <ApplicationInit+0x68>)
 80010f8:	f7ff ff1f 	bl	8000f3a <UsbReportInit>

	ButtonInit(&btnAccept, &ButtonReadState);
 80010fc:	4917      	ldr	r1, [pc, #92]	@ (800115c <ApplicationInit+0x6c>)
 80010fe:	4818      	ldr	r0, [pc, #96]	@ (8001160 <ApplicationInit+0x70>)
 8001100:	f7ff fd52 	bl	8000ba8 <ButtonInit>

	FFBInit(&ffbPitch);
 8001104:	4817      	ldr	r0, [pc, #92]	@ (8001164 <ApplicationInit+0x74>)
 8001106:	f7ff fe59 	bl	8000dbc <FFBInit>
	FFBInit(&ffbRoll);
 800110a:	4817      	ldr	r0, [pc, #92]	@ (8001168 <ApplicationInit+0x78>)
 800110c:	f7ff fe56 	bl	8000dbc <FFBInit>

	printf("Ready!\r\n");
 8001110:	4816      	ldr	r0, [pc, #88]	@ (800116c <ApplicationInit+0x7c>)
 8001112:	f00c faa3 	bl	800d65c <puts>

	// Wait for button press then release before proceeding
	while(!ButtonIsPressed(&btnAccept)) {
 8001116:	bf00      	nop
 8001118:	4811      	ldr	r0, [pc, #68]	@ (8001160 <ApplicationInit+0x70>)
 800111a:	f7ff fd63 	bl	8000be4 <ButtonIsPressed>
 800111e:	4603      	mov	r3, r0
 8001120:	f083 0301 	eor.w	r3, r3, #1
 8001124:	b2db      	uxtb	r3, r3
 8001126:	2b00      	cmp	r3, #0
 8001128:	d1f6      	bne.n	8001118 <ApplicationInit+0x28>
	}
	while(ButtonIsPressed(&btnAccept)) {
 800112a:	bf00      	nop
 800112c:	480c      	ldr	r0, [pc, #48]	@ (8001160 <ApplicationInit+0x70>)
 800112e:	f7ff fd59 	bl	8000be4 <ButtonIsPressed>
 8001132:	4603      	mov	r3, r0
 8001134:	2b00      	cmp	r3, #0
 8001136:	d1f9      	bne.n	800112c <ApplicationInit+0x3c>
	}
	while(!ButtonIsPressed(&btnAccept)) {
 8001138:	bf00      	nop
 800113a:	4809      	ldr	r0, [pc, #36]	@ (8001160 <ApplicationInit+0x70>)
 800113c:	f7ff fd52 	bl	8000be4 <ButtonIsPressed>
 8001140:	4603      	mov	r3, r0
 8001142:	f083 0301 	eor.w	r3, r3, #1
 8001146:	b2db      	uxtb	r3, r3
 8001148:	2b00      	cmp	r3, #0
 800114a:	d1f6      	bne.n	800113a <ApplicationInit+0x4a>
	}

	// Register callback for future presses
	ButtonSetStateChangedCallback(&btnAccept, &ButtonStateChangedCallback);
 800114c:	4908      	ldr	r1, [pc, #32]	@ (8001170 <ApplicationInit+0x80>)
 800114e:	4804      	ldr	r0, [pc, #16]	@ (8001160 <ApplicationInit+0x70>)
 8001150:	f7ff fda5 	bl	8000c9e <ButtonSetStateChangedCallback>
}
 8001154:	bf00      	nop
 8001156:	bd80      	pop	{r7, pc}
 8001158:	200003d0 	.word	0x200003d0
 800115c:	080010ad 	.word	0x080010ad
 8001160:	20000418 	.word	0x20000418
 8001164:	2000042c 	.word	0x2000042c
 8001168:	2000046c 	.word	0x2000046c
 800116c:	0800f550 	.word	0x0800f550
 8001170:	08001097 	.word	0x08001097

08001174 <ApplicationRun>:

void ApplicationRun(void) {
 8001174:	b580      	push	{r7, lr}
 8001176:	b084      	sub	sp, #16
 8001178:	af00      	add	r7, sp, #0

	int32_t periFrequency = 0;
 800117a:	2300      	movs	r3, #0
 800117c:	60fb      	str	r3, [r7, #12]
	float periAmplitude = 0.0f;
 800117e:	f04f 0300 	mov.w	r3, #0
 8001182:	60bb      	str	r3, [r7, #8]
	float sprStrength = 0.0f;
 8001184:	f04f 0300 	mov.w	r3, #0
 8001188:	607b      	str	r3, [r7, #4]

	// Application is now running in loop
	appRunning = true;
 800118a:	4b39      	ldr	r3, [pc, #228]	@ (8001270 <ApplicationRun+0xfc>)
 800118c:	2201      	movs	r2, #1
 800118e:	701a      	strb	r2, [r3, #0]
	while(1) {
		if(flag_rx == 1){
 8001190:	4b38      	ldr	r3, [pc, #224]	@ (8001274 <ApplicationRun+0x100>)
 8001192:	781b      	ldrb	r3, [r3, #0]
 8001194:	2b01      	cmp	r3, #1
 8001196:	d148      	bne.n	800122a <ApplicationRun+0xb6>

			flag_rx = 0;
 8001198:	4b36      	ldr	r3, [pc, #216]	@ (8001274 <ApplicationRun+0x100>)
 800119a:	2200      	movs	r2, #0
 800119c:	701a      	strb	r2, [r3, #0]

			UsbReportLoad(&usbReport, report_buffer,
 800119e:	220d      	movs	r2, #13
 80011a0:	4935      	ldr	r1, [pc, #212]	@ (8001278 <ApplicationRun+0x104>)
 80011a2:	4836      	ldr	r0, [pc, #216]	@ (800127c <ApplicationRun+0x108>)
 80011a4:	f7ff fee0 	bl	8000f68 <UsbReportLoad>
					USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
			sprStrength = UsbReportParseNextFloat(&usbReport);
 80011a8:	4834      	ldr	r0, [pc, #208]	@ (800127c <ApplicationRun+0x108>)
 80011aa:	f7ff fef9 	bl	8000fa0 <UsbReportParseNextFloat>
 80011ae:	ed87 0a01 	vstr	s0, [r7, #4]
			periAmplitude = UsbReportParseNextFloat(&usbReport);
 80011b2:	4832      	ldr	r0, [pc, #200]	@ (800127c <ApplicationRun+0x108>)
 80011b4:	f7ff fef4 	bl	8000fa0 <UsbReportParseNextFloat>
 80011b8:	ed87 0a02 	vstr	s0, [r7, #8]
			periFrequency = UsbReportParseNextFloat(&usbReport);
 80011bc:	482f      	ldr	r0, [pc, #188]	@ (800127c <ApplicationRun+0x108>)
 80011be:	f7ff feef 	bl	8000fa0 <UsbReportParseNextFloat>
 80011c2:	eef0 7a40 	vmov.f32	s15, s0
 80011c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011ca:	ee17 3a90 	vmov	r3, s15
 80011ce:	60fb      	str	r3, [r7, #12]

			// Prepare and send aileron axis
					  int16_t aileron = (int16_t)Constrain(((
							  EncoderGetCount(&rollEncoder)/4095.0f) *
 80011d0:	482b      	ldr	r0, [pc, #172]	@ (8001280 <ApplicationRun+0x10c>)
 80011d2:	f7ff fd95 	bl	8000d00 <EncoderGetCount>
 80011d6:	ee07 0a90 	vmov	s15, r0
 80011da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011de:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8001284 <ApplicationRun+0x110>
 80011e2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80011e6:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8001288 <ApplicationRun+0x114>
 80011ea:	ee67 7a87 	vmul.f32	s15, s15, s14
					  int16_t aileron = (int16_t)Constrain(((
 80011ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011f2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80011f6:	4925      	ldr	r1, [pc, #148]	@ (800128c <ApplicationRun+0x118>)
 80011f8:	ee17 0a90 	vmov	r0, s15
 80011fc:	f7ff ff32 	bl	8001064 <Constrain>
 8001200:	4603      	mov	r3, r0
 8001202:	807b      	strh	r3, [r7, #2]
							  32767), -32767, 32767);

			// Set report ID to 1
			reportTxBuffer[0] = 0x01;
 8001204:	4b22      	ldr	r3, [pc, #136]	@ (8001290 <ApplicationRun+0x11c>)
 8001206:	2201      	movs	r2, #1
 8001208:	701a      	strb	r2, [r3, #0]
			reportTxBuffer[1] = aileron & 0xFF;
 800120a:	887b      	ldrh	r3, [r7, #2]
 800120c:	b2da      	uxtb	r2, r3
 800120e:	4b20      	ldr	r3, [pc, #128]	@ (8001290 <ApplicationRun+0x11c>)
 8001210:	705a      	strb	r2, [r3, #1]
			reportTxBuffer[2] = aileron >> 8;
 8001212:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001216:	121b      	asrs	r3, r3, #8
 8001218:	b21b      	sxth	r3, r3
 800121a:	b2da      	uxtb	r2, r3
 800121c:	4b1c      	ldr	r3, [pc, #112]	@ (8001290 <ApplicationRun+0x11c>)
 800121e:	709a      	strb	r2, [r3, #2]

			USBD_CUSTOM_HID_SendReport(&hUsbDeviceFS, reportTxBuffer, 3);
 8001220:	2203      	movs	r2, #3
 8001222:	491b      	ldr	r1, [pc, #108]	@ (8001290 <ApplicationRun+0x11c>)
 8001224:	481b      	ldr	r0, [pc, #108]	@ (8001294 <ApplicationRun+0x120>)
 8001226:	f009 ff0f 	bl	800b048 <USBD_CUSTOM_HID_SendReport>
		}

		if(flag == 1) {
 800122a:	4b1b      	ldr	r3, [pc, #108]	@ (8001298 <ApplicationRun+0x124>)
 800122c:	781b      	ldrb	r3, [r3, #0]
 800122e:	2b01      	cmp	r3, #1
 8001230:	d107      	bne.n	8001242 <ApplicationRun+0xce>
			USBD_CUSTOM_HID_SendReport(&hUsbDeviceFS, txBuffer, 64);
 8001232:	2240      	movs	r2, #64	@ 0x40
 8001234:	4919      	ldr	r1, [pc, #100]	@ (800129c <ApplicationRun+0x128>)
 8001236:	4817      	ldr	r0, [pc, #92]	@ (8001294 <ApplicationRun+0x120>)
 8001238:	f009 ff06 	bl	800b048 <USBD_CUSTOM_HID_SendReport>

			flag = 0;
 800123c:	4b16      	ldr	r3, [pc, #88]	@ (8001298 <ApplicationRun+0x124>)
 800123e:	2200      	movs	r2, #0
 8001240:	701a      	strb	r2, [r3, #0]
		}

		angle = (EncoderGetCount(&rollEncoder)/49152.0f)*360.0f;
 8001242:	480f      	ldr	r0, [pc, #60]	@ (8001280 <ApplicationRun+0x10c>)
 8001244:	f7ff fd5c 	bl	8000d00 <EncoderGetCount>
 8001248:	ee07 0a90 	vmov	s15, r0
 800124c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001250:	eddf 6a13 	vldr	s13, [pc, #76]	@ 80012a0 <ApplicationRun+0x12c>
 8001254:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001258:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 80012a4 <ApplicationRun+0x130>
 800125c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001260:	4b11      	ldr	r3, [pc, #68]	@ (80012a8 <ApplicationRun+0x134>)
 8001262:	edc3 7a00 	vstr	s15, [r3]

		HAL_Delay(5);
 8001266:	2005      	movs	r0, #5
 8001268:	f001 faf0 	bl	800284c <HAL_Delay>
		if(flag_rx == 1){
 800126c:	e790      	b.n	8001190 <ApplicationRun+0x1c>
 800126e:	bf00      	nop
 8001270:	20000416 	.word	0x20000416
 8001274:	200003cd 	.word	0x200003cd
 8001278:	2000038c 	.word	0x2000038c
 800127c:	200003d0 	.word	0x200003d0
 8001280:	200004c8 	.word	0x200004c8
 8001284:	457ff000 	.word	0x457ff000
 8001288:	46fffe00 	.word	0x46fffe00
 800128c:	ffff8001 	.word	0xffff8001
 8001290:	20000348 	.word	0x20000348
 8001294:	200007cc 	.word	0x200007cc
 8001298:	200003cc 	.word	0x200003cc
 800129c:	2000034c 	.word	0x2000034c
 80012a0:	47400000 	.word	0x47400000
 80012a4:	43b40000 	.word	0x43b40000
 80012a8:	200004ac 	.word	0x200004ac

080012ac <ApplicationUpdate>:

	}
}

void ApplicationUpdate(int deltaTimeUs) {
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b082      	sub	sp, #8
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
	if(!appRunning) {
 80012b4:	4b08      	ldr	r3, [pc, #32]	@ (80012d8 <ApplicationUpdate+0x2c>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	f083 0301 	eor.w	r3, r3, #1
 80012bc:	b2db      	uxtb	r3, r3
 80012be:	2b00      	cmp	r3, #0
 80012c0:	d106      	bne.n	80012d0 <ApplicationUpdate+0x24>
		return;
	}

	ButtonProcessInt(&btnAccept);
 80012c2:	4806      	ldr	r0, [pc, #24]	@ (80012dc <ApplicationUpdate+0x30>)
 80012c4:	f7ff fc9a 	bl	8000bfc <ButtonProcessInt>
	ProcessEncoders(deltaTimeUs);
 80012c8:	6878      	ldr	r0, [r7, #4]
 80012ca:	f000 f809 	bl	80012e0 <ProcessEncoders>
 80012ce:	e000      	b.n	80012d2 <ApplicationUpdate+0x26>
		return;
 80012d0:	bf00      	nop

}
 80012d2:	3708      	adds	r7, #8
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}
 80012d8:	20000416 	.word	0x20000416
 80012dc:	20000418 	.word	0x20000418

080012e0 <ProcessEncoders>:

void ProcessEncoders(int deltaTimeUs) {
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b082      	sub	sp, #8
 80012e4:	af00      	add	r7, sp, #0
 80012e6:	6078      	str	r0, [r7, #4]
	EncoderUpdate(&pitchEncoder, deltaTimeUs);
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	ee07 3a90 	vmov	s15, r3
 80012ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012f2:	eeb0 0a67 	vmov.f32	s0, s15
 80012f6:	4808      	ldr	r0, [pc, #32]	@ (8001318 <ProcessEncoders+0x38>)
 80012f8:	f7ff fd0e 	bl	8000d18 <EncoderUpdate>
	EncoderUpdate(&rollEncoder, deltaTimeUs);
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	ee07 3a90 	vmov	s15, r3
 8001302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001306:	eeb0 0a67 	vmov.f32	s0, s15
 800130a:	4804      	ldr	r0, [pc, #16]	@ (800131c <ProcessEncoders+0x3c>)
 800130c:	f7ff fd04 	bl	8000d18 <EncoderUpdate>
}
 8001310:	bf00      	nop
 8001312:	3708      	adds	r7, #8
 8001314:	46bd      	mov	sp, r7
 8001316:	bd80      	pop	{r7, pc}
 8001318:	200004b0 	.word	0x200004b0
 800131c:	200004c8 	.word	0x200004c8

08001320 <BspInit>:
 8001320:	b580      	push	{r7, lr}
 8001322:	af00      	add	r7, sp, #0
 8001324:	f000 f816 	bl	8001354 <SetupEncoders>
 8001328:	f000 f848 	bl	80013bc <SetupMotors>
 800132c:	f000 f8b0 	bl	8001490 <SetupButtons>
 8001330:	4805      	ldr	r0, [pc, #20]	@ (8001348 <BspInit+0x28>)
 8001332:	f005 fd13 	bl	8006d5c <HAL_TIM_Base_Start_IT>
 8001336:	4805      	ldr	r0, [pc, #20]	@ (800134c <BspInit+0x2c>)
 8001338:	f005 fd10 	bl	8006d5c <HAL_TIM_Base_Start_IT>
 800133c:	4804      	ldr	r0, [pc, #16]	@ (8001350 <BspInit+0x30>)
 800133e:	f005 fd0d 	bl	8006d5c <HAL_TIM_Base_Start_IT>
 8001342:	bf00      	nop
 8001344:	bd80      	pop	{r7, pc}
 8001346:	bf00      	nop
 8001348:	20000654 	.word	0x20000654
 800134c:	200006a0 	.word	0x200006a0
 8001350:	200006ec 	.word	0x200006ec

08001354 <SetupEncoders>:
 8001354:	b580      	push	{r7, lr}
 8001356:	b084      	sub	sp, #16
 8001358:	af00      	add	r7, sp, #0
 800135a:	4912      	ldr	r1, [pc, #72]	@ (80013a4 <SetupEncoders+0x50>)
 800135c:	4812      	ldr	r0, [pc, #72]	@ (80013a8 <SetupEncoders+0x54>)
 800135e:	f000 fefb 	bl	8002158 <AS5600Init>
 8001362:	f107 0308 	add.w	r3, r7, #8
 8001366:	4910      	ldr	r1, [pc, #64]	@ (80013a8 <SetupEncoders+0x54>)
 8001368:	4618      	mov	r0, r3
 800136a:	f000 ff5d 	bl	8002228 <AS5600InterfaceInit>
 800136e:	f107 0308 	add.w	r3, r7, #8
 8001372:	e893 0006 	ldmia.w	r3, {r1, r2}
 8001376:	480d      	ldr	r0, [pc, #52]	@ (80013ac <SetupEncoders+0x58>)
 8001378:	f7ff fc9f 	bl	8000cba <EncoderInit>
 800137c:	490c      	ldr	r1, [pc, #48]	@ (80013b0 <SetupEncoders+0x5c>)
 800137e:	480d      	ldr	r0, [pc, #52]	@ (80013b4 <SetupEncoders+0x60>)
 8001380:	f000 feea 	bl	8002158 <AS5600Init>
 8001384:	463b      	mov	r3, r7
 8001386:	490b      	ldr	r1, [pc, #44]	@ (80013b4 <SetupEncoders+0x60>)
 8001388:	4618      	mov	r0, r3
 800138a:	f000 ff4d 	bl	8002228 <AS5600InterfaceInit>
 800138e:	463b      	mov	r3, r7
 8001390:	e893 0006 	ldmia.w	r3, {r1, r2}
 8001394:	4808      	ldr	r0, [pc, #32]	@ (80013b8 <SetupEncoders+0x64>)
 8001396:	f7ff fc90 	bl	8000cba <EncoderInit>
 800139a:	bf00      	nop
 800139c:	3710      	adds	r7, #16
 800139e:	46bd      	mov	sp, r7
 80013a0:	bd80      	pop	{r7, pc}
 80013a2:	bf00      	nop
 80013a4:	20000548 	.word	0x20000548
 80013a8:	20000500 	.word	0x20000500
 80013ac:	200004b0 	.word	0x200004b0
 80013b0:	2000059c 	.word	0x2000059c
 80013b4:	20000504 	.word	0x20000504
 80013b8:	200004c8 	.word	0x200004c8

080013bc <SetupMotors>:
 80013bc:	b580      	push	{r7, lr}
 80013be:	b092      	sub	sp, #72	@ 0x48
 80013c0:	af04      	add	r7, sp, #16
 80013c2:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80013c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80013ca:	f04f 4190 	mov.w	r1, #1207959552	@ 0x48000000
 80013ce:	4618      	mov	r0, r3
 80013d0:	f001 f961 	bl	8002696 <GPIOInit>
 80013d4:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013d8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80013dc:	f04f 4190 	mov.w	r1, #1207959552	@ 0x48000000
 80013e0:	4618      	mov	r0, r3
 80013e2:	f001 f958 	bl	8002696 <GPIOInit>
 80013e6:	2308      	movs	r3, #8
 80013e8:	9303      	str	r3, [sp, #12]
 80013ea:	230c      	movs	r3, #12
 80013ec:	9302      	str	r3, [sp, #8]
 80013ee:	4b22      	ldr	r3, [pc, #136]	@ (8001478 <SetupMotors+0xbc>)
 80013f0:	9301      	str	r3, [sp, #4]
 80013f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80013f4:	9300      	str	r3, [sp, #0]
 80013f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80013f8:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 80013fc:	ca06      	ldmia	r2, {r1, r2}
 80013fe:	481f      	ldr	r0, [pc, #124]	@ (800147c <SetupMotors+0xc0>)
 8001400:	f000 ff34 	bl	800226c <BTS7960Init>
 8001404:	f107 031c 	add.w	r3, r7, #28
 8001408:	491c      	ldr	r1, [pc, #112]	@ (800147c <SetupMotors+0xc0>)
 800140a:	4618      	mov	r0, r3
 800140c:	f001 f90e 	bl	800262c <BTS7960InterfaceInit>
 8001410:	f107 031c 	add.w	r3, r7, #28
 8001414:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001416:	481a      	ldr	r0, [pc, #104]	@ (8001480 <SetupMotors+0xc4>)
 8001418:	f7ff fd7c 	bl	8000f14 <MotorInit>
 800141c:	f107 0314 	add.w	r3, r7, #20
 8001420:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8001424:	4917      	ldr	r1, [pc, #92]	@ (8001484 <SetupMotors+0xc8>)
 8001426:	4618      	mov	r0, r3
 8001428:	f001 f935 	bl	8002696 <GPIOInit>
 800142c:	f107 030c 	add.w	r3, r7, #12
 8001430:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001434:	4913      	ldr	r1, [pc, #76]	@ (8001484 <SetupMotors+0xc8>)
 8001436:	4618      	mov	r0, r3
 8001438:	f001 f92d 	bl	8002696 <GPIOInit>
 800143c:	2300      	movs	r3, #0
 800143e:	9303      	str	r3, [sp, #12]
 8001440:	2304      	movs	r3, #4
 8001442:	9302      	str	r3, [sp, #8]
 8001444:	4b0c      	ldr	r3, [pc, #48]	@ (8001478 <SetupMotors+0xbc>)
 8001446:	9301      	str	r3, [sp, #4]
 8001448:	693b      	ldr	r3, [r7, #16]
 800144a:	9300      	str	r3, [sp, #0]
 800144c:	68fb      	ldr	r3, [r7, #12]
 800144e:	f107 0214 	add.w	r2, r7, #20
 8001452:	ca06      	ldmia	r2, {r1, r2}
 8001454:	480c      	ldr	r0, [pc, #48]	@ (8001488 <SetupMotors+0xcc>)
 8001456:	f000 ff09 	bl	800226c <BTS7960Init>
 800145a:	463b      	mov	r3, r7
 800145c:	490a      	ldr	r1, [pc, #40]	@ (8001488 <SetupMotors+0xcc>)
 800145e:	4618      	mov	r0, r3
 8001460:	f001 f8e4 	bl	800262c <BTS7960InterfaceInit>
 8001464:	463b      	mov	r3, r7
 8001466:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001468:	4808      	ldr	r0, [pc, #32]	@ (800148c <SetupMotors+0xd0>)
 800146a:	f7ff fd53 	bl	8000f14 <MotorInit>
 800146e:	bf00      	nop
 8001470:	3738      	adds	r7, #56	@ 0x38
 8001472:	46bd      	mov	sp, r7
 8001474:	bd80      	pop	{r7, pc}
 8001476:	bf00      	nop
 8001478:	20000654 	.word	0x20000654
 800147c:	20000508 	.word	0x20000508
 8001480:	200004e0 	.word	0x200004e0
 8001484:	48000c00 	.word	0x48000c00
 8001488:	20000528 	.word	0x20000528
 800148c:	200004ec 	.word	0x200004ec

08001490 <SetupButtons>:
 8001490:	b580      	push	{r7, lr}
 8001492:	af00      	add	r7, sp, #0
 8001494:	2201      	movs	r2, #1
 8001496:	f04f 4190 	mov.w	r1, #1207959552	@ 0x48000000
 800149a:	4802      	ldr	r0, [pc, #8]	@ (80014a4 <SetupButtons+0x14>)
 800149c:	f001 f8fb 	bl	8002696 <GPIOInit>
 80014a0:	bf00      	nop
 80014a2:	bd80      	pop	{r7, pc}
 80014a4:	200004f8 	.word	0x200004f8

080014a8 <__io_putchar>:
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 80014a8:	b580      	push	{r7, lr}
 80014aa:	b082      	sub	sp, #8
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80014b0:	1d39      	adds	r1, r7, #4
 80014b2:	f04f 33ff 	mov.w	r3, #4294967295
 80014b6:	2201      	movs	r2, #1
 80014b8:	4803      	ldr	r0, [pc, #12]	@ (80014c8 <__io_putchar+0x20>)
 80014ba:	f006 fbad 	bl	8007c18 <HAL_UART_Transmit>
  return ch;
 80014be:	687b      	ldr	r3, [r7, #4]
}
 80014c0:	4618      	mov	r0, r3
 80014c2:	3708      	adds	r7, #8
 80014c4:	46bd      	mov	sp, r7
 80014c6:	bd80      	pop	{r7, pc}
 80014c8:	20000738 	.word	0x20000738

080014cc <__io_getchar>:

GETCHAR_PROTOTYPE
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b082      	sub	sp, #8
 80014d0:	af00      	add	r7, sp, #0
  uint8_t ch = 0;
 80014d2:	2300      	movs	r3, #0
 80014d4:	71fb      	strb	r3, [r7, #7]

  /* Clear the Overrun flag just before receiving the first character */
  __HAL_UART_CLEAR_OREFLAG(&huart1);
 80014d6:	4b0b      	ldr	r3, [pc, #44]	@ (8001504 <__io_getchar+0x38>)
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	2208      	movs	r2, #8
 80014dc:	621a      	str	r2, [r3, #32]

  /* Wait for reception of a character on the USART RX line and echo this
   * character on console */
  HAL_UART_Receive(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80014de:	1df9      	adds	r1, r7, #7
 80014e0:	f04f 33ff 	mov.w	r3, #4294967295
 80014e4:	2201      	movs	r2, #1
 80014e6:	4807      	ldr	r0, [pc, #28]	@ (8001504 <__io_getchar+0x38>)
 80014e8:	f006 fc1f 	bl	8007d2a <HAL_UART_Receive>
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 80014ec:	1df9      	adds	r1, r7, #7
 80014ee:	f04f 33ff 	mov.w	r3, #4294967295
 80014f2:	2201      	movs	r2, #1
 80014f4:	4803      	ldr	r0, [pc, #12]	@ (8001504 <__io_getchar+0x38>)
 80014f6:	f006 fb8f 	bl	8007c18 <HAL_UART_Transmit>
  return ch;
 80014fa:	79fb      	ldrb	r3, [r7, #7]
}
 80014fc:	4618      	mov	r0, r3
 80014fe:	3708      	adds	r7, #8
 8001500:	46bd      	mov	sp, r7
 8001502:	bd80      	pop	{r7, pc}
 8001504:	20000738 	.word	0x20000738

08001508 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8001508:	b580      	push	{r7, lr}
 800150a:	b082      	sub	sp, #8
 800150c:	af00      	add	r7, sp, #0
 800150e:	6078      	str	r0, [r7, #4]
	if(htim == &htim6) {
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	4a05      	ldr	r2, [pc, #20]	@ (8001528 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001514:	4293      	cmp	r3, r2
 8001516:	d103      	bne.n	8001520 <HAL_TIM_PeriodElapsedCallback+0x18>
		ApplicationUpdate(500);
 8001518:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800151c:	f7ff fec6 	bl	80012ac <ApplicationUpdate>
	}
	else if(htim == &htim7) {
		//MotorControllerUpdate(&controller, 2);
		//testCurrent = MotorControllerGetCurrent(&controller);
	}
}
 8001520:	bf00      	nop
 8001522:	3708      	adds	r7, #8
 8001524:	46bd      	mov	sp, r7
 8001526:	bd80      	pop	{r7, pc}
 8001528:	200006a0 	.word	0x200006a0

0800152c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800152c:	b580      	push	{r7, lr}
 800152e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001530:	f001 f926 	bl	8002780 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001534:	f000 f81c 	bl	8001570 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001538:	f000 fa52 	bl	80019e0 <MX_GPIO_Init>
  MX_I2C1_Init();
 800153c:	f000 f87e 	bl	800163c <MX_I2C1_Init>
  MX_SPI1_Init();
 8001540:	f000 f8f8 	bl	8001734 <MX_SPI1_Init>
  MX_USART1_UART_Init();
 8001544:	f000 fa1c 	bl	8001980 <MX_USART1_UART_Init>
  MX_USB_DEVICE_Init();
 8001548:	f00a feea 	bl	800c320 <MX_USB_DEVICE_Init>
  MX_TIM6_Init();
 800154c:	f000 f9ac 	bl	80018a8 <MX_TIM6_Init>
  MX_TIM7_Init();
 8001550:	f000 f9e0 	bl	8001914 <MX_TIM7_Init>
  MX_I2C2_Init();
 8001554:	f000 f8b0 	bl	80016b8 <MX_I2C2_Init>
  MX_TIM3_Init();
 8001558:	f000 f92a 	bl	80017b0 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  BspInit();
 800155c:	f7ff fee0 	bl	8001320 <BspInit>
  ApplicationInit();
 8001560:	f7ff fdc6 	bl	80010f0 <ApplicationInit>
  ApplicationRun();
 8001564:	f7ff fe06 	bl	8001174 <ApplicationRun>
 8001568:	2300      	movs	r3, #0
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
//  }
  /* USER CODE END 3 */
}
 800156a:	4618      	mov	r0, r3
 800156c:	bd80      	pop	{r7, pc}
	...

08001570 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001570:	b580      	push	{r7, lr}
 8001572:	b09e      	sub	sp, #120	@ 0x78
 8001574:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001576:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800157a:	2228      	movs	r2, #40	@ 0x28
 800157c:	2100      	movs	r1, #0
 800157e:	4618      	mov	r0, r3
 8001580:	f00c f94c 	bl	800d81c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001584:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001588:	2200      	movs	r2, #0
 800158a:	601a      	str	r2, [r3, #0]
 800158c:	605a      	str	r2, [r3, #4]
 800158e:	609a      	str	r2, [r3, #8]
 8001590:	60da      	str	r2, [r3, #12]
 8001592:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001594:	463b      	mov	r3, r7
 8001596:	223c      	movs	r2, #60	@ 0x3c
 8001598:	2100      	movs	r1, #0
 800159a:	4618      	mov	r0, r3
 800159c:	f00c f93e 	bl	800d81c <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 80015a0:	2303      	movs	r3, #3
 80015a2:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 80015a4:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
 80015a8:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80015aa:	2300      	movs	r3, #0
 80015ac:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80015ae:	2301      	movs	r3, #1
 80015b0:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80015b2:	2310      	movs	r3, #16
 80015b4:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80015b6:	2302      	movs	r3, #2
 80015b8:	66fb      	str	r3, [r7, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80015ba:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80015be:	673b      	str	r3, [r7, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 80015c0:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80015c4:	677b      	str	r3, [r7, #116]	@ 0x74
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015c6:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 80015ca:	4618      	mov	r0, r3
 80015cc:	f003 feb6 	bl	800533c <HAL_RCC_OscConfig>
 80015d0:	4603      	mov	r3, r0
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	d001      	beq.n	80015da <SystemClock_Config+0x6a>
  {
    Error_Handler();
 80015d6:	f000 fabb 	bl	8001b50 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015da:	230f      	movs	r3, #15
 80015dc:	63fb      	str	r3, [r7, #60]	@ 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015de:	2302      	movs	r3, #2
 80015e0:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015e2:	2300      	movs	r3, #0
 80015e4:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80015e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80015ea:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80015ec:	2300      	movs	r3, #0
 80015ee:	64fb      	str	r3, [r7, #76]	@ 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80015f0:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 80015f4:	2101      	movs	r1, #1
 80015f6:	4618      	mov	r0, r3
 80015f8:	f004 fede 	bl	80063b8 <HAL_RCC_ClockConfig>
 80015fc:	4603      	mov	r3, r0
 80015fe:	2b00      	cmp	r3, #0
 8001600:	d001      	beq.n	8001606 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8001602:	f000 faa5 	bl	8001b50 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_USART1
 8001606:	4b0c      	ldr	r3, [pc, #48]	@ (8001638 <SystemClock_Config+0xc8>)
 8001608:	603b      	str	r3, [r7, #0]
                              |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2;
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 800160a:	2300      	movs	r3, #0
 800160c:	60bb      	str	r3, [r7, #8]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 800160e:	2300      	movs	r3, #0
 8001610:	61fb      	str	r3, [r7, #28]
  PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_HSI;
 8001612:	2300      	movs	r3, #0
 8001614:	623b      	str	r3, [r7, #32]
  PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL;
 8001616:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800161a:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800161c:	463b      	mov	r3, r7
 800161e:	4618      	mov	r0, r3
 8001620:	f005 f8ea 	bl	80067f8 <HAL_RCCEx_PeriphCLKConfig>
 8001624:	4603      	mov	r3, r0
 8001626:	2b00      	cmp	r3, #0
 8001628:	d001      	beq.n	800162e <SystemClock_Config+0xbe>
  {
    Error_Handler();
 800162a:	f000 fa91 	bl	8001b50 <Error_Handler>
  }
}
 800162e:	bf00      	nop
 8001630:	3778      	adds	r7, #120	@ 0x78
 8001632:	46bd      	mov	sp, r7
 8001634:	bd80      	pop	{r7, pc}
 8001636:	bf00      	nop
 8001638:	00020061 	.word	0x00020061

0800163c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800163c:	b580      	push	{r7, lr}
 800163e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001640:	4b1b      	ldr	r3, [pc, #108]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001642:	4a1c      	ldr	r2, [pc, #112]	@ (80016b4 <MX_I2C1_Init+0x78>)
 8001644:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x0000020B;
 8001646:	4b1a      	ldr	r3, [pc, #104]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001648:	f240 220b 	movw	r2, #523	@ 0x20b
 800164c:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 800164e:	4b18      	ldr	r3, [pc, #96]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001650:	2200      	movs	r2, #0
 8001652:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001654:	4b16      	ldr	r3, [pc, #88]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001656:	2201      	movs	r2, #1
 8001658:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800165a:	4b15      	ldr	r3, [pc, #84]	@ (80016b0 <MX_I2C1_Init+0x74>)
 800165c:	2200      	movs	r2, #0
 800165e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001660:	4b13      	ldr	r3, [pc, #76]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001662:	2200      	movs	r2, #0
 8001664:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001666:	4b12      	ldr	r3, [pc, #72]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001668:	2200      	movs	r2, #0
 800166a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800166c:	4b10      	ldr	r3, [pc, #64]	@ (80016b0 <MX_I2C1_Init+0x74>)
 800166e:	2200      	movs	r2, #0
 8001670:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001672:	4b0f      	ldr	r3, [pc, #60]	@ (80016b0 <MX_I2C1_Init+0x74>)
 8001674:	2200      	movs	r2, #0
 8001676:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001678:	480d      	ldr	r0, [pc, #52]	@ (80016b0 <MX_I2C1_Init+0x74>)
 800167a:	f001 fbc7 	bl	8002e0c <HAL_I2C_Init>
 800167e:	4603      	mov	r3, r0
 8001680:	2b00      	cmp	r3, #0
 8001682:	d001      	beq.n	8001688 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001684:	f000 fa64 	bl	8001b50 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001688:	2100      	movs	r1, #0
 800168a:	4809      	ldr	r0, [pc, #36]	@ (80016b0 <MX_I2C1_Init+0x74>)
 800168c:	f002 f90e 	bl	80038ac <HAL_I2CEx_ConfigAnalogFilter>
 8001690:	4603      	mov	r3, r0
 8001692:	2b00      	cmp	r3, #0
 8001694:	d001      	beq.n	800169a <MX_I2C1_Init+0x5e>
  {
    Error_Handler();
 8001696:	f000 fa5b 	bl	8001b50 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800169a:	2100      	movs	r1, #0
 800169c:	4804      	ldr	r0, [pc, #16]	@ (80016b0 <MX_I2C1_Init+0x74>)
 800169e:	f002 f950 	bl	8003942 <HAL_I2CEx_ConfigDigitalFilter>
 80016a2:	4603      	mov	r3, r0
 80016a4:	2b00      	cmp	r3, #0
 80016a6:	d001      	beq.n	80016ac <MX_I2C1_Init+0x70>
  {
    Error_Handler();
 80016a8:	f000 fa52 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80016ac:	bf00      	nop
 80016ae:	bd80      	pop	{r7, pc}
 80016b0:	20000548 	.word	0x20000548
 80016b4:	40005400 	.word	0x40005400

080016b8 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80016b8:	b580      	push	{r7, lr}
 80016ba:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80016bc:	4b1b      	ldr	r3, [pc, #108]	@ (800172c <MX_I2C2_Init+0x74>)
 80016be:	4a1c      	ldr	r2, [pc, #112]	@ (8001730 <MX_I2C2_Init+0x78>)
 80016c0:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x0000020B;
 80016c2:	4b1a      	ldr	r3, [pc, #104]	@ (800172c <MX_I2C2_Init+0x74>)
 80016c4:	f240 220b 	movw	r2, #523	@ 0x20b
 80016c8:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 80016ca:	4b18      	ldr	r3, [pc, #96]	@ (800172c <MX_I2C2_Init+0x74>)
 80016cc:	2200      	movs	r2, #0
 80016ce:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80016d0:	4b16      	ldr	r3, [pc, #88]	@ (800172c <MX_I2C2_Init+0x74>)
 80016d2:	2201      	movs	r2, #1
 80016d4:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80016d6:	4b15      	ldr	r3, [pc, #84]	@ (800172c <MX_I2C2_Init+0x74>)
 80016d8:	2200      	movs	r2, #0
 80016da:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 80016dc:	4b13      	ldr	r3, [pc, #76]	@ (800172c <MX_I2C2_Init+0x74>)
 80016de:	2200      	movs	r2, #0
 80016e0:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80016e2:	4b12      	ldr	r3, [pc, #72]	@ (800172c <MX_I2C2_Init+0x74>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80016e8:	4b10      	ldr	r3, [pc, #64]	@ (800172c <MX_I2C2_Init+0x74>)
 80016ea:	2200      	movs	r2, #0
 80016ec:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80016ee:	4b0f      	ldr	r3, [pc, #60]	@ (800172c <MX_I2C2_Init+0x74>)
 80016f0:	2200      	movs	r2, #0
 80016f2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80016f4:	480d      	ldr	r0, [pc, #52]	@ (800172c <MX_I2C2_Init+0x74>)
 80016f6:	f001 fb89 	bl	8002e0c <HAL_I2C_Init>
 80016fa:	4603      	mov	r3, r0
 80016fc:	2b00      	cmp	r3, #0
 80016fe:	d001      	beq.n	8001704 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8001700:	f000 fa26 	bl	8001b50 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001704:	2100      	movs	r1, #0
 8001706:	4809      	ldr	r0, [pc, #36]	@ (800172c <MX_I2C2_Init+0x74>)
 8001708:	f002 f8d0 	bl	80038ac <HAL_I2CEx_ConfigAnalogFilter>
 800170c:	4603      	mov	r3, r0
 800170e:	2b00      	cmp	r3, #0
 8001710:	d001      	beq.n	8001716 <MX_I2C2_Init+0x5e>
  {
    Error_Handler();
 8001712:	f000 fa1d 	bl	8001b50 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8001716:	2100      	movs	r1, #0
 8001718:	4804      	ldr	r0, [pc, #16]	@ (800172c <MX_I2C2_Init+0x74>)
 800171a:	f002 f912 	bl	8003942 <HAL_I2CEx_ConfigDigitalFilter>
 800171e:	4603      	mov	r3, r0
 8001720:	2b00      	cmp	r3, #0
 8001722:	d001      	beq.n	8001728 <MX_I2C2_Init+0x70>
  {
    Error_Handler();
 8001724:	f000 fa14 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001728:	bf00      	nop
 800172a:	bd80      	pop	{r7, pc}
 800172c:	2000059c 	.word	0x2000059c
 8001730:	40005800 	.word	0x40005800

08001734 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8001738:	4b1b      	ldr	r3, [pc, #108]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800173a:	4a1c      	ldr	r2, [pc, #112]	@ (80017ac <MX_SPI1_Init+0x78>)
 800173c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800173e:	4b1a      	ldr	r3, [pc, #104]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001740:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001744:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001746:	4b18      	ldr	r3, [pc, #96]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001748:	2200      	movs	r2, #0
 800174a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 800174c:	4b16      	ldr	r3, [pc, #88]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800174e:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8001752:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001754:	4b14      	ldr	r3, [pc, #80]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001756:	2200      	movs	r2, #0
 8001758:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800175a:	4b13      	ldr	r3, [pc, #76]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800175c:	2200      	movs	r2, #0
 800175e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001760:	4b11      	ldr	r3, [pc, #68]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001762:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001766:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8001768:	4b0f      	ldr	r3, [pc, #60]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800176a:	2208      	movs	r2, #8
 800176c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800176e:	4b0e      	ldr	r3, [pc, #56]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001770:	2200      	movs	r2, #0
 8001772:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001774:	4b0c      	ldr	r3, [pc, #48]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001776:	2200      	movs	r2, #0
 8001778:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800177a:	4b0b      	ldr	r3, [pc, #44]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800177c:	2200      	movs	r2, #0
 800177e:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 7;
 8001780:	4b09      	ldr	r3, [pc, #36]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001782:	2207      	movs	r2, #7
 8001784:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001786:	4b08      	ldr	r3, [pc, #32]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001788:	2200      	movs	r2, #0
 800178a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800178c:	4b06      	ldr	r3, [pc, #24]	@ (80017a8 <MX_SPI1_Init+0x74>)
 800178e:	2208      	movs	r2, #8
 8001790:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001792:	4805      	ldr	r0, [pc, #20]	@ (80017a8 <MX_SPI1_Init+0x74>)
 8001794:	f005 f9e0 	bl	8006b58 <HAL_SPI_Init>
 8001798:	4603      	mov	r3, r0
 800179a:	2b00      	cmp	r3, #0
 800179c:	d001      	beq.n	80017a2 <MX_SPI1_Init+0x6e>
  {
    Error_Handler();
 800179e:	f000 f9d7 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80017a2:	bf00      	nop
 80017a4:	bd80      	pop	{r7, pc}
 80017a6:	bf00      	nop
 80017a8:	200005f0 	.word	0x200005f0
 80017ac:	40013000 	.word	0x40013000

080017b0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80017b0:	b580      	push	{r7, lr}
 80017b2:	b08a      	sub	sp, #40	@ 0x28
 80017b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017b6:	f107 031c 	add.w	r3, r7, #28
 80017ba:	2200      	movs	r2, #0
 80017bc:	601a      	str	r2, [r3, #0]
 80017be:	605a      	str	r2, [r3, #4]
 80017c0:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80017c2:	463b      	mov	r3, r7
 80017c4:	2200      	movs	r2, #0
 80017c6:	601a      	str	r2, [r3, #0]
 80017c8:	605a      	str	r2, [r3, #4]
 80017ca:	609a      	str	r2, [r3, #8]
 80017cc:	60da      	str	r2, [r3, #12]
 80017ce:	611a      	str	r2, [r3, #16]
 80017d0:	615a      	str	r2, [r3, #20]
 80017d2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80017d4:	4b32      	ldr	r3, [pc, #200]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017d6:	4a33      	ldr	r2, [pc, #204]	@ (80018a4 <MX_TIM3_Init+0xf4>)
 80017d8:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 80017da:	4b31      	ldr	r3, [pc, #196]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017dc:	2200      	movs	r2, #0
 80017de:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017e0:	4b2f      	ldr	r3, [pc, #188]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017e2:	2200      	movs	r2, #0
 80017e4:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 2400-1;
 80017e6:	4b2e      	ldr	r3, [pc, #184]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017e8:	f640 125f 	movw	r2, #2399	@ 0x95f
 80017ec:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017ee:	4b2c      	ldr	r3, [pc, #176]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017f0:	2200      	movs	r2, #0
 80017f2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80017f4:	4b2a      	ldr	r3, [pc, #168]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017f6:	2280      	movs	r2, #128	@ 0x80
 80017f8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80017fa:	4829      	ldr	r0, [pc, #164]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 80017fc:	f005 fb18 	bl	8006e30 <HAL_TIM_PWM_Init>
 8001800:	4603      	mov	r3, r0
 8001802:	2b00      	cmp	r3, #0
 8001804:	d001      	beq.n	800180a <MX_TIM3_Init+0x5a>
  {
    Error_Handler();
 8001806:	f000 f9a3 	bl	8001b50 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800180a:	2300      	movs	r3, #0
 800180c:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800180e:	2300      	movs	r3, #0
 8001810:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001812:	f107 031c 	add.w	r3, r7, #28
 8001816:	4619      	mov	r1, r3
 8001818:	4821      	ldr	r0, [pc, #132]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 800181a:	f006 f911 	bl	8007a40 <HAL_TIMEx_MasterConfigSynchronization>
 800181e:	4603      	mov	r3, r0
 8001820:	2b00      	cmp	r3, #0
 8001822:	d001      	beq.n	8001828 <MX_TIM3_Init+0x78>
  {
    Error_Handler();
 8001824:	f000 f994 	bl	8001b50 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001828:	2360      	movs	r3, #96	@ 0x60
 800182a:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 800182c:	2300      	movs	r3, #0
 800182e:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001830:	2300      	movs	r3, #0
 8001832:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001834:	2300      	movs	r3, #0
 8001836:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001838:	463b      	mov	r3, r7
 800183a:	2200      	movs	r2, #0
 800183c:	4619      	mov	r1, r3
 800183e:	4818      	ldr	r0, [pc, #96]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 8001840:	f005 fc50 	bl	80070e4 <HAL_TIM_PWM_ConfigChannel>
 8001844:	4603      	mov	r3, r0
 8001846:	2b00      	cmp	r3, #0
 8001848:	d001      	beq.n	800184e <MX_TIM3_Init+0x9e>
  {
    Error_Handler();
 800184a:	f000 f981 	bl	8001b50 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800184e:	463b      	mov	r3, r7
 8001850:	2204      	movs	r2, #4
 8001852:	4619      	mov	r1, r3
 8001854:	4812      	ldr	r0, [pc, #72]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 8001856:	f005 fc45 	bl	80070e4 <HAL_TIM_PWM_ConfigChannel>
 800185a:	4603      	mov	r3, r0
 800185c:	2b00      	cmp	r3, #0
 800185e:	d001      	beq.n	8001864 <MX_TIM3_Init+0xb4>
  {
    Error_Handler();
 8001860:	f000 f976 	bl	8001b50 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001864:	463b      	mov	r3, r7
 8001866:	2208      	movs	r2, #8
 8001868:	4619      	mov	r1, r3
 800186a:	480d      	ldr	r0, [pc, #52]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 800186c:	f005 fc3a 	bl	80070e4 <HAL_TIM_PWM_ConfigChannel>
 8001870:	4603      	mov	r3, r0
 8001872:	2b00      	cmp	r3, #0
 8001874:	d001      	beq.n	800187a <MX_TIM3_Init+0xca>
  {
    Error_Handler();
 8001876:	f000 f96b 	bl	8001b50 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800187a:	463b      	mov	r3, r7
 800187c:	220c      	movs	r2, #12
 800187e:	4619      	mov	r1, r3
 8001880:	4807      	ldr	r0, [pc, #28]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 8001882:	f005 fc2f 	bl	80070e4 <HAL_TIM_PWM_ConfigChannel>
 8001886:	4603      	mov	r3, r0
 8001888:	2b00      	cmp	r3, #0
 800188a:	d001      	beq.n	8001890 <MX_TIM3_Init+0xe0>
  {
    Error_Handler();
 800188c:	f000 f960 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001890:	4803      	ldr	r0, [pc, #12]	@ (80018a0 <MX_TIM3_Init+0xf0>)
 8001892:	f000 fabf 	bl	8001e14 <HAL_TIM_MspPostInit>

}
 8001896:	bf00      	nop
 8001898:	3728      	adds	r7, #40	@ 0x28
 800189a:	46bd      	mov	sp, r7
 800189c:	bd80      	pop	{r7, pc}
 800189e:	bf00      	nop
 80018a0:	20000654 	.word	0x20000654
 80018a4:	40000400 	.word	0x40000400

080018a8 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 80018a8:	b580      	push	{r7, lr}
 80018aa:	b084      	sub	sp, #16
 80018ac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018ae:	1d3b      	adds	r3, r7, #4
 80018b0:	2200      	movs	r2, #0
 80018b2:	601a      	str	r2, [r3, #0]
 80018b4:	605a      	str	r2, [r3, #4]
 80018b6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 80018b8:	4b14      	ldr	r3, [pc, #80]	@ (800190c <MX_TIM6_Init+0x64>)
 80018ba:	4a15      	ldr	r2, [pc, #84]	@ (8001910 <MX_TIM6_Init+0x68>)
 80018bc:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 24-1;
 80018be:	4b13      	ldr	r3, [pc, #76]	@ (800190c <MX_TIM6_Init+0x64>)
 80018c0:	2217      	movs	r2, #23
 80018c2:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018c4:	4b11      	ldr	r3, [pc, #68]	@ (800190c <MX_TIM6_Init+0x64>)
 80018c6:	2200      	movs	r2, #0
 80018c8:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 1000-1;
 80018ca:	4b10      	ldr	r3, [pc, #64]	@ (800190c <MX_TIM6_Init+0x64>)
 80018cc:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80018d0:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018d2:	4b0e      	ldr	r3, [pc, #56]	@ (800190c <MX_TIM6_Init+0x64>)
 80018d4:	2280      	movs	r2, #128	@ 0x80
 80018d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80018d8:	480c      	ldr	r0, [pc, #48]	@ (800190c <MX_TIM6_Init+0x64>)
 80018da:	f005 f9e8 	bl	8006cae <HAL_TIM_Base_Init>
 80018de:	4603      	mov	r3, r0
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	d001      	beq.n	80018e8 <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 80018e4:	f000 f934 	bl	8001b50 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018e8:	2300      	movs	r3, #0
 80018ea:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ec:	2300      	movs	r3, #0
 80018ee:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80018f0:	1d3b      	adds	r3, r7, #4
 80018f2:	4619      	mov	r1, r3
 80018f4:	4805      	ldr	r0, [pc, #20]	@ (800190c <MX_TIM6_Init+0x64>)
 80018f6:	f006 f8a3 	bl	8007a40 <HAL_TIMEx_MasterConfigSynchronization>
 80018fa:	4603      	mov	r3, r0
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d001      	beq.n	8001904 <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 8001900:	f000 f926 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8001904:	bf00      	nop
 8001906:	3710      	adds	r7, #16
 8001908:	46bd      	mov	sp, r7
 800190a:	bd80      	pop	{r7, pc}
 800190c:	200006a0 	.word	0x200006a0
 8001910:	40001000 	.word	0x40001000

08001914 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8001914:	b580      	push	{r7, lr}
 8001916:	b084      	sub	sp, #16
 8001918:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800191a:	1d3b      	adds	r3, r7, #4
 800191c:	2200      	movs	r2, #0
 800191e:	601a      	str	r2, [r3, #0]
 8001920:	605a      	str	r2, [r3, #4]
 8001922:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8001924:	4b14      	ldr	r3, [pc, #80]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001926:	4a15      	ldr	r2, [pc, #84]	@ (800197c <MX_TIM7_Init+0x68>)
 8001928:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 48-1;
 800192a:	4b13      	ldr	r3, [pc, #76]	@ (8001978 <MX_TIM7_Init+0x64>)
 800192c:	222f      	movs	r2, #47	@ 0x2f
 800192e:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001930:	4b11      	ldr	r3, [pc, #68]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001932:	2200      	movs	r2, #0
 8001934:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 2000-1;
 8001936:	4b10      	ldr	r3, [pc, #64]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001938:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 800193c:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800193e:	4b0e      	ldr	r3, [pc, #56]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001940:	2280      	movs	r2, #128	@ 0x80
 8001942:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001944:	480c      	ldr	r0, [pc, #48]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001946:	f005 f9b2 	bl	8006cae <HAL_TIM_Base_Init>
 800194a:	4603      	mov	r3, r0
 800194c:	2b00      	cmp	r3, #0
 800194e:	d001      	beq.n	8001954 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 8001950:	f000 f8fe 	bl	8001b50 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001954:	2300      	movs	r3, #0
 8001956:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001958:	2300      	movs	r3, #0
 800195a:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800195c:	1d3b      	adds	r3, r7, #4
 800195e:	4619      	mov	r1, r3
 8001960:	4805      	ldr	r0, [pc, #20]	@ (8001978 <MX_TIM7_Init+0x64>)
 8001962:	f006 f86d 	bl	8007a40 <HAL_TIMEx_MasterConfigSynchronization>
 8001966:	4603      	mov	r3, r0
 8001968:	2b00      	cmp	r3, #0
 800196a:	d001      	beq.n	8001970 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 800196c:	f000 f8f0 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 8001970:	bf00      	nop
 8001972:	3710      	adds	r7, #16
 8001974:	46bd      	mov	sp, r7
 8001976:	bd80      	pop	{r7, pc}
 8001978:	200006ec 	.word	0x200006ec
 800197c:	40001400 	.word	0x40001400

08001980 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001980:	b580      	push	{r7, lr}
 8001982:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001984:	4b14      	ldr	r3, [pc, #80]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 8001986:	4a15      	ldr	r2, [pc, #84]	@ (80019dc <MX_USART1_UART_Init+0x5c>)
 8001988:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 38400;
 800198a:	4b13      	ldr	r3, [pc, #76]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 800198c:	f44f 4216 	mov.w	r2, #38400	@ 0x9600
 8001990:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001992:	4b11      	ldr	r3, [pc, #68]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 8001994:	2200      	movs	r2, #0
 8001996:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001998:	4b0f      	ldr	r3, [pc, #60]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 800199a:	2200      	movs	r2, #0
 800199c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800199e:	4b0e      	ldr	r3, [pc, #56]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019a0:	2200      	movs	r2, #0
 80019a2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80019a4:	4b0c      	ldr	r3, [pc, #48]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019a6:	220c      	movs	r2, #12
 80019a8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80019aa:	4b0b      	ldr	r3, [pc, #44]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019ac:	2200      	movs	r2, #0
 80019ae:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80019b0:	4b09      	ldr	r3, [pc, #36]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019b2:	2200      	movs	r2, #0
 80019b4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80019b6:	4b08      	ldr	r3, [pc, #32]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019b8:	2200      	movs	r2, #0
 80019ba:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80019bc:	4b06      	ldr	r3, [pc, #24]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019be:	2200      	movs	r2, #0
 80019c0:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80019c2:	4805      	ldr	r0, [pc, #20]	@ (80019d8 <MX_USART1_UART_Init+0x58>)
 80019c4:	f006 f8da 	bl	8007b7c <HAL_UART_Init>
 80019c8:	4603      	mov	r3, r0
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d001      	beq.n	80019d2 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 80019ce:	f000 f8bf 	bl	8001b50 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80019d2:	bf00      	nop
 80019d4:	bd80      	pop	{r7, pc}
 80019d6:	bf00      	nop
 80019d8:	20000738 	.word	0x20000738
 80019dc:	40013800 	.word	0x40013800

080019e0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80019e0:	b580      	push	{r7, lr}
 80019e2:	b08c      	sub	sp, #48	@ 0x30
 80019e4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019e6:	f107 031c 	add.w	r3, r7, #28
 80019ea:	2200      	movs	r2, #0
 80019ec:	601a      	str	r2, [r3, #0]
 80019ee:	605a      	str	r2, [r3, #4]
 80019f0:	609a      	str	r2, [r3, #8]
 80019f2:	60da      	str	r2, [r3, #12]
 80019f4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80019f6:	4b53      	ldr	r3, [pc, #332]	@ (8001b44 <MX_GPIO_Init+0x164>)
 80019f8:	695b      	ldr	r3, [r3, #20]
 80019fa:	4a52      	ldr	r2, [pc, #328]	@ (8001b44 <MX_GPIO_Init+0x164>)
 80019fc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001a00:	6153      	str	r3, [r2, #20]
 8001a02:	4b50      	ldr	r3, [pc, #320]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a04:	695b      	ldr	r3, [r3, #20]
 8001a06:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001a0a:	61bb      	str	r3, [r7, #24]
 8001a0c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a0e:	4b4d      	ldr	r3, [pc, #308]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a10:	695b      	ldr	r3, [r3, #20]
 8001a12:	4a4c      	ldr	r2, [pc, #304]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a14:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001a18:	6153      	str	r3, [r2, #20]
 8001a1a:	4b4a      	ldr	r3, [pc, #296]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a1c:	695b      	ldr	r3, [r3, #20]
 8001a1e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8001a22:	617b      	str	r3, [r7, #20]
 8001a24:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a26:	4b47      	ldr	r3, [pc, #284]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a28:	695b      	ldr	r3, [r3, #20]
 8001a2a:	4a46      	ldr	r2, [pc, #280]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a2c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a30:	6153      	str	r3, [r2, #20]
 8001a32:	4b44      	ldr	r3, [pc, #272]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a34:	695b      	ldr	r3, [r3, #20]
 8001a36:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001a3a:	613b      	str	r3, [r7, #16]
 8001a3c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a3e:	4b41      	ldr	r3, [pc, #260]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a40:	695b      	ldr	r3, [r3, #20]
 8001a42:	4a40      	ldr	r2, [pc, #256]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a44:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001a48:	6153      	str	r3, [r2, #20]
 8001a4a:	4b3e      	ldr	r3, [pc, #248]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a4c:	695b      	ldr	r3, [r3, #20]
 8001a4e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001a52:	60fb      	str	r3, [r7, #12]
 8001a54:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a56:	4b3b      	ldr	r3, [pc, #236]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a58:	695b      	ldr	r3, [r3, #20]
 8001a5a:	4a3a      	ldr	r2, [pc, #232]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a5c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001a60:	6153      	str	r3, [r2, #20]
 8001a62:	4b38      	ldr	r3, [pc, #224]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a64:	695b      	ldr	r3, [r3, #20]
 8001a66:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001a6a:	60bb      	str	r3, [r7, #8]
 8001a6c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a6e:	4b35      	ldr	r3, [pc, #212]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a70:	695b      	ldr	r3, [r3, #20]
 8001a72:	4a34      	ldr	r2, [pc, #208]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a74:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001a78:	6153      	str	r3, [r2, #20]
 8001a7a:	4b32      	ldr	r3, [pc, #200]	@ (8001b44 <MX_GPIO_Init+0x164>)
 8001a7c:	695b      	ldr	r3, [r3, #20]
 8001a7e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001a82:	607b      	str	r3, [r7, #4]
 8001a84:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, CS_I2C_SPI_Pin|LD4_Pin|LD3_Pin|GPIO_PIN_10
 8001a86:	2200      	movs	r2, #0
 8001a88:	f64f 7108 	movw	r1, #65288	@ 0xff08
 8001a8c:	482e      	ldr	r0, [pc, #184]	@ (8001b48 <MX_GPIO_Init+0x168>)
 8001a8e:	f001 f9a5 	bl	8002ddc <HAL_GPIO_WritePin>
                          |LD7_Pin|LD9_Pin|LD10_Pin|LD8_Pin
                          |LD6_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, MOTOR_ROLL_R_EN_Pin|MOTOR_ROLL_F_EN_Pin, GPIO_PIN_RESET);
 8001a92:	2200      	movs	r2, #0
 8001a94:	f44f 4140 	mov.w	r1, #49152	@ 0xc000
 8001a98:	482c      	ldr	r0, [pc, #176]	@ (8001b4c <MX_GPIO_Init+0x16c>)
 8001a9a:	f001 f99f 	bl	8002ddc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, MOTOR_PITCH_R_EN_Pin|MOTOR_PITCH_F_EN_Pin, GPIO_PIN_RESET);
 8001a9e:	2200      	movs	r2, #0
 8001aa0:	f44f 7140 	mov.w	r1, #768	@ 0x300
 8001aa4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001aa8:	f001 f998 	bl	8002ddc <HAL_GPIO_WritePin>

  /*Configure GPIO pins : DRDY_Pin MEMS_INT3_Pin MEMS_INT4_Pin MEMS_INT1_Pin
                           MEMS_INT2_Pin */
  GPIO_InitStruct.Pin = DRDY_Pin|MEMS_INT3_Pin|MEMS_INT4_Pin|MEMS_INT1_Pin
 8001aac:	2337      	movs	r3, #55	@ 0x37
 8001aae:	61fb      	str	r3, [r7, #28]
                          |MEMS_INT2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001ab0:	f44f 1390 	mov.w	r3, #1179648	@ 0x120000
 8001ab4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001aba:	f107 031c 	add.w	r3, r7, #28
 8001abe:	4619      	mov	r1, r3
 8001ac0:	4821      	ldr	r0, [pc, #132]	@ (8001b48 <MX_GPIO_Init+0x168>)
 8001ac2:	f000 fff9 	bl	8002ab8 <HAL_GPIO_Init>

  /*Configure GPIO pins : CS_I2C_SPI_Pin LD4_Pin LD3_Pin PE10
                           LD7_Pin LD9_Pin LD10_Pin LD8_Pin
                           LD6_Pin */
  GPIO_InitStruct.Pin = CS_I2C_SPI_Pin|LD4_Pin|LD3_Pin|GPIO_PIN_10
 8001ac6:	f64f 7308 	movw	r3, #65288	@ 0xff08
 8001aca:	61fb      	str	r3, [r7, #28]
                          |LD7_Pin|LD9_Pin|LD10_Pin|LD8_Pin
                          |LD6_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001acc:	2301      	movs	r3, #1
 8001ace:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ad8:	f107 031c 	add.w	r3, r7, #28
 8001adc:	4619      	mov	r1, r3
 8001ade:	481a      	ldr	r0, [pc, #104]	@ (8001b48 <MX_GPIO_Init+0x168>)
 8001ae0:	f000 ffea 	bl	8002ab8 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_ACCEPT_Pin */
  GPIO_InitStruct.Pin = BUTTON_ACCEPT_Pin;
 8001ae4:	2301      	movs	r3, #1
 8001ae6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001ae8:	2300      	movs	r3, #0
 8001aea:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aec:	2300      	movs	r3, #0
 8001aee:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(BUTTON_ACCEPT_GPIO_Port, &GPIO_InitStruct);
 8001af0:	f107 031c 	add.w	r3, r7, #28
 8001af4:	4619      	mov	r1, r3
 8001af6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001afa:	f000 ffdd 	bl	8002ab8 <HAL_GPIO_Init>

  /*Configure GPIO pins : MOTOR_ROLL_R_EN_Pin MOTOR_ROLL_F_EN_Pin */
  GPIO_InitStruct.Pin = MOTOR_ROLL_R_EN_Pin|MOTOR_ROLL_F_EN_Pin;
 8001afe:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 8001b02:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b04:	2301      	movs	r3, #1
 8001b06:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b08:	2300      	movs	r3, #0
 8001b0a:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b0c:	2300      	movs	r3, #0
 8001b0e:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b10:	f107 031c 	add.w	r3, r7, #28
 8001b14:	4619      	mov	r1, r3
 8001b16:	480d      	ldr	r0, [pc, #52]	@ (8001b4c <MX_GPIO_Init+0x16c>)
 8001b18:	f000 ffce 	bl	8002ab8 <HAL_GPIO_Init>

  /*Configure GPIO pins : MOTOR_PITCH_R_EN_Pin MOTOR_PITCH_F_EN_Pin */
  GPIO_InitStruct.Pin = MOTOR_PITCH_R_EN_Pin|MOTOR_PITCH_F_EN_Pin;
 8001b1c:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001b20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b22:	2301      	movs	r3, #1
 8001b24:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b26:	2300      	movs	r3, #0
 8001b28:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b2e:	f107 031c 	add.w	r3, r7, #28
 8001b32:	4619      	mov	r1, r3
 8001b34:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b38:	f000 ffbe 	bl	8002ab8 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001b3c:	bf00      	nop
 8001b3e:	3730      	adds	r7, #48	@ 0x30
 8001b40:	46bd      	mov	sp, r7
 8001b42:	bd80      	pop	{r7, pc}
 8001b44:	40021000 	.word	0x40021000
 8001b48:	48001000 	.word	0x48001000
 8001b4c:	48000c00 	.word	0x48000c00

08001b50 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b50:	b480      	push	{r7}
 8001b52:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b54:	b672      	cpsid	i
}
 8001b56:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001b58:	bf00      	nop
 8001b5a:	e7fd      	b.n	8001b58 <Error_Handler+0x8>

08001b5c <HAL_MspInit>:
 8001b5c:	b580      	push	{r7, lr}
 8001b5e:	b082      	sub	sp, #8
 8001b60:	af00      	add	r7, sp, #0
 8001b62:	4b0f      	ldr	r3, [pc, #60]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b64:	699b      	ldr	r3, [r3, #24]
 8001b66:	4a0e      	ldr	r2, [pc, #56]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b68:	f043 0301 	orr.w	r3, r3, #1
 8001b6c:	6193      	str	r3, [r2, #24]
 8001b6e:	4b0c      	ldr	r3, [pc, #48]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b70:	699b      	ldr	r3, [r3, #24]
 8001b72:	f003 0301 	and.w	r3, r3, #1
 8001b76:	607b      	str	r3, [r7, #4]
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	4b09      	ldr	r3, [pc, #36]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b7c:	69db      	ldr	r3, [r3, #28]
 8001b7e:	4a08      	ldr	r2, [pc, #32]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b80:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b84:	61d3      	str	r3, [r2, #28]
 8001b86:	4b06      	ldr	r3, [pc, #24]	@ (8001ba0 <HAL_MspInit+0x44>)
 8001b88:	69db      	ldr	r3, [r3, #28]
 8001b8a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b8e:	603b      	str	r3, [r7, #0]
 8001b90:	683b      	ldr	r3, [r7, #0]
 8001b92:	2005      	movs	r0, #5
 8001b94:	f000 ff4e 	bl	8002a34 <HAL_NVIC_SetPriorityGrouping>
 8001b98:	bf00      	nop
 8001b9a:	3708      	adds	r7, #8
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	bd80      	pop	{r7, pc}
 8001ba0:	40021000 	.word	0x40021000

08001ba4 <HAL_I2C_MspInit>:
 8001ba4:	b580      	push	{r7, lr}
 8001ba6:	b08c      	sub	sp, #48	@ 0x30
 8001ba8:	af00      	add	r7, sp, #0
 8001baa:	6078      	str	r0, [r7, #4]
 8001bac:	f107 031c 	add.w	r3, r7, #28
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	601a      	str	r2, [r3, #0]
 8001bb4:	605a      	str	r2, [r3, #4]
 8001bb6:	609a      	str	r2, [r3, #8]
 8001bb8:	60da      	str	r2, [r3, #12]
 8001bba:	611a      	str	r2, [r3, #16]
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a3d      	ldr	r2, [pc, #244]	@ (8001cb8 <HAL_I2C_MspInit+0x114>)
 8001bc2:	4293      	cmp	r3, r2
 8001bc4:	d128      	bne.n	8001c18 <HAL_I2C_MspInit+0x74>
 8001bc6:	4b3d      	ldr	r3, [pc, #244]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001bc8:	695b      	ldr	r3, [r3, #20]
 8001bca:	4a3c      	ldr	r2, [pc, #240]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001bcc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001bd0:	6153      	str	r3, [r2, #20]
 8001bd2:	4b3a      	ldr	r3, [pc, #232]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001bd4:	695b      	ldr	r3, [r3, #20]
 8001bd6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001bda:	61bb      	str	r3, [r7, #24]
 8001bdc:	69bb      	ldr	r3, [r7, #24]
 8001bde:	23c0      	movs	r3, #192	@ 0xc0
 8001be0:	61fb      	str	r3, [r7, #28]
 8001be2:	2312      	movs	r3, #18
 8001be4:	623b      	str	r3, [r7, #32]
 8001be6:	2301      	movs	r3, #1
 8001be8:	627b      	str	r3, [r7, #36]	@ 0x24
 8001bea:	2303      	movs	r3, #3
 8001bec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001bee:	2304      	movs	r3, #4
 8001bf0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001bf2:	f107 031c 	add.w	r3, r7, #28
 8001bf6:	4619      	mov	r1, r3
 8001bf8:	4831      	ldr	r0, [pc, #196]	@ (8001cc0 <HAL_I2C_MspInit+0x11c>)
 8001bfa:	f000 ff5d 	bl	8002ab8 <HAL_GPIO_Init>
 8001bfe:	4b2f      	ldr	r3, [pc, #188]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c00:	69db      	ldr	r3, [r3, #28]
 8001c02:	4a2e      	ldr	r2, [pc, #184]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c04:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001c08:	61d3      	str	r3, [r2, #28]
 8001c0a:	4b2c      	ldr	r3, [pc, #176]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c0c:	69db      	ldr	r3, [r3, #28]
 8001c0e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001c12:	617b      	str	r3, [r7, #20]
 8001c14:	697b      	ldr	r3, [r7, #20]
 8001c16:	e04a      	b.n	8001cae <HAL_I2C_MspInit+0x10a>
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	4a29      	ldr	r2, [pc, #164]	@ (8001cc4 <HAL_I2C_MspInit+0x120>)
 8001c1e:	4293      	cmp	r3, r2
 8001c20:	d145      	bne.n	8001cae <HAL_I2C_MspInit+0x10a>
 8001c22:	4b26      	ldr	r3, [pc, #152]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c24:	695b      	ldr	r3, [r3, #20]
 8001c26:	4a25      	ldr	r2, [pc, #148]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c28:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001c2c:	6153      	str	r3, [r2, #20]
 8001c2e:	4b23      	ldr	r3, [pc, #140]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c30:	695b      	ldr	r3, [r3, #20]
 8001c32:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001c36:	613b      	str	r3, [r7, #16]
 8001c38:	693b      	ldr	r3, [r7, #16]
 8001c3a:	4b20      	ldr	r3, [pc, #128]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c3c:	695b      	ldr	r3, [r3, #20]
 8001c3e:	4a1f      	ldr	r2, [pc, #124]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c40:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001c44:	6153      	str	r3, [r2, #20]
 8001c46:	4b1d      	ldr	r3, [pc, #116]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c48:	695b      	ldr	r3, [r3, #20]
 8001c4a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001c4e:	60fb      	str	r3, [r7, #12]
 8001c50:	68fb      	ldr	r3, [r7, #12]
 8001c52:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001c56:	61fb      	str	r3, [r7, #28]
 8001c58:	2312      	movs	r3, #18
 8001c5a:	623b      	str	r3, [r7, #32]
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001c60:	2303      	movs	r3, #3
 8001c62:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001c64:	2304      	movs	r3, #4
 8001c66:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001c68:	f107 031c 	add.w	r3, r7, #28
 8001c6c:	4619      	mov	r1, r3
 8001c6e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001c72:	f000 ff21 	bl	8002ab8 <HAL_GPIO_Init>
 8001c76:	2340      	movs	r3, #64	@ 0x40
 8001c78:	61fb      	str	r3, [r7, #28]
 8001c7a:	2312      	movs	r3, #18
 8001c7c:	623b      	str	r3, [r7, #32]
 8001c7e:	2300      	movs	r3, #0
 8001c80:	627b      	str	r3, [r7, #36]	@ 0x24
 8001c82:	2303      	movs	r3, #3
 8001c84:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001c86:	2304      	movs	r3, #4
 8001c88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001c8a:	f107 031c 	add.w	r3, r7, #28
 8001c8e:	4619      	mov	r1, r3
 8001c90:	480d      	ldr	r0, [pc, #52]	@ (8001cc8 <HAL_I2C_MspInit+0x124>)
 8001c92:	f000 ff11 	bl	8002ab8 <HAL_GPIO_Init>
 8001c96:	4b09      	ldr	r3, [pc, #36]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c98:	69db      	ldr	r3, [r3, #28]
 8001c9a:	4a08      	ldr	r2, [pc, #32]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001c9c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001ca0:	61d3      	str	r3, [r2, #28]
 8001ca2:	4b06      	ldr	r3, [pc, #24]	@ (8001cbc <HAL_I2C_MspInit+0x118>)
 8001ca4:	69db      	ldr	r3, [r3, #28]
 8001ca6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001caa:	60bb      	str	r3, [r7, #8]
 8001cac:	68bb      	ldr	r3, [r7, #8]
 8001cae:	bf00      	nop
 8001cb0:	3730      	adds	r7, #48	@ 0x30
 8001cb2:	46bd      	mov	sp, r7
 8001cb4:	bd80      	pop	{r7, pc}
 8001cb6:	bf00      	nop
 8001cb8:	40005400 	.word	0x40005400
 8001cbc:	40021000 	.word	0x40021000
 8001cc0:	48000400 	.word	0x48000400
 8001cc4:	40005800 	.word	0x40005800
 8001cc8:	48001400 	.word	0x48001400

08001ccc <HAL_SPI_MspInit>:
 8001ccc:	b580      	push	{r7, lr}
 8001cce:	b08a      	sub	sp, #40	@ 0x28
 8001cd0:	af00      	add	r7, sp, #0
 8001cd2:	6078      	str	r0, [r7, #4]
 8001cd4:	f107 0314 	add.w	r3, r7, #20
 8001cd8:	2200      	movs	r2, #0
 8001cda:	601a      	str	r2, [r3, #0]
 8001cdc:	605a      	str	r2, [r3, #4]
 8001cde:	609a      	str	r2, [r3, #8]
 8001ce0:	60da      	str	r2, [r3, #12]
 8001ce2:	611a      	str	r2, [r3, #16]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	4a17      	ldr	r2, [pc, #92]	@ (8001d48 <HAL_SPI_MspInit+0x7c>)
 8001cea:	4293      	cmp	r3, r2
 8001cec:	d128      	bne.n	8001d40 <HAL_SPI_MspInit+0x74>
 8001cee:	4b17      	ldr	r3, [pc, #92]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001cf0:	699b      	ldr	r3, [r3, #24]
 8001cf2:	4a16      	ldr	r2, [pc, #88]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001cf4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001cf8:	6193      	str	r3, [r2, #24]
 8001cfa:	4b14      	ldr	r3, [pc, #80]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001cfc:	699b      	ldr	r3, [r3, #24]
 8001cfe:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001d02:	613b      	str	r3, [r7, #16]
 8001d04:	693b      	ldr	r3, [r7, #16]
 8001d06:	4b11      	ldr	r3, [pc, #68]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001d08:	695b      	ldr	r3, [r3, #20]
 8001d0a:	4a10      	ldr	r2, [pc, #64]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001d0c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d10:	6153      	str	r3, [r2, #20]
 8001d12:	4b0e      	ldr	r3, [pc, #56]	@ (8001d4c <HAL_SPI_MspInit+0x80>)
 8001d14:	695b      	ldr	r3, [r3, #20]
 8001d16:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d1a:	60fb      	str	r3, [r7, #12]
 8001d1c:	68fb      	ldr	r3, [r7, #12]
 8001d1e:	23e0      	movs	r3, #224	@ 0xe0
 8001d20:	617b      	str	r3, [r7, #20]
 8001d22:	2302      	movs	r3, #2
 8001d24:	61bb      	str	r3, [r7, #24]
 8001d26:	2300      	movs	r3, #0
 8001d28:	61fb      	str	r3, [r7, #28]
 8001d2a:	2303      	movs	r3, #3
 8001d2c:	623b      	str	r3, [r7, #32]
 8001d2e:	2305      	movs	r3, #5
 8001d30:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d32:	f107 0314 	add.w	r3, r7, #20
 8001d36:	4619      	mov	r1, r3
 8001d38:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001d3c:	f000 febc 	bl	8002ab8 <HAL_GPIO_Init>
 8001d40:	bf00      	nop
 8001d42:	3728      	adds	r7, #40	@ 0x28
 8001d44:	46bd      	mov	sp, r7
 8001d46:	bd80      	pop	{r7, pc}
 8001d48:	40013000 	.word	0x40013000
 8001d4c:	40021000 	.word	0x40021000

08001d50 <HAL_TIM_PWM_MspInit>:
 8001d50:	b480      	push	{r7}
 8001d52:	b085      	sub	sp, #20
 8001d54:	af00      	add	r7, sp, #0
 8001d56:	6078      	str	r0, [r7, #4]
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	4a0a      	ldr	r2, [pc, #40]	@ (8001d88 <HAL_TIM_PWM_MspInit+0x38>)
 8001d5e:	4293      	cmp	r3, r2
 8001d60:	d10b      	bne.n	8001d7a <HAL_TIM_PWM_MspInit+0x2a>
 8001d62:	4b0a      	ldr	r3, [pc, #40]	@ (8001d8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001d64:	69db      	ldr	r3, [r3, #28]
 8001d66:	4a09      	ldr	r2, [pc, #36]	@ (8001d8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001d68:	f043 0302 	orr.w	r3, r3, #2
 8001d6c:	61d3      	str	r3, [r2, #28]
 8001d6e:	4b07      	ldr	r3, [pc, #28]	@ (8001d8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001d70:	69db      	ldr	r3, [r3, #28]
 8001d72:	f003 0302 	and.w	r3, r3, #2
 8001d76:	60fb      	str	r3, [r7, #12]
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	bf00      	nop
 8001d7c:	3714      	adds	r7, #20
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d84:	4770      	bx	lr
 8001d86:	bf00      	nop
 8001d88:	40000400 	.word	0x40000400
 8001d8c:	40021000 	.word	0x40021000

08001d90 <HAL_TIM_Base_MspInit>:
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b084      	sub	sp, #16
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	6078      	str	r0, [r7, #4]
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	681b      	ldr	r3, [r3, #0]
 8001d9c:	4a1a      	ldr	r2, [pc, #104]	@ (8001e08 <HAL_TIM_Base_MspInit+0x78>)
 8001d9e:	4293      	cmp	r3, r2
 8001da0:	d114      	bne.n	8001dcc <HAL_TIM_Base_MspInit+0x3c>
 8001da2:	4b1a      	ldr	r3, [pc, #104]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001da4:	69db      	ldr	r3, [r3, #28]
 8001da6:	4a19      	ldr	r2, [pc, #100]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001da8:	f043 0310 	orr.w	r3, r3, #16
 8001dac:	61d3      	str	r3, [r2, #28]
 8001dae:	4b17      	ldr	r3, [pc, #92]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001db0:	69db      	ldr	r3, [r3, #28]
 8001db2:	f003 0310 	and.w	r3, r3, #16
 8001db6:	60fb      	str	r3, [r7, #12]
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	2200      	movs	r2, #0
 8001dbc:	2100      	movs	r1, #0
 8001dbe:	2036      	movs	r0, #54	@ 0x36
 8001dc0:	f000 fe43 	bl	8002a4a <HAL_NVIC_SetPriority>
 8001dc4:	2036      	movs	r0, #54	@ 0x36
 8001dc6:	f000 fe5c 	bl	8002a82 <HAL_NVIC_EnableIRQ>
 8001dca:	e018      	b.n	8001dfe <HAL_TIM_Base_MspInit+0x6e>
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	4a0f      	ldr	r2, [pc, #60]	@ (8001e10 <HAL_TIM_Base_MspInit+0x80>)
 8001dd2:	4293      	cmp	r3, r2
 8001dd4:	d113      	bne.n	8001dfe <HAL_TIM_Base_MspInit+0x6e>
 8001dd6:	4b0d      	ldr	r3, [pc, #52]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001dd8:	69db      	ldr	r3, [r3, #28]
 8001dda:	4a0c      	ldr	r2, [pc, #48]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001ddc:	f043 0320 	orr.w	r3, r3, #32
 8001de0:	61d3      	str	r3, [r2, #28]
 8001de2:	4b0a      	ldr	r3, [pc, #40]	@ (8001e0c <HAL_TIM_Base_MspInit+0x7c>)
 8001de4:	69db      	ldr	r3, [r3, #28]
 8001de6:	f003 0320 	and.w	r3, r3, #32
 8001dea:	60bb      	str	r3, [r7, #8]
 8001dec:	68bb      	ldr	r3, [r7, #8]
 8001dee:	2200      	movs	r2, #0
 8001df0:	2101      	movs	r1, #1
 8001df2:	2037      	movs	r0, #55	@ 0x37
 8001df4:	f000 fe29 	bl	8002a4a <HAL_NVIC_SetPriority>
 8001df8:	2037      	movs	r0, #55	@ 0x37
 8001dfa:	f000 fe42 	bl	8002a82 <HAL_NVIC_EnableIRQ>
 8001dfe:	bf00      	nop
 8001e00:	3710      	adds	r7, #16
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bd80      	pop	{r7, pc}
 8001e06:	bf00      	nop
 8001e08:	40001000 	.word	0x40001000
 8001e0c:	40021000 	.word	0x40021000
 8001e10:	40001400 	.word	0x40001400

08001e14 <HAL_TIM_MspPostInit>:
 8001e14:	b580      	push	{r7, lr}
 8001e16:	b088      	sub	sp, #32
 8001e18:	af00      	add	r7, sp, #0
 8001e1a:	6078      	str	r0, [r7, #4]
 8001e1c:	f107 030c 	add.w	r3, r7, #12
 8001e20:	2200      	movs	r2, #0
 8001e22:	601a      	str	r2, [r3, #0]
 8001e24:	605a      	str	r2, [r3, #4]
 8001e26:	609a      	str	r2, [r3, #8]
 8001e28:	60da      	str	r2, [r3, #12]
 8001e2a:	611a      	str	r2, [r3, #16]
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	4a11      	ldr	r2, [pc, #68]	@ (8001e78 <HAL_TIM_MspPostInit+0x64>)
 8001e32:	4293      	cmp	r3, r2
 8001e34:	d11c      	bne.n	8001e70 <HAL_TIM_MspPostInit+0x5c>
 8001e36:	4b11      	ldr	r3, [pc, #68]	@ (8001e7c <HAL_TIM_MspPostInit+0x68>)
 8001e38:	695b      	ldr	r3, [r3, #20]
 8001e3a:	4a10      	ldr	r2, [pc, #64]	@ (8001e7c <HAL_TIM_MspPostInit+0x68>)
 8001e3c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001e40:	6153      	str	r3, [r2, #20]
 8001e42:	4b0e      	ldr	r3, [pc, #56]	@ (8001e7c <HAL_TIM_MspPostInit+0x68>)
 8001e44:	695b      	ldr	r3, [r3, #20]
 8001e46:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8001e4a:	60bb      	str	r3, [r7, #8]
 8001e4c:	68bb      	ldr	r3, [r7, #8]
 8001e4e:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
 8001e52:	60fb      	str	r3, [r7, #12]
 8001e54:	2302      	movs	r3, #2
 8001e56:	613b      	str	r3, [r7, #16]
 8001e58:	2300      	movs	r3, #0
 8001e5a:	617b      	str	r3, [r7, #20]
 8001e5c:	2300      	movs	r3, #0
 8001e5e:	61bb      	str	r3, [r7, #24]
 8001e60:	2302      	movs	r3, #2
 8001e62:	61fb      	str	r3, [r7, #28]
 8001e64:	f107 030c 	add.w	r3, r7, #12
 8001e68:	4619      	mov	r1, r3
 8001e6a:	4805      	ldr	r0, [pc, #20]	@ (8001e80 <HAL_TIM_MspPostInit+0x6c>)
 8001e6c:	f000 fe24 	bl	8002ab8 <HAL_GPIO_Init>
 8001e70:	bf00      	nop
 8001e72:	3720      	adds	r7, #32
 8001e74:	46bd      	mov	sp, r7
 8001e76:	bd80      	pop	{r7, pc}
 8001e78:	40000400 	.word	0x40000400
 8001e7c:	40021000 	.word	0x40021000
 8001e80:	48000800 	.word	0x48000800

08001e84 <HAL_UART_MspInit>:
 8001e84:	b580      	push	{r7, lr}
 8001e86:	b08a      	sub	sp, #40	@ 0x28
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
 8001e8c:	f107 0314 	add.w	r3, r7, #20
 8001e90:	2200      	movs	r2, #0
 8001e92:	601a      	str	r2, [r3, #0]
 8001e94:	605a      	str	r2, [r3, #4]
 8001e96:	609a      	str	r2, [r3, #8]
 8001e98:	60da      	str	r2, [r3, #12]
 8001e9a:	611a      	str	r2, [r3, #16]
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	4a17      	ldr	r2, [pc, #92]	@ (8001f00 <HAL_UART_MspInit+0x7c>)
 8001ea2:	4293      	cmp	r3, r2
 8001ea4:	d127      	bne.n	8001ef6 <HAL_UART_MspInit+0x72>
 8001ea6:	4b17      	ldr	r3, [pc, #92]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001ea8:	699b      	ldr	r3, [r3, #24]
 8001eaa:	4a16      	ldr	r2, [pc, #88]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001eac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001eb0:	6193      	str	r3, [r2, #24]
 8001eb2:	4b14      	ldr	r3, [pc, #80]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001eb4:	699b      	ldr	r3, [r3, #24]
 8001eb6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001eba:	613b      	str	r3, [r7, #16]
 8001ebc:	693b      	ldr	r3, [r7, #16]
 8001ebe:	4b11      	ldr	r3, [pc, #68]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001ec0:	695b      	ldr	r3, [r3, #20]
 8001ec2:	4a10      	ldr	r2, [pc, #64]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001ec4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001ec8:	6153      	str	r3, [r2, #20]
 8001eca:	4b0e      	ldr	r3, [pc, #56]	@ (8001f04 <HAL_UART_MspInit+0x80>)
 8001ecc:	695b      	ldr	r3, [r3, #20]
 8001ece:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8001ed2:	60fb      	str	r3, [r7, #12]
 8001ed4:	68fb      	ldr	r3, [r7, #12]
 8001ed6:	2330      	movs	r3, #48	@ 0x30
 8001ed8:	617b      	str	r3, [r7, #20]
 8001eda:	2302      	movs	r3, #2
 8001edc:	61bb      	str	r3, [r7, #24]
 8001ede:	2300      	movs	r3, #0
 8001ee0:	61fb      	str	r3, [r7, #28]
 8001ee2:	2303      	movs	r3, #3
 8001ee4:	623b      	str	r3, [r7, #32]
 8001ee6:	2307      	movs	r3, #7
 8001ee8:	627b      	str	r3, [r7, #36]	@ 0x24
 8001eea:	f107 0314 	add.w	r3, r7, #20
 8001eee:	4619      	mov	r1, r3
 8001ef0:	4805      	ldr	r0, [pc, #20]	@ (8001f08 <HAL_UART_MspInit+0x84>)
 8001ef2:	f000 fde1 	bl	8002ab8 <HAL_GPIO_Init>
 8001ef6:	bf00      	nop
 8001ef8:	3728      	adds	r7, #40	@ 0x28
 8001efa:	46bd      	mov	sp, r7
 8001efc:	bd80      	pop	{r7, pc}
 8001efe:	bf00      	nop
 8001f00:	40013800 	.word	0x40013800
 8001f04:	40021000 	.word	0x40021000
 8001f08:	48000800 	.word	0x48000800

08001f0c <NMI_Handler>:
 8001f0c:	b480      	push	{r7}
 8001f0e:	af00      	add	r7, sp, #0
 8001f10:	bf00      	nop
 8001f12:	e7fd      	b.n	8001f10 <NMI_Handler+0x4>

08001f14 <HardFault_Handler>:
 8001f14:	b480      	push	{r7}
 8001f16:	af00      	add	r7, sp, #0
 8001f18:	bf00      	nop
 8001f1a:	e7fd      	b.n	8001f18 <HardFault_Handler+0x4>

08001f1c <MemManage_Handler>:
 8001f1c:	b480      	push	{r7}
 8001f1e:	af00      	add	r7, sp, #0
 8001f20:	bf00      	nop
 8001f22:	e7fd      	b.n	8001f20 <MemManage_Handler+0x4>

08001f24 <BusFault_Handler>:
 8001f24:	b480      	push	{r7}
 8001f26:	af00      	add	r7, sp, #0
 8001f28:	bf00      	nop
 8001f2a:	e7fd      	b.n	8001f28 <BusFault_Handler+0x4>

08001f2c <UsageFault_Handler>:
 8001f2c:	b480      	push	{r7}
 8001f2e:	af00      	add	r7, sp, #0
 8001f30:	bf00      	nop
 8001f32:	e7fd      	b.n	8001f30 <UsageFault_Handler+0x4>

08001f34 <SVC_Handler>:
 8001f34:	b480      	push	{r7}
 8001f36:	af00      	add	r7, sp, #0
 8001f38:	bf00      	nop
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f40:	4770      	bx	lr

08001f42 <DebugMon_Handler>:
 8001f42:	b480      	push	{r7}
 8001f44:	af00      	add	r7, sp, #0
 8001f46:	bf00      	nop
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f4e:	4770      	bx	lr

08001f50 <PendSV_Handler>:
 8001f50:	b480      	push	{r7}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	bf00      	nop
 8001f56:	46bd      	mov	sp, r7
 8001f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f5c:	4770      	bx	lr

08001f5e <SysTick_Handler>:
 8001f5e:	b580      	push	{r7, lr}
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	f000 fc53 	bl	800280c <HAL_IncTick>
 8001f66:	bf00      	nop
 8001f68:	bd80      	pop	{r7, pc}
	...

08001f6c <USB_LP_CAN_RX0_IRQHandler>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	4802      	ldr	r0, [pc, #8]	@ (8001f7c <USB_LP_CAN_RX0_IRQHandler+0x10>)
 8001f72:	f001 fe1f 	bl	8003bb4 <HAL_PCD_IRQHandler>
 8001f76:	bf00      	nop
 8001f78:	bd80      	pop	{r7, pc}
 8001f7a:	bf00      	nop
 8001f7c:	20000c90 	.word	0x20000c90

08001f80 <TIM6_DAC_IRQHandler>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	af00      	add	r7, sp, #0
 8001f84:	4802      	ldr	r0, [pc, #8]	@ (8001f90 <TIM6_DAC_IRQHandler+0x10>)
 8001f86:	f004 ffaa 	bl	8006ede <HAL_TIM_IRQHandler>
 8001f8a:	bf00      	nop
 8001f8c:	bd80      	pop	{r7, pc}
 8001f8e:	bf00      	nop
 8001f90:	200006a0 	.word	0x200006a0

08001f94 <TIM7_IRQHandler>:
 8001f94:	b580      	push	{r7, lr}
 8001f96:	af00      	add	r7, sp, #0
 8001f98:	4802      	ldr	r0, [pc, #8]	@ (8001fa4 <TIM7_IRQHandler+0x10>)
 8001f9a:	f004 ffa0 	bl	8006ede <HAL_TIM_IRQHandler>
 8001f9e:	bf00      	nop
 8001fa0:	bd80      	pop	{r7, pc}
 8001fa2:	bf00      	nop
 8001fa4:	200006ec 	.word	0x200006ec

08001fa8 <_getpid>:
 8001fa8:	b480      	push	{r7}
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	2301      	movs	r3, #1
 8001fae:	4618      	mov	r0, r3
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb6:	4770      	bx	lr

08001fb8 <_kill>:
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b082      	sub	sp, #8
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
 8001fc0:	6039      	str	r1, [r7, #0]
 8001fc2:	f00b fc7d 	bl	800d8c0 <__errno>
 8001fc6:	4603      	mov	r3, r0
 8001fc8:	2216      	movs	r2, #22
 8001fca:	601a      	str	r2, [r3, #0]
 8001fcc:	f04f 33ff 	mov.w	r3, #4294967295
 8001fd0:	4618      	mov	r0, r3
 8001fd2:	3708      	adds	r7, #8
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	bd80      	pop	{r7, pc}

08001fd8 <_exit>:
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	b082      	sub	sp, #8
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	6078      	str	r0, [r7, #4]
 8001fe0:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe4:	6878      	ldr	r0, [r7, #4]
 8001fe6:	f7ff ffe7 	bl	8001fb8 <_kill>
 8001fea:	bf00      	nop
 8001fec:	e7fd      	b.n	8001fea <_exit+0x12>

08001fee <_read>:
 8001fee:	b580      	push	{r7, lr}
 8001ff0:	b086      	sub	sp, #24
 8001ff2:	af00      	add	r7, sp, #0
 8001ff4:	60f8      	str	r0, [r7, #12]
 8001ff6:	60b9      	str	r1, [r7, #8]
 8001ff8:	607a      	str	r2, [r7, #4]
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	e00a      	b.n	8002016 <_read+0x28>
 8002000:	f7ff fa64 	bl	80014cc <__io_getchar>
 8002004:	4601      	mov	r1, r0
 8002006:	68bb      	ldr	r3, [r7, #8]
 8002008:	1c5a      	adds	r2, r3, #1
 800200a:	60ba      	str	r2, [r7, #8]
 800200c:	b2ca      	uxtb	r2, r1
 800200e:	701a      	strb	r2, [r3, #0]
 8002010:	697b      	ldr	r3, [r7, #20]
 8002012:	3301      	adds	r3, #1
 8002014:	617b      	str	r3, [r7, #20]
 8002016:	697a      	ldr	r2, [r7, #20]
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	429a      	cmp	r2, r3
 800201c:	dbf0      	blt.n	8002000 <_read+0x12>
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	4618      	mov	r0, r3
 8002022:	3718      	adds	r7, #24
 8002024:	46bd      	mov	sp, r7
 8002026:	bd80      	pop	{r7, pc}

08002028 <_write>:
 8002028:	b580      	push	{r7, lr}
 800202a:	b086      	sub	sp, #24
 800202c:	af00      	add	r7, sp, #0
 800202e:	60f8      	str	r0, [r7, #12]
 8002030:	60b9      	str	r1, [r7, #8]
 8002032:	607a      	str	r2, [r7, #4]
 8002034:	2300      	movs	r3, #0
 8002036:	617b      	str	r3, [r7, #20]
 8002038:	e009      	b.n	800204e <_write+0x26>
 800203a:	68bb      	ldr	r3, [r7, #8]
 800203c:	1c5a      	adds	r2, r3, #1
 800203e:	60ba      	str	r2, [r7, #8]
 8002040:	781b      	ldrb	r3, [r3, #0]
 8002042:	4618      	mov	r0, r3
 8002044:	f7ff fa30 	bl	80014a8 <__io_putchar>
 8002048:	697b      	ldr	r3, [r7, #20]
 800204a:	3301      	adds	r3, #1
 800204c:	617b      	str	r3, [r7, #20]
 800204e:	697a      	ldr	r2, [r7, #20]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	429a      	cmp	r2, r3
 8002054:	dbf1      	blt.n	800203a <_write+0x12>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	4618      	mov	r0, r3
 800205a:	3718      	adds	r7, #24
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}

08002060 <_close>:
 8002060:	b480      	push	{r7}
 8002062:	b083      	sub	sp, #12
 8002064:	af00      	add	r7, sp, #0
 8002066:	6078      	str	r0, [r7, #4]
 8002068:	f04f 33ff 	mov.w	r3, #4294967295
 800206c:	4618      	mov	r0, r3
 800206e:	370c      	adds	r7, #12
 8002070:	46bd      	mov	sp, r7
 8002072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002076:	4770      	bx	lr

08002078 <_fstat>:
 8002078:	b480      	push	{r7}
 800207a:	b083      	sub	sp, #12
 800207c:	af00      	add	r7, sp, #0
 800207e:	6078      	str	r0, [r7, #4]
 8002080:	6039      	str	r1, [r7, #0]
 8002082:	683b      	ldr	r3, [r7, #0]
 8002084:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002088:	605a      	str	r2, [r3, #4]
 800208a:	2300      	movs	r3, #0
 800208c:	4618      	mov	r0, r3
 800208e:	370c      	adds	r7, #12
 8002090:	46bd      	mov	sp, r7
 8002092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002096:	4770      	bx	lr

08002098 <_isatty>:
 8002098:	b480      	push	{r7}
 800209a:	b083      	sub	sp, #12
 800209c:	af00      	add	r7, sp, #0
 800209e:	6078      	str	r0, [r7, #4]
 80020a0:	2301      	movs	r3, #1
 80020a2:	4618      	mov	r0, r3
 80020a4:	370c      	adds	r7, #12
 80020a6:	46bd      	mov	sp, r7
 80020a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ac:	4770      	bx	lr

080020ae <_lseek>:
 80020ae:	b480      	push	{r7}
 80020b0:	b085      	sub	sp, #20
 80020b2:	af00      	add	r7, sp, #0
 80020b4:	60f8      	str	r0, [r7, #12]
 80020b6:	60b9      	str	r1, [r7, #8]
 80020b8:	607a      	str	r2, [r7, #4]
 80020ba:	2300      	movs	r3, #0
 80020bc:	4618      	mov	r0, r3
 80020be:	3714      	adds	r7, #20
 80020c0:	46bd      	mov	sp, r7
 80020c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020c6:	4770      	bx	lr

080020c8 <_sbrk>:
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b086      	sub	sp, #24
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	4a14      	ldr	r2, [pc, #80]	@ (8002124 <_sbrk+0x5c>)
 80020d2:	4b15      	ldr	r3, [pc, #84]	@ (8002128 <_sbrk+0x60>)
 80020d4:	1ad3      	subs	r3, r2, r3
 80020d6:	617b      	str	r3, [r7, #20]
 80020d8:	697b      	ldr	r3, [r7, #20]
 80020da:	613b      	str	r3, [r7, #16]
 80020dc:	4b13      	ldr	r3, [pc, #76]	@ (800212c <_sbrk+0x64>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2b00      	cmp	r3, #0
 80020e2:	d102      	bne.n	80020ea <_sbrk+0x22>
 80020e4:	4b11      	ldr	r3, [pc, #68]	@ (800212c <_sbrk+0x64>)
 80020e6:	4a12      	ldr	r2, [pc, #72]	@ (8002130 <_sbrk+0x68>)
 80020e8:	601a      	str	r2, [r3, #0]
 80020ea:	4b10      	ldr	r3, [pc, #64]	@ (800212c <_sbrk+0x64>)
 80020ec:	681a      	ldr	r2, [r3, #0]
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	4413      	add	r3, r2
 80020f2:	693a      	ldr	r2, [r7, #16]
 80020f4:	429a      	cmp	r2, r3
 80020f6:	d207      	bcs.n	8002108 <_sbrk+0x40>
 80020f8:	f00b fbe2 	bl	800d8c0 <__errno>
 80020fc:	4603      	mov	r3, r0
 80020fe:	220c      	movs	r2, #12
 8002100:	601a      	str	r2, [r3, #0]
 8002102:	f04f 33ff 	mov.w	r3, #4294967295
 8002106:	e009      	b.n	800211c <_sbrk+0x54>
 8002108:	4b08      	ldr	r3, [pc, #32]	@ (800212c <_sbrk+0x64>)
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	60fb      	str	r3, [r7, #12]
 800210e:	4b07      	ldr	r3, [pc, #28]	@ (800212c <_sbrk+0x64>)
 8002110:	681a      	ldr	r2, [r3, #0]
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	4413      	add	r3, r2
 8002116:	4a05      	ldr	r2, [pc, #20]	@ (800212c <_sbrk+0x64>)
 8002118:	6013      	str	r3, [r2, #0]
 800211a:	68fb      	ldr	r3, [r7, #12]
 800211c:	4618      	mov	r0, r3
 800211e:	3718      	adds	r7, #24
 8002120:	46bd      	mov	sp, r7
 8002122:	bd80      	pop	{r7, pc}
 8002124:	2000a000 	.word	0x2000a000
 8002128:	00000400 	.word	0x00000400
 800212c:	200007c0 	.word	0x200007c0
 8002130:	200010d8 	.word	0x200010d8

08002134 <SystemInit>:
 8002134:	b480      	push	{r7}
 8002136:	af00      	add	r7, sp, #0
 8002138:	4b06      	ldr	r3, [pc, #24]	@ (8002154 <SystemInit+0x20>)
 800213a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800213e:	4a05      	ldr	r2, [pc, #20]	@ (8002154 <SystemInit+0x20>)
 8002140:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002144:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002148:	bf00      	nop
 800214a:	46bd      	mov	sp, r7
 800214c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002150:	4770      	bx	lr
 8002152:	bf00      	nop
 8002154:	e000ed00 	.word	0xe000ed00

08002158 <AS5600Init>:
 8002158:	b480      	push	{r7}
 800215a:	b083      	sub	sp, #12
 800215c:	af00      	add	r7, sp, #0
 800215e:	6078      	str	r0, [r7, #4]
 8002160:	6039      	str	r1, [r7, #0]
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	683a      	ldr	r2, [r7, #0]
 8002166:	601a      	str	r2, [r3, #0]
 8002168:	bf00      	nop
 800216a:	370c      	adds	r7, #12
 800216c:	46bd      	mov	sp, r7
 800216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002172:	4770      	bx	lr

08002174 <AS5600GetAngle>:
 8002174:	b580      	push	{r7, lr}
 8002176:	b082      	sub	sp, #8
 8002178:	af00      	add	r7, sp, #0
 800217a:	6078      	str	r0, [r7, #4]
 800217c:	210c      	movs	r1, #12
 800217e:	6878      	ldr	r0, [r7, #4]
 8002180:	f000 f833 	bl	80021ea <ReadRegister16>
 8002184:	4603      	mov	r3, r0
 8002186:	4618      	mov	r0, r3
 8002188:	3708      	adds	r7, #8
 800218a:	46bd      	mov	sp, r7
 800218c:	bd80      	pop	{r7, pc}

0800218e <ReadRegisterBurst>:
 800218e:	b580      	push	{r7, lr}
 8002190:	b088      	sub	sp, #32
 8002192:	af02      	add	r7, sp, #8
 8002194:	60f8      	str	r0, [r7, #12]
 8002196:	607a      	str	r2, [r7, #4]
 8002198:	461a      	mov	r2, r3
 800219a:	460b      	mov	r3, r1
 800219c:	72fb      	strb	r3, [r7, #11]
 800219e:	4613      	mov	r3, r2
 80021a0:	72bb      	strb	r3, [r7, #10]
 80021a2:	68fb      	ldr	r3, [r7, #12]
 80021a4:	6818      	ldr	r0, [r3, #0]
 80021a6:	f107 020b 	add.w	r2, r7, #11
 80021aa:	f04f 33ff 	mov.w	r3, #4294967295
 80021ae:	9300      	str	r3, [sp, #0]
 80021b0:	2301      	movs	r3, #1
 80021b2:	216c      	movs	r1, #108	@ 0x6c
 80021b4:	f000 fec6 	bl	8002f44 <HAL_I2C_Master_Transmit>
 80021b8:	4603      	mov	r3, r0
 80021ba:	75fb      	strb	r3, [r7, #23]
 80021bc:	7dfb      	ldrb	r3, [r7, #23]
 80021be:	2b00      	cmp	r3, #0
 80021c0:	d10f      	bne.n	80021e2 <ReadRegisterBurst+0x54>
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	6818      	ldr	r0, [r3, #0]
 80021c6:	7abb      	ldrb	r3, [r7, #10]
 80021c8:	b29b      	uxth	r3, r3
 80021ca:	f04f 32ff 	mov.w	r2, #4294967295
 80021ce:	9200      	str	r2, [sp, #0]
 80021d0:	687a      	ldr	r2, [r7, #4]
 80021d2:	216c      	movs	r1, #108	@ 0x6c
 80021d4:	f000 ffce 	bl	8003174 <HAL_I2C_Master_Receive>
 80021d8:	4603      	mov	r3, r0
 80021da:	75fb      	strb	r3, [r7, #23]
 80021dc:	7dfb      	ldrb	r3, [r7, #23]
 80021de:	2b00      	cmp	r3, #0
 80021e0:	e000      	b.n	80021e4 <ReadRegisterBurst+0x56>
 80021e2:	bf00      	nop
 80021e4:	3718      	adds	r7, #24
 80021e6:	46bd      	mov	sp, r7
 80021e8:	bd80      	pop	{r7, pc}

080021ea <ReadRegister16>:
 80021ea:	b580      	push	{r7, lr}
 80021ec:	b084      	sub	sp, #16
 80021ee:	af00      	add	r7, sp, #0
 80021f0:	6078      	str	r0, [r7, #4]
 80021f2:	460b      	mov	r3, r1
 80021f4:	70fb      	strb	r3, [r7, #3]
 80021f6:	f107 020c 	add.w	r2, r7, #12
 80021fa:	78f9      	ldrb	r1, [r7, #3]
 80021fc:	2302      	movs	r3, #2
 80021fe:	6878      	ldr	r0, [r7, #4]
 8002200:	f7ff ffc5 	bl	800218e <ReadRegisterBurst>
 8002204:	89bb      	ldrh	r3, [r7, #12]
 8002206:	0a1b      	lsrs	r3, r3, #8
 8002208:	b29b      	uxth	r3, r3
 800220a:	73fb      	strb	r3, [r7, #15]
 800220c:	89bb      	ldrh	r3, [r7, #12]
 800220e:	021b      	lsls	r3, r3, #8
 8002210:	b21a      	sxth	r2, r3
 8002212:	7bfb      	ldrb	r3, [r7, #15]
 8002214:	b21b      	sxth	r3, r3
 8002216:	4313      	orrs	r3, r2
 8002218:	b21b      	sxth	r3, r3
 800221a:	b29b      	uxth	r3, r3
 800221c:	81bb      	strh	r3, [r7, #12]
 800221e:	89bb      	ldrh	r3, [r7, #12]
 8002220:	4618      	mov	r0, r3
 8002222:	3710      	adds	r7, #16
 8002224:	46bd      	mov	sp, r7
 8002226:	bd80      	pop	{r7, pc}

08002228 <AS5600InterfaceInit>:
 8002228:	b480      	push	{r7}
 800222a:	b083      	sub	sp, #12
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	6039      	str	r1, [r7, #0]
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	683a      	ldr	r2, [r7, #0]
 8002236:	601a      	str	r2, [r3, #0]
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	4a04      	ldr	r2, [pc, #16]	@ (800224c <AS5600InterfaceInit+0x24>)
 800223c:	605a      	str	r2, [r3, #4]
 800223e:	bf00      	nop
 8002240:	370c      	adds	r7, #12
 8002242:	46bd      	mov	sp, r7
 8002244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002248:	4770      	bx	lr
 800224a:	bf00      	nop
 800224c:	08002251 	.word	0x08002251

08002250 <GetEncoderSensorCount>:
 8002250:	b580      	push	{r7, lr}
 8002252:	b082      	sub	sp, #8
 8002254:	af00      	add	r7, sp, #0
 8002256:	6078      	str	r0, [r7, #4]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	4618      	mov	r0, r3
 800225e:	f7ff ff89 	bl	8002174 <AS5600GetAngle>
 8002262:	4603      	mov	r3, r0
 8002264:	4618      	mov	r0, r3
 8002266:	3708      	adds	r7, #8
 8002268:	46bd      	mov	sp, r7
 800226a:	bd80      	pop	{r7, pc}

0800226c <BTS7960Init>:
 800226c:	b082      	sub	sp, #8
 800226e:	b580      	push	{r7, lr}
 8002270:	b084      	sub	sp, #16
 8002272:	af00      	add	r7, sp, #0
 8002274:	60f8      	str	r0, [r7, #12]
 8002276:	1d38      	adds	r0, r7, #4
 8002278:	e880 0006 	stmia.w	r0, {r1, r2}
 800227c:	61fb      	str	r3, [r7, #28]
 800227e:	68fb      	ldr	r3, [r7, #12]
 8002280:	461a      	mov	r2, r3
 8002282:	1d3b      	adds	r3, r7, #4
 8002284:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002288:	e882 0003 	stmia.w	r2, {r0, r1}
 800228c:	68fb      	ldr	r3, [r7, #12]
 800228e:	3308      	adds	r3, #8
 8002290:	f107 021c 	add.w	r2, r7, #28
 8002294:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002298:	e883 0003 	stmia.w	r3, {r0, r1}
 800229c:	68fb      	ldr	r3, [r7, #12]
 800229e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80022a0:	611a      	str	r2, [r3, #16]
 80022a2:	68fb      	ldr	r3, [r7, #12]
 80022a4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80022a6:	615a      	str	r2, [r3, #20]
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80022ac:	619a      	str	r2, [r3, #24]
 80022ae:	2100      	movs	r1, #0
 80022b0:	68f8      	ldr	r0, [r7, #12]
 80022b2:	f000 f807 	bl	80022c4 <BTS7960SetPower>
 80022b6:	bf00      	nop
 80022b8:	3710      	adds	r7, #16
 80022ba:	46bd      	mov	sp, r7
 80022bc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80022c0:	b002      	add	sp, #8
 80022c2:	4770      	bx	lr

080022c4 <BTS7960SetPower>:
 80022c4:	b580      	push	{r7, lr}
 80022c6:	b082      	sub	sp, #8
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
 80022cc:	6039      	str	r1, [r7, #0]
 80022ce:	f640 125f 	movw	r2, #2399	@ 0x95f
 80022d2:	4985      	ldr	r1, [pc, #532]	@ (80024e8 <BTS7960SetPower+0x224>)
 80022d4:	6838      	ldr	r0, [r7, #0]
 80022d6:	f7fe fec5 	bl	8001064 <Constrain>
 80022da:	4602      	mov	r2, r0
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	61da      	str	r2, [r3, #28]
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	69db      	ldr	r3, [r3, #28]
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	f340 8085 	ble.w	80023f4 <BTS7960SetPower+0x130>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	2100      	movs	r1, #0
 80022ee:	4618      	mov	r0, r3
 80022f0:	f000 fa00 	bl	80026f4 <GPIOSetState>
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	3308      	adds	r3, #8
 80022f8:	2101      	movs	r1, #1
 80022fa:	4618      	mov	r0, r3
 80022fc:	f000 f9fa 	bl	80026f4 <GPIOSetState>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	695b      	ldr	r3, [r3, #20]
 8002304:	2b00      	cmp	r3, #0
 8002306:	d106      	bne.n	8002316 <BTS7960SetPower+0x52>
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	69da      	ldr	r2, [r3, #28]
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	691b      	ldr	r3, [r3, #16]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	635a      	str	r2, [r3, #52]	@ 0x34
 8002314:	e036      	b.n	8002384 <BTS7960SetPower+0xc0>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	695b      	ldr	r3, [r3, #20]
 800231a:	2b04      	cmp	r3, #4
 800231c:	d107      	bne.n	800232e <BTS7960SetPower+0x6a>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	69d9      	ldr	r1, [r3, #28]
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	691b      	ldr	r3, [r3, #16]
 8002326:	681a      	ldr	r2, [r3, #0]
 8002328:	460b      	mov	r3, r1
 800232a:	6393      	str	r3, [r2, #56]	@ 0x38
 800232c:	e02a      	b.n	8002384 <BTS7960SetPower+0xc0>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	695b      	ldr	r3, [r3, #20]
 8002332:	2b08      	cmp	r3, #8
 8002334:	d107      	bne.n	8002346 <BTS7960SetPower+0x82>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	69d9      	ldr	r1, [r3, #28]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	691b      	ldr	r3, [r3, #16]
 800233e:	681a      	ldr	r2, [r3, #0]
 8002340:	460b      	mov	r3, r1
 8002342:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8002344:	e01e      	b.n	8002384 <BTS7960SetPower+0xc0>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	695b      	ldr	r3, [r3, #20]
 800234a:	2b0c      	cmp	r3, #12
 800234c:	d107      	bne.n	800235e <BTS7960SetPower+0x9a>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	69d9      	ldr	r1, [r3, #28]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	691b      	ldr	r3, [r3, #16]
 8002356:	681a      	ldr	r2, [r3, #0]
 8002358:	460b      	mov	r3, r1
 800235a:	6413      	str	r3, [r2, #64]	@ 0x40
 800235c:	e012      	b.n	8002384 <BTS7960SetPower+0xc0>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	695b      	ldr	r3, [r3, #20]
 8002362:	2b10      	cmp	r3, #16
 8002364:	d107      	bne.n	8002376 <BTS7960SetPower+0xb2>
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	69d9      	ldr	r1, [r3, #28]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	691b      	ldr	r3, [r3, #16]
 800236e:	681a      	ldr	r2, [r3, #0]
 8002370:	460b      	mov	r3, r1
 8002372:	6593      	str	r3, [r2, #88]	@ 0x58
 8002374:	e006      	b.n	8002384 <BTS7960SetPower+0xc0>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	69d9      	ldr	r1, [r3, #28]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	691b      	ldr	r3, [r3, #16]
 800237e:	681a      	ldr	r2, [r3, #0]
 8002380:	460b      	mov	r3, r1
 8002382:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	699b      	ldr	r3, [r3, #24]
 8002388:	2b00      	cmp	r3, #0
 800238a:	d105      	bne.n	8002398 <BTS7960SetPower+0xd4>
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	691b      	ldr	r3, [r3, #16]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	2200      	movs	r2, #0
 8002394:	635a      	str	r2, [r3, #52]	@ 0x34
 8002396:	e139      	b.n	800260c <BTS7960SetPower+0x348>
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	699b      	ldr	r3, [r3, #24]
 800239c:	2b04      	cmp	r3, #4
 800239e:	d105      	bne.n	80023ac <BTS7960SetPower+0xe8>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	691b      	ldr	r3, [r3, #16]
 80023a4:	681a      	ldr	r2, [r3, #0]
 80023a6:	2300      	movs	r3, #0
 80023a8:	6393      	str	r3, [r2, #56]	@ 0x38
 80023aa:	e12f      	b.n	800260c <BTS7960SetPower+0x348>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	699b      	ldr	r3, [r3, #24]
 80023b0:	2b08      	cmp	r3, #8
 80023b2:	d105      	bne.n	80023c0 <BTS7960SetPower+0xfc>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	691b      	ldr	r3, [r3, #16]
 80023b8:	681a      	ldr	r2, [r3, #0]
 80023ba:	2300      	movs	r3, #0
 80023bc:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80023be:	e125      	b.n	800260c <BTS7960SetPower+0x348>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	699b      	ldr	r3, [r3, #24]
 80023c4:	2b0c      	cmp	r3, #12
 80023c6:	d105      	bne.n	80023d4 <BTS7960SetPower+0x110>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	691b      	ldr	r3, [r3, #16]
 80023cc:	681a      	ldr	r2, [r3, #0]
 80023ce:	2300      	movs	r3, #0
 80023d0:	6413      	str	r3, [r2, #64]	@ 0x40
 80023d2:	e11b      	b.n	800260c <BTS7960SetPower+0x348>
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	699b      	ldr	r3, [r3, #24]
 80023d8:	2b10      	cmp	r3, #16
 80023da:	d105      	bne.n	80023e8 <BTS7960SetPower+0x124>
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	691b      	ldr	r3, [r3, #16]
 80023e0:	681a      	ldr	r2, [r3, #0]
 80023e2:	2300      	movs	r3, #0
 80023e4:	6593      	str	r3, [r2, #88]	@ 0x58
 80023e6:	e111      	b.n	800260c <BTS7960SetPower+0x348>
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	691b      	ldr	r3, [r3, #16]
 80023ec:	681a      	ldr	r2, [r3, #0]
 80023ee:	2300      	movs	r3, #0
 80023f0:	65d3      	str	r3, [r2, #92]	@ 0x5c
 80023f2:	e10b      	b.n	800260c <BTS7960SetPower+0x348>
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	69db      	ldr	r3, [r3, #28]
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	f280 808d 	bge.w	8002518 <BTS7960SetPower+0x254>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	2101      	movs	r1, #1
 8002402:	4618      	mov	r0, r3
 8002404:	f000 f976 	bl	80026f4 <GPIOSetState>
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	3308      	adds	r3, #8
 800240c:	2100      	movs	r1, #0
 800240e:	4618      	mov	r0, r3
 8002410:	f000 f970 	bl	80026f4 <GPIOSetState>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	695b      	ldr	r3, [r3, #20]
 8002418:	2b00      	cmp	r3, #0
 800241a:	d105      	bne.n	8002428 <BTS7960SetPower+0x164>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	691b      	ldr	r3, [r3, #16]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	2200      	movs	r2, #0
 8002424:	635a      	str	r2, [r3, #52]	@ 0x34
 8002426:	e02c      	b.n	8002482 <BTS7960SetPower+0x1be>
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	695b      	ldr	r3, [r3, #20]
 800242c:	2b04      	cmp	r3, #4
 800242e:	d105      	bne.n	800243c <BTS7960SetPower+0x178>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	691b      	ldr	r3, [r3, #16]
 8002434:	681a      	ldr	r2, [r3, #0]
 8002436:	2300      	movs	r3, #0
 8002438:	6393      	str	r3, [r2, #56]	@ 0x38
 800243a:	e022      	b.n	8002482 <BTS7960SetPower+0x1be>
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	695b      	ldr	r3, [r3, #20]
 8002440:	2b08      	cmp	r3, #8
 8002442:	d105      	bne.n	8002450 <BTS7960SetPower+0x18c>
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	691b      	ldr	r3, [r3, #16]
 8002448:	681a      	ldr	r2, [r3, #0]
 800244a:	2300      	movs	r3, #0
 800244c:	63d3      	str	r3, [r2, #60]	@ 0x3c
 800244e:	e018      	b.n	8002482 <BTS7960SetPower+0x1be>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	695b      	ldr	r3, [r3, #20]
 8002454:	2b0c      	cmp	r3, #12
 8002456:	d105      	bne.n	8002464 <BTS7960SetPower+0x1a0>
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	691b      	ldr	r3, [r3, #16]
 800245c:	681a      	ldr	r2, [r3, #0]
 800245e:	2300      	movs	r3, #0
 8002460:	6413      	str	r3, [r2, #64]	@ 0x40
 8002462:	e00e      	b.n	8002482 <BTS7960SetPower+0x1be>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	695b      	ldr	r3, [r3, #20]
 8002468:	2b10      	cmp	r3, #16
 800246a:	d105      	bne.n	8002478 <BTS7960SetPower+0x1b4>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	691b      	ldr	r3, [r3, #16]
 8002470:	681a      	ldr	r2, [r3, #0]
 8002472:	2300      	movs	r3, #0
 8002474:	6593      	str	r3, [r2, #88]	@ 0x58
 8002476:	e004      	b.n	8002482 <BTS7960SetPower+0x1be>
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	691b      	ldr	r3, [r3, #16]
 800247c:	681a      	ldr	r2, [r3, #0]
 800247e:	2300      	movs	r3, #0
 8002480:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	699b      	ldr	r3, [r3, #24]
 8002486:	2b00      	cmp	r3, #0
 8002488:	d107      	bne.n	800249a <BTS7960SetPower+0x1d6>
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	69db      	ldr	r3, [r3, #28]
 800248e:	425a      	negs	r2, r3
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	691b      	ldr	r3, [r3, #16]
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	635a      	str	r2, [r3, #52]	@ 0x34
 8002498:	e0b8      	b.n	800260c <BTS7960SetPower+0x348>
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	699b      	ldr	r3, [r3, #24]
 800249e:	2b04      	cmp	r3, #4
 80024a0:	d108      	bne.n	80024b4 <BTS7960SetPower+0x1f0>
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	69db      	ldr	r3, [r3, #28]
 80024a6:	4259      	negs	r1, r3
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	691b      	ldr	r3, [r3, #16]
 80024ac:	681a      	ldr	r2, [r3, #0]
 80024ae:	460b      	mov	r3, r1
 80024b0:	6393      	str	r3, [r2, #56]	@ 0x38
 80024b2:	e0ab      	b.n	800260c <BTS7960SetPower+0x348>
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	699b      	ldr	r3, [r3, #24]
 80024b8:	2b08      	cmp	r3, #8
 80024ba:	d108      	bne.n	80024ce <BTS7960SetPower+0x20a>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	69db      	ldr	r3, [r3, #28]
 80024c0:	4259      	negs	r1, r3
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	691b      	ldr	r3, [r3, #16]
 80024c6:	681a      	ldr	r2, [r3, #0]
 80024c8:	460b      	mov	r3, r1
 80024ca:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80024cc:	e09e      	b.n	800260c <BTS7960SetPower+0x348>
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	699b      	ldr	r3, [r3, #24]
 80024d2:	2b0c      	cmp	r3, #12
 80024d4:	d10a      	bne.n	80024ec <BTS7960SetPower+0x228>
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	69db      	ldr	r3, [r3, #28]
 80024da:	4259      	negs	r1, r3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	691b      	ldr	r3, [r3, #16]
 80024e0:	681a      	ldr	r2, [r3, #0]
 80024e2:	460b      	mov	r3, r1
 80024e4:	6413      	str	r3, [r2, #64]	@ 0x40
 80024e6:	e091      	b.n	800260c <BTS7960SetPower+0x348>
 80024e8:	fffff6a1 	.word	0xfffff6a1
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	699b      	ldr	r3, [r3, #24]
 80024f0:	2b10      	cmp	r3, #16
 80024f2:	d108      	bne.n	8002506 <BTS7960SetPower+0x242>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	69db      	ldr	r3, [r3, #28]
 80024f8:	4259      	negs	r1, r3
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	691b      	ldr	r3, [r3, #16]
 80024fe:	681a      	ldr	r2, [r3, #0]
 8002500:	460b      	mov	r3, r1
 8002502:	6593      	str	r3, [r2, #88]	@ 0x58
 8002504:	e082      	b.n	800260c <BTS7960SetPower+0x348>
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	69db      	ldr	r3, [r3, #28]
 800250a:	4259      	negs	r1, r3
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	691b      	ldr	r3, [r3, #16]
 8002510:	681a      	ldr	r2, [r3, #0]
 8002512:	460b      	mov	r3, r1
 8002514:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8002516:	e079      	b.n	800260c <BTS7960SetPower+0x348>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	2101      	movs	r1, #1
 800251c:	4618      	mov	r0, r3
 800251e:	f000 f8e9 	bl	80026f4 <GPIOSetState>
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	3308      	adds	r3, #8
 8002526:	2101      	movs	r1, #1
 8002528:	4618      	mov	r0, r3
 800252a:	f000 f8e3 	bl	80026f4 <GPIOSetState>
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	695b      	ldr	r3, [r3, #20]
 8002532:	2b00      	cmp	r3, #0
 8002534:	d105      	bne.n	8002542 <BTS7960SetPower+0x27e>
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	691b      	ldr	r3, [r3, #16]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	2200      	movs	r2, #0
 800253e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002540:	e02c      	b.n	800259c <BTS7960SetPower+0x2d8>
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	695b      	ldr	r3, [r3, #20]
 8002546:	2b04      	cmp	r3, #4
 8002548:	d105      	bne.n	8002556 <BTS7960SetPower+0x292>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	691b      	ldr	r3, [r3, #16]
 800254e:	681a      	ldr	r2, [r3, #0]
 8002550:	2300      	movs	r3, #0
 8002552:	6393      	str	r3, [r2, #56]	@ 0x38
 8002554:	e022      	b.n	800259c <BTS7960SetPower+0x2d8>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	695b      	ldr	r3, [r3, #20]
 800255a:	2b08      	cmp	r3, #8
 800255c:	d105      	bne.n	800256a <BTS7960SetPower+0x2a6>
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	691b      	ldr	r3, [r3, #16]
 8002562:	681a      	ldr	r2, [r3, #0]
 8002564:	2300      	movs	r3, #0
 8002566:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8002568:	e018      	b.n	800259c <BTS7960SetPower+0x2d8>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	695b      	ldr	r3, [r3, #20]
 800256e:	2b0c      	cmp	r3, #12
 8002570:	d105      	bne.n	800257e <BTS7960SetPower+0x2ba>
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	691b      	ldr	r3, [r3, #16]
 8002576:	681a      	ldr	r2, [r3, #0]
 8002578:	2300      	movs	r3, #0
 800257a:	6413      	str	r3, [r2, #64]	@ 0x40
 800257c:	e00e      	b.n	800259c <BTS7960SetPower+0x2d8>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	695b      	ldr	r3, [r3, #20]
 8002582:	2b10      	cmp	r3, #16
 8002584:	d105      	bne.n	8002592 <BTS7960SetPower+0x2ce>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	691b      	ldr	r3, [r3, #16]
 800258a:	681a      	ldr	r2, [r3, #0]
 800258c:	2300      	movs	r3, #0
 800258e:	6593      	str	r3, [r2, #88]	@ 0x58
 8002590:	e004      	b.n	800259c <BTS7960SetPower+0x2d8>
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	691b      	ldr	r3, [r3, #16]
 8002596:	681a      	ldr	r2, [r3, #0]
 8002598:	2300      	movs	r3, #0
 800259a:	65d3      	str	r3, [r2, #92]	@ 0x5c
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	699b      	ldr	r3, [r3, #24]
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d105      	bne.n	80025b0 <BTS7960SetPower+0x2ec>
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	691b      	ldr	r3, [r3, #16]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	2200      	movs	r2, #0
 80025ac:	635a      	str	r2, [r3, #52]	@ 0x34
 80025ae:	e02d      	b.n	800260c <BTS7960SetPower+0x348>
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	699b      	ldr	r3, [r3, #24]
 80025b4:	2b04      	cmp	r3, #4
 80025b6:	d105      	bne.n	80025c4 <BTS7960SetPower+0x300>
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	691b      	ldr	r3, [r3, #16]
 80025bc:	681a      	ldr	r2, [r3, #0]
 80025be:	2300      	movs	r3, #0
 80025c0:	6393      	str	r3, [r2, #56]	@ 0x38
 80025c2:	e023      	b.n	800260c <BTS7960SetPower+0x348>
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	699b      	ldr	r3, [r3, #24]
 80025c8:	2b08      	cmp	r3, #8
 80025ca:	d105      	bne.n	80025d8 <BTS7960SetPower+0x314>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	691b      	ldr	r3, [r3, #16]
 80025d0:	681a      	ldr	r2, [r3, #0]
 80025d2:	2300      	movs	r3, #0
 80025d4:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80025d6:	e019      	b.n	800260c <BTS7960SetPower+0x348>
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	699b      	ldr	r3, [r3, #24]
 80025dc:	2b0c      	cmp	r3, #12
 80025de:	d105      	bne.n	80025ec <BTS7960SetPower+0x328>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	691b      	ldr	r3, [r3, #16]
 80025e4:	681a      	ldr	r2, [r3, #0]
 80025e6:	2300      	movs	r3, #0
 80025e8:	6413      	str	r3, [r2, #64]	@ 0x40
 80025ea:	e00f      	b.n	800260c <BTS7960SetPower+0x348>
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	699b      	ldr	r3, [r3, #24]
 80025f0:	2b10      	cmp	r3, #16
 80025f2:	d105      	bne.n	8002600 <BTS7960SetPower+0x33c>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	691b      	ldr	r3, [r3, #16]
 80025f8:	681a      	ldr	r2, [r3, #0]
 80025fa:	2300      	movs	r3, #0
 80025fc:	6593      	str	r3, [r2, #88]	@ 0x58
 80025fe:	e005      	b.n	800260c <BTS7960SetPower+0x348>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	691b      	ldr	r3, [r3, #16]
 8002604:	681a      	ldr	r2, [r3, #0]
 8002606:	2300      	movs	r3, #0
 8002608:	65d3      	str	r3, [r2, #92]	@ 0x5c
 800260a:	e7ff      	b.n	800260c <BTS7960SetPower+0x348>
 800260c:	bf00      	nop
 800260e:	3708      	adds	r7, #8
 8002610:	46bd      	mov	sp, r7
 8002612:	bd80      	pop	{r7, pc}

08002614 <BTS7960GetPower>:
 8002614:	b480      	push	{r7}
 8002616:	b083      	sub	sp, #12
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	69db      	ldr	r3, [r3, #28]
 8002620:	4618      	mov	r0, r3
 8002622:	370c      	adds	r7, #12
 8002624:	46bd      	mov	sp, r7
 8002626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800262a:	4770      	bx	lr

0800262c <BTS7960InterfaceInit>:
 800262c:	b480      	push	{r7}
 800262e:	b083      	sub	sp, #12
 8002630:	af00      	add	r7, sp, #0
 8002632:	6078      	str	r0, [r7, #4]
 8002634:	6039      	str	r1, [r7, #0]
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	683a      	ldr	r2, [r7, #0]
 800263a:	601a      	str	r2, [r3, #0]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	4a05      	ldr	r2, [pc, #20]	@ (8002654 <BTS7960InterfaceInit+0x28>)
 8002640:	605a      	str	r2, [r3, #4]
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	4a04      	ldr	r2, [pc, #16]	@ (8002658 <BTS7960InterfaceInit+0x2c>)
 8002646:	609a      	str	r2, [r3, #8]
 8002648:	bf00      	nop
 800264a:	370c      	adds	r7, #12
 800264c:	46bd      	mov	sp, r7
 800264e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002652:	4770      	bx	lr
 8002654:	0800265d 	.word	0x0800265d
 8002658:	08002679 	.word	0x08002679

0800265c <MotorIGetPower>:
 800265c:	b580      	push	{r7, lr}
 800265e:	b082      	sub	sp, #8
 8002660:	af00      	add	r7, sp, #0
 8002662:	6078      	str	r0, [r7, #4]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	4618      	mov	r0, r3
 800266a:	f7ff ffd3 	bl	8002614 <BTS7960GetPower>
 800266e:	4603      	mov	r3, r0
 8002670:	4618      	mov	r0, r3
 8002672:	3708      	adds	r7, #8
 8002674:	46bd      	mov	sp, r7
 8002676:	bd80      	pop	{r7, pc}

08002678 <MotorISetPower>:
 8002678:	b580      	push	{r7, lr}
 800267a:	b082      	sub	sp, #8
 800267c:	af00      	add	r7, sp, #0
 800267e:	6078      	str	r0, [r7, #4]
 8002680:	6039      	str	r1, [r7, #0]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	6839      	ldr	r1, [r7, #0]
 8002688:	4618      	mov	r0, r3
 800268a:	f7ff fe1b 	bl	80022c4 <BTS7960SetPower>
 800268e:	bf00      	nop
 8002690:	3708      	adds	r7, #8
 8002692:	46bd      	mov	sp, r7
 8002694:	bd80      	pop	{r7, pc}

08002696 <GPIOInit>:
 8002696:	b480      	push	{r7}
 8002698:	b085      	sub	sp, #20
 800269a:	af00      	add	r7, sp, #0
 800269c:	60f8      	str	r0, [r7, #12]
 800269e:	60b9      	str	r1, [r7, #8]
 80026a0:	4613      	mov	r3, r2
 80026a2:	80fb      	strh	r3, [r7, #6]
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	68ba      	ldr	r2, [r7, #8]
 80026a8:	601a      	str	r2, [r3, #0]
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	88fa      	ldrh	r2, [r7, #6]
 80026ae:	809a      	strh	r2, [r3, #4]
 80026b0:	bf00      	nop
 80026b2:	3714      	adds	r7, #20
 80026b4:	46bd      	mov	sp, r7
 80026b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026ba:	4770      	bx	lr

080026bc <GPIOGetState>:
 80026bc:	b580      	push	{r7, lr}
 80026be:	b082      	sub	sp, #8
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d00e      	beq.n	80026ea <GPIOGetState+0x2e>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681a      	ldr	r2, [r3, #0]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	889b      	ldrh	r3, [r3, #4]
 80026d4:	4619      	mov	r1, r3
 80026d6:	4610      	mov	r0, r2
 80026d8:	f000 fb68 	bl	8002dac <HAL_GPIO_ReadPin>
 80026dc:	4603      	mov	r3, r0
 80026de:	2b01      	cmp	r3, #1
 80026e0:	bf14      	ite	ne
 80026e2:	2301      	movne	r3, #1
 80026e4:	2300      	moveq	r3, #0
 80026e6:	b2db      	uxtb	r3, r3
 80026e8:	e000      	b.n	80026ec <GPIOGetState+0x30>
 80026ea:	2301      	movs	r3, #1
 80026ec:	4618      	mov	r0, r3
 80026ee:	3708      	adds	r7, #8
 80026f0:	46bd      	mov	sp, r7
 80026f2:	bd80      	pop	{r7, pc}

080026f4 <GPIOSetState>:
 80026f4:	b580      	push	{r7, lr}
 80026f6:	b082      	sub	sp, #8
 80026f8:	af00      	add	r7, sp, #0
 80026fa:	6078      	str	r0, [r7, #4]
 80026fc:	460b      	mov	r3, r1
 80026fe:	70fb      	strb	r3, [r7, #3]
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	2b00      	cmp	r3, #0
 8002706:	d00c      	beq.n	8002722 <GPIOSetState+0x2e>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	6818      	ldr	r0, [r3, #0]
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	8899      	ldrh	r1, [r3, #4]
 8002710:	78fb      	ldrb	r3, [r7, #3]
 8002712:	2b00      	cmp	r3, #0
 8002714:	bf0c      	ite	eq
 8002716:	2301      	moveq	r3, #1
 8002718:	2300      	movne	r3, #0
 800271a:	b2db      	uxtb	r3, r3
 800271c:	461a      	mov	r2, r3
 800271e:	f000 fb5d 	bl	8002ddc <HAL_GPIO_WritePin>
 8002722:	bf00      	nop
 8002724:	3708      	adds	r7, #8
 8002726:	46bd      	mov	sp, r7
 8002728:	bd80      	pop	{r7, pc}
	...

0800272c <Reset_Handler>:
 800272c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002764 <LoopForever+0x2>
 8002730:	f7ff fd00 	bl	8002134 <SystemInit>
 8002734:	480c      	ldr	r0, [pc, #48]	@ (8002768 <LoopForever+0x6>)
 8002736:	490d      	ldr	r1, [pc, #52]	@ (800276c <LoopForever+0xa>)
 8002738:	4a0d      	ldr	r2, [pc, #52]	@ (8002770 <LoopForever+0xe>)
 800273a:	2300      	movs	r3, #0
 800273c:	e002      	b.n	8002744 <LoopCopyDataInit>

0800273e <CopyDataInit>:
 800273e:	58d4      	ldr	r4, [r2, r3]
 8002740:	50c4      	str	r4, [r0, r3]
 8002742:	3304      	adds	r3, #4

08002744 <LoopCopyDataInit>:
 8002744:	18c4      	adds	r4, r0, r3
 8002746:	428c      	cmp	r4, r1
 8002748:	d3f9      	bcc.n	800273e <CopyDataInit>
 800274a:	4a0a      	ldr	r2, [pc, #40]	@ (8002774 <LoopForever+0x12>)
 800274c:	4c0a      	ldr	r4, [pc, #40]	@ (8002778 <LoopForever+0x16>)
 800274e:	2300      	movs	r3, #0
 8002750:	e001      	b.n	8002756 <LoopFillZerobss>

08002752 <FillZerobss>:
 8002752:	6013      	str	r3, [r2, #0]
 8002754:	3204      	adds	r2, #4

08002756 <LoopFillZerobss>:
 8002756:	42a2      	cmp	r2, r4
 8002758:	d3fb      	bcc.n	8002752 <FillZerobss>
 800275a:	f00b f8b7 	bl	800d8cc <__libc_init_array>
 800275e:	f7fe fee5 	bl	800152c <main>

08002762 <LoopForever>:
 8002762:	e7fe      	b.n	8002762 <LoopForever>
 8002764:	2000a000 	.word	0x2000a000
 8002768:	20000000 	.word	0x20000000
 800276c:	2000032c 	.word	0x2000032c
 8002770:	0800f970 	.word	0x0800f970
 8002774:	2000032c 	.word	0x2000032c
 8002778:	200010d8 	.word	0x200010d8

0800277c <ADC1_2_IRQHandler>:
 800277c:	e7fe      	b.n	800277c <ADC1_2_IRQHandler>
	...

08002780 <HAL_Init>:
 8002780:	b580      	push	{r7, lr}
 8002782:	af00      	add	r7, sp, #0
 8002784:	4b08      	ldr	r3, [pc, #32]	@ (80027a8 <HAL_Init+0x28>)
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	4a07      	ldr	r2, [pc, #28]	@ (80027a8 <HAL_Init+0x28>)
 800278a:	f043 0310 	orr.w	r3, r3, #16
 800278e:	6013      	str	r3, [r2, #0]
 8002790:	2003      	movs	r0, #3
 8002792:	f000 f94f 	bl	8002a34 <HAL_NVIC_SetPriorityGrouping>
 8002796:	2000      	movs	r0, #0
 8002798:	f000 f808 	bl	80027ac <HAL_InitTick>
 800279c:	f7ff f9de 	bl	8001b5c <HAL_MspInit>
 80027a0:	2300      	movs	r3, #0
 80027a2:	4618      	mov	r0, r3
 80027a4:	bd80      	pop	{r7, pc}
 80027a6:	bf00      	nop
 80027a8:	40022000 	.word	0x40022000

080027ac <HAL_InitTick>:
 80027ac:	b580      	push	{r7, lr}
 80027ae:	b082      	sub	sp, #8
 80027b0:	af00      	add	r7, sp, #0
 80027b2:	6078      	str	r0, [r7, #4]
 80027b4:	4b12      	ldr	r3, [pc, #72]	@ (8002800 <HAL_InitTick+0x54>)
 80027b6:	681a      	ldr	r2, [r3, #0]
 80027b8:	4b12      	ldr	r3, [pc, #72]	@ (8002804 <HAL_InitTick+0x58>)
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	4619      	mov	r1, r3
 80027be:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80027c2:	fbb3 f3f1 	udiv	r3, r3, r1
 80027c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80027ca:	4618      	mov	r0, r3
 80027cc:	f000 f967 	bl	8002a9e <HAL_SYSTICK_Config>
 80027d0:	4603      	mov	r3, r0
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	d001      	beq.n	80027da <HAL_InitTick+0x2e>
 80027d6:	2301      	movs	r3, #1
 80027d8:	e00e      	b.n	80027f8 <HAL_InitTick+0x4c>
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	2b0f      	cmp	r3, #15
 80027de:	d80a      	bhi.n	80027f6 <HAL_InitTick+0x4a>
 80027e0:	2200      	movs	r2, #0
 80027e2:	6879      	ldr	r1, [r7, #4]
 80027e4:	f04f 30ff 	mov.w	r0, #4294967295
 80027e8:	f000 f92f 	bl	8002a4a <HAL_NVIC_SetPriority>
 80027ec:	4a06      	ldr	r2, [pc, #24]	@ (8002808 <HAL_InitTick+0x5c>)
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	6013      	str	r3, [r2, #0]
 80027f2:	2300      	movs	r3, #0
 80027f4:	e000      	b.n	80027f8 <HAL_InitTick+0x4c>
 80027f6:	2301      	movs	r3, #1
 80027f8:	4618      	mov	r0, r3
 80027fa:	3708      	adds	r7, #8
 80027fc:	46bd      	mov	sp, r7
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	20000000 	.word	0x20000000
 8002804:	20000008 	.word	0x20000008
 8002808:	20000004 	.word	0x20000004

0800280c <HAL_IncTick>:
 800280c:	b480      	push	{r7}
 800280e:	af00      	add	r7, sp, #0
 8002810:	4b06      	ldr	r3, [pc, #24]	@ (800282c <HAL_IncTick+0x20>)
 8002812:	781b      	ldrb	r3, [r3, #0]
 8002814:	461a      	mov	r2, r3
 8002816:	4b06      	ldr	r3, [pc, #24]	@ (8002830 <HAL_IncTick+0x24>)
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	4413      	add	r3, r2
 800281c:	4a04      	ldr	r2, [pc, #16]	@ (8002830 <HAL_IncTick+0x24>)
 800281e:	6013      	str	r3, [r2, #0]
 8002820:	bf00      	nop
 8002822:	46bd      	mov	sp, r7
 8002824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002828:	4770      	bx	lr
 800282a:	bf00      	nop
 800282c:	20000008 	.word	0x20000008
 8002830:	200007c4 	.word	0x200007c4

08002834 <HAL_GetTick>:
 8002834:	b480      	push	{r7}
 8002836:	af00      	add	r7, sp, #0
 8002838:	4b03      	ldr	r3, [pc, #12]	@ (8002848 <HAL_GetTick+0x14>)
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	4618      	mov	r0, r3
 800283e:	46bd      	mov	sp, r7
 8002840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002844:	4770      	bx	lr
 8002846:	bf00      	nop
 8002848:	200007c4 	.word	0x200007c4

0800284c <HAL_Delay>:
 800284c:	b580      	push	{r7, lr}
 800284e:	b084      	sub	sp, #16
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]
 8002854:	f7ff ffee 	bl	8002834 <HAL_GetTick>
 8002858:	60b8      	str	r0, [r7, #8]
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	60fb      	str	r3, [r7, #12]
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002864:	d005      	beq.n	8002872 <HAL_Delay+0x26>
 8002866:	4b0a      	ldr	r3, [pc, #40]	@ (8002890 <HAL_Delay+0x44>)
 8002868:	781b      	ldrb	r3, [r3, #0]
 800286a:	461a      	mov	r2, r3
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	4413      	add	r3, r2
 8002870:	60fb      	str	r3, [r7, #12]
 8002872:	bf00      	nop
 8002874:	f7ff ffde 	bl	8002834 <HAL_GetTick>
 8002878:	4602      	mov	r2, r0
 800287a:	68bb      	ldr	r3, [r7, #8]
 800287c:	1ad3      	subs	r3, r2, r3
 800287e:	68fa      	ldr	r2, [r7, #12]
 8002880:	429a      	cmp	r2, r3
 8002882:	d8f7      	bhi.n	8002874 <HAL_Delay+0x28>
 8002884:	bf00      	nop
 8002886:	bf00      	nop
 8002888:	3710      	adds	r7, #16
 800288a:	46bd      	mov	sp, r7
 800288c:	bd80      	pop	{r7, pc}
 800288e:	bf00      	nop
 8002890:	20000008 	.word	0x20000008

08002894 <__NVIC_SetPriorityGrouping>:
 8002894:	b480      	push	{r7}
 8002896:	b085      	sub	sp, #20
 8002898:	af00      	add	r7, sp, #0
 800289a:	6078      	str	r0, [r7, #4]
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	f003 0307 	and.w	r3, r3, #7
 80028a2:	60fb      	str	r3, [r7, #12]
 80028a4:	4b0c      	ldr	r3, [pc, #48]	@ (80028d8 <__NVIC_SetPriorityGrouping+0x44>)
 80028a6:	68db      	ldr	r3, [r3, #12]
 80028a8:	60bb      	str	r3, [r7, #8]
 80028aa:	68ba      	ldr	r2, [r7, #8]
 80028ac:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80028b0:	4013      	ands	r3, r2
 80028b2:	60bb      	str	r3, [r7, #8]
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	021a      	lsls	r2, r3, #8
 80028b8:	68bb      	ldr	r3, [r7, #8]
 80028ba:	4313      	orrs	r3, r2
 80028bc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80028c0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80028c4:	60bb      	str	r3, [r7, #8]
 80028c6:	4a04      	ldr	r2, [pc, #16]	@ (80028d8 <__NVIC_SetPriorityGrouping+0x44>)
 80028c8:	68bb      	ldr	r3, [r7, #8]
 80028ca:	60d3      	str	r3, [r2, #12]
 80028cc:	bf00      	nop
 80028ce:	3714      	adds	r7, #20
 80028d0:	46bd      	mov	sp, r7
 80028d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d6:	4770      	bx	lr
 80028d8:	e000ed00 	.word	0xe000ed00

080028dc <__NVIC_GetPriorityGrouping>:
 80028dc:	b480      	push	{r7}
 80028de:	af00      	add	r7, sp, #0
 80028e0:	4b04      	ldr	r3, [pc, #16]	@ (80028f4 <__NVIC_GetPriorityGrouping+0x18>)
 80028e2:	68db      	ldr	r3, [r3, #12]
 80028e4:	0a1b      	lsrs	r3, r3, #8
 80028e6:	f003 0307 	and.w	r3, r3, #7
 80028ea:	4618      	mov	r0, r3
 80028ec:	46bd      	mov	sp, r7
 80028ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f2:	4770      	bx	lr
 80028f4:	e000ed00 	.word	0xe000ed00

080028f8 <__NVIC_EnableIRQ>:
 80028f8:	b480      	push	{r7}
 80028fa:	b083      	sub	sp, #12
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	4603      	mov	r3, r0
 8002900:	71fb      	strb	r3, [r7, #7]
 8002902:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002906:	2b00      	cmp	r3, #0
 8002908:	db0b      	blt.n	8002922 <__NVIC_EnableIRQ+0x2a>
 800290a:	79fb      	ldrb	r3, [r7, #7]
 800290c:	f003 021f 	and.w	r2, r3, #31
 8002910:	4907      	ldr	r1, [pc, #28]	@ (8002930 <__NVIC_EnableIRQ+0x38>)
 8002912:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002916:	095b      	lsrs	r3, r3, #5
 8002918:	2001      	movs	r0, #1
 800291a:	fa00 f202 	lsl.w	r2, r0, r2
 800291e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002922:	bf00      	nop
 8002924:	370c      	adds	r7, #12
 8002926:	46bd      	mov	sp, r7
 8002928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800292c:	4770      	bx	lr
 800292e:	bf00      	nop
 8002930:	e000e100 	.word	0xe000e100

08002934 <__NVIC_SetPriority>:
 8002934:	b480      	push	{r7}
 8002936:	b083      	sub	sp, #12
 8002938:	af00      	add	r7, sp, #0
 800293a:	4603      	mov	r3, r0
 800293c:	6039      	str	r1, [r7, #0]
 800293e:	71fb      	strb	r3, [r7, #7]
 8002940:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002944:	2b00      	cmp	r3, #0
 8002946:	db0a      	blt.n	800295e <__NVIC_SetPriority+0x2a>
 8002948:	683b      	ldr	r3, [r7, #0]
 800294a:	b2da      	uxtb	r2, r3
 800294c:	490c      	ldr	r1, [pc, #48]	@ (8002980 <__NVIC_SetPriority+0x4c>)
 800294e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002952:	0112      	lsls	r2, r2, #4
 8002954:	b2d2      	uxtb	r2, r2
 8002956:	440b      	add	r3, r1
 8002958:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800295c:	e00a      	b.n	8002974 <__NVIC_SetPriority+0x40>
 800295e:	683b      	ldr	r3, [r7, #0]
 8002960:	b2da      	uxtb	r2, r3
 8002962:	4908      	ldr	r1, [pc, #32]	@ (8002984 <__NVIC_SetPriority+0x50>)
 8002964:	79fb      	ldrb	r3, [r7, #7]
 8002966:	f003 030f 	and.w	r3, r3, #15
 800296a:	3b04      	subs	r3, #4
 800296c:	0112      	lsls	r2, r2, #4
 800296e:	b2d2      	uxtb	r2, r2
 8002970:	440b      	add	r3, r1
 8002972:	761a      	strb	r2, [r3, #24]
 8002974:	bf00      	nop
 8002976:	370c      	adds	r7, #12
 8002978:	46bd      	mov	sp, r7
 800297a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800297e:	4770      	bx	lr
 8002980:	e000e100 	.word	0xe000e100
 8002984:	e000ed00 	.word	0xe000ed00

08002988 <NVIC_EncodePriority>:
 8002988:	b480      	push	{r7}
 800298a:	b089      	sub	sp, #36	@ 0x24
 800298c:	af00      	add	r7, sp, #0
 800298e:	60f8      	str	r0, [r7, #12]
 8002990:	60b9      	str	r1, [r7, #8]
 8002992:	607a      	str	r2, [r7, #4]
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	f003 0307 	and.w	r3, r3, #7
 800299a:	61fb      	str	r3, [r7, #28]
 800299c:	69fb      	ldr	r3, [r7, #28]
 800299e:	f1c3 0307 	rsb	r3, r3, #7
 80029a2:	2b04      	cmp	r3, #4
 80029a4:	bf28      	it	cs
 80029a6:	2304      	movcs	r3, #4
 80029a8:	61bb      	str	r3, [r7, #24]
 80029aa:	69fb      	ldr	r3, [r7, #28]
 80029ac:	3304      	adds	r3, #4
 80029ae:	2b06      	cmp	r3, #6
 80029b0:	d902      	bls.n	80029b8 <NVIC_EncodePriority+0x30>
 80029b2:	69fb      	ldr	r3, [r7, #28]
 80029b4:	3b03      	subs	r3, #3
 80029b6:	e000      	b.n	80029ba <NVIC_EncodePriority+0x32>
 80029b8:	2300      	movs	r3, #0
 80029ba:	617b      	str	r3, [r7, #20]
 80029bc:	f04f 32ff 	mov.w	r2, #4294967295
 80029c0:	69bb      	ldr	r3, [r7, #24]
 80029c2:	fa02 f303 	lsl.w	r3, r2, r3
 80029c6:	43da      	mvns	r2, r3
 80029c8:	68bb      	ldr	r3, [r7, #8]
 80029ca:	401a      	ands	r2, r3
 80029cc:	697b      	ldr	r3, [r7, #20]
 80029ce:	409a      	lsls	r2, r3
 80029d0:	f04f 31ff 	mov.w	r1, #4294967295
 80029d4:	697b      	ldr	r3, [r7, #20]
 80029d6:	fa01 f303 	lsl.w	r3, r1, r3
 80029da:	43d9      	mvns	r1, r3
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	400b      	ands	r3, r1
 80029e0:	4313      	orrs	r3, r2
 80029e2:	4618      	mov	r0, r3
 80029e4:	3724      	adds	r7, #36	@ 0x24
 80029e6:	46bd      	mov	sp, r7
 80029e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ec:	4770      	bx	lr
	...

080029f0 <SysTick_Config>:
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b082      	sub	sp, #8
 80029f4:	af00      	add	r7, sp, #0
 80029f6:	6078      	str	r0, [r7, #4]
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	3b01      	subs	r3, #1
 80029fc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002a00:	d301      	bcc.n	8002a06 <SysTick_Config+0x16>
 8002a02:	2301      	movs	r3, #1
 8002a04:	e00f      	b.n	8002a26 <SysTick_Config+0x36>
 8002a06:	4a0a      	ldr	r2, [pc, #40]	@ (8002a30 <SysTick_Config+0x40>)
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	3b01      	subs	r3, #1
 8002a0c:	6053      	str	r3, [r2, #4]
 8002a0e:	210f      	movs	r1, #15
 8002a10:	f04f 30ff 	mov.w	r0, #4294967295
 8002a14:	f7ff ff8e 	bl	8002934 <__NVIC_SetPriority>
 8002a18:	4b05      	ldr	r3, [pc, #20]	@ (8002a30 <SysTick_Config+0x40>)
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	4b04      	ldr	r3, [pc, #16]	@ (8002a30 <SysTick_Config+0x40>)
 8002a20:	2207      	movs	r2, #7
 8002a22:	601a      	str	r2, [r3, #0]
 8002a24:	2300      	movs	r3, #0
 8002a26:	4618      	mov	r0, r3
 8002a28:	3708      	adds	r7, #8
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bd80      	pop	{r7, pc}
 8002a2e:	bf00      	nop
 8002a30:	e000e010 	.word	0xe000e010

08002a34 <HAL_NVIC_SetPriorityGrouping>:
 8002a34:	b580      	push	{r7, lr}
 8002a36:	b082      	sub	sp, #8
 8002a38:	af00      	add	r7, sp, #0
 8002a3a:	6078      	str	r0, [r7, #4]
 8002a3c:	6878      	ldr	r0, [r7, #4]
 8002a3e:	f7ff ff29 	bl	8002894 <__NVIC_SetPriorityGrouping>
 8002a42:	bf00      	nop
 8002a44:	3708      	adds	r7, #8
 8002a46:	46bd      	mov	sp, r7
 8002a48:	bd80      	pop	{r7, pc}

08002a4a <HAL_NVIC_SetPriority>:
 8002a4a:	b580      	push	{r7, lr}
 8002a4c:	b086      	sub	sp, #24
 8002a4e:	af00      	add	r7, sp, #0
 8002a50:	4603      	mov	r3, r0
 8002a52:	60b9      	str	r1, [r7, #8]
 8002a54:	607a      	str	r2, [r7, #4]
 8002a56:	73fb      	strb	r3, [r7, #15]
 8002a58:	2300      	movs	r3, #0
 8002a5a:	617b      	str	r3, [r7, #20]
 8002a5c:	f7ff ff3e 	bl	80028dc <__NVIC_GetPriorityGrouping>
 8002a60:	6178      	str	r0, [r7, #20]
 8002a62:	687a      	ldr	r2, [r7, #4]
 8002a64:	68b9      	ldr	r1, [r7, #8]
 8002a66:	6978      	ldr	r0, [r7, #20]
 8002a68:	f7ff ff8e 	bl	8002988 <NVIC_EncodePriority>
 8002a6c:	4602      	mov	r2, r0
 8002a6e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002a72:	4611      	mov	r1, r2
 8002a74:	4618      	mov	r0, r3
 8002a76:	f7ff ff5d 	bl	8002934 <__NVIC_SetPriority>
 8002a7a:	bf00      	nop
 8002a7c:	3718      	adds	r7, #24
 8002a7e:	46bd      	mov	sp, r7
 8002a80:	bd80      	pop	{r7, pc}

08002a82 <HAL_NVIC_EnableIRQ>:
 8002a82:	b580      	push	{r7, lr}
 8002a84:	b082      	sub	sp, #8
 8002a86:	af00      	add	r7, sp, #0
 8002a88:	4603      	mov	r3, r0
 8002a8a:	71fb      	strb	r3, [r7, #7]
 8002a8c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a90:	4618      	mov	r0, r3
 8002a92:	f7ff ff31 	bl	80028f8 <__NVIC_EnableIRQ>
 8002a96:	bf00      	nop
 8002a98:	3708      	adds	r7, #8
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	bd80      	pop	{r7, pc}

08002a9e <HAL_SYSTICK_Config>:
 8002a9e:	b580      	push	{r7, lr}
 8002aa0:	b082      	sub	sp, #8
 8002aa2:	af00      	add	r7, sp, #0
 8002aa4:	6078      	str	r0, [r7, #4]
 8002aa6:	6878      	ldr	r0, [r7, #4]
 8002aa8:	f7ff ffa2 	bl	80029f0 <SysTick_Config>
 8002aac:	4603      	mov	r3, r0
 8002aae:	4618      	mov	r0, r3
 8002ab0:	3708      	adds	r7, #8
 8002ab2:	46bd      	mov	sp, r7
 8002ab4:	bd80      	pop	{r7, pc}
	...

08002ab8 <HAL_GPIO_Init>:
 8002ab8:	b480      	push	{r7}
 8002aba:	b087      	sub	sp, #28
 8002abc:	af00      	add	r7, sp, #0
 8002abe:	6078      	str	r0, [r7, #4]
 8002ac0:	6039      	str	r1, [r7, #0]
 8002ac2:	2300      	movs	r3, #0
 8002ac4:	617b      	str	r3, [r7, #20]
 8002ac6:	e154      	b.n	8002d72 <HAL_GPIO_Init+0x2ba>
 8002ac8:	683b      	ldr	r3, [r7, #0]
 8002aca:	681a      	ldr	r2, [r3, #0]
 8002acc:	2101      	movs	r1, #1
 8002ace:	697b      	ldr	r3, [r7, #20]
 8002ad0:	fa01 f303 	lsl.w	r3, r1, r3
 8002ad4:	4013      	ands	r3, r2
 8002ad6:	60fb      	str	r3, [r7, #12]
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	f000 8146 	beq.w	8002d6c <HAL_GPIO_Init+0x2b4>
 8002ae0:	683b      	ldr	r3, [r7, #0]
 8002ae2:	685b      	ldr	r3, [r3, #4]
 8002ae4:	f003 0303 	and.w	r3, r3, #3
 8002ae8:	2b01      	cmp	r3, #1
 8002aea:	d005      	beq.n	8002af8 <HAL_GPIO_Init+0x40>
 8002aec:	683b      	ldr	r3, [r7, #0]
 8002aee:	685b      	ldr	r3, [r3, #4]
 8002af0:	f003 0303 	and.w	r3, r3, #3
 8002af4:	2b02      	cmp	r3, #2
 8002af6:	d130      	bne.n	8002b5a <HAL_GPIO_Init+0xa2>
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	689b      	ldr	r3, [r3, #8]
 8002afc:	613b      	str	r3, [r7, #16]
 8002afe:	697b      	ldr	r3, [r7, #20]
 8002b00:	005b      	lsls	r3, r3, #1
 8002b02:	2203      	movs	r2, #3
 8002b04:	fa02 f303 	lsl.w	r3, r2, r3
 8002b08:	43db      	mvns	r3, r3
 8002b0a:	693a      	ldr	r2, [r7, #16]
 8002b0c:	4013      	ands	r3, r2
 8002b0e:	613b      	str	r3, [r7, #16]
 8002b10:	683b      	ldr	r3, [r7, #0]
 8002b12:	68da      	ldr	r2, [r3, #12]
 8002b14:	697b      	ldr	r3, [r7, #20]
 8002b16:	005b      	lsls	r3, r3, #1
 8002b18:	fa02 f303 	lsl.w	r3, r2, r3
 8002b1c:	693a      	ldr	r2, [r7, #16]
 8002b1e:	4313      	orrs	r3, r2
 8002b20:	613b      	str	r3, [r7, #16]
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	693a      	ldr	r2, [r7, #16]
 8002b26:	609a      	str	r2, [r3, #8]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	685b      	ldr	r3, [r3, #4]
 8002b2c:	613b      	str	r3, [r7, #16]
 8002b2e:	2201      	movs	r2, #1
 8002b30:	697b      	ldr	r3, [r7, #20]
 8002b32:	fa02 f303 	lsl.w	r3, r2, r3
 8002b36:	43db      	mvns	r3, r3
 8002b38:	693a      	ldr	r2, [r7, #16]
 8002b3a:	4013      	ands	r3, r2
 8002b3c:	613b      	str	r3, [r7, #16]
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	091b      	lsrs	r3, r3, #4
 8002b44:	f003 0201 	and.w	r2, r3, #1
 8002b48:	697b      	ldr	r3, [r7, #20]
 8002b4a:	fa02 f303 	lsl.w	r3, r2, r3
 8002b4e:	693a      	ldr	r2, [r7, #16]
 8002b50:	4313      	orrs	r3, r2
 8002b52:	613b      	str	r3, [r7, #16]
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	693a      	ldr	r2, [r7, #16]
 8002b58:	605a      	str	r2, [r3, #4]
 8002b5a:	683b      	ldr	r3, [r7, #0]
 8002b5c:	685b      	ldr	r3, [r3, #4]
 8002b5e:	f003 0303 	and.w	r3, r3, #3
 8002b62:	2b03      	cmp	r3, #3
 8002b64:	d017      	beq.n	8002b96 <HAL_GPIO_Init+0xde>
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	68db      	ldr	r3, [r3, #12]
 8002b6a:	613b      	str	r3, [r7, #16]
 8002b6c:	697b      	ldr	r3, [r7, #20]
 8002b6e:	005b      	lsls	r3, r3, #1
 8002b70:	2203      	movs	r2, #3
 8002b72:	fa02 f303 	lsl.w	r3, r2, r3
 8002b76:	43db      	mvns	r3, r3
 8002b78:	693a      	ldr	r2, [r7, #16]
 8002b7a:	4013      	ands	r3, r2
 8002b7c:	613b      	str	r3, [r7, #16]
 8002b7e:	683b      	ldr	r3, [r7, #0]
 8002b80:	689a      	ldr	r2, [r3, #8]
 8002b82:	697b      	ldr	r3, [r7, #20]
 8002b84:	005b      	lsls	r3, r3, #1
 8002b86:	fa02 f303 	lsl.w	r3, r2, r3
 8002b8a:	693a      	ldr	r2, [r7, #16]
 8002b8c:	4313      	orrs	r3, r2
 8002b8e:	613b      	str	r3, [r7, #16]
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	693a      	ldr	r2, [r7, #16]
 8002b94:	60da      	str	r2, [r3, #12]
 8002b96:	683b      	ldr	r3, [r7, #0]
 8002b98:	685b      	ldr	r3, [r3, #4]
 8002b9a:	f003 0303 	and.w	r3, r3, #3
 8002b9e:	2b02      	cmp	r3, #2
 8002ba0:	d123      	bne.n	8002bea <HAL_GPIO_Init+0x132>
 8002ba2:	697b      	ldr	r3, [r7, #20]
 8002ba4:	08da      	lsrs	r2, r3, #3
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	3208      	adds	r2, #8
 8002baa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002bae:	613b      	str	r3, [r7, #16]
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	f003 0307 	and.w	r3, r3, #7
 8002bb6:	009b      	lsls	r3, r3, #2
 8002bb8:	220f      	movs	r2, #15
 8002bba:	fa02 f303 	lsl.w	r3, r2, r3
 8002bbe:	43db      	mvns	r3, r3
 8002bc0:	693a      	ldr	r2, [r7, #16]
 8002bc2:	4013      	ands	r3, r2
 8002bc4:	613b      	str	r3, [r7, #16]
 8002bc6:	683b      	ldr	r3, [r7, #0]
 8002bc8:	691a      	ldr	r2, [r3, #16]
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	f003 0307 	and.w	r3, r3, #7
 8002bd0:	009b      	lsls	r3, r3, #2
 8002bd2:	fa02 f303 	lsl.w	r3, r2, r3
 8002bd6:	693a      	ldr	r2, [r7, #16]
 8002bd8:	4313      	orrs	r3, r2
 8002bda:	613b      	str	r3, [r7, #16]
 8002bdc:	697b      	ldr	r3, [r7, #20]
 8002bde:	08da      	lsrs	r2, r3, #3
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	3208      	adds	r2, #8
 8002be4:	6939      	ldr	r1, [r7, #16]
 8002be6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	613b      	str	r3, [r7, #16]
 8002bf0:	697b      	ldr	r3, [r7, #20]
 8002bf2:	005b      	lsls	r3, r3, #1
 8002bf4:	2203      	movs	r2, #3
 8002bf6:	fa02 f303 	lsl.w	r3, r2, r3
 8002bfa:	43db      	mvns	r3, r3
 8002bfc:	693a      	ldr	r2, [r7, #16]
 8002bfe:	4013      	ands	r3, r2
 8002c00:	613b      	str	r3, [r7, #16]
 8002c02:	683b      	ldr	r3, [r7, #0]
 8002c04:	685b      	ldr	r3, [r3, #4]
 8002c06:	f003 0203 	and.w	r2, r3, #3
 8002c0a:	697b      	ldr	r3, [r7, #20]
 8002c0c:	005b      	lsls	r3, r3, #1
 8002c0e:	fa02 f303 	lsl.w	r3, r2, r3
 8002c12:	693a      	ldr	r2, [r7, #16]
 8002c14:	4313      	orrs	r3, r2
 8002c16:	613b      	str	r3, [r7, #16]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	693a      	ldr	r2, [r7, #16]
 8002c1c:	601a      	str	r2, [r3, #0]
 8002c1e:	683b      	ldr	r3, [r7, #0]
 8002c20:	685b      	ldr	r3, [r3, #4]
 8002c22:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	f000 80a0 	beq.w	8002d6c <HAL_GPIO_Init+0x2b4>
 8002c2c:	4b58      	ldr	r3, [pc, #352]	@ (8002d90 <HAL_GPIO_Init+0x2d8>)
 8002c2e:	699b      	ldr	r3, [r3, #24]
 8002c30:	4a57      	ldr	r2, [pc, #348]	@ (8002d90 <HAL_GPIO_Init+0x2d8>)
 8002c32:	f043 0301 	orr.w	r3, r3, #1
 8002c36:	6193      	str	r3, [r2, #24]
 8002c38:	4b55      	ldr	r3, [pc, #340]	@ (8002d90 <HAL_GPIO_Init+0x2d8>)
 8002c3a:	699b      	ldr	r3, [r3, #24]
 8002c3c:	f003 0301 	and.w	r3, r3, #1
 8002c40:	60bb      	str	r3, [r7, #8]
 8002c42:	68bb      	ldr	r3, [r7, #8]
 8002c44:	4a53      	ldr	r2, [pc, #332]	@ (8002d94 <HAL_GPIO_Init+0x2dc>)
 8002c46:	697b      	ldr	r3, [r7, #20]
 8002c48:	089b      	lsrs	r3, r3, #2
 8002c4a:	3302      	adds	r3, #2
 8002c4c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002c50:	613b      	str	r3, [r7, #16]
 8002c52:	697b      	ldr	r3, [r7, #20]
 8002c54:	f003 0303 	and.w	r3, r3, #3
 8002c58:	009b      	lsls	r3, r3, #2
 8002c5a:	220f      	movs	r2, #15
 8002c5c:	fa02 f303 	lsl.w	r3, r2, r3
 8002c60:	43db      	mvns	r3, r3
 8002c62:	693a      	ldr	r2, [r7, #16]
 8002c64:	4013      	ands	r3, r2
 8002c66:	613b      	str	r3, [r7, #16]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8002c6e:	d019      	beq.n	8002ca4 <HAL_GPIO_Init+0x1ec>
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	4a49      	ldr	r2, [pc, #292]	@ (8002d98 <HAL_GPIO_Init+0x2e0>)
 8002c74:	4293      	cmp	r3, r2
 8002c76:	d013      	beq.n	8002ca0 <HAL_GPIO_Init+0x1e8>
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	4a48      	ldr	r2, [pc, #288]	@ (8002d9c <HAL_GPIO_Init+0x2e4>)
 8002c7c:	4293      	cmp	r3, r2
 8002c7e:	d00d      	beq.n	8002c9c <HAL_GPIO_Init+0x1e4>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	4a47      	ldr	r2, [pc, #284]	@ (8002da0 <HAL_GPIO_Init+0x2e8>)
 8002c84:	4293      	cmp	r3, r2
 8002c86:	d007      	beq.n	8002c98 <HAL_GPIO_Init+0x1e0>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	4a46      	ldr	r2, [pc, #280]	@ (8002da4 <HAL_GPIO_Init+0x2ec>)
 8002c8c:	4293      	cmp	r3, r2
 8002c8e:	d101      	bne.n	8002c94 <HAL_GPIO_Init+0x1dc>
 8002c90:	2304      	movs	r3, #4
 8002c92:	e008      	b.n	8002ca6 <HAL_GPIO_Init+0x1ee>
 8002c94:	2305      	movs	r3, #5
 8002c96:	e006      	b.n	8002ca6 <HAL_GPIO_Init+0x1ee>
 8002c98:	2303      	movs	r3, #3
 8002c9a:	e004      	b.n	8002ca6 <HAL_GPIO_Init+0x1ee>
 8002c9c:	2302      	movs	r3, #2
 8002c9e:	e002      	b.n	8002ca6 <HAL_GPIO_Init+0x1ee>
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	e000      	b.n	8002ca6 <HAL_GPIO_Init+0x1ee>
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	697a      	ldr	r2, [r7, #20]
 8002ca8:	f002 0203 	and.w	r2, r2, #3
 8002cac:	0092      	lsls	r2, r2, #2
 8002cae:	4093      	lsls	r3, r2
 8002cb0:	693a      	ldr	r2, [r7, #16]
 8002cb2:	4313      	orrs	r3, r2
 8002cb4:	613b      	str	r3, [r7, #16]
 8002cb6:	4937      	ldr	r1, [pc, #220]	@ (8002d94 <HAL_GPIO_Init+0x2dc>)
 8002cb8:	697b      	ldr	r3, [r7, #20]
 8002cba:	089b      	lsrs	r3, r3, #2
 8002cbc:	3302      	adds	r3, #2
 8002cbe:	693a      	ldr	r2, [r7, #16]
 8002cc0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002cc4:	4b38      	ldr	r3, [pc, #224]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002cc6:	689b      	ldr	r3, [r3, #8]
 8002cc8:	613b      	str	r3, [r7, #16]
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	43db      	mvns	r3, r3
 8002cce:	693a      	ldr	r2, [r7, #16]
 8002cd0:	4013      	ands	r3, r2
 8002cd2:	613b      	str	r3, [r7, #16]
 8002cd4:	683b      	ldr	r3, [r7, #0]
 8002cd6:	685b      	ldr	r3, [r3, #4]
 8002cd8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d003      	beq.n	8002ce8 <HAL_GPIO_Init+0x230>
 8002ce0:	693a      	ldr	r2, [r7, #16]
 8002ce2:	68fb      	ldr	r3, [r7, #12]
 8002ce4:	4313      	orrs	r3, r2
 8002ce6:	613b      	str	r3, [r7, #16]
 8002ce8:	4a2f      	ldr	r2, [pc, #188]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002cea:	693b      	ldr	r3, [r7, #16]
 8002cec:	6093      	str	r3, [r2, #8]
 8002cee:	4b2e      	ldr	r3, [pc, #184]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002cf0:	68db      	ldr	r3, [r3, #12]
 8002cf2:	613b      	str	r3, [r7, #16]
 8002cf4:	68fb      	ldr	r3, [r7, #12]
 8002cf6:	43db      	mvns	r3, r3
 8002cf8:	693a      	ldr	r2, [r7, #16]
 8002cfa:	4013      	ands	r3, r2
 8002cfc:	613b      	str	r3, [r7, #16]
 8002cfe:	683b      	ldr	r3, [r7, #0]
 8002d00:	685b      	ldr	r3, [r3, #4]
 8002d02:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d003      	beq.n	8002d12 <HAL_GPIO_Init+0x25a>
 8002d0a:	693a      	ldr	r2, [r7, #16]
 8002d0c:	68fb      	ldr	r3, [r7, #12]
 8002d0e:	4313      	orrs	r3, r2
 8002d10:	613b      	str	r3, [r7, #16]
 8002d12:	4a25      	ldr	r2, [pc, #148]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002d14:	693b      	ldr	r3, [r7, #16]
 8002d16:	60d3      	str	r3, [r2, #12]
 8002d18:	4b23      	ldr	r3, [pc, #140]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002d1a:	685b      	ldr	r3, [r3, #4]
 8002d1c:	613b      	str	r3, [r7, #16]
 8002d1e:	68fb      	ldr	r3, [r7, #12]
 8002d20:	43db      	mvns	r3, r3
 8002d22:	693a      	ldr	r2, [r7, #16]
 8002d24:	4013      	ands	r3, r2
 8002d26:	613b      	str	r3, [r7, #16]
 8002d28:	683b      	ldr	r3, [r7, #0]
 8002d2a:	685b      	ldr	r3, [r3, #4]
 8002d2c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d003      	beq.n	8002d3c <HAL_GPIO_Init+0x284>
 8002d34:	693a      	ldr	r2, [r7, #16]
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	4313      	orrs	r3, r2
 8002d3a:	613b      	str	r3, [r7, #16]
 8002d3c:	4a1a      	ldr	r2, [pc, #104]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002d3e:	693b      	ldr	r3, [r7, #16]
 8002d40:	6053      	str	r3, [r2, #4]
 8002d42:	4b19      	ldr	r3, [pc, #100]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	613b      	str	r3, [r7, #16]
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	43db      	mvns	r3, r3
 8002d4c:	693a      	ldr	r2, [r7, #16]
 8002d4e:	4013      	ands	r3, r2
 8002d50:	613b      	str	r3, [r7, #16]
 8002d52:	683b      	ldr	r3, [r7, #0]
 8002d54:	685b      	ldr	r3, [r3, #4]
 8002d56:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	d003      	beq.n	8002d66 <HAL_GPIO_Init+0x2ae>
 8002d5e:	693a      	ldr	r2, [r7, #16]
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	4313      	orrs	r3, r2
 8002d64:	613b      	str	r3, [r7, #16]
 8002d66:	4a10      	ldr	r2, [pc, #64]	@ (8002da8 <HAL_GPIO_Init+0x2f0>)
 8002d68:	693b      	ldr	r3, [r7, #16]
 8002d6a:	6013      	str	r3, [r2, #0]
 8002d6c:	697b      	ldr	r3, [r7, #20]
 8002d6e:	3301      	adds	r3, #1
 8002d70:	617b      	str	r3, [r7, #20]
 8002d72:	683b      	ldr	r3, [r7, #0]
 8002d74:	681a      	ldr	r2, [r3, #0]
 8002d76:	697b      	ldr	r3, [r7, #20]
 8002d78:	fa22 f303 	lsr.w	r3, r2, r3
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	f47f aea3 	bne.w	8002ac8 <HAL_GPIO_Init+0x10>
 8002d82:	bf00      	nop
 8002d84:	bf00      	nop
 8002d86:	371c      	adds	r7, #28
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d8e:	4770      	bx	lr
 8002d90:	40021000 	.word	0x40021000
 8002d94:	40010000 	.word	0x40010000
 8002d98:	48000400 	.word	0x48000400
 8002d9c:	48000800 	.word	0x48000800
 8002da0:	48000c00 	.word	0x48000c00
 8002da4:	48001000 	.word	0x48001000
 8002da8:	40010400 	.word	0x40010400

08002dac <HAL_GPIO_ReadPin>:
 8002dac:	b480      	push	{r7}
 8002dae:	b085      	sub	sp, #20
 8002db0:	af00      	add	r7, sp, #0
 8002db2:	6078      	str	r0, [r7, #4]
 8002db4:	460b      	mov	r3, r1
 8002db6:	807b      	strh	r3, [r7, #2]
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	691a      	ldr	r2, [r3, #16]
 8002dbc:	887b      	ldrh	r3, [r7, #2]
 8002dbe:	4013      	ands	r3, r2
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d002      	beq.n	8002dca <HAL_GPIO_ReadPin+0x1e>
 8002dc4:	2301      	movs	r3, #1
 8002dc6:	73fb      	strb	r3, [r7, #15]
 8002dc8:	e001      	b.n	8002dce <HAL_GPIO_ReadPin+0x22>
 8002dca:	2300      	movs	r3, #0
 8002dcc:	73fb      	strb	r3, [r7, #15]
 8002dce:	7bfb      	ldrb	r3, [r7, #15]
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	3714      	adds	r7, #20
 8002dd4:	46bd      	mov	sp, r7
 8002dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dda:	4770      	bx	lr

08002ddc <HAL_GPIO_WritePin>:
 8002ddc:	b480      	push	{r7}
 8002dde:	b083      	sub	sp, #12
 8002de0:	af00      	add	r7, sp, #0
 8002de2:	6078      	str	r0, [r7, #4]
 8002de4:	460b      	mov	r3, r1
 8002de6:	807b      	strh	r3, [r7, #2]
 8002de8:	4613      	mov	r3, r2
 8002dea:	707b      	strb	r3, [r7, #1]
 8002dec:	787b      	ldrb	r3, [r7, #1]
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d003      	beq.n	8002dfa <HAL_GPIO_WritePin+0x1e>
 8002df2:	887a      	ldrh	r2, [r7, #2]
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	619a      	str	r2, [r3, #24]
 8002df8:	e002      	b.n	8002e00 <HAL_GPIO_WritePin+0x24>
 8002dfa:	887a      	ldrh	r2, [r7, #2]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e00:	bf00      	nop
 8002e02:	370c      	adds	r7, #12
 8002e04:	46bd      	mov	sp, r7
 8002e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e0a:	4770      	bx	lr

08002e0c <HAL_I2C_Init>:
 8002e0c:	b580      	push	{r7, lr}
 8002e0e:	b082      	sub	sp, #8
 8002e10:	af00      	add	r7, sp, #0
 8002e12:	6078      	str	r0, [r7, #4]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d101      	bne.n	8002e1e <HAL_I2C_Init+0x12>
 8002e1a:	2301      	movs	r3, #1
 8002e1c:	e08d      	b.n	8002f3a <HAL_I2C_Init+0x12e>
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002e24:	b2db      	uxtb	r3, r3
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d106      	bne.n	8002e38 <HAL_I2C_Init+0x2c>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	2200      	movs	r2, #0
 8002e2e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002e32:	6878      	ldr	r0, [r7, #4]
 8002e34:	f7fe feb6 	bl	8001ba4 <HAL_I2C_MspInit>
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	2224      	movs	r2, #36	@ 0x24
 8002e3c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	681a      	ldr	r2, [r3, #0]
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	f022 0201 	bic.w	r2, r2, #1
 8002e4e:	601a      	str	r2, [r3, #0]
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	685a      	ldr	r2, [r3, #4]
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002e5c:	611a      	str	r2, [r3, #16]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	689a      	ldr	r2, [r3, #8]
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002e6c:	609a      	str	r2, [r3, #8]
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	68db      	ldr	r3, [r3, #12]
 8002e72:	2b01      	cmp	r3, #1
 8002e74:	d107      	bne.n	8002e86 <HAL_I2C_Init+0x7a>
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	689a      	ldr	r2, [r3, #8]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002e82:	609a      	str	r2, [r3, #8]
 8002e84:	e006      	b.n	8002e94 <HAL_I2C_Init+0x88>
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	689a      	ldr	r2, [r3, #8]
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8002e92:	609a      	str	r2, [r3, #8]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	68db      	ldr	r3, [r3, #12]
 8002e98:	2b02      	cmp	r3, #2
 8002e9a:	d108      	bne.n	8002eae <HAL_I2C_Init+0xa2>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	685a      	ldr	r2, [r3, #4]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002eaa:	605a      	str	r2, [r3, #4]
 8002eac:	e007      	b.n	8002ebe <HAL_I2C_Init+0xb2>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	685a      	ldr	r2, [r3, #4]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002ebc:	605a      	str	r2, [r3, #4]
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	685b      	ldr	r3, [r3, #4]
 8002ec4:	687a      	ldr	r2, [r7, #4]
 8002ec6:	6812      	ldr	r2, [r2, #0]
 8002ec8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002ecc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002ed0:	6053      	str	r3, [r2, #4]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	68da      	ldr	r2, [r3, #12]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002ee0:	60da      	str	r2, [r3, #12]
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	691a      	ldr	r2, [r3, #16]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	695b      	ldr	r3, [r3, #20]
 8002eea:	ea42 0103 	orr.w	r1, r2, r3
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	699b      	ldr	r3, [r3, #24]
 8002ef2:	021a      	lsls	r2, r3, #8
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	430a      	orrs	r2, r1
 8002efa:	60da      	str	r2, [r3, #12]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	69d9      	ldr	r1, [r3, #28]
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	6a1a      	ldr	r2, [r3, #32]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	430a      	orrs	r2, r1
 8002f0a:	601a      	str	r2, [r3, #0]
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	681a      	ldr	r2, [r3, #0]
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	f042 0201 	orr.w	r2, r2, #1
 8002f1a:	601a      	str	r2, [r3, #0]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	2200      	movs	r2, #0
 8002f20:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	2220      	movs	r2, #32
 8002f26:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	2200      	movs	r2, #0
 8002f2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	2200      	movs	r2, #0
 8002f34:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002f38:	2300      	movs	r3, #0
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	3708      	adds	r7, #8
 8002f3e:	46bd      	mov	sp, r7
 8002f40:	bd80      	pop	{r7, pc}
	...

08002f44 <HAL_I2C_Master_Transmit>:
 8002f44:	b580      	push	{r7, lr}
 8002f46:	b088      	sub	sp, #32
 8002f48:	af02      	add	r7, sp, #8
 8002f4a:	60f8      	str	r0, [r7, #12]
 8002f4c:	607a      	str	r2, [r7, #4]
 8002f4e:	461a      	mov	r2, r3
 8002f50:	460b      	mov	r3, r1
 8002f52:	817b      	strh	r3, [r7, #10]
 8002f54:	4613      	mov	r3, r2
 8002f56:	813b      	strh	r3, [r7, #8]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002f5e:	b2db      	uxtb	r3, r3
 8002f60:	2b20      	cmp	r3, #32
 8002f62:	f040 80fd 	bne.w	8003160 <HAL_I2C_Master_Transmit+0x21c>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002f6c:	2b01      	cmp	r3, #1
 8002f6e:	d101      	bne.n	8002f74 <HAL_I2C_Master_Transmit+0x30>
 8002f70:	2302      	movs	r3, #2
 8002f72:	e0f6      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	2201      	movs	r2, #1
 8002f78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002f7c:	f7ff fc5a 	bl	8002834 <HAL_GetTick>
 8002f80:	6138      	str	r0, [r7, #16]
 8002f82:	693b      	ldr	r3, [r7, #16]
 8002f84:	9300      	str	r3, [sp, #0]
 8002f86:	2319      	movs	r3, #25
 8002f88:	2201      	movs	r2, #1
 8002f8a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002f8e:	68f8      	ldr	r0, [r7, #12]
 8002f90:	f000 fa0a 	bl	80033a8 <I2C_WaitOnFlagUntilTimeout>
 8002f94:	4603      	mov	r3, r0
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d001      	beq.n	8002f9e <HAL_I2C_Master_Transmit+0x5a>
 8002f9a:	2301      	movs	r3, #1
 8002f9c:	e0e1      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 8002f9e:	68fb      	ldr	r3, [r7, #12]
 8002fa0:	2221      	movs	r2, #33	@ 0x21
 8002fa2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	2210      	movs	r2, #16
 8002faa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	645a      	str	r2, [r3, #68]	@ 0x44
 8002fb4:	68fb      	ldr	r3, [r7, #12]
 8002fb6:	687a      	ldr	r2, [r7, #4]
 8002fb8:	625a      	str	r2, [r3, #36]	@ 0x24
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	893a      	ldrh	r2, [r7, #8]
 8002fbe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	2200      	movs	r2, #0
 8002fc4:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002fca:	b29b      	uxth	r3, r3
 8002fcc:	2bff      	cmp	r3, #255	@ 0xff
 8002fce:	d906      	bls.n	8002fde <HAL_I2C_Master_Transmit+0x9a>
 8002fd0:	68fb      	ldr	r3, [r7, #12]
 8002fd2:	22ff      	movs	r2, #255	@ 0xff
 8002fd4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002fd6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002fda:	617b      	str	r3, [r7, #20]
 8002fdc:	e007      	b.n	8002fee <HAL_I2C_Master_Transmit+0xaa>
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002fe2:	b29a      	uxth	r2, r3
 8002fe4:	68fb      	ldr	r3, [r7, #12]
 8002fe6:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002fe8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002fec:	617b      	str	r3, [r7, #20]
 8002fee:	68fb      	ldr	r3, [r7, #12]
 8002ff0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d024      	beq.n	8003040 <HAL_I2C_Master_Transmit+0xfc>
 8002ff6:	68fb      	ldr	r3, [r7, #12]
 8002ff8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ffa:	781a      	ldrb	r2, [r3, #0]
 8002ffc:	68fb      	ldr	r3, [r7, #12]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	629a      	str	r2, [r3, #40]	@ 0x28
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003006:	1c5a      	adds	r2, r3, #1
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	625a      	str	r2, [r3, #36]	@ 0x24
 800300c:	68fb      	ldr	r3, [r7, #12]
 800300e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003010:	b29b      	uxth	r3, r3
 8003012:	3b01      	subs	r3, #1
 8003014:	b29a      	uxth	r2, r3
 8003016:	68fb      	ldr	r3, [r7, #12]
 8003018:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800301e:	3b01      	subs	r3, #1
 8003020:	b29a      	uxth	r2, r3
 8003022:	68fb      	ldr	r3, [r7, #12]
 8003024:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800302a:	b2db      	uxtb	r3, r3
 800302c:	3301      	adds	r3, #1
 800302e:	b2da      	uxtb	r2, r3
 8003030:	8979      	ldrh	r1, [r7, #10]
 8003032:	4b4e      	ldr	r3, [pc, #312]	@ (800316c <HAL_I2C_Master_Transmit+0x228>)
 8003034:	9300      	str	r3, [sp, #0]
 8003036:	697b      	ldr	r3, [r7, #20]
 8003038:	68f8      	ldr	r0, [r7, #12]
 800303a:	f000 fc05 	bl	8003848 <I2C_TransferConfig>
 800303e:	e066      	b.n	800310e <HAL_I2C_Master_Transmit+0x1ca>
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003044:	b2da      	uxtb	r2, r3
 8003046:	8979      	ldrh	r1, [r7, #10]
 8003048:	4b48      	ldr	r3, [pc, #288]	@ (800316c <HAL_I2C_Master_Transmit+0x228>)
 800304a:	9300      	str	r3, [sp, #0]
 800304c:	697b      	ldr	r3, [r7, #20]
 800304e:	68f8      	ldr	r0, [r7, #12]
 8003050:	f000 fbfa 	bl	8003848 <I2C_TransferConfig>
 8003054:	e05b      	b.n	800310e <HAL_I2C_Master_Transmit+0x1ca>
 8003056:	693a      	ldr	r2, [r7, #16]
 8003058:	6a39      	ldr	r1, [r7, #32]
 800305a:	68f8      	ldr	r0, [r7, #12]
 800305c:	f000 f9fd 	bl	800345a <I2C_WaitOnTXISFlagUntilTimeout>
 8003060:	4603      	mov	r3, r0
 8003062:	2b00      	cmp	r3, #0
 8003064:	d001      	beq.n	800306a <HAL_I2C_Master_Transmit+0x126>
 8003066:	2301      	movs	r3, #1
 8003068:	e07b      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 800306a:	68fb      	ldr	r3, [r7, #12]
 800306c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800306e:	781a      	ldrb	r2, [r3, #0]
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	629a      	str	r2, [r3, #40]	@ 0x28
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800307a:	1c5a      	adds	r2, r3, #1
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003080:	68fb      	ldr	r3, [r7, #12]
 8003082:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003084:	b29b      	uxth	r3, r3
 8003086:	3b01      	subs	r3, #1
 8003088:	b29a      	uxth	r2, r3
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800308e:	68fb      	ldr	r3, [r7, #12]
 8003090:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003092:	3b01      	subs	r3, #1
 8003094:	b29a      	uxth	r2, r3
 8003096:	68fb      	ldr	r3, [r7, #12]
 8003098:	851a      	strh	r2, [r3, #40]	@ 0x28
 800309a:	68fb      	ldr	r3, [r7, #12]
 800309c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800309e:	b29b      	uxth	r3, r3
 80030a0:	2b00      	cmp	r3, #0
 80030a2:	d034      	beq.n	800310e <HAL_I2C_Master_Transmit+0x1ca>
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d130      	bne.n	800310e <HAL_I2C_Master_Transmit+0x1ca>
 80030ac:	693b      	ldr	r3, [r7, #16]
 80030ae:	9300      	str	r3, [sp, #0]
 80030b0:	6a3b      	ldr	r3, [r7, #32]
 80030b2:	2200      	movs	r2, #0
 80030b4:	2180      	movs	r1, #128	@ 0x80
 80030b6:	68f8      	ldr	r0, [r7, #12]
 80030b8:	f000 f976 	bl	80033a8 <I2C_WaitOnFlagUntilTimeout>
 80030bc:	4603      	mov	r3, r0
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d001      	beq.n	80030c6 <HAL_I2C_Master_Transmit+0x182>
 80030c2:	2301      	movs	r3, #1
 80030c4:	e04d      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 80030c6:	68fb      	ldr	r3, [r7, #12]
 80030c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80030ca:	b29b      	uxth	r3, r3
 80030cc:	2bff      	cmp	r3, #255	@ 0xff
 80030ce:	d90e      	bls.n	80030ee <HAL_I2C_Master_Transmit+0x1aa>
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	22ff      	movs	r2, #255	@ 0xff
 80030d4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80030da:	b2da      	uxtb	r2, r3
 80030dc:	8979      	ldrh	r1, [r7, #10]
 80030de:	2300      	movs	r3, #0
 80030e0:	9300      	str	r3, [sp, #0]
 80030e2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80030e6:	68f8      	ldr	r0, [r7, #12]
 80030e8:	f000 fbae 	bl	8003848 <I2C_TransferConfig>
 80030ec:	e00f      	b.n	800310e <HAL_I2C_Master_Transmit+0x1ca>
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80030f2:	b29a      	uxth	r2, r3
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80030fc:	b2da      	uxtb	r2, r3
 80030fe:	8979      	ldrh	r1, [r7, #10]
 8003100:	2300      	movs	r3, #0
 8003102:	9300      	str	r3, [sp, #0]
 8003104:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8003108:	68f8      	ldr	r0, [r7, #12]
 800310a:	f000 fb9d 	bl	8003848 <I2C_TransferConfig>
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003112:	b29b      	uxth	r3, r3
 8003114:	2b00      	cmp	r3, #0
 8003116:	d19e      	bne.n	8003056 <HAL_I2C_Master_Transmit+0x112>
 8003118:	693a      	ldr	r2, [r7, #16]
 800311a:	6a39      	ldr	r1, [r7, #32]
 800311c:	68f8      	ldr	r0, [r7, #12]
 800311e:	f000 f9e3 	bl	80034e8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003122:	4603      	mov	r3, r0
 8003124:	2b00      	cmp	r3, #0
 8003126:	d001      	beq.n	800312c <HAL_I2C_Master_Transmit+0x1e8>
 8003128:	2301      	movs	r3, #1
 800312a:	e01a      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	2220      	movs	r2, #32
 8003132:	61da      	str	r2, [r3, #28]
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	6859      	ldr	r1, [r3, #4]
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	681a      	ldr	r2, [r3, #0]
 800313e:	4b0c      	ldr	r3, [pc, #48]	@ (8003170 <HAL_I2C_Master_Transmit+0x22c>)
 8003140:	400b      	ands	r3, r1
 8003142:	6053      	str	r3, [r2, #4]
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	2220      	movs	r2, #32
 8003148:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800314c:	68fb      	ldr	r3, [r7, #12]
 800314e:	2200      	movs	r2, #0
 8003150:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003154:	68fb      	ldr	r3, [r7, #12]
 8003156:	2200      	movs	r2, #0
 8003158:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800315c:	2300      	movs	r3, #0
 800315e:	e000      	b.n	8003162 <HAL_I2C_Master_Transmit+0x21e>
 8003160:	2302      	movs	r3, #2
 8003162:	4618      	mov	r0, r3
 8003164:	3718      	adds	r7, #24
 8003166:	46bd      	mov	sp, r7
 8003168:	bd80      	pop	{r7, pc}
 800316a:	bf00      	nop
 800316c:	80002000 	.word	0x80002000
 8003170:	fe00e800 	.word	0xfe00e800

08003174 <HAL_I2C_Master_Receive>:
 8003174:	b580      	push	{r7, lr}
 8003176:	b088      	sub	sp, #32
 8003178:	af02      	add	r7, sp, #8
 800317a:	60f8      	str	r0, [r7, #12]
 800317c:	607a      	str	r2, [r7, #4]
 800317e:	461a      	mov	r2, r3
 8003180:	460b      	mov	r3, r1
 8003182:	817b      	strh	r3, [r7, #10]
 8003184:	4613      	mov	r3, r2
 8003186:	813b      	strh	r3, [r7, #8]
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800318e:	b2db      	uxtb	r3, r3
 8003190:	2b20      	cmp	r3, #32
 8003192:	f040 80db 	bne.w	800334c <HAL_I2C_Master_Receive+0x1d8>
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800319c:	2b01      	cmp	r3, #1
 800319e:	d101      	bne.n	80031a4 <HAL_I2C_Master_Receive+0x30>
 80031a0:	2302      	movs	r3, #2
 80031a2:	e0d4      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	2201      	movs	r2, #1
 80031a8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80031ac:	f7ff fb42 	bl	8002834 <HAL_GetTick>
 80031b0:	6178      	str	r0, [r7, #20]
 80031b2:	697b      	ldr	r3, [r7, #20]
 80031b4:	9300      	str	r3, [sp, #0]
 80031b6:	2319      	movs	r3, #25
 80031b8:	2201      	movs	r2, #1
 80031ba:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80031be:	68f8      	ldr	r0, [r7, #12]
 80031c0:	f000 f8f2 	bl	80033a8 <I2C_WaitOnFlagUntilTimeout>
 80031c4:	4603      	mov	r3, r0
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d001      	beq.n	80031ce <HAL_I2C_Master_Receive+0x5a>
 80031ca:	2301      	movs	r3, #1
 80031cc:	e0bf      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 80031ce:	68fb      	ldr	r3, [r7, #12]
 80031d0:	2222      	movs	r2, #34	@ 0x22
 80031d2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	2210      	movs	r2, #16
 80031da:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	2200      	movs	r2, #0
 80031e2:	645a      	str	r2, [r3, #68]	@ 0x44
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	687a      	ldr	r2, [r7, #4]
 80031e8:	625a      	str	r2, [r3, #36]	@ 0x24
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	893a      	ldrh	r2, [r7, #8]
 80031ee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80031f0:	68fb      	ldr	r3, [r7, #12]
 80031f2:	2200      	movs	r2, #0
 80031f4:	635a      	str	r2, [r3, #52]	@ 0x34
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80031fa:	b29b      	uxth	r3, r3
 80031fc:	2bff      	cmp	r3, #255	@ 0xff
 80031fe:	d90e      	bls.n	800321e <HAL_I2C_Master_Receive+0xaa>
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	2201      	movs	r2, #1
 8003204:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800320a:	b2da      	uxtb	r2, r3
 800320c:	8979      	ldrh	r1, [r7, #10]
 800320e:	4b52      	ldr	r3, [pc, #328]	@ (8003358 <HAL_I2C_Master_Receive+0x1e4>)
 8003210:	9300      	str	r3, [sp, #0]
 8003212:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003216:	68f8      	ldr	r0, [r7, #12]
 8003218:	f000 fb16 	bl	8003848 <I2C_TransferConfig>
 800321c:	e06d      	b.n	80032fa <HAL_I2C_Master_Receive+0x186>
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003222:	b29a      	uxth	r2, r3
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800322c:	b2da      	uxtb	r2, r3
 800322e:	8979      	ldrh	r1, [r7, #10]
 8003230:	4b49      	ldr	r3, [pc, #292]	@ (8003358 <HAL_I2C_Master_Receive+0x1e4>)
 8003232:	9300      	str	r3, [sp, #0]
 8003234:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8003238:	68f8      	ldr	r0, [r7, #12]
 800323a:	f000 fb05 	bl	8003848 <I2C_TransferConfig>
 800323e:	e05c      	b.n	80032fa <HAL_I2C_Master_Receive+0x186>
 8003240:	697a      	ldr	r2, [r7, #20]
 8003242:	6a39      	ldr	r1, [r7, #32]
 8003244:	68f8      	ldr	r0, [r7, #12]
 8003246:	f000 f993 	bl	8003570 <I2C_WaitOnRXNEFlagUntilTimeout>
 800324a:	4603      	mov	r3, r0
 800324c:	2b00      	cmp	r3, #0
 800324e:	d001      	beq.n	8003254 <HAL_I2C_Master_Receive+0xe0>
 8003250:	2301      	movs	r3, #1
 8003252:	e07c      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800325e:	b2d2      	uxtb	r2, r2
 8003260:	701a      	strb	r2, [r3, #0]
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003266:	1c5a      	adds	r2, r3, #1
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	625a      	str	r2, [r3, #36]	@ 0x24
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003270:	3b01      	subs	r3, #1
 8003272:	b29a      	uxth	r2, r3
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800327c:	b29b      	uxth	r3, r3
 800327e:	3b01      	subs	r3, #1
 8003280:	b29a      	uxth	r2, r3
 8003282:	68fb      	ldr	r3, [r7, #12]
 8003284:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800328a:	b29b      	uxth	r3, r3
 800328c:	2b00      	cmp	r3, #0
 800328e:	d034      	beq.n	80032fa <HAL_I2C_Master_Receive+0x186>
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003294:	2b00      	cmp	r3, #0
 8003296:	d130      	bne.n	80032fa <HAL_I2C_Master_Receive+0x186>
 8003298:	697b      	ldr	r3, [r7, #20]
 800329a:	9300      	str	r3, [sp, #0]
 800329c:	6a3b      	ldr	r3, [r7, #32]
 800329e:	2200      	movs	r2, #0
 80032a0:	2180      	movs	r1, #128	@ 0x80
 80032a2:	68f8      	ldr	r0, [r7, #12]
 80032a4:	f000 f880 	bl	80033a8 <I2C_WaitOnFlagUntilTimeout>
 80032a8:	4603      	mov	r3, r0
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d001      	beq.n	80032b2 <HAL_I2C_Master_Receive+0x13e>
 80032ae:	2301      	movs	r3, #1
 80032b0:	e04d      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032b6:	b29b      	uxth	r3, r3
 80032b8:	2bff      	cmp	r3, #255	@ 0xff
 80032ba:	d90e      	bls.n	80032da <HAL_I2C_Master_Receive+0x166>
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	22ff      	movs	r2, #255	@ 0xff
 80032c0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032c2:	68fb      	ldr	r3, [r7, #12]
 80032c4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032c6:	b2da      	uxtb	r2, r3
 80032c8:	8979      	ldrh	r1, [r7, #10]
 80032ca:	2300      	movs	r3, #0
 80032cc:	9300      	str	r3, [sp, #0]
 80032ce:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80032d2:	68f8      	ldr	r0, [r7, #12]
 80032d4:	f000 fab8 	bl	8003848 <I2C_TransferConfig>
 80032d8:	e00f      	b.n	80032fa <HAL_I2C_Master_Receive+0x186>
 80032da:	68fb      	ldr	r3, [r7, #12]
 80032dc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032de:	b29a      	uxth	r2, r3
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032e8:	b2da      	uxtb	r2, r3
 80032ea:	8979      	ldrh	r1, [r7, #10]
 80032ec:	2300      	movs	r3, #0
 80032ee:	9300      	str	r3, [sp, #0]
 80032f0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80032f4:	68f8      	ldr	r0, [r7, #12]
 80032f6:	f000 faa7 	bl	8003848 <I2C_TransferConfig>
 80032fa:	68fb      	ldr	r3, [r7, #12]
 80032fc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032fe:	b29b      	uxth	r3, r3
 8003300:	2b00      	cmp	r3, #0
 8003302:	d19d      	bne.n	8003240 <HAL_I2C_Master_Receive+0xcc>
 8003304:	697a      	ldr	r2, [r7, #20]
 8003306:	6a39      	ldr	r1, [r7, #32]
 8003308:	68f8      	ldr	r0, [r7, #12]
 800330a:	f000 f8ed 	bl	80034e8 <I2C_WaitOnSTOPFlagUntilTimeout>
 800330e:	4603      	mov	r3, r0
 8003310:	2b00      	cmp	r3, #0
 8003312:	d001      	beq.n	8003318 <HAL_I2C_Master_Receive+0x1a4>
 8003314:	2301      	movs	r3, #1
 8003316:	e01a      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	2220      	movs	r2, #32
 800331e:	61da      	str	r2, [r3, #28]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	6859      	ldr	r1, [r3, #4]
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	681a      	ldr	r2, [r3, #0]
 800332a:	4b0c      	ldr	r3, [pc, #48]	@ (800335c <HAL_I2C_Master_Receive+0x1e8>)
 800332c:	400b      	ands	r3, r1
 800332e:	6053      	str	r3, [r2, #4]
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	2220      	movs	r2, #32
 8003334:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	2200      	movs	r2, #0
 800333c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	2200      	movs	r2, #0
 8003344:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003348:	2300      	movs	r3, #0
 800334a:	e000      	b.n	800334e <HAL_I2C_Master_Receive+0x1da>
 800334c:	2302      	movs	r3, #2
 800334e:	4618      	mov	r0, r3
 8003350:	3718      	adds	r7, #24
 8003352:	46bd      	mov	sp, r7
 8003354:	bd80      	pop	{r7, pc}
 8003356:	bf00      	nop
 8003358:	80002400 	.word	0x80002400
 800335c:	fe00e800 	.word	0xfe00e800

08003360 <I2C_Flush_TXDR>:
 8003360:	b480      	push	{r7}
 8003362:	b083      	sub	sp, #12
 8003364:	af00      	add	r7, sp, #0
 8003366:	6078      	str	r0, [r7, #4]
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	699b      	ldr	r3, [r3, #24]
 800336e:	f003 0302 	and.w	r3, r3, #2
 8003372:	2b02      	cmp	r3, #2
 8003374:	d103      	bne.n	800337e <I2C_Flush_TXDR+0x1e>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	2200      	movs	r2, #0
 800337c:	629a      	str	r2, [r3, #40]	@ 0x28
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	699b      	ldr	r3, [r3, #24]
 8003384:	f003 0301 	and.w	r3, r3, #1
 8003388:	2b01      	cmp	r3, #1
 800338a:	d007      	beq.n	800339c <I2C_Flush_TXDR+0x3c>
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	699a      	ldr	r2, [r3, #24]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	f042 0201 	orr.w	r2, r2, #1
 800339a:	619a      	str	r2, [r3, #24]
 800339c:	bf00      	nop
 800339e:	370c      	adds	r7, #12
 80033a0:	46bd      	mov	sp, r7
 80033a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033a6:	4770      	bx	lr

080033a8 <I2C_WaitOnFlagUntilTimeout>:
 80033a8:	b580      	push	{r7, lr}
 80033aa:	b084      	sub	sp, #16
 80033ac:	af00      	add	r7, sp, #0
 80033ae:	60f8      	str	r0, [r7, #12]
 80033b0:	60b9      	str	r1, [r7, #8]
 80033b2:	603b      	str	r3, [r7, #0]
 80033b4:	4613      	mov	r3, r2
 80033b6:	71fb      	strb	r3, [r7, #7]
 80033b8:	e03b      	b.n	8003432 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80033ba:	69ba      	ldr	r2, [r7, #24]
 80033bc:	6839      	ldr	r1, [r7, #0]
 80033be:	68f8      	ldr	r0, [r7, #12]
 80033c0:	f000 f962 	bl	8003688 <I2C_IsErrorOccurred>
 80033c4:	4603      	mov	r3, r0
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d001      	beq.n	80033ce <I2C_WaitOnFlagUntilTimeout+0x26>
 80033ca:	2301      	movs	r3, #1
 80033cc:	e041      	b.n	8003452 <I2C_WaitOnFlagUntilTimeout+0xaa>
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80033d4:	d02d      	beq.n	8003432 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80033d6:	f7ff fa2d 	bl	8002834 <HAL_GetTick>
 80033da:	4602      	mov	r2, r0
 80033dc:	69bb      	ldr	r3, [r7, #24]
 80033de:	1ad3      	subs	r3, r2, r3
 80033e0:	683a      	ldr	r2, [r7, #0]
 80033e2:	429a      	cmp	r2, r3
 80033e4:	d302      	bcc.n	80033ec <I2C_WaitOnFlagUntilTimeout+0x44>
 80033e6:	683b      	ldr	r3, [r7, #0]
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	d122      	bne.n	8003432 <I2C_WaitOnFlagUntilTimeout+0x8a>
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	699a      	ldr	r2, [r3, #24]
 80033f2:	68bb      	ldr	r3, [r7, #8]
 80033f4:	4013      	ands	r3, r2
 80033f6:	68ba      	ldr	r2, [r7, #8]
 80033f8:	429a      	cmp	r2, r3
 80033fa:	bf0c      	ite	eq
 80033fc:	2301      	moveq	r3, #1
 80033fe:	2300      	movne	r3, #0
 8003400:	b2db      	uxtb	r3, r3
 8003402:	461a      	mov	r2, r3
 8003404:	79fb      	ldrb	r3, [r7, #7]
 8003406:	429a      	cmp	r2, r3
 8003408:	d113      	bne.n	8003432 <I2C_WaitOnFlagUntilTimeout+0x8a>
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800340e:	f043 0220 	orr.w	r2, r3, #32
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	645a      	str	r2, [r3, #68]	@ 0x44
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	2220      	movs	r2, #32
 800341a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	2200      	movs	r2, #0
 8003422:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	2200      	movs	r2, #0
 800342a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800342e:	2301      	movs	r3, #1
 8003430:	e00f      	b.n	8003452 <I2C_WaitOnFlagUntilTimeout+0xaa>
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	699a      	ldr	r2, [r3, #24]
 8003438:	68bb      	ldr	r3, [r7, #8]
 800343a:	4013      	ands	r3, r2
 800343c:	68ba      	ldr	r2, [r7, #8]
 800343e:	429a      	cmp	r2, r3
 8003440:	bf0c      	ite	eq
 8003442:	2301      	moveq	r3, #1
 8003444:	2300      	movne	r3, #0
 8003446:	b2db      	uxtb	r3, r3
 8003448:	461a      	mov	r2, r3
 800344a:	79fb      	ldrb	r3, [r7, #7]
 800344c:	429a      	cmp	r2, r3
 800344e:	d0b4      	beq.n	80033ba <I2C_WaitOnFlagUntilTimeout+0x12>
 8003450:	2300      	movs	r3, #0
 8003452:	4618      	mov	r0, r3
 8003454:	3710      	adds	r7, #16
 8003456:	46bd      	mov	sp, r7
 8003458:	bd80      	pop	{r7, pc}

0800345a <I2C_WaitOnTXISFlagUntilTimeout>:
 800345a:	b580      	push	{r7, lr}
 800345c:	b084      	sub	sp, #16
 800345e:	af00      	add	r7, sp, #0
 8003460:	60f8      	str	r0, [r7, #12]
 8003462:	60b9      	str	r1, [r7, #8]
 8003464:	607a      	str	r2, [r7, #4]
 8003466:	e033      	b.n	80034d0 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003468:	687a      	ldr	r2, [r7, #4]
 800346a:	68b9      	ldr	r1, [r7, #8]
 800346c:	68f8      	ldr	r0, [r7, #12]
 800346e:	f000 f90b 	bl	8003688 <I2C_IsErrorOccurred>
 8003472:	4603      	mov	r3, r0
 8003474:	2b00      	cmp	r3, #0
 8003476:	d001      	beq.n	800347c <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8003478:	2301      	movs	r3, #1
 800347a:	e031      	b.n	80034e0 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 800347c:	68bb      	ldr	r3, [r7, #8]
 800347e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003482:	d025      	beq.n	80034d0 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003484:	f7ff f9d6 	bl	8002834 <HAL_GetTick>
 8003488:	4602      	mov	r2, r0
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	1ad3      	subs	r3, r2, r3
 800348e:	68ba      	ldr	r2, [r7, #8]
 8003490:	429a      	cmp	r2, r3
 8003492:	d302      	bcc.n	800349a <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8003494:	68bb      	ldr	r3, [r7, #8]
 8003496:	2b00      	cmp	r3, #0
 8003498:	d11a      	bne.n	80034d0 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800349a:	68fb      	ldr	r3, [r7, #12]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	699b      	ldr	r3, [r3, #24]
 80034a0:	f003 0302 	and.w	r3, r3, #2
 80034a4:	2b02      	cmp	r3, #2
 80034a6:	d013      	beq.n	80034d0 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80034ac:	f043 0220 	orr.w	r2, r3, #32
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	645a      	str	r2, [r3, #68]	@ 0x44
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	2220      	movs	r2, #32
 80034b8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	2200      	movs	r2, #0
 80034c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	2200      	movs	r2, #0
 80034c8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80034cc:	2301      	movs	r3, #1
 80034ce:	e007      	b.n	80034e0 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	699b      	ldr	r3, [r3, #24]
 80034d6:	f003 0302 	and.w	r3, r3, #2
 80034da:	2b02      	cmp	r3, #2
 80034dc:	d1c4      	bne.n	8003468 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 80034de:	2300      	movs	r3, #0
 80034e0:	4618      	mov	r0, r3
 80034e2:	3710      	adds	r7, #16
 80034e4:	46bd      	mov	sp, r7
 80034e6:	bd80      	pop	{r7, pc}

080034e8 <I2C_WaitOnSTOPFlagUntilTimeout>:
 80034e8:	b580      	push	{r7, lr}
 80034ea:	b084      	sub	sp, #16
 80034ec:	af00      	add	r7, sp, #0
 80034ee:	60f8      	str	r0, [r7, #12]
 80034f0:	60b9      	str	r1, [r7, #8]
 80034f2:	607a      	str	r2, [r7, #4]
 80034f4:	e02f      	b.n	8003556 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 80034f6:	687a      	ldr	r2, [r7, #4]
 80034f8:	68b9      	ldr	r1, [r7, #8]
 80034fa:	68f8      	ldr	r0, [r7, #12]
 80034fc:	f000 f8c4 	bl	8003688 <I2C_IsErrorOccurred>
 8003500:	4603      	mov	r3, r0
 8003502:	2b00      	cmp	r3, #0
 8003504:	d001      	beq.n	800350a <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8003506:	2301      	movs	r3, #1
 8003508:	e02d      	b.n	8003566 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800350a:	f7ff f993 	bl	8002834 <HAL_GetTick>
 800350e:	4602      	mov	r2, r0
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	1ad3      	subs	r3, r2, r3
 8003514:	68ba      	ldr	r2, [r7, #8]
 8003516:	429a      	cmp	r2, r3
 8003518:	d302      	bcc.n	8003520 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800351a:	68bb      	ldr	r3, [r7, #8]
 800351c:	2b00      	cmp	r3, #0
 800351e:	d11a      	bne.n	8003556 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	699b      	ldr	r3, [r3, #24]
 8003526:	f003 0320 	and.w	r3, r3, #32
 800352a:	2b20      	cmp	r3, #32
 800352c:	d013      	beq.n	8003556 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800352e:	68fb      	ldr	r3, [r7, #12]
 8003530:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003532:	f043 0220 	orr.w	r2, r3, #32
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	645a      	str	r2, [r3, #68]	@ 0x44
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	2220      	movs	r2, #32
 800353e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003542:	68fb      	ldr	r3, [r7, #12]
 8003544:	2200      	movs	r2, #0
 8003546:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	2200      	movs	r2, #0
 800354e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003552:	2301      	movs	r3, #1
 8003554:	e007      	b.n	8003566 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	699b      	ldr	r3, [r3, #24]
 800355c:	f003 0320 	and.w	r3, r3, #32
 8003560:	2b20      	cmp	r3, #32
 8003562:	d1c8      	bne.n	80034f6 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8003564:	2300      	movs	r3, #0
 8003566:	4618      	mov	r0, r3
 8003568:	3710      	adds	r7, #16
 800356a:	46bd      	mov	sp, r7
 800356c:	bd80      	pop	{r7, pc}
	...

08003570 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003570:	b580      	push	{r7, lr}
 8003572:	b086      	sub	sp, #24
 8003574:	af00      	add	r7, sp, #0
 8003576:	60f8      	str	r0, [r7, #12]
 8003578:	60b9      	str	r1, [r7, #8]
 800357a:	607a      	str	r2, [r7, #4]
 800357c:	2300      	movs	r3, #0
 800357e:	75fb      	strb	r3, [r7, #23]
 8003580:	e071      	b.n	8003666 <I2C_WaitOnRXNEFlagUntilTimeout+0xf6>
 8003582:	687a      	ldr	r2, [r7, #4]
 8003584:	68b9      	ldr	r1, [r7, #8]
 8003586:	68f8      	ldr	r0, [r7, #12]
 8003588:	f000 f87e 	bl	8003688 <I2C_IsErrorOccurred>
 800358c:	4603      	mov	r3, r0
 800358e:	2b00      	cmp	r3, #0
 8003590:	d001      	beq.n	8003596 <I2C_WaitOnRXNEFlagUntilTimeout+0x26>
 8003592:	2301      	movs	r3, #1
 8003594:	75fb      	strb	r3, [r7, #23]
 8003596:	68fb      	ldr	r3, [r7, #12]
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	699b      	ldr	r3, [r3, #24]
 800359c:	f003 0320 	and.w	r3, r3, #32
 80035a0:	2b20      	cmp	r3, #32
 80035a2:	d13b      	bne.n	800361c <I2C_WaitOnRXNEFlagUntilTimeout+0xac>
 80035a4:	7dfb      	ldrb	r3, [r7, #23]
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d138      	bne.n	800361c <I2C_WaitOnRXNEFlagUntilTimeout+0xac>
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	699b      	ldr	r3, [r3, #24]
 80035b0:	f003 0304 	and.w	r3, r3, #4
 80035b4:	2b04      	cmp	r3, #4
 80035b6:	d105      	bne.n	80035c4 <I2C_WaitOnRXNEFlagUntilTimeout+0x54>
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035bc:	2b00      	cmp	r3, #0
 80035be:	d001      	beq.n	80035c4 <I2C_WaitOnRXNEFlagUntilTimeout+0x54>
 80035c0:	2300      	movs	r3, #0
 80035c2:	75fb      	strb	r3, [r7, #23]
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	699b      	ldr	r3, [r3, #24]
 80035ca:	f003 0310 	and.w	r3, r3, #16
 80035ce:	2b10      	cmp	r3, #16
 80035d0:	d121      	bne.n	8003616 <I2C_WaitOnRXNEFlagUntilTimeout+0xa6>
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	2210      	movs	r2, #16
 80035d8:	61da      	str	r2, [r3, #28]
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	2204      	movs	r2, #4
 80035de:	645a      	str	r2, [r3, #68]	@ 0x44
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	2220      	movs	r2, #32
 80035e6:	61da      	str	r2, [r3, #28]
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	6859      	ldr	r1, [r3, #4]
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	681a      	ldr	r2, [r3, #0]
 80035f2:	4b24      	ldr	r3, [pc, #144]	@ (8003684 <I2C_WaitOnRXNEFlagUntilTimeout+0x114>)
 80035f4:	400b      	ands	r3, r1
 80035f6:	6053      	str	r3, [r2, #4]
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	2220      	movs	r2, #32
 80035fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003600:	68fb      	ldr	r3, [r7, #12]
 8003602:	2200      	movs	r2, #0
 8003604:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	2200      	movs	r2, #0
 800360c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003610:	2301      	movs	r3, #1
 8003612:	75fb      	strb	r3, [r7, #23]
 8003614:	e002      	b.n	800361c <I2C_WaitOnRXNEFlagUntilTimeout+0xac>
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	2200      	movs	r2, #0
 800361a:	645a      	str	r2, [r3, #68]	@ 0x44
 800361c:	f7ff f90a 	bl	8002834 <HAL_GetTick>
 8003620:	4602      	mov	r2, r0
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	1ad3      	subs	r3, r2, r3
 8003626:	68ba      	ldr	r2, [r7, #8]
 8003628:	429a      	cmp	r2, r3
 800362a:	d302      	bcc.n	8003632 <I2C_WaitOnRXNEFlagUntilTimeout+0xc2>
 800362c:	68bb      	ldr	r3, [r7, #8]
 800362e:	2b00      	cmp	r3, #0
 8003630:	d119      	bne.n	8003666 <I2C_WaitOnRXNEFlagUntilTimeout+0xf6>
 8003632:	7dfb      	ldrb	r3, [r7, #23]
 8003634:	2b00      	cmp	r3, #0
 8003636:	d116      	bne.n	8003666 <I2C_WaitOnRXNEFlagUntilTimeout+0xf6>
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	699b      	ldr	r3, [r3, #24]
 800363e:	f003 0304 	and.w	r3, r3, #4
 8003642:	2b04      	cmp	r3, #4
 8003644:	d00f      	beq.n	8003666 <I2C_WaitOnRXNEFlagUntilTimeout+0xf6>
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800364a:	f043 0220 	orr.w	r2, r3, #32
 800364e:	68fb      	ldr	r3, [r7, #12]
 8003650:	645a      	str	r2, [r3, #68]	@ 0x44
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	2220      	movs	r2, #32
 8003656:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	2200      	movs	r2, #0
 800365e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003662:	2301      	movs	r3, #1
 8003664:	75fb      	strb	r3, [r7, #23]
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	699b      	ldr	r3, [r3, #24]
 800366c:	f003 0304 	and.w	r3, r3, #4
 8003670:	2b04      	cmp	r3, #4
 8003672:	d002      	beq.n	800367a <I2C_WaitOnRXNEFlagUntilTimeout+0x10a>
 8003674:	7dfb      	ldrb	r3, [r7, #23]
 8003676:	2b00      	cmp	r3, #0
 8003678:	d083      	beq.n	8003582 <I2C_WaitOnRXNEFlagUntilTimeout+0x12>
 800367a:	7dfb      	ldrb	r3, [r7, #23]
 800367c:	4618      	mov	r0, r3
 800367e:	3718      	adds	r7, #24
 8003680:	46bd      	mov	sp, r7
 8003682:	bd80      	pop	{r7, pc}
 8003684:	fe00e800 	.word	0xfe00e800

08003688 <I2C_IsErrorOccurred>:
 8003688:	b580      	push	{r7, lr}
 800368a:	b08a      	sub	sp, #40	@ 0x28
 800368c:	af00      	add	r7, sp, #0
 800368e:	60f8      	str	r0, [r7, #12]
 8003690:	60b9      	str	r1, [r7, #8]
 8003692:	607a      	str	r2, [r7, #4]
 8003694:	2300      	movs	r3, #0
 8003696:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	699b      	ldr	r3, [r3, #24]
 80036a0:	61bb      	str	r3, [r7, #24]
 80036a2:	2300      	movs	r3, #0
 80036a4:	623b      	str	r3, [r7, #32]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	61fb      	str	r3, [r7, #28]
 80036aa:	69bb      	ldr	r3, [r7, #24]
 80036ac:	f003 0310 	and.w	r3, r3, #16
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d068      	beq.n	8003786 <I2C_IsErrorOccurred+0xfe>
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	2210      	movs	r2, #16
 80036ba:	61da      	str	r2, [r3, #28]
 80036bc:	e049      	b.n	8003752 <I2C_IsErrorOccurred+0xca>
 80036be:	68bb      	ldr	r3, [r7, #8]
 80036c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036c4:	d045      	beq.n	8003752 <I2C_IsErrorOccurred+0xca>
 80036c6:	f7ff f8b5 	bl	8002834 <HAL_GetTick>
 80036ca:	4602      	mov	r2, r0
 80036cc:	69fb      	ldr	r3, [r7, #28]
 80036ce:	1ad3      	subs	r3, r2, r3
 80036d0:	68ba      	ldr	r2, [r7, #8]
 80036d2:	429a      	cmp	r2, r3
 80036d4:	d302      	bcc.n	80036dc <I2C_IsErrorOccurred+0x54>
 80036d6:	68bb      	ldr	r3, [r7, #8]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d13a      	bne.n	8003752 <I2C_IsErrorOccurred+0xca>
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	685b      	ldr	r3, [r3, #4]
 80036e2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80036e6:	617b      	str	r3, [r7, #20]
 80036e8:	68fb      	ldr	r3, [r7, #12]
 80036ea:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80036ee:	74fb      	strb	r3, [r7, #19]
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	699b      	ldr	r3, [r3, #24]
 80036f6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80036fa:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80036fe:	d121      	bne.n	8003744 <I2C_IsErrorOccurred+0xbc>
 8003700:	697b      	ldr	r3, [r7, #20]
 8003702:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003706:	d01d      	beq.n	8003744 <I2C_IsErrorOccurred+0xbc>
 8003708:	7cfb      	ldrb	r3, [r7, #19]
 800370a:	2b20      	cmp	r3, #32
 800370c:	d01a      	beq.n	8003744 <I2C_IsErrorOccurred+0xbc>
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	685a      	ldr	r2, [r3, #4]
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	f7ff f889 	bl	8002834 <HAL_GetTick>
 8003722:	61f8      	str	r0, [r7, #28]
 8003724:	e00e      	b.n	8003744 <I2C_IsErrorOccurred+0xbc>
 8003726:	f7ff f885 	bl	8002834 <HAL_GetTick>
 800372a:	4602      	mov	r2, r0
 800372c:	69fb      	ldr	r3, [r7, #28]
 800372e:	1ad3      	subs	r3, r2, r3
 8003730:	2b19      	cmp	r3, #25
 8003732:	d907      	bls.n	8003744 <I2C_IsErrorOccurred+0xbc>
 8003734:	6a3b      	ldr	r3, [r7, #32]
 8003736:	f043 0320 	orr.w	r3, r3, #32
 800373a:	623b      	str	r3, [r7, #32]
 800373c:	2301      	movs	r3, #1
 800373e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003742:	e006      	b.n	8003752 <I2C_IsErrorOccurred+0xca>
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	699b      	ldr	r3, [r3, #24]
 800374a:	f003 0320 	and.w	r3, r3, #32
 800374e:	2b20      	cmp	r3, #32
 8003750:	d1e9      	bne.n	8003726 <I2C_IsErrorOccurred+0x9e>
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	699b      	ldr	r3, [r3, #24]
 8003758:	f003 0320 	and.w	r3, r3, #32
 800375c:	2b20      	cmp	r3, #32
 800375e:	d003      	beq.n	8003768 <I2C_IsErrorOccurred+0xe0>
 8003760:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8003764:	2b00      	cmp	r3, #0
 8003766:	d0aa      	beq.n	80036be <I2C_IsErrorOccurred+0x36>
 8003768:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800376c:	2b00      	cmp	r3, #0
 800376e:	d103      	bne.n	8003778 <I2C_IsErrorOccurred+0xf0>
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	2220      	movs	r2, #32
 8003776:	61da      	str	r2, [r3, #28]
 8003778:	6a3b      	ldr	r3, [r7, #32]
 800377a:	f043 0304 	orr.w	r3, r3, #4
 800377e:	623b      	str	r3, [r7, #32]
 8003780:	2301      	movs	r3, #1
 8003782:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	699b      	ldr	r3, [r3, #24]
 800378c:	61bb      	str	r3, [r7, #24]
 800378e:	69bb      	ldr	r3, [r7, #24]
 8003790:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003794:	2b00      	cmp	r3, #0
 8003796:	d00b      	beq.n	80037b0 <I2C_IsErrorOccurred+0x128>
 8003798:	6a3b      	ldr	r3, [r7, #32]
 800379a:	f043 0301 	orr.w	r3, r3, #1
 800379e:	623b      	str	r3, [r7, #32]
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80037a8:	61da      	str	r2, [r3, #28]
 80037aa:	2301      	movs	r3, #1
 80037ac:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80037b0:	69bb      	ldr	r3, [r7, #24]
 80037b2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d00b      	beq.n	80037d2 <I2C_IsErrorOccurred+0x14a>
 80037ba:	6a3b      	ldr	r3, [r7, #32]
 80037bc:	f043 0308 	orr.w	r3, r3, #8
 80037c0:	623b      	str	r3, [r7, #32]
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80037ca:	61da      	str	r2, [r3, #28]
 80037cc:	2301      	movs	r3, #1
 80037ce:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80037d2:	69bb      	ldr	r3, [r7, #24]
 80037d4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80037d8:	2b00      	cmp	r3, #0
 80037da:	d00b      	beq.n	80037f4 <I2C_IsErrorOccurred+0x16c>
 80037dc:	6a3b      	ldr	r3, [r7, #32]
 80037de:	f043 0302 	orr.w	r3, r3, #2
 80037e2:	623b      	str	r3, [r7, #32]
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80037ec:	61da      	str	r2, [r3, #28]
 80037ee:	2301      	movs	r3, #1
 80037f0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80037f4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d01c      	beq.n	8003836 <I2C_IsErrorOccurred+0x1ae>
 80037fc:	68f8      	ldr	r0, [r7, #12]
 80037fe:	f7ff fdaf 	bl	8003360 <I2C_Flush_TXDR>
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	6859      	ldr	r1, [r3, #4]
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	681a      	ldr	r2, [r3, #0]
 800380c:	4b0d      	ldr	r3, [pc, #52]	@ (8003844 <I2C_IsErrorOccurred+0x1bc>)
 800380e:	400b      	ands	r3, r1
 8003810:	6053      	str	r3, [r2, #4]
 8003812:	68fb      	ldr	r3, [r7, #12]
 8003814:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003816:	6a3b      	ldr	r3, [r7, #32]
 8003818:	431a      	orrs	r2, r3
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	645a      	str	r2, [r3, #68]	@ 0x44
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	2220      	movs	r2, #32
 8003822:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	2200      	movs	r2, #0
 800382a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800382e:	68fb      	ldr	r3, [r7, #12]
 8003830:	2200      	movs	r2, #0
 8003832:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003836:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800383a:	4618      	mov	r0, r3
 800383c:	3728      	adds	r7, #40	@ 0x28
 800383e:	46bd      	mov	sp, r7
 8003840:	bd80      	pop	{r7, pc}
 8003842:	bf00      	nop
 8003844:	fe00e800 	.word	0xfe00e800

08003848 <I2C_TransferConfig>:
 8003848:	b480      	push	{r7}
 800384a:	b087      	sub	sp, #28
 800384c:	af00      	add	r7, sp, #0
 800384e:	60f8      	str	r0, [r7, #12]
 8003850:	607b      	str	r3, [r7, #4]
 8003852:	460b      	mov	r3, r1
 8003854:	817b      	strh	r3, [r7, #10]
 8003856:	4613      	mov	r3, r2
 8003858:	727b      	strb	r3, [r7, #9]
 800385a:	897b      	ldrh	r3, [r7, #10]
 800385c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8003860:	7a7b      	ldrb	r3, [r7, #9]
 8003862:	041b      	lsls	r3, r3, #16
 8003864:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8003868:	431a      	orrs	r2, r3
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	431a      	orrs	r2, r3
 800386e:	6a3b      	ldr	r3, [r7, #32]
 8003870:	4313      	orrs	r3, r2
 8003872:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003876:	617b      	str	r3, [r7, #20]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	685a      	ldr	r2, [r3, #4]
 800387e:	6a3b      	ldr	r3, [r7, #32]
 8003880:	0d5b      	lsrs	r3, r3, #21
 8003882:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8003886:	4b08      	ldr	r3, [pc, #32]	@ (80038a8 <I2C_TransferConfig+0x60>)
 8003888:	430b      	orrs	r3, r1
 800388a:	43db      	mvns	r3, r3
 800388c:	ea02 0103 	and.w	r1, r2, r3
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	697a      	ldr	r2, [r7, #20]
 8003896:	430a      	orrs	r2, r1
 8003898:	605a      	str	r2, [r3, #4]
 800389a:	bf00      	nop
 800389c:	371c      	adds	r7, #28
 800389e:	46bd      	mov	sp, r7
 80038a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038a4:	4770      	bx	lr
 80038a6:	bf00      	nop
 80038a8:	03ff63ff 	.word	0x03ff63ff

080038ac <HAL_I2CEx_ConfigAnalogFilter>:
 80038ac:	b480      	push	{r7}
 80038ae:	b083      	sub	sp, #12
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	6078      	str	r0, [r7, #4]
 80038b4:	6039      	str	r1, [r7, #0]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80038bc:	b2db      	uxtb	r3, r3
 80038be:	2b20      	cmp	r3, #32
 80038c0:	d138      	bne.n	8003934 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80038c8:	2b01      	cmp	r3, #1
 80038ca:	d101      	bne.n	80038d0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80038cc:	2302      	movs	r3, #2
 80038ce:	e032      	b.n	8003936 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	2201      	movs	r2, #1
 80038d4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	2224      	movs	r2, #36	@ 0x24
 80038dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	681a      	ldr	r2, [r3, #0]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	f022 0201 	bic.w	r2, r2, #1
 80038ee:	601a      	str	r2, [r3, #0]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	681a      	ldr	r2, [r3, #0]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80038fe:	601a      	str	r2, [r3, #0]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	6819      	ldr	r1, [r3, #0]
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	683a      	ldr	r2, [r7, #0]
 800390c:	430a      	orrs	r2, r1
 800390e:	601a      	str	r2, [r3, #0]
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	681a      	ldr	r2, [r3, #0]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	f042 0201 	orr.w	r2, r2, #1
 800391e:	601a      	str	r2, [r3, #0]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	2220      	movs	r2, #32
 8003924:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	2200      	movs	r2, #0
 800392c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003930:	2300      	movs	r3, #0
 8003932:	e000      	b.n	8003936 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003934:	2302      	movs	r3, #2
 8003936:	4618      	mov	r0, r3
 8003938:	370c      	adds	r7, #12
 800393a:	46bd      	mov	sp, r7
 800393c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003940:	4770      	bx	lr

08003942 <HAL_I2CEx_ConfigDigitalFilter>:
 8003942:	b480      	push	{r7}
 8003944:	b085      	sub	sp, #20
 8003946:	af00      	add	r7, sp, #0
 8003948:	6078      	str	r0, [r7, #4]
 800394a:	6039      	str	r1, [r7, #0]
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003952:	b2db      	uxtb	r3, r3
 8003954:	2b20      	cmp	r3, #32
 8003956:	d139      	bne.n	80039cc <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800395e:	2b01      	cmp	r3, #1
 8003960:	d101      	bne.n	8003966 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003962:	2302      	movs	r3, #2
 8003964:	e033      	b.n	80039ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	2201      	movs	r2, #1
 800396a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	2224      	movs	r2, #36	@ 0x24
 8003972:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	681a      	ldr	r2, [r3, #0]
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	f022 0201 	bic.w	r2, r2, #1
 8003984:	601a      	str	r2, [r3, #0]
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	60fb      	str	r3, [r7, #12]
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003994:	60fb      	str	r3, [r7, #12]
 8003996:	683b      	ldr	r3, [r7, #0]
 8003998:	021b      	lsls	r3, r3, #8
 800399a:	68fa      	ldr	r2, [r7, #12]
 800399c:	4313      	orrs	r3, r2
 800399e:	60fb      	str	r3, [r7, #12]
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	68fa      	ldr	r2, [r7, #12]
 80039a6:	601a      	str	r2, [r3, #0]
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	681a      	ldr	r2, [r3, #0]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	f042 0201 	orr.w	r2, r2, #1
 80039b6:	601a      	str	r2, [r3, #0]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	2220      	movs	r2, #32
 80039bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	2200      	movs	r2, #0
 80039c4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80039c8:	2300      	movs	r3, #0
 80039ca:	e000      	b.n	80039ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80039cc:	2302      	movs	r3, #2
 80039ce:	4618      	mov	r0, r3
 80039d0:	3714      	adds	r7, #20
 80039d2:	46bd      	mov	sp, r7
 80039d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d8:	4770      	bx	lr

080039da <HAL_PCD_Init>:
 80039da:	b580      	push	{r7, lr}
 80039dc:	b084      	sub	sp, #16
 80039de:	af00      	add	r7, sp, #0
 80039e0:	6078      	str	r0, [r7, #4]
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	2b00      	cmp	r3, #0
 80039e6:	d101      	bne.n	80039ec <HAL_PCD_Init+0x12>
 80039e8:	2301      	movs	r3, #1
 80039ea:	e0b9      	b.n	8003b60 <HAL_PCD_Init+0x186>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	f893 3291 	ldrb.w	r3, [r3, #657]	@ 0x291
 80039f2:	b2db      	uxtb	r3, r3
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d106      	bne.n	8003a06 <HAL_PCD_Init+0x2c>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	2200      	movs	r2, #0
 80039fc:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003a00:	6878      	ldr	r0, [r7, #4]
 8003a02:	f008 fe03 	bl	800c60c <HAL_PCD_MspInit>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	2203      	movs	r2, #3
 8003a0a:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	4618      	mov	r0, r3
 8003a14:	f004 fe46 	bl	80086a4 <USB_DisableGlobalInt>
 8003a18:	2300      	movs	r3, #0
 8003a1a:	73fb      	strb	r3, [r7, #15]
 8003a1c:	e03e      	b.n	8003a9c <HAL_PCD_Init+0xc2>
 8003a1e:	7bfa      	ldrb	r2, [r7, #15]
 8003a20:	6879      	ldr	r1, [r7, #4]
 8003a22:	4613      	mov	r3, r2
 8003a24:	009b      	lsls	r3, r3, #2
 8003a26:	4413      	add	r3, r2
 8003a28:	00db      	lsls	r3, r3, #3
 8003a2a:	440b      	add	r3, r1
 8003a2c:	3311      	adds	r3, #17
 8003a2e:	2201      	movs	r2, #1
 8003a30:	701a      	strb	r2, [r3, #0]
 8003a32:	7bfa      	ldrb	r2, [r7, #15]
 8003a34:	6879      	ldr	r1, [r7, #4]
 8003a36:	4613      	mov	r3, r2
 8003a38:	009b      	lsls	r3, r3, #2
 8003a3a:	4413      	add	r3, r2
 8003a3c:	00db      	lsls	r3, r3, #3
 8003a3e:	440b      	add	r3, r1
 8003a40:	3310      	adds	r3, #16
 8003a42:	7bfa      	ldrb	r2, [r7, #15]
 8003a44:	701a      	strb	r2, [r3, #0]
 8003a46:	7bfa      	ldrb	r2, [r7, #15]
 8003a48:	6879      	ldr	r1, [r7, #4]
 8003a4a:	4613      	mov	r3, r2
 8003a4c:	009b      	lsls	r3, r3, #2
 8003a4e:	4413      	add	r3, r2
 8003a50:	00db      	lsls	r3, r3, #3
 8003a52:	440b      	add	r3, r1
 8003a54:	3313      	adds	r3, #19
 8003a56:	2200      	movs	r2, #0
 8003a58:	701a      	strb	r2, [r3, #0]
 8003a5a:	7bfa      	ldrb	r2, [r7, #15]
 8003a5c:	6879      	ldr	r1, [r7, #4]
 8003a5e:	4613      	mov	r3, r2
 8003a60:	009b      	lsls	r3, r3, #2
 8003a62:	4413      	add	r3, r2
 8003a64:	00db      	lsls	r3, r3, #3
 8003a66:	440b      	add	r3, r1
 8003a68:	3320      	adds	r3, #32
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	601a      	str	r2, [r3, #0]
 8003a6e:	7bfa      	ldrb	r2, [r7, #15]
 8003a70:	6879      	ldr	r1, [r7, #4]
 8003a72:	4613      	mov	r3, r2
 8003a74:	009b      	lsls	r3, r3, #2
 8003a76:	4413      	add	r3, r2
 8003a78:	00db      	lsls	r3, r3, #3
 8003a7a:	440b      	add	r3, r1
 8003a7c:	3324      	adds	r3, #36	@ 0x24
 8003a7e:	2200      	movs	r2, #0
 8003a80:	601a      	str	r2, [r3, #0]
 8003a82:	7bfb      	ldrb	r3, [r7, #15]
 8003a84:	6879      	ldr	r1, [r7, #4]
 8003a86:	1c5a      	adds	r2, r3, #1
 8003a88:	4613      	mov	r3, r2
 8003a8a:	009b      	lsls	r3, r3, #2
 8003a8c:	4413      	add	r3, r2
 8003a8e:	00db      	lsls	r3, r3, #3
 8003a90:	440b      	add	r3, r1
 8003a92:	2200      	movs	r2, #0
 8003a94:	601a      	str	r2, [r3, #0]
 8003a96:	7bfb      	ldrb	r3, [r7, #15]
 8003a98:	3301      	adds	r3, #1
 8003a9a:	73fb      	strb	r3, [r7, #15]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	791b      	ldrb	r3, [r3, #4]
 8003aa0:	7bfa      	ldrb	r2, [r7, #15]
 8003aa2:	429a      	cmp	r2, r3
 8003aa4:	d3bb      	bcc.n	8003a1e <HAL_PCD_Init+0x44>
 8003aa6:	2300      	movs	r3, #0
 8003aa8:	73fb      	strb	r3, [r7, #15]
 8003aaa:	e044      	b.n	8003b36 <HAL_PCD_Init+0x15c>
 8003aac:	7bfa      	ldrb	r2, [r7, #15]
 8003aae:	6879      	ldr	r1, [r7, #4]
 8003ab0:	4613      	mov	r3, r2
 8003ab2:	009b      	lsls	r3, r3, #2
 8003ab4:	4413      	add	r3, r2
 8003ab6:	00db      	lsls	r3, r3, #3
 8003ab8:	440b      	add	r3, r1
 8003aba:	f203 1351 	addw	r3, r3, #337	@ 0x151
 8003abe:	2200      	movs	r2, #0
 8003ac0:	701a      	strb	r2, [r3, #0]
 8003ac2:	7bfa      	ldrb	r2, [r7, #15]
 8003ac4:	6879      	ldr	r1, [r7, #4]
 8003ac6:	4613      	mov	r3, r2
 8003ac8:	009b      	lsls	r3, r3, #2
 8003aca:	4413      	add	r3, r2
 8003acc:	00db      	lsls	r3, r3, #3
 8003ace:	440b      	add	r3, r1
 8003ad0:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8003ad4:	7bfa      	ldrb	r2, [r7, #15]
 8003ad6:	701a      	strb	r2, [r3, #0]
 8003ad8:	7bfa      	ldrb	r2, [r7, #15]
 8003ada:	6879      	ldr	r1, [r7, #4]
 8003adc:	4613      	mov	r3, r2
 8003ade:	009b      	lsls	r3, r3, #2
 8003ae0:	4413      	add	r3, r2
 8003ae2:	00db      	lsls	r3, r3, #3
 8003ae4:	440b      	add	r3, r1
 8003ae6:	f203 1353 	addw	r3, r3, #339	@ 0x153
 8003aea:	2200      	movs	r2, #0
 8003aec:	701a      	strb	r2, [r3, #0]
 8003aee:	7bfa      	ldrb	r2, [r7, #15]
 8003af0:	6879      	ldr	r1, [r7, #4]
 8003af2:	4613      	mov	r3, r2
 8003af4:	009b      	lsls	r3, r3, #2
 8003af6:	4413      	add	r3, r2
 8003af8:	00db      	lsls	r3, r3, #3
 8003afa:	440b      	add	r3, r1
 8003afc:	f503 73b0 	add.w	r3, r3, #352	@ 0x160
 8003b00:	2200      	movs	r2, #0
 8003b02:	601a      	str	r2, [r3, #0]
 8003b04:	7bfa      	ldrb	r2, [r7, #15]
 8003b06:	6879      	ldr	r1, [r7, #4]
 8003b08:	4613      	mov	r3, r2
 8003b0a:	009b      	lsls	r3, r3, #2
 8003b0c:	4413      	add	r3, r2
 8003b0e:	00db      	lsls	r3, r3, #3
 8003b10:	440b      	add	r3, r1
 8003b12:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8003b16:	2200      	movs	r2, #0
 8003b18:	601a      	str	r2, [r3, #0]
 8003b1a:	7bfa      	ldrb	r2, [r7, #15]
 8003b1c:	6879      	ldr	r1, [r7, #4]
 8003b1e:	4613      	mov	r3, r2
 8003b20:	009b      	lsls	r3, r3, #2
 8003b22:	4413      	add	r3, r2
 8003b24:	00db      	lsls	r3, r3, #3
 8003b26:	440b      	add	r3, r1
 8003b28:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	601a      	str	r2, [r3, #0]
 8003b30:	7bfb      	ldrb	r3, [r7, #15]
 8003b32:	3301      	adds	r3, #1
 8003b34:	73fb      	strb	r3, [r7, #15]
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	791b      	ldrb	r3, [r3, #4]
 8003b3a:	7bfa      	ldrb	r2, [r7, #15]
 8003b3c:	429a      	cmp	r2, r3
 8003b3e:	d3b5      	bcc.n	8003aac <HAL_PCD_Init+0xd2>
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	6818      	ldr	r0, [r3, #0]
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	3304      	adds	r3, #4
 8003b48:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003b4c:	f004 fdc5 	bl	80086da <USB_DevInit>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	2200      	movs	r2, #0
 8003b54:	731a      	strb	r2, [r3, #12]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	2201      	movs	r2, #1
 8003b5a:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8003b5e:	2300      	movs	r3, #0
 8003b60:	4618      	mov	r0, r3
 8003b62:	3710      	adds	r7, #16
 8003b64:	46bd      	mov	sp, r7
 8003b66:	bd80      	pop	{r7, pc}

08003b68 <HAL_PCD_Start>:
 8003b68:	b580      	push	{r7, lr}
 8003b6a:	b082      	sub	sp, #8
 8003b6c:	af00      	add	r7, sp, #0
 8003b6e:	6078      	str	r0, [r7, #4]
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8003b76:	2b01      	cmp	r3, #1
 8003b78:	d101      	bne.n	8003b7e <HAL_PCD_Start+0x16>
 8003b7a:	2302      	movs	r3, #2
 8003b7c:	e016      	b.n	8003bac <HAL_PCD_Start+0x44>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	2201      	movs	r2, #1
 8003b82:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	f004 fd73 	bl	8008676 <USB_EnableGlobalInt>
 8003b90:	2101      	movs	r1, #1
 8003b92:	6878      	ldr	r0, [r7, #4]
 8003b94:	f008 ffba 	bl	800cb0c <HAL_PCDEx_SetConnectionState>
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	4618      	mov	r0, r3
 8003b9e:	f007 f831 	bl	800ac04 <USB_DevConnect>
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	2200      	movs	r2, #0
 8003ba6:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003baa:	2300      	movs	r3, #0
 8003bac:	4618      	mov	r0, r3
 8003bae:	3708      	adds	r7, #8
 8003bb0:	46bd      	mov	sp, r7
 8003bb2:	bd80      	pop	{r7, pc}

08003bb4 <HAL_PCD_IRQHandler>:
 8003bb4:	b580      	push	{r7, lr}
 8003bb6:	b084      	sub	sp, #16
 8003bb8:	af00      	add	r7, sp, #0
 8003bba:	6078      	str	r0, [r7, #4]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	f007 f82a 	bl	800ac1a <USB_ReadInterrupts>
 8003bc6:	60f8      	str	r0, [r7, #12]
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d003      	beq.n	8003bda <HAL_PCD_IRQHandler+0x26>
 8003bd2:	6878      	ldr	r0, [r7, #4]
 8003bd4:	f000 fa99 	bl	800410a <PCD_EP_ISR_Handler>
 8003bd8:	e0bd      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003bda:	68fb      	ldr	r3, [r7, #12]
 8003bdc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d013      	beq.n	8003c0c <HAL_PCD_IRQHandler+0x58>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003bec:	b29a      	uxth	r2, r3
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003bf6:	b292      	uxth	r2, r2
 8003bf8:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003bfc:	6878      	ldr	r0, [r7, #4]
 8003bfe:	f008 fda6 	bl	800c74e <HAL_PCD_ResetCallback>
 8003c02:	2100      	movs	r1, #0
 8003c04:	6878      	ldr	r0, [r7, #4]
 8003c06:	f000 f8a9 	bl	8003d5c <HAL_PCD_SetAddress>
 8003c0a:	e0a4      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d00c      	beq.n	8003c30 <HAL_PCD_IRQHandler+0x7c>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003c1e:	b29a      	uxth	r2, r3
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003c28:	b292      	uxth	r2, r2
 8003c2a:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003c2e:	e092      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	d00c      	beq.n	8003c54 <HAL_PCD_IRQHandler+0xa0>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003c42:	b29a      	uxth	r2, r3
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003c4c:	b292      	uxth	r2, r2
 8003c4e:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003c52:	e080      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d027      	beq.n	8003cae <HAL_PCD_IRQHandler+0xfa>
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8003c66:	b29a      	uxth	r2, r3
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	f022 0204 	bic.w	r2, r2, #4
 8003c70:	b292      	uxth	r2, r2
 8003c72:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8003c7e:	b29a      	uxth	r2, r3
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	f022 0208 	bic.w	r2, r2, #8
 8003c88:	b292      	uxth	r2, r2
 8003c8a:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8003c8e:	6878      	ldr	r0, [r7, #4]
 8003c90:	f008 fd96 	bl	800c7c0 <HAL_PCD_ResumeCallback>
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003c9c:	b29a      	uxth	r2, r3
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003ca6:	b292      	uxth	r2, r2
 8003ca8:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003cac:	e053      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003cb4:	2b00      	cmp	r3, #0
 8003cb6:	d027      	beq.n	8003d08 <HAL_PCD_IRQHandler+0x154>
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8003cc0:	b29a      	uxth	r2, r3
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	f042 0208 	orr.w	r2, r2, #8
 8003cca:	b292      	uxth	r2, r2
 8003ccc:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003cd8:	b29a      	uxth	r2, r3
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003ce2:	b292      	uxth	r2, r2
 8003ce4:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8003cf0:	b29a      	uxth	r2, r3
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	f042 0204 	orr.w	r2, r2, #4
 8003cfa:	b292      	uxth	r2, r2
 8003cfc:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8003d00:	6878      	ldr	r0, [r7, #4]
 8003d02:	f008 fd43 	bl	800c78c <HAL_PCD_SuspendCallback>
 8003d06:	e026      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d00f      	beq.n	8003d32 <HAL_PCD_IRQHandler+0x17e>
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003d1a:	b29a      	uxth	r2, r3
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003d24:	b292      	uxth	r2, r2
 8003d26:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003d2a:	6878      	ldr	r0, [r7, #4]
 8003d2c:	f008 fd01 	bl	800c732 <HAL_PCD_SOFCallback>
 8003d30:	e011      	b.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d00c      	beq.n	8003d56 <HAL_PCD_IRQHandler+0x1a2>
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8003d44:	b29a      	uxth	r2, r3
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003d4e:	b292      	uxth	r2, r2
 8003d50:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8003d54:	bf00      	nop
 8003d56:	3710      	adds	r7, #16
 8003d58:	46bd      	mov	sp, r7
 8003d5a:	bd80      	pop	{r7, pc}

08003d5c <HAL_PCD_SetAddress>:
 8003d5c:	b580      	push	{r7, lr}
 8003d5e:	b082      	sub	sp, #8
 8003d60:	af00      	add	r7, sp, #0
 8003d62:	6078      	str	r0, [r7, #4]
 8003d64:	460b      	mov	r3, r1
 8003d66:	70fb      	strb	r3, [r7, #3]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8003d6e:	2b01      	cmp	r3, #1
 8003d70:	d101      	bne.n	8003d76 <HAL_PCD_SetAddress+0x1a>
 8003d72:	2302      	movs	r3, #2
 8003d74:	e012      	b.n	8003d9c <HAL_PCD_SetAddress+0x40>
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	2201      	movs	r2, #1
 8003d7a:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	78fa      	ldrb	r2, [r7, #3]
 8003d82:	731a      	strb	r2, [r3, #12]
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	78fa      	ldrb	r2, [r7, #3]
 8003d8a:	4611      	mov	r1, r2
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	f006 ff25 	bl	800abdc <USB_SetDevAddress>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	2200      	movs	r2, #0
 8003d96:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003d9a:	2300      	movs	r3, #0
 8003d9c:	4618      	mov	r0, r3
 8003d9e:	3708      	adds	r7, #8
 8003da0:	46bd      	mov	sp, r7
 8003da2:	bd80      	pop	{r7, pc}

08003da4 <HAL_PCD_EP_Open>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	b084      	sub	sp, #16
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	6078      	str	r0, [r7, #4]
 8003dac:	4608      	mov	r0, r1
 8003dae:	4611      	mov	r1, r2
 8003db0:	461a      	mov	r2, r3
 8003db2:	4603      	mov	r3, r0
 8003db4:	70fb      	strb	r3, [r7, #3]
 8003db6:	460b      	mov	r3, r1
 8003db8:	803b      	strh	r3, [r7, #0]
 8003dba:	4613      	mov	r3, r2
 8003dbc:	70bb      	strb	r3, [r7, #2]
 8003dbe:	2300      	movs	r3, #0
 8003dc0:	72fb      	strb	r3, [r7, #11]
 8003dc2:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	da0e      	bge.n	8003de8 <HAL_PCD_EP_Open+0x44>
 8003dca:	78fb      	ldrb	r3, [r7, #3]
 8003dcc:	f003 0207 	and.w	r2, r3, #7
 8003dd0:	4613      	mov	r3, r2
 8003dd2:	009b      	lsls	r3, r3, #2
 8003dd4:	4413      	add	r3, r2
 8003dd6:	00db      	lsls	r3, r3, #3
 8003dd8:	3310      	adds	r3, #16
 8003dda:	687a      	ldr	r2, [r7, #4]
 8003ddc:	4413      	add	r3, r2
 8003dde:	60fb      	str	r3, [r7, #12]
 8003de0:	68fb      	ldr	r3, [r7, #12]
 8003de2:	2201      	movs	r2, #1
 8003de4:	705a      	strb	r2, [r3, #1]
 8003de6:	e00e      	b.n	8003e06 <HAL_PCD_EP_Open+0x62>
 8003de8:	78fb      	ldrb	r3, [r7, #3]
 8003dea:	f003 0207 	and.w	r2, r3, #7
 8003dee:	4613      	mov	r3, r2
 8003df0:	009b      	lsls	r3, r3, #2
 8003df2:	4413      	add	r3, r2
 8003df4:	00db      	lsls	r3, r3, #3
 8003df6:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8003dfa:	687a      	ldr	r2, [r7, #4]
 8003dfc:	4413      	add	r3, r2
 8003dfe:	60fb      	str	r3, [r7, #12]
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	2200      	movs	r2, #0
 8003e04:	705a      	strb	r2, [r3, #1]
 8003e06:	78fb      	ldrb	r3, [r7, #3]
 8003e08:	f003 0307 	and.w	r3, r3, #7
 8003e0c:	b2da      	uxtb	r2, r3
 8003e0e:	68fb      	ldr	r3, [r7, #12]
 8003e10:	701a      	strb	r2, [r3, #0]
 8003e12:	883a      	ldrh	r2, [r7, #0]
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	611a      	str	r2, [r3, #16]
 8003e18:	68fb      	ldr	r3, [r7, #12]
 8003e1a:	78ba      	ldrb	r2, [r7, #2]
 8003e1c:	70da      	strb	r2, [r3, #3]
 8003e1e:	78bb      	ldrb	r3, [r7, #2]
 8003e20:	2b02      	cmp	r3, #2
 8003e22:	d102      	bne.n	8003e2a <HAL_PCD_EP_Open+0x86>
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	2200      	movs	r2, #0
 8003e28:	711a      	strb	r2, [r3, #4]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8003e30:	2b01      	cmp	r3, #1
 8003e32:	d101      	bne.n	8003e38 <HAL_PCD_EP_Open+0x94>
 8003e34:	2302      	movs	r3, #2
 8003e36:	e00e      	b.n	8003e56 <HAL_PCD_EP_Open+0xb2>
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	2201      	movs	r2, #1
 8003e3c:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	68f9      	ldr	r1, [r7, #12]
 8003e46:	4618      	mov	r0, r3
 8003e48:	f004 fc66 	bl	8008718 <USB_ActivateEndpoint>
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	2200      	movs	r2, #0
 8003e50:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003e54:	7afb      	ldrb	r3, [r7, #11]
 8003e56:	4618      	mov	r0, r3
 8003e58:	3710      	adds	r7, #16
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	bd80      	pop	{r7, pc}

08003e5e <HAL_PCD_EP_Close>:
 8003e5e:	b580      	push	{r7, lr}
 8003e60:	b084      	sub	sp, #16
 8003e62:	af00      	add	r7, sp, #0
 8003e64:	6078      	str	r0, [r7, #4]
 8003e66:	460b      	mov	r3, r1
 8003e68:	70fb      	strb	r3, [r7, #3]
 8003e6a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	da0e      	bge.n	8003e90 <HAL_PCD_EP_Close+0x32>
 8003e72:	78fb      	ldrb	r3, [r7, #3]
 8003e74:	f003 0207 	and.w	r2, r3, #7
 8003e78:	4613      	mov	r3, r2
 8003e7a:	009b      	lsls	r3, r3, #2
 8003e7c:	4413      	add	r3, r2
 8003e7e:	00db      	lsls	r3, r3, #3
 8003e80:	3310      	adds	r3, #16
 8003e82:	687a      	ldr	r2, [r7, #4]
 8003e84:	4413      	add	r3, r2
 8003e86:	60fb      	str	r3, [r7, #12]
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	2201      	movs	r2, #1
 8003e8c:	705a      	strb	r2, [r3, #1]
 8003e8e:	e00e      	b.n	8003eae <HAL_PCD_EP_Close+0x50>
 8003e90:	78fb      	ldrb	r3, [r7, #3]
 8003e92:	f003 0207 	and.w	r2, r3, #7
 8003e96:	4613      	mov	r3, r2
 8003e98:	009b      	lsls	r3, r3, #2
 8003e9a:	4413      	add	r3, r2
 8003e9c:	00db      	lsls	r3, r3, #3
 8003e9e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8003ea2:	687a      	ldr	r2, [r7, #4]
 8003ea4:	4413      	add	r3, r2
 8003ea6:	60fb      	str	r3, [r7, #12]
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	2200      	movs	r2, #0
 8003eac:	705a      	strb	r2, [r3, #1]
 8003eae:	78fb      	ldrb	r3, [r7, #3]
 8003eb0:	f003 0307 	and.w	r3, r3, #7
 8003eb4:	b2da      	uxtb	r2, r3
 8003eb6:	68fb      	ldr	r3, [r7, #12]
 8003eb8:	701a      	strb	r2, [r3, #0]
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8003ec0:	2b01      	cmp	r3, #1
 8003ec2:	d101      	bne.n	8003ec8 <HAL_PCD_EP_Close+0x6a>
 8003ec4:	2302      	movs	r3, #2
 8003ec6:	e00e      	b.n	8003ee6 <HAL_PCD_EP_Close+0x88>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	2201      	movs	r2, #1
 8003ecc:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	68f9      	ldr	r1, [r7, #12]
 8003ed6:	4618      	mov	r0, r3
 8003ed8:	f004 ffe2 	bl	8008ea0 <USB_DeactivateEndpoint>
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	2200      	movs	r2, #0
 8003ee0:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8003ee4:	2300      	movs	r3, #0
 8003ee6:	4618      	mov	r0, r3
 8003ee8:	3710      	adds	r7, #16
 8003eea:	46bd      	mov	sp, r7
 8003eec:	bd80      	pop	{r7, pc}

08003eee <HAL_PCD_EP_Receive>:
 8003eee:	b580      	push	{r7, lr}
 8003ef0:	b086      	sub	sp, #24
 8003ef2:	af00      	add	r7, sp, #0
 8003ef4:	60f8      	str	r0, [r7, #12]
 8003ef6:	607a      	str	r2, [r7, #4]
 8003ef8:	603b      	str	r3, [r7, #0]
 8003efa:	460b      	mov	r3, r1
 8003efc:	72fb      	strb	r3, [r7, #11]
 8003efe:	7afb      	ldrb	r3, [r7, #11]
 8003f00:	f003 0207 	and.w	r2, r3, #7
 8003f04:	4613      	mov	r3, r2
 8003f06:	009b      	lsls	r3, r3, #2
 8003f08:	4413      	add	r3, r2
 8003f0a:	00db      	lsls	r3, r3, #3
 8003f0c:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8003f10:	68fa      	ldr	r2, [r7, #12]
 8003f12:	4413      	add	r3, r2
 8003f14:	617b      	str	r3, [r7, #20]
 8003f16:	697b      	ldr	r3, [r7, #20]
 8003f18:	687a      	ldr	r2, [r7, #4]
 8003f1a:	615a      	str	r2, [r3, #20]
 8003f1c:	697b      	ldr	r3, [r7, #20]
 8003f1e:	683a      	ldr	r2, [r7, #0]
 8003f20:	619a      	str	r2, [r3, #24]
 8003f22:	697b      	ldr	r3, [r7, #20]
 8003f24:	2200      	movs	r2, #0
 8003f26:	61da      	str	r2, [r3, #28]
 8003f28:	697b      	ldr	r3, [r7, #20]
 8003f2a:	2200      	movs	r2, #0
 8003f2c:	705a      	strb	r2, [r3, #1]
 8003f2e:	7afb      	ldrb	r3, [r7, #11]
 8003f30:	f003 0307 	and.w	r3, r3, #7
 8003f34:	b2da      	uxtb	r2, r3
 8003f36:	697b      	ldr	r3, [r7, #20]
 8003f38:	701a      	strb	r2, [r3, #0]
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	6979      	ldr	r1, [r7, #20]
 8003f40:	4618      	mov	r0, r3
 8003f42:	f005 f99a 	bl	800927a <USB_EPStartXfer>
 8003f46:	2300      	movs	r3, #0
 8003f48:	4618      	mov	r0, r3
 8003f4a:	3718      	adds	r7, #24
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	bd80      	pop	{r7, pc}

08003f50 <HAL_PCD_EP_Transmit>:
 8003f50:	b580      	push	{r7, lr}
 8003f52:	b086      	sub	sp, #24
 8003f54:	af00      	add	r7, sp, #0
 8003f56:	60f8      	str	r0, [r7, #12]
 8003f58:	607a      	str	r2, [r7, #4]
 8003f5a:	603b      	str	r3, [r7, #0]
 8003f5c:	460b      	mov	r3, r1
 8003f5e:	72fb      	strb	r3, [r7, #11]
 8003f60:	7afb      	ldrb	r3, [r7, #11]
 8003f62:	f003 0207 	and.w	r2, r3, #7
 8003f66:	4613      	mov	r3, r2
 8003f68:	009b      	lsls	r3, r3, #2
 8003f6a:	4413      	add	r3, r2
 8003f6c:	00db      	lsls	r3, r3, #3
 8003f6e:	3310      	adds	r3, #16
 8003f70:	68fa      	ldr	r2, [r7, #12]
 8003f72:	4413      	add	r3, r2
 8003f74:	617b      	str	r3, [r7, #20]
 8003f76:	697b      	ldr	r3, [r7, #20]
 8003f78:	687a      	ldr	r2, [r7, #4]
 8003f7a:	615a      	str	r2, [r3, #20]
 8003f7c:	697b      	ldr	r3, [r7, #20]
 8003f7e:	683a      	ldr	r2, [r7, #0]
 8003f80:	619a      	str	r2, [r3, #24]
 8003f82:	697b      	ldr	r3, [r7, #20]
 8003f84:	2201      	movs	r2, #1
 8003f86:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003f8a:	697b      	ldr	r3, [r7, #20]
 8003f8c:	683a      	ldr	r2, [r7, #0]
 8003f8e:	621a      	str	r2, [r3, #32]
 8003f90:	697b      	ldr	r3, [r7, #20]
 8003f92:	2200      	movs	r2, #0
 8003f94:	61da      	str	r2, [r3, #28]
 8003f96:	697b      	ldr	r3, [r7, #20]
 8003f98:	2201      	movs	r2, #1
 8003f9a:	705a      	strb	r2, [r3, #1]
 8003f9c:	7afb      	ldrb	r3, [r7, #11]
 8003f9e:	f003 0307 	and.w	r3, r3, #7
 8003fa2:	b2da      	uxtb	r2, r3
 8003fa4:	697b      	ldr	r3, [r7, #20]
 8003fa6:	701a      	strb	r2, [r3, #0]
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	6979      	ldr	r1, [r7, #20]
 8003fae:	4618      	mov	r0, r3
 8003fb0:	f005 f963 	bl	800927a <USB_EPStartXfer>
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	3718      	adds	r7, #24
 8003fba:	46bd      	mov	sp, r7
 8003fbc:	bd80      	pop	{r7, pc}

08003fbe <HAL_PCD_EP_SetStall>:
 8003fbe:	b580      	push	{r7, lr}
 8003fc0:	b084      	sub	sp, #16
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
 8003fc6:	460b      	mov	r3, r1
 8003fc8:	70fb      	strb	r3, [r7, #3]
 8003fca:	78fb      	ldrb	r3, [r7, #3]
 8003fcc:	f003 0307 	and.w	r3, r3, #7
 8003fd0:	687a      	ldr	r2, [r7, #4]
 8003fd2:	7912      	ldrb	r2, [r2, #4]
 8003fd4:	4293      	cmp	r3, r2
 8003fd6:	d901      	bls.n	8003fdc <HAL_PCD_EP_SetStall+0x1e>
 8003fd8:	2301      	movs	r3, #1
 8003fda:	e03e      	b.n	800405a <HAL_PCD_EP_SetStall+0x9c>
 8003fdc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	da0e      	bge.n	8004002 <HAL_PCD_EP_SetStall+0x44>
 8003fe4:	78fb      	ldrb	r3, [r7, #3]
 8003fe6:	f003 0207 	and.w	r2, r3, #7
 8003fea:	4613      	mov	r3, r2
 8003fec:	009b      	lsls	r3, r3, #2
 8003fee:	4413      	add	r3, r2
 8003ff0:	00db      	lsls	r3, r3, #3
 8003ff2:	3310      	adds	r3, #16
 8003ff4:	687a      	ldr	r2, [r7, #4]
 8003ff6:	4413      	add	r3, r2
 8003ff8:	60fb      	str	r3, [r7, #12]
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	2201      	movs	r2, #1
 8003ffe:	705a      	strb	r2, [r3, #1]
 8004000:	e00c      	b.n	800401c <HAL_PCD_EP_SetStall+0x5e>
 8004002:	78fa      	ldrb	r2, [r7, #3]
 8004004:	4613      	mov	r3, r2
 8004006:	009b      	lsls	r3, r3, #2
 8004008:	4413      	add	r3, r2
 800400a:	00db      	lsls	r3, r3, #3
 800400c:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8004010:	687a      	ldr	r2, [r7, #4]
 8004012:	4413      	add	r3, r2
 8004014:	60fb      	str	r3, [r7, #12]
 8004016:	68fb      	ldr	r3, [r7, #12]
 8004018:	2200      	movs	r2, #0
 800401a:	705a      	strb	r2, [r3, #1]
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	2201      	movs	r2, #1
 8004020:	709a      	strb	r2, [r3, #2]
 8004022:	78fb      	ldrb	r3, [r7, #3]
 8004024:	f003 0307 	and.w	r3, r3, #7
 8004028:	b2da      	uxtb	r2, r3
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	701a      	strb	r2, [r3, #0]
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8004034:	2b01      	cmp	r3, #1
 8004036:	d101      	bne.n	800403c <HAL_PCD_EP_SetStall+0x7e>
 8004038:	2302      	movs	r3, #2
 800403a:	e00e      	b.n	800405a <HAL_PCD_EP_SetStall+0x9c>
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	2201      	movs	r2, #1
 8004040:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	68f9      	ldr	r1, [r7, #12]
 800404a:	4618      	mov	r0, r3
 800404c:	f006 fcc7 	bl	800a9de <USB_EPSetStall>
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	2200      	movs	r2, #0
 8004054:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8004058:	2300      	movs	r3, #0
 800405a:	4618      	mov	r0, r3
 800405c:	3710      	adds	r7, #16
 800405e:	46bd      	mov	sp, r7
 8004060:	bd80      	pop	{r7, pc}

08004062 <HAL_PCD_EP_ClrStall>:
 8004062:	b580      	push	{r7, lr}
 8004064:	b084      	sub	sp, #16
 8004066:	af00      	add	r7, sp, #0
 8004068:	6078      	str	r0, [r7, #4]
 800406a:	460b      	mov	r3, r1
 800406c:	70fb      	strb	r3, [r7, #3]
 800406e:	78fb      	ldrb	r3, [r7, #3]
 8004070:	f003 030f 	and.w	r3, r3, #15
 8004074:	687a      	ldr	r2, [r7, #4]
 8004076:	7912      	ldrb	r2, [r2, #4]
 8004078:	4293      	cmp	r3, r2
 800407a:	d901      	bls.n	8004080 <HAL_PCD_EP_ClrStall+0x1e>
 800407c:	2301      	movs	r3, #1
 800407e:	e040      	b.n	8004102 <HAL_PCD_EP_ClrStall+0xa0>
 8004080:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004084:	2b00      	cmp	r3, #0
 8004086:	da0e      	bge.n	80040a6 <HAL_PCD_EP_ClrStall+0x44>
 8004088:	78fb      	ldrb	r3, [r7, #3]
 800408a:	f003 0207 	and.w	r2, r3, #7
 800408e:	4613      	mov	r3, r2
 8004090:	009b      	lsls	r3, r3, #2
 8004092:	4413      	add	r3, r2
 8004094:	00db      	lsls	r3, r3, #3
 8004096:	3310      	adds	r3, #16
 8004098:	687a      	ldr	r2, [r7, #4]
 800409a:	4413      	add	r3, r2
 800409c:	60fb      	str	r3, [r7, #12]
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	2201      	movs	r2, #1
 80040a2:	705a      	strb	r2, [r3, #1]
 80040a4:	e00e      	b.n	80040c4 <HAL_PCD_EP_ClrStall+0x62>
 80040a6:	78fb      	ldrb	r3, [r7, #3]
 80040a8:	f003 0207 	and.w	r2, r3, #7
 80040ac:	4613      	mov	r3, r2
 80040ae:	009b      	lsls	r3, r3, #2
 80040b0:	4413      	add	r3, r2
 80040b2:	00db      	lsls	r3, r3, #3
 80040b4:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80040b8:	687a      	ldr	r2, [r7, #4]
 80040ba:	4413      	add	r3, r2
 80040bc:	60fb      	str	r3, [r7, #12]
 80040be:	68fb      	ldr	r3, [r7, #12]
 80040c0:	2200      	movs	r2, #0
 80040c2:	705a      	strb	r2, [r3, #1]
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	2200      	movs	r2, #0
 80040c8:	709a      	strb	r2, [r3, #2]
 80040ca:	78fb      	ldrb	r3, [r7, #3]
 80040cc:	f003 0307 	and.w	r3, r3, #7
 80040d0:	b2da      	uxtb	r2, r3
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	701a      	strb	r2, [r3, #0]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 80040dc:	2b01      	cmp	r3, #1
 80040de:	d101      	bne.n	80040e4 <HAL_PCD_EP_ClrStall+0x82>
 80040e0:	2302      	movs	r3, #2
 80040e2:	e00e      	b.n	8004102 <HAL_PCD_EP_ClrStall+0xa0>
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	2201      	movs	r2, #1
 80040e8:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	68f9      	ldr	r1, [r7, #12]
 80040f2:	4618      	mov	r0, r3
 80040f4:	f006 fcc4 	bl	800aa80 <USB_EPClearStall>
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	2200      	movs	r2, #0
 80040fc:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8004100:	2300      	movs	r3, #0
 8004102:	4618      	mov	r0, r3
 8004104:	3710      	adds	r7, #16
 8004106:	46bd      	mov	sp, r7
 8004108:	bd80      	pop	{r7, pc}

0800410a <PCD_EP_ISR_Handler>:
 800410a:	b580      	push	{r7, lr}
 800410c:	b096      	sub	sp, #88	@ 0x58
 800410e:	af00      	add	r7, sp, #0
 8004110:	6078      	str	r0, [r7, #4]
 8004112:	e3bb      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 800411c:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
 8004120:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8004124:	b2db      	uxtb	r3, r3
 8004126:	f003 030f 	and.w	r3, r3, #15
 800412a:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 800412e:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8004132:	2b00      	cmp	r3, #0
 8004134:	f040 8175 	bne.w	8004422 <PCD_EP_ISR_Handler+0x318>
 8004138:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 800413c:	f003 0310 	and.w	r3, r3, #16
 8004140:	2b00      	cmp	r3, #0
 8004142:	d14e      	bne.n	80041e2 <PCD_EP_ISR_Handler+0xd8>
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	881b      	ldrh	r3, [r3, #0]
 800414a:	b29b      	uxth	r3, r3
 800414c:	f423 43e1 	bic.w	r3, r3, #28800	@ 0x7080
 8004150:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004154:	81fb      	strh	r3, [r7, #14]
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681a      	ldr	r2, [r3, #0]
 800415a:	89fb      	ldrh	r3, [r7, #14]
 800415c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004160:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004164:	b29b      	uxth	r3, r3
 8004166:	8013      	strh	r3, [r2, #0]
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	3310      	adds	r3, #16
 800416c:	657b      	str	r3, [r7, #84]	@ 0x54
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004176:	b29b      	uxth	r3, r3
 8004178:	461a      	mov	r2, r3
 800417a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800417c:	781b      	ldrb	r3, [r3, #0]
 800417e:	00db      	lsls	r3, r3, #3
 8004180:	4413      	add	r3, r2
 8004182:	3302      	adds	r3, #2
 8004184:	005b      	lsls	r3, r3, #1
 8004186:	687a      	ldr	r2, [r7, #4]
 8004188:	6812      	ldr	r2, [r2, #0]
 800418a:	4413      	add	r3, r2
 800418c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004190:	881b      	ldrh	r3, [r3, #0]
 8004192:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8004196:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004198:	61da      	str	r2, [r3, #28]
 800419a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800419c:	695a      	ldr	r2, [r3, #20]
 800419e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80041a0:	69db      	ldr	r3, [r3, #28]
 80041a2:	441a      	add	r2, r3
 80041a4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80041a6:	615a      	str	r2, [r3, #20]
 80041a8:	2100      	movs	r1, #0
 80041aa:	6878      	ldr	r0, [r7, #4]
 80041ac:	f008 faa7 	bl	800c6fe <HAL_PCD_DataInStageCallback>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	7b1b      	ldrb	r3, [r3, #12]
 80041b4:	b2db      	uxtb	r3, r3
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	f000 8368 	beq.w	800488c <PCD_EP_ISR_Handler+0x782>
 80041bc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80041be:	699b      	ldr	r3, [r3, #24]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	f040 8363 	bne.w	800488c <PCD_EP_ISR_Handler+0x782>
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	7b1b      	ldrb	r3, [r3, #12]
 80041ca:	b2db      	uxtb	r3, r3
 80041cc:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80041d0:	b2da      	uxtb	r2, r3
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	f8a3 204c 	strh.w	r2, [r3, #76]	@ 0x4c
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	2200      	movs	r2, #0
 80041de:	731a      	strb	r2, [r3, #12]
 80041e0:	e354      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80041e8:	657b      	str	r3, [r7, #84]	@ 0x54
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	881b      	ldrh	r3, [r3, #0]
 80041f0:	f8a7 304c 	strh.w	r3, [r7, #76]	@ 0x4c
 80041f4:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 80041f8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	d034      	beq.n	800426a <PCD_EP_ISR_Handler+0x160>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004208:	b29b      	uxth	r3, r3
 800420a:	461a      	mov	r2, r3
 800420c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800420e:	781b      	ldrb	r3, [r3, #0]
 8004210:	00db      	lsls	r3, r3, #3
 8004212:	4413      	add	r3, r2
 8004214:	3306      	adds	r3, #6
 8004216:	005b      	lsls	r3, r3, #1
 8004218:	687a      	ldr	r2, [r7, #4]
 800421a:	6812      	ldr	r2, [r2, #0]
 800421c:	4413      	add	r3, r2
 800421e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004222:	881b      	ldrh	r3, [r3, #0]
 8004224:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8004228:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800422a:	61da      	str	r2, [r3, #28]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	6818      	ldr	r0, [r3, #0]
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	f503 7126 	add.w	r1, r3, #664	@ 0x298
 8004236:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004238:	88da      	ldrh	r2, [r3, #6]
 800423a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800423c:	69db      	ldr	r3, [r3, #28]
 800423e:	b29b      	uxth	r3, r3
 8004240:	f006 fd41 	bl	800acc6 <USB_ReadPMA>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	881b      	ldrh	r3, [r3, #0]
 800424a:	b29a      	uxth	r2, r3
 800424c:	f640 738f 	movw	r3, #3983	@ 0xf8f
 8004250:	4013      	ands	r3, r2
 8004252:	823b      	strh	r3, [r7, #16]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	8a3a      	ldrh	r2, [r7, #16]
 800425a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800425e:	b292      	uxth	r2, r2
 8004260:	801a      	strh	r2, [r3, #0]
 8004262:	6878      	ldr	r0, [r7, #4]
 8004264:	f008 fa1e 	bl	800c6a4 <HAL_PCD_SetupStageCallback>
 8004268:	e310      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 800426a:	f9b7 304c 	ldrsh.w	r3, [r7, #76]	@ 0x4c
 800426e:	2b00      	cmp	r3, #0
 8004270:	f280 830c 	bge.w	800488c <PCD_EP_ISR_Handler+0x782>
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	881b      	ldrh	r3, [r3, #0]
 800427a:	b29a      	uxth	r2, r3
 800427c:	f640 738f 	movw	r3, #3983	@ 0xf8f
 8004280:	4013      	ands	r3, r2
 8004282:	83fb      	strh	r3, [r7, #30]
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	8bfa      	ldrh	r2, [r7, #30]
 800428a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800428e:	b292      	uxth	r2, r2
 8004290:	801a      	strh	r2, [r3, #0]
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800429a:	b29b      	uxth	r3, r3
 800429c:	461a      	mov	r2, r3
 800429e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042a0:	781b      	ldrb	r3, [r3, #0]
 80042a2:	00db      	lsls	r3, r3, #3
 80042a4:	4413      	add	r3, r2
 80042a6:	3306      	adds	r3, #6
 80042a8:	005b      	lsls	r3, r3, #1
 80042aa:	687a      	ldr	r2, [r7, #4]
 80042ac:	6812      	ldr	r2, [r2, #0]
 80042ae:	4413      	add	r3, r2
 80042b0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80042b4:	881b      	ldrh	r3, [r3, #0]
 80042b6:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80042ba:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042bc:	61da      	str	r2, [r3, #28]
 80042be:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042c0:	69db      	ldr	r3, [r3, #28]
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d019      	beq.n	80042fa <PCD_EP_ISR_Handler+0x1f0>
 80042c6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042c8:	695b      	ldr	r3, [r3, #20]
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d015      	beq.n	80042fa <PCD_EP_ISR_Handler+0x1f0>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	6818      	ldr	r0, [r3, #0]
 80042d2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042d4:	6959      	ldr	r1, [r3, #20]
 80042d6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042d8:	88da      	ldrh	r2, [r3, #6]
 80042da:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042dc:	69db      	ldr	r3, [r3, #28]
 80042de:	b29b      	uxth	r3, r3
 80042e0:	f006 fcf1 	bl	800acc6 <USB_ReadPMA>
 80042e4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042e6:	695a      	ldr	r2, [r3, #20]
 80042e8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042ea:	69db      	ldr	r3, [r3, #28]
 80042ec:	441a      	add	r2, r3
 80042ee:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80042f0:	615a      	str	r2, [r3, #20]
 80042f2:	2100      	movs	r1, #0
 80042f4:	6878      	ldr	r0, [r7, #4]
 80042f6:	f008 f9e7 	bl	800c6c8 <HAL_PCD_DataOutStageCallback>
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	881b      	ldrh	r3, [r3, #0]
 8004300:	f8a7 304c 	strh.w	r3, [r7, #76]	@ 0x4c
 8004304:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 8004308:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800430c:	2b00      	cmp	r3, #0
 800430e:	f040 82bd 	bne.w	800488c <PCD_EP_ISR_Handler+0x782>
 8004312:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 8004316:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800431a:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800431e:	f000 82b5 	beq.w	800488c <PCD_EP_ISR_Handler+0x782>
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	61bb      	str	r3, [r7, #24]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004330:	b29b      	uxth	r3, r3
 8004332:	461a      	mov	r2, r3
 8004334:	69bb      	ldr	r3, [r7, #24]
 8004336:	4413      	add	r3, r2
 8004338:	61bb      	str	r3, [r7, #24]
 800433a:	69bb      	ldr	r3, [r7, #24]
 800433c:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004340:	617b      	str	r3, [r7, #20]
 8004342:	697b      	ldr	r3, [r7, #20]
 8004344:	881b      	ldrh	r3, [r3, #0]
 8004346:	b29b      	uxth	r3, r3
 8004348:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800434c:	b29a      	uxth	r2, r3
 800434e:	697b      	ldr	r3, [r7, #20]
 8004350:	801a      	strh	r2, [r3, #0]
 8004352:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004354:	691b      	ldr	r3, [r3, #16]
 8004356:	2b00      	cmp	r3, #0
 8004358:	d10a      	bne.n	8004370 <PCD_EP_ISR_Handler+0x266>
 800435a:	697b      	ldr	r3, [r7, #20]
 800435c:	881b      	ldrh	r3, [r3, #0]
 800435e:	b29b      	uxth	r3, r3
 8004360:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004364:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004368:	b29a      	uxth	r2, r3
 800436a:	697b      	ldr	r3, [r7, #20]
 800436c:	801a      	strh	r2, [r3, #0]
 800436e:	e039      	b.n	80043e4 <PCD_EP_ISR_Handler+0x2da>
 8004370:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004372:	691b      	ldr	r3, [r3, #16]
 8004374:	2b3e      	cmp	r3, #62	@ 0x3e
 8004376:	d818      	bhi.n	80043aa <PCD_EP_ISR_Handler+0x2a0>
 8004378:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800437a:	691b      	ldr	r3, [r3, #16]
 800437c:	085b      	lsrs	r3, r3, #1
 800437e:	647b      	str	r3, [r7, #68]	@ 0x44
 8004380:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004382:	691b      	ldr	r3, [r3, #16]
 8004384:	f003 0301 	and.w	r3, r3, #1
 8004388:	2b00      	cmp	r3, #0
 800438a:	d002      	beq.n	8004392 <PCD_EP_ISR_Handler+0x288>
 800438c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800438e:	3301      	adds	r3, #1
 8004390:	647b      	str	r3, [r7, #68]	@ 0x44
 8004392:	697b      	ldr	r3, [r7, #20]
 8004394:	881b      	ldrh	r3, [r3, #0]
 8004396:	b29a      	uxth	r2, r3
 8004398:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800439a:	b29b      	uxth	r3, r3
 800439c:	029b      	lsls	r3, r3, #10
 800439e:	b29b      	uxth	r3, r3
 80043a0:	4313      	orrs	r3, r2
 80043a2:	b29a      	uxth	r2, r3
 80043a4:	697b      	ldr	r3, [r7, #20]
 80043a6:	801a      	strh	r2, [r3, #0]
 80043a8:	e01c      	b.n	80043e4 <PCD_EP_ISR_Handler+0x2da>
 80043aa:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80043ac:	691b      	ldr	r3, [r3, #16]
 80043ae:	095b      	lsrs	r3, r3, #5
 80043b0:	647b      	str	r3, [r7, #68]	@ 0x44
 80043b2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80043b4:	691b      	ldr	r3, [r3, #16]
 80043b6:	f003 031f 	and.w	r3, r3, #31
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	d102      	bne.n	80043c4 <PCD_EP_ISR_Handler+0x2ba>
 80043be:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80043c0:	3b01      	subs	r3, #1
 80043c2:	647b      	str	r3, [r7, #68]	@ 0x44
 80043c4:	697b      	ldr	r3, [r7, #20]
 80043c6:	881b      	ldrh	r3, [r3, #0]
 80043c8:	b29a      	uxth	r2, r3
 80043ca:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80043cc:	b29b      	uxth	r3, r3
 80043ce:	029b      	lsls	r3, r3, #10
 80043d0:	b29b      	uxth	r3, r3
 80043d2:	4313      	orrs	r3, r2
 80043d4:	b29b      	uxth	r3, r3
 80043d6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80043da:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80043de:	b29a      	uxth	r2, r3
 80043e0:	697b      	ldr	r3, [r7, #20]
 80043e2:	801a      	strh	r2, [r3, #0]
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	881b      	ldrh	r3, [r3, #0]
 80043ea:	b29b      	uxth	r3, r3
 80043ec:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80043f0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80043f4:	827b      	strh	r3, [r7, #18]
 80043f6:	8a7b      	ldrh	r3, [r7, #18]
 80043f8:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 80043fc:	827b      	strh	r3, [r7, #18]
 80043fe:	8a7b      	ldrh	r3, [r7, #18]
 8004400:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8004404:	827b      	strh	r3, [r7, #18]
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681a      	ldr	r2, [r3, #0]
 800440a:	8a7b      	ldrh	r3, [r7, #18]
 800440c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004410:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004414:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004418:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800441c:	b29b      	uxth	r3, r3
 800441e:	8013      	strh	r3, [r2, #0]
 8004420:	e234      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	461a      	mov	r2, r3
 8004428:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 800442c:	009b      	lsls	r3, r3, #2
 800442e:	4413      	add	r3, r2
 8004430:	881b      	ldrh	r3, [r3, #0]
 8004432:	f8a7 304c 	strh.w	r3, [r7, #76]	@ 0x4c
 8004436:	f9b7 304c 	ldrsh.w	r3, [r7, #76]	@ 0x4c
 800443a:	2b00      	cmp	r3, #0
 800443c:	f280 80fc 	bge.w	8004638 <PCD_EP_ISR_Handler+0x52e>
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	461a      	mov	r2, r3
 8004446:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 800444a:	009b      	lsls	r3, r3, #2
 800444c:	4413      	add	r3, r2
 800444e:	881b      	ldrh	r3, [r3, #0]
 8004450:	b29a      	uxth	r2, r3
 8004452:	f640 738f 	movw	r3, #3983	@ 0xf8f
 8004456:	4013      	ands	r3, r2
 8004458:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	461a      	mov	r2, r3
 8004462:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8004466:	009b      	lsls	r3, r3, #2
 8004468:	4413      	add	r3, r2
 800446a:	f8b7 204a 	ldrh.w	r2, [r7, #74]	@ 0x4a
 800446e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8004472:	b292      	uxth	r2, r2
 8004474:	801a      	strh	r2, [r3, #0]
 8004476:	f897 204f 	ldrb.w	r2, [r7, #79]	@ 0x4f
 800447a:	4613      	mov	r3, r2
 800447c:	009b      	lsls	r3, r3, #2
 800447e:	4413      	add	r3, r2
 8004480:	00db      	lsls	r3, r3, #3
 8004482:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8004486:	687a      	ldr	r2, [r7, #4]
 8004488:	4413      	add	r3, r2
 800448a:	657b      	str	r3, [r7, #84]	@ 0x54
 800448c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800448e:	7b1b      	ldrb	r3, [r3, #12]
 8004490:	2b00      	cmp	r3, #0
 8004492:	d125      	bne.n	80044e0 <PCD_EP_ISR_Handler+0x3d6>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800449c:	b29b      	uxth	r3, r3
 800449e:	461a      	mov	r2, r3
 80044a0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80044a2:	781b      	ldrb	r3, [r3, #0]
 80044a4:	00db      	lsls	r3, r3, #3
 80044a6:	4413      	add	r3, r2
 80044a8:	3306      	adds	r3, #6
 80044aa:	005b      	lsls	r3, r3, #1
 80044ac:	687a      	ldr	r2, [r7, #4]
 80044ae:	6812      	ldr	r2, [r2, #0]
 80044b0:	4413      	add	r3, r2
 80044b2:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80044b6:	881b      	ldrh	r3, [r3, #0]
 80044b8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80044bc:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 80044c0:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	f000 8092 	beq.w	80045ee <PCD_EP_ISR_Handler+0x4e4>
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	6818      	ldr	r0, [r3, #0]
 80044ce:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80044d0:	6959      	ldr	r1, [r3, #20]
 80044d2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80044d4:	88da      	ldrh	r2, [r3, #6]
 80044d6:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80044da:	f006 fbf4 	bl	800acc6 <USB_ReadPMA>
 80044de:	e086      	b.n	80045ee <PCD_EP_ISR_Handler+0x4e4>
 80044e0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80044e2:	78db      	ldrb	r3, [r3, #3]
 80044e4:	2b02      	cmp	r3, #2
 80044e6:	d10a      	bne.n	80044fe <PCD_EP_ISR_Handler+0x3f4>
 80044e8:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 80044ec:	461a      	mov	r2, r3
 80044ee:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80044f0:	6878      	ldr	r0, [r7, #4]
 80044f2:	f000 f9d9 	bl	80048a8 <HAL_PCD_EP_DB_Receive>
 80044f6:	4603      	mov	r3, r0
 80044f8:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 80044fc:	e077      	b.n	80045ee <PCD_EP_ISR_Handler+0x4e4>
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	461a      	mov	r2, r3
 8004504:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004506:	781b      	ldrb	r3, [r3, #0]
 8004508:	009b      	lsls	r3, r3, #2
 800450a:	4413      	add	r3, r2
 800450c:	881b      	ldrh	r3, [r3, #0]
 800450e:	b29b      	uxth	r3, r3
 8004510:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004514:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004518:	f8a7 3052 	strh.w	r3, [r7, #82]	@ 0x52
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	461a      	mov	r2, r3
 8004522:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004524:	781b      	ldrb	r3, [r3, #0]
 8004526:	009b      	lsls	r3, r3, #2
 8004528:	441a      	add	r2, r3
 800452a:	f8b7 3052 	ldrh.w	r3, [r7, #82]	@ 0x52
 800452e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004532:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004536:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800453a:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800453e:	b29b      	uxth	r3, r3
 8004540:	8013      	strh	r3, [r2, #0]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	461a      	mov	r2, r3
 8004548:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800454a:	781b      	ldrb	r3, [r3, #0]
 800454c:	009b      	lsls	r3, r3, #2
 800454e:	4413      	add	r3, r2
 8004550:	881b      	ldrh	r3, [r3, #0]
 8004552:	b29b      	uxth	r3, r3
 8004554:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004558:	2b00      	cmp	r3, #0
 800455a:	d024      	beq.n	80045a6 <PCD_EP_ISR_Handler+0x49c>
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004564:	b29b      	uxth	r3, r3
 8004566:	461a      	mov	r2, r3
 8004568:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800456a:	781b      	ldrb	r3, [r3, #0]
 800456c:	00db      	lsls	r3, r3, #3
 800456e:	4413      	add	r3, r2
 8004570:	3302      	adds	r3, #2
 8004572:	005b      	lsls	r3, r3, #1
 8004574:	687a      	ldr	r2, [r7, #4]
 8004576:	6812      	ldr	r2, [r2, #0]
 8004578:	4413      	add	r3, r2
 800457a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800457e:	881b      	ldrh	r3, [r3, #0]
 8004580:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004584:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 8004588:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 800458c:	2b00      	cmp	r3, #0
 800458e:	d02e      	beq.n	80045ee <PCD_EP_ISR_Handler+0x4e4>
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	6818      	ldr	r0, [r3, #0]
 8004594:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004596:	6959      	ldr	r1, [r3, #20]
 8004598:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800459a:	891a      	ldrh	r2, [r3, #8]
 800459c:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80045a0:	f006 fb91 	bl	800acc6 <USB_ReadPMA>
 80045a4:	e023      	b.n	80045ee <PCD_EP_ISR_Handler+0x4e4>
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80045ae:	b29b      	uxth	r3, r3
 80045b0:	461a      	mov	r2, r3
 80045b2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045b4:	781b      	ldrb	r3, [r3, #0]
 80045b6:	00db      	lsls	r3, r3, #3
 80045b8:	4413      	add	r3, r2
 80045ba:	3306      	adds	r3, #6
 80045bc:	005b      	lsls	r3, r3, #1
 80045be:	687a      	ldr	r2, [r7, #4]
 80045c0:	6812      	ldr	r2, [r2, #0]
 80045c2:	4413      	add	r3, r2
 80045c4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80045c8:	881b      	ldrh	r3, [r3, #0]
 80045ca:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80045ce:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 80045d2:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d009      	beq.n	80045ee <PCD_EP_ISR_Handler+0x4e4>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	6818      	ldr	r0, [r3, #0]
 80045de:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045e0:	6959      	ldr	r1, [r3, #20]
 80045e2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045e4:	895a      	ldrh	r2, [r3, #10]
 80045e6:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80045ea:	f006 fb6c 	bl	800acc6 <USB_ReadPMA>
 80045ee:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045f0:	69da      	ldr	r2, [r3, #28]
 80045f2:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80045f6:	441a      	add	r2, r3
 80045f8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045fa:	61da      	str	r2, [r3, #28]
 80045fc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045fe:	695a      	ldr	r2, [r3, #20]
 8004600:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8004604:	441a      	add	r2, r3
 8004606:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004608:	615a      	str	r2, [r3, #20]
 800460a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800460c:	699b      	ldr	r3, [r3, #24]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d005      	beq.n	800461e <PCD_EP_ISR_Handler+0x514>
 8004612:	f8b7 2050 	ldrh.w	r2, [r7, #80]	@ 0x50
 8004616:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004618:	691b      	ldr	r3, [r3, #16]
 800461a:	429a      	cmp	r2, r3
 800461c:	d206      	bcs.n	800462c <PCD_EP_ISR_Handler+0x522>
 800461e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004620:	781b      	ldrb	r3, [r3, #0]
 8004622:	4619      	mov	r1, r3
 8004624:	6878      	ldr	r0, [r7, #4]
 8004626:	f008 f84f 	bl	800c6c8 <HAL_PCD_DataOutStageCallback>
 800462a:	e005      	b.n	8004638 <PCD_EP_ISR_Handler+0x52e>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004632:	4618      	mov	r0, r3
 8004634:	f004 fe21 	bl	800927a <USB_EPStartXfer>
 8004638:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 800463c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004640:	2b00      	cmp	r3, #0
 8004642:	f000 8123 	beq.w	800488c <PCD_EP_ISR_Handler+0x782>
 8004646:	f897 204f 	ldrb.w	r2, [r7, #79]	@ 0x4f
 800464a:	4613      	mov	r3, r2
 800464c:	009b      	lsls	r3, r3, #2
 800464e:	4413      	add	r3, r2
 8004650:	00db      	lsls	r3, r3, #3
 8004652:	3310      	adds	r3, #16
 8004654:	687a      	ldr	r2, [r7, #4]
 8004656:	4413      	add	r3, r2
 8004658:	657b      	str	r3, [r7, #84]	@ 0x54
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	461a      	mov	r2, r3
 8004660:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8004664:	009b      	lsls	r3, r3, #2
 8004666:	4413      	add	r3, r2
 8004668:	881b      	ldrh	r3, [r3, #0]
 800466a:	b29b      	uxth	r3, r3
 800466c:	f423 43e1 	bic.w	r3, r3, #28800	@ 0x7080
 8004670:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004674:	f8a7 3042 	strh.w	r3, [r7, #66]	@ 0x42
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	461a      	mov	r2, r3
 800467e:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8004682:	009b      	lsls	r3, r3, #2
 8004684:	441a      	add	r2, r3
 8004686:	f8b7 3042 	ldrh.w	r3, [r7, #66]	@ 0x42
 800468a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800468e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004692:	b29b      	uxth	r3, r3
 8004694:	8013      	strh	r3, [r2, #0]
 8004696:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004698:	78db      	ldrb	r3, [r3, #3]
 800469a:	2b01      	cmp	r3, #1
 800469c:	f040 80a2 	bne.w	80047e4 <PCD_EP_ISR_Handler+0x6da>
 80046a0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80046a2:	2200      	movs	r2, #0
 80046a4:	619a      	str	r2, [r3, #24]
 80046a6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80046a8:	7b1b      	ldrb	r3, [r3, #12]
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	f000 8093 	beq.w	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 80046b0:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 80046b4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80046b8:	2b00      	cmp	r3, #0
 80046ba:	d046      	beq.n	800474a <PCD_EP_ISR_Handler+0x640>
 80046bc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80046be:	785b      	ldrb	r3, [r3, #1]
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d126      	bne.n	8004712 <PCD_EP_ISR_Handler+0x608>
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80046d2:	b29b      	uxth	r3, r3
 80046d4:	461a      	mov	r2, r3
 80046d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046d8:	4413      	add	r3, r2
 80046da:	627b      	str	r3, [r7, #36]	@ 0x24
 80046dc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80046de:	781b      	ldrb	r3, [r3, #0]
 80046e0:	011a      	lsls	r2, r3, #4
 80046e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046e4:	4413      	add	r3, r2
 80046e6:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 80046ea:	623b      	str	r3, [r7, #32]
 80046ec:	6a3b      	ldr	r3, [r7, #32]
 80046ee:	881b      	ldrh	r3, [r3, #0]
 80046f0:	b29b      	uxth	r3, r3
 80046f2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80046f6:	b29a      	uxth	r2, r3
 80046f8:	6a3b      	ldr	r3, [r7, #32]
 80046fa:	801a      	strh	r2, [r3, #0]
 80046fc:	6a3b      	ldr	r3, [r7, #32]
 80046fe:	881b      	ldrh	r3, [r3, #0]
 8004700:	b29b      	uxth	r3, r3
 8004702:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004706:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800470a:	b29a      	uxth	r2, r3
 800470c:	6a3b      	ldr	r3, [r7, #32]
 800470e:	801a      	strh	r2, [r3, #0]
 8004710:	e061      	b.n	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 8004712:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004714:	785b      	ldrb	r3, [r3, #1]
 8004716:	2b01      	cmp	r3, #1
 8004718:	d15d      	bne.n	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004728:	b29b      	uxth	r3, r3
 800472a:	461a      	mov	r2, r3
 800472c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800472e:	4413      	add	r3, r2
 8004730:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004732:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004734:	781b      	ldrb	r3, [r3, #0]
 8004736:	011a      	lsls	r2, r3, #4
 8004738:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800473a:	4413      	add	r3, r2
 800473c:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004740:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004742:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004744:	2200      	movs	r2, #0
 8004746:	801a      	strh	r2, [r3, #0]
 8004748:	e045      	b.n	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004750:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004752:	785b      	ldrb	r3, [r3, #1]
 8004754:	2b00      	cmp	r3, #0
 8004756:	d126      	bne.n	80047a6 <PCD_EP_ISR_Handler+0x69c>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	637b      	str	r3, [r7, #52]	@ 0x34
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004766:	b29b      	uxth	r3, r3
 8004768:	461a      	mov	r2, r3
 800476a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800476c:	4413      	add	r3, r2
 800476e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004770:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004772:	781b      	ldrb	r3, [r3, #0]
 8004774:	011a      	lsls	r2, r3, #4
 8004776:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004778:	4413      	add	r3, r2
 800477a:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800477e:	633b      	str	r3, [r7, #48]	@ 0x30
 8004780:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004782:	881b      	ldrh	r3, [r3, #0]
 8004784:	b29b      	uxth	r3, r3
 8004786:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800478a:	b29a      	uxth	r2, r3
 800478c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800478e:	801a      	strh	r2, [r3, #0]
 8004790:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004792:	881b      	ldrh	r3, [r3, #0]
 8004794:	b29b      	uxth	r3, r3
 8004796:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800479a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800479e:	b29a      	uxth	r2, r3
 80047a0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80047a2:	801a      	strh	r2, [r3, #0]
 80047a4:	e017      	b.n	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 80047a6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80047a8:	785b      	ldrb	r3, [r3, #1]
 80047aa:	2b01      	cmp	r3, #1
 80047ac:	d113      	bne.n	80047d6 <PCD_EP_ISR_Handler+0x6cc>
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80047b6:	b29b      	uxth	r3, r3
 80047b8:	461a      	mov	r2, r3
 80047ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80047bc:	4413      	add	r3, r2
 80047be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80047c0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80047c2:	781b      	ldrb	r3, [r3, #0]
 80047c4:	011a      	lsls	r2, r3, #4
 80047c6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80047c8:	4413      	add	r3, r2
 80047ca:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80047ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80047d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80047d2:	2200      	movs	r2, #0
 80047d4:	801a      	strh	r2, [r3, #0]
 80047d6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80047d8:	781b      	ldrb	r3, [r3, #0]
 80047da:	4619      	mov	r1, r3
 80047dc:	6878      	ldr	r0, [r7, #4]
 80047de:	f007 ff8e 	bl	800c6fe <HAL_PCD_DataInStageCallback>
 80047e2:	e053      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 80047e4:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 80047e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80047ec:	2b00      	cmp	r3, #0
 80047ee:	d146      	bne.n	800487e <PCD_EP_ISR_Handler+0x774>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80047f8:	b29b      	uxth	r3, r3
 80047fa:	461a      	mov	r2, r3
 80047fc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80047fe:	781b      	ldrb	r3, [r3, #0]
 8004800:	00db      	lsls	r3, r3, #3
 8004802:	4413      	add	r3, r2
 8004804:	3302      	adds	r3, #2
 8004806:	005b      	lsls	r3, r3, #1
 8004808:	687a      	ldr	r2, [r7, #4]
 800480a:	6812      	ldr	r2, [r2, #0]
 800480c:	4413      	add	r3, r2
 800480e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004812:	881b      	ldrh	r3, [r3, #0]
 8004814:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004818:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40
 800481c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800481e:	699a      	ldr	r2, [r3, #24]
 8004820:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8004824:	429a      	cmp	r2, r3
 8004826:	d907      	bls.n	8004838 <PCD_EP_ISR_Handler+0x72e>
 8004828:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800482a:	699a      	ldr	r2, [r3, #24]
 800482c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8004830:	1ad2      	subs	r2, r2, r3
 8004832:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004834:	619a      	str	r2, [r3, #24]
 8004836:	e002      	b.n	800483e <PCD_EP_ISR_Handler+0x734>
 8004838:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800483a:	2200      	movs	r2, #0
 800483c:	619a      	str	r2, [r3, #24]
 800483e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004840:	699b      	ldr	r3, [r3, #24]
 8004842:	2b00      	cmp	r3, #0
 8004844:	d106      	bne.n	8004854 <PCD_EP_ISR_Handler+0x74a>
 8004846:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004848:	781b      	ldrb	r3, [r3, #0]
 800484a:	4619      	mov	r1, r3
 800484c:	6878      	ldr	r0, [r7, #4]
 800484e:	f007 ff56 	bl	800c6fe <HAL_PCD_DataInStageCallback>
 8004852:	e01b      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 8004854:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004856:	695a      	ldr	r2, [r3, #20]
 8004858:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800485c:	441a      	add	r2, r3
 800485e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004860:	615a      	str	r2, [r3, #20]
 8004862:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004864:	69da      	ldr	r2, [r3, #28]
 8004866:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800486a:	441a      	add	r2, r3
 800486c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800486e:	61da      	str	r2, [r3, #28]
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004876:	4618      	mov	r0, r3
 8004878:	f004 fcff 	bl	800927a <USB_EPStartXfer>
 800487c:	e006      	b.n	800488c <PCD_EP_ISR_Handler+0x782>
 800487e:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 8004882:	461a      	mov	r2, r3
 8004884:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004886:	6878      	ldr	r0, [r7, #4]
 8004888:	f000 f91b 	bl	8004ac2 <HAL_PCD_EP_DB_Transmit>
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8004894:	b29b      	uxth	r3, r3
 8004896:	b21b      	sxth	r3, r3
 8004898:	2b00      	cmp	r3, #0
 800489a:	f6ff ac3b 	blt.w	8004114 <PCD_EP_ISR_Handler+0xa>
 800489e:	2300      	movs	r3, #0
 80048a0:	4618      	mov	r0, r3
 80048a2:	3758      	adds	r7, #88	@ 0x58
 80048a4:	46bd      	mov	sp, r7
 80048a6:	bd80      	pop	{r7, pc}

080048a8 <HAL_PCD_EP_DB_Receive>:
 80048a8:	b580      	push	{r7, lr}
 80048aa:	b088      	sub	sp, #32
 80048ac:	af00      	add	r7, sp, #0
 80048ae:	60f8      	str	r0, [r7, #12]
 80048b0:	60b9      	str	r1, [r7, #8]
 80048b2:	4613      	mov	r3, r2
 80048b4:	80fb      	strh	r3, [r7, #6]
 80048b6:	88fb      	ldrh	r3, [r7, #6]
 80048b8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80048bc:	2b00      	cmp	r3, #0
 80048be:	d07e      	beq.n	80049be <HAL_PCD_EP_DB_Receive+0x116>
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80048c8:	b29b      	uxth	r3, r3
 80048ca:	461a      	mov	r2, r3
 80048cc:	68bb      	ldr	r3, [r7, #8]
 80048ce:	781b      	ldrb	r3, [r3, #0]
 80048d0:	00db      	lsls	r3, r3, #3
 80048d2:	4413      	add	r3, r2
 80048d4:	3302      	adds	r3, #2
 80048d6:	005b      	lsls	r3, r3, #1
 80048d8:	68fa      	ldr	r2, [r7, #12]
 80048da:	6812      	ldr	r2, [r2, #0]
 80048dc:	4413      	add	r3, r2
 80048de:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80048e2:	881b      	ldrh	r3, [r3, #0]
 80048e4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80048e8:	837b      	strh	r3, [r7, #26]
 80048ea:	68bb      	ldr	r3, [r7, #8]
 80048ec:	699a      	ldr	r2, [r3, #24]
 80048ee:	8b7b      	ldrh	r3, [r7, #26]
 80048f0:	429a      	cmp	r2, r3
 80048f2:	d306      	bcc.n	8004902 <HAL_PCD_EP_DB_Receive+0x5a>
 80048f4:	68bb      	ldr	r3, [r7, #8]
 80048f6:	699a      	ldr	r2, [r3, #24]
 80048f8:	8b7b      	ldrh	r3, [r7, #26]
 80048fa:	1ad2      	subs	r2, r2, r3
 80048fc:	68bb      	ldr	r3, [r7, #8]
 80048fe:	619a      	str	r2, [r3, #24]
 8004900:	e002      	b.n	8004908 <HAL_PCD_EP_DB_Receive+0x60>
 8004902:	68bb      	ldr	r3, [r7, #8]
 8004904:	2200      	movs	r2, #0
 8004906:	619a      	str	r2, [r3, #24]
 8004908:	68bb      	ldr	r3, [r7, #8]
 800490a:	699b      	ldr	r3, [r3, #24]
 800490c:	2b00      	cmp	r3, #0
 800490e:	d123      	bne.n	8004958 <HAL_PCD_EP_DB_Receive+0xb0>
 8004910:	68fb      	ldr	r3, [r7, #12]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	461a      	mov	r2, r3
 8004916:	68bb      	ldr	r3, [r7, #8]
 8004918:	781b      	ldrb	r3, [r3, #0]
 800491a:	009b      	lsls	r3, r3, #2
 800491c:	4413      	add	r3, r2
 800491e:	881b      	ldrh	r3, [r3, #0]
 8004920:	b29b      	uxth	r3, r3
 8004922:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004926:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800492a:	833b      	strh	r3, [r7, #24]
 800492c:	8b3b      	ldrh	r3, [r7, #24]
 800492e:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8004932:	833b      	strh	r3, [r7, #24]
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	461a      	mov	r2, r3
 800493a:	68bb      	ldr	r3, [r7, #8]
 800493c:	781b      	ldrb	r3, [r3, #0]
 800493e:	009b      	lsls	r3, r3, #2
 8004940:	441a      	add	r2, r3
 8004942:	8b3b      	ldrh	r3, [r7, #24]
 8004944:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004948:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800494c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004950:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004954:	b29b      	uxth	r3, r3
 8004956:	8013      	strh	r3, [r2, #0]
 8004958:	88fb      	ldrh	r3, [r7, #6]
 800495a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800495e:	2b00      	cmp	r3, #0
 8004960:	d01f      	beq.n	80049a2 <HAL_PCD_EP_DB_Receive+0xfa>
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	461a      	mov	r2, r3
 8004968:	68bb      	ldr	r3, [r7, #8]
 800496a:	781b      	ldrb	r3, [r3, #0]
 800496c:	009b      	lsls	r3, r3, #2
 800496e:	4413      	add	r3, r2
 8004970:	881b      	ldrh	r3, [r3, #0]
 8004972:	b29b      	uxth	r3, r3
 8004974:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004978:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800497c:	82fb      	strh	r3, [r7, #22]
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	461a      	mov	r2, r3
 8004984:	68bb      	ldr	r3, [r7, #8]
 8004986:	781b      	ldrb	r3, [r3, #0]
 8004988:	009b      	lsls	r3, r3, #2
 800498a:	441a      	add	r2, r3
 800498c:	8afb      	ldrh	r3, [r7, #22]
 800498e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004992:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004996:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800499a:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800499e:	b29b      	uxth	r3, r3
 80049a0:	8013      	strh	r3, [r2, #0]
 80049a2:	8b7b      	ldrh	r3, [r7, #26]
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	f000 8087 	beq.w	8004ab8 <HAL_PCD_EP_DB_Receive+0x210>
 80049aa:	68fb      	ldr	r3, [r7, #12]
 80049ac:	6818      	ldr	r0, [r3, #0]
 80049ae:	68bb      	ldr	r3, [r7, #8]
 80049b0:	6959      	ldr	r1, [r3, #20]
 80049b2:	68bb      	ldr	r3, [r7, #8]
 80049b4:	891a      	ldrh	r2, [r3, #8]
 80049b6:	8b7b      	ldrh	r3, [r7, #26]
 80049b8:	f006 f985 	bl	800acc6 <USB_ReadPMA>
 80049bc:	e07c      	b.n	8004ab8 <HAL_PCD_EP_DB_Receive+0x210>
 80049be:	68fb      	ldr	r3, [r7, #12]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80049c6:	b29b      	uxth	r3, r3
 80049c8:	461a      	mov	r2, r3
 80049ca:	68bb      	ldr	r3, [r7, #8]
 80049cc:	781b      	ldrb	r3, [r3, #0]
 80049ce:	00db      	lsls	r3, r3, #3
 80049d0:	4413      	add	r3, r2
 80049d2:	3306      	adds	r3, #6
 80049d4:	005b      	lsls	r3, r3, #1
 80049d6:	68fa      	ldr	r2, [r7, #12]
 80049d8:	6812      	ldr	r2, [r2, #0]
 80049da:	4413      	add	r3, r2
 80049dc:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80049e0:	881b      	ldrh	r3, [r3, #0]
 80049e2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80049e6:	837b      	strh	r3, [r7, #26]
 80049e8:	68bb      	ldr	r3, [r7, #8]
 80049ea:	699a      	ldr	r2, [r3, #24]
 80049ec:	8b7b      	ldrh	r3, [r7, #26]
 80049ee:	429a      	cmp	r2, r3
 80049f0:	d306      	bcc.n	8004a00 <HAL_PCD_EP_DB_Receive+0x158>
 80049f2:	68bb      	ldr	r3, [r7, #8]
 80049f4:	699a      	ldr	r2, [r3, #24]
 80049f6:	8b7b      	ldrh	r3, [r7, #26]
 80049f8:	1ad2      	subs	r2, r2, r3
 80049fa:	68bb      	ldr	r3, [r7, #8]
 80049fc:	619a      	str	r2, [r3, #24]
 80049fe:	e002      	b.n	8004a06 <HAL_PCD_EP_DB_Receive+0x15e>
 8004a00:	68bb      	ldr	r3, [r7, #8]
 8004a02:	2200      	movs	r2, #0
 8004a04:	619a      	str	r2, [r3, #24]
 8004a06:	68bb      	ldr	r3, [r7, #8]
 8004a08:	699b      	ldr	r3, [r3, #24]
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	d123      	bne.n	8004a56 <HAL_PCD_EP_DB_Receive+0x1ae>
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	461a      	mov	r2, r3
 8004a14:	68bb      	ldr	r3, [r7, #8]
 8004a16:	781b      	ldrb	r3, [r3, #0]
 8004a18:	009b      	lsls	r3, r3, #2
 8004a1a:	4413      	add	r3, r2
 8004a1c:	881b      	ldrh	r3, [r3, #0]
 8004a1e:	b29b      	uxth	r3, r3
 8004a20:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004a24:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a28:	83fb      	strh	r3, [r7, #30]
 8004a2a:	8bfb      	ldrh	r3, [r7, #30]
 8004a2c:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8004a30:	83fb      	strh	r3, [r7, #30]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	461a      	mov	r2, r3
 8004a38:	68bb      	ldr	r3, [r7, #8]
 8004a3a:	781b      	ldrb	r3, [r3, #0]
 8004a3c:	009b      	lsls	r3, r3, #2
 8004a3e:	441a      	add	r2, r3
 8004a40:	8bfb      	ldrh	r3, [r7, #30]
 8004a42:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004a46:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004a4a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004a4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004a52:	b29b      	uxth	r3, r3
 8004a54:	8013      	strh	r3, [r2, #0]
 8004a56:	88fb      	ldrh	r3, [r7, #6]
 8004a58:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d11f      	bne.n	8004aa0 <HAL_PCD_EP_DB_Receive+0x1f8>
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	461a      	mov	r2, r3
 8004a66:	68bb      	ldr	r3, [r7, #8]
 8004a68:	781b      	ldrb	r3, [r3, #0]
 8004a6a:	009b      	lsls	r3, r3, #2
 8004a6c:	4413      	add	r3, r2
 8004a6e:	881b      	ldrh	r3, [r3, #0]
 8004a70:	b29b      	uxth	r3, r3
 8004a72:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a76:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a7a:	83bb      	strh	r3, [r7, #28]
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	461a      	mov	r2, r3
 8004a82:	68bb      	ldr	r3, [r7, #8]
 8004a84:	781b      	ldrb	r3, [r3, #0]
 8004a86:	009b      	lsls	r3, r3, #2
 8004a88:	441a      	add	r2, r3
 8004a8a:	8bbb      	ldrh	r3, [r7, #28]
 8004a8c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004a90:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004a94:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004a98:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8004a9c:	b29b      	uxth	r3, r3
 8004a9e:	8013      	strh	r3, [r2, #0]
 8004aa0:	8b7b      	ldrh	r3, [r7, #26]
 8004aa2:	2b00      	cmp	r3, #0
 8004aa4:	d008      	beq.n	8004ab8 <HAL_PCD_EP_DB_Receive+0x210>
 8004aa6:	68fb      	ldr	r3, [r7, #12]
 8004aa8:	6818      	ldr	r0, [r3, #0]
 8004aaa:	68bb      	ldr	r3, [r7, #8]
 8004aac:	6959      	ldr	r1, [r3, #20]
 8004aae:	68bb      	ldr	r3, [r7, #8]
 8004ab0:	895a      	ldrh	r2, [r3, #10]
 8004ab2:	8b7b      	ldrh	r3, [r7, #26]
 8004ab4:	f006 f907 	bl	800acc6 <USB_ReadPMA>
 8004ab8:	8b7b      	ldrh	r3, [r7, #26]
 8004aba:	4618      	mov	r0, r3
 8004abc:	3720      	adds	r7, #32
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	bd80      	pop	{r7, pc}

08004ac2 <HAL_PCD_EP_DB_Transmit>:
 8004ac2:	b580      	push	{r7, lr}
 8004ac4:	b0a4      	sub	sp, #144	@ 0x90
 8004ac6:	af00      	add	r7, sp, #0
 8004ac8:	60f8      	str	r0, [r7, #12]
 8004aca:	60b9      	str	r1, [r7, #8]
 8004acc:	4613      	mov	r3, r2
 8004ace:	80fb      	strh	r3, [r7, #6]
 8004ad0:	88fb      	ldrh	r3, [r7, #6]
 8004ad2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	f000 81dd 	beq.w	8004e96 <HAL_PCD_EP_DB_Transmit+0x3d4>
 8004adc:	68fb      	ldr	r3, [r7, #12]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004ae4:	b29b      	uxth	r3, r3
 8004ae6:	461a      	mov	r2, r3
 8004ae8:	68bb      	ldr	r3, [r7, #8]
 8004aea:	781b      	ldrb	r3, [r3, #0]
 8004aec:	00db      	lsls	r3, r3, #3
 8004aee:	4413      	add	r3, r2
 8004af0:	3302      	adds	r3, #2
 8004af2:	005b      	lsls	r3, r3, #1
 8004af4:	68fa      	ldr	r2, [r7, #12]
 8004af6:	6812      	ldr	r2, [r2, #0]
 8004af8:	4413      	add	r3, r2
 8004afa:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004afe:	881b      	ldrh	r3, [r3, #0]
 8004b00:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004b04:	f8a7 3088 	strh.w	r3, [r7, #136]	@ 0x88
 8004b08:	68bb      	ldr	r3, [r7, #8]
 8004b0a:	699a      	ldr	r2, [r3, #24]
 8004b0c:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004b10:	429a      	cmp	r2, r3
 8004b12:	d907      	bls.n	8004b24 <HAL_PCD_EP_DB_Transmit+0x62>
 8004b14:	68bb      	ldr	r3, [r7, #8]
 8004b16:	699a      	ldr	r2, [r3, #24]
 8004b18:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004b1c:	1ad2      	subs	r2, r2, r3
 8004b1e:	68bb      	ldr	r3, [r7, #8]
 8004b20:	619a      	str	r2, [r3, #24]
 8004b22:	e002      	b.n	8004b2a <HAL_PCD_EP_DB_Transmit+0x68>
 8004b24:	68bb      	ldr	r3, [r7, #8]
 8004b26:	2200      	movs	r2, #0
 8004b28:	619a      	str	r2, [r3, #24]
 8004b2a:	68bb      	ldr	r3, [r7, #8]
 8004b2c:	699b      	ldr	r3, [r3, #24]
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	f040 80b9 	bne.w	8004ca6 <HAL_PCD_EP_DB_Transmit+0x1e4>
 8004b34:	68bb      	ldr	r3, [r7, #8]
 8004b36:	785b      	ldrb	r3, [r3, #1]
 8004b38:	2b00      	cmp	r3, #0
 8004b3a:	d126      	bne.n	8004b8a <HAL_PCD_EP_DB_Transmit+0xc8>
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004b42:	68fb      	ldr	r3, [r7, #12]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004b4a:	b29b      	uxth	r3, r3
 8004b4c:	461a      	mov	r2, r3
 8004b4e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b50:	4413      	add	r3, r2
 8004b52:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004b54:	68bb      	ldr	r3, [r7, #8]
 8004b56:	781b      	ldrb	r3, [r3, #0]
 8004b58:	011a      	lsls	r2, r3, #4
 8004b5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b5c:	4413      	add	r3, r2
 8004b5e:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004b62:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004b64:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b66:	881b      	ldrh	r3, [r3, #0]
 8004b68:	b29b      	uxth	r3, r3
 8004b6a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004b6e:	b29a      	uxth	r2, r3
 8004b70:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b72:	801a      	strh	r2, [r3, #0]
 8004b74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b76:	881b      	ldrh	r3, [r3, #0]
 8004b78:	b29b      	uxth	r3, r3
 8004b7a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004b7e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004b82:	b29a      	uxth	r2, r3
 8004b84:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b86:	801a      	strh	r2, [r3, #0]
 8004b88:	e01a      	b.n	8004bc0 <HAL_PCD_EP_DB_Transmit+0xfe>
 8004b8a:	68bb      	ldr	r3, [r7, #8]
 8004b8c:	785b      	ldrb	r3, [r3, #1]
 8004b8e:	2b01      	cmp	r3, #1
 8004b90:	d116      	bne.n	8004bc0 <HAL_PCD_EP_DB_Transmit+0xfe>
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	637b      	str	r3, [r7, #52]	@ 0x34
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004ba0:	b29b      	uxth	r3, r3
 8004ba2:	461a      	mov	r2, r3
 8004ba4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004ba6:	4413      	add	r3, r2
 8004ba8:	637b      	str	r3, [r7, #52]	@ 0x34
 8004baa:	68bb      	ldr	r3, [r7, #8]
 8004bac:	781b      	ldrb	r3, [r3, #0]
 8004bae:	011a      	lsls	r2, r3, #4
 8004bb0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004bb2:	4413      	add	r3, r2
 8004bb4:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004bb8:	633b      	str	r3, [r7, #48]	@ 0x30
 8004bba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bbc:	2200      	movs	r2, #0
 8004bbe:	801a      	strh	r2, [r3, #0]
 8004bc0:	68fb      	ldr	r3, [r7, #12]
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	627b      	str	r3, [r7, #36]	@ 0x24
 8004bc6:	68bb      	ldr	r3, [r7, #8]
 8004bc8:	785b      	ldrb	r3, [r3, #1]
 8004bca:	2b00      	cmp	r3, #0
 8004bcc:	d126      	bne.n	8004c1c <HAL_PCD_EP_DB_Transmit+0x15a>
 8004bce:	68fb      	ldr	r3, [r7, #12]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	61fb      	str	r3, [r7, #28]
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	681b      	ldr	r3, [r3, #0]
 8004bd8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004bdc:	b29b      	uxth	r3, r3
 8004bde:	461a      	mov	r2, r3
 8004be0:	69fb      	ldr	r3, [r7, #28]
 8004be2:	4413      	add	r3, r2
 8004be4:	61fb      	str	r3, [r7, #28]
 8004be6:	68bb      	ldr	r3, [r7, #8]
 8004be8:	781b      	ldrb	r3, [r3, #0]
 8004bea:	011a      	lsls	r2, r3, #4
 8004bec:	69fb      	ldr	r3, [r7, #28]
 8004bee:	4413      	add	r3, r2
 8004bf0:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004bf4:	61bb      	str	r3, [r7, #24]
 8004bf6:	69bb      	ldr	r3, [r7, #24]
 8004bf8:	881b      	ldrh	r3, [r3, #0]
 8004bfa:	b29b      	uxth	r3, r3
 8004bfc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004c00:	b29a      	uxth	r2, r3
 8004c02:	69bb      	ldr	r3, [r7, #24]
 8004c04:	801a      	strh	r2, [r3, #0]
 8004c06:	69bb      	ldr	r3, [r7, #24]
 8004c08:	881b      	ldrh	r3, [r3, #0]
 8004c0a:	b29b      	uxth	r3, r3
 8004c0c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004c10:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004c14:	b29a      	uxth	r2, r3
 8004c16:	69bb      	ldr	r3, [r7, #24]
 8004c18:	801a      	strh	r2, [r3, #0]
 8004c1a:	e017      	b.n	8004c4c <HAL_PCD_EP_DB_Transmit+0x18a>
 8004c1c:	68bb      	ldr	r3, [r7, #8]
 8004c1e:	785b      	ldrb	r3, [r3, #1]
 8004c20:	2b01      	cmp	r3, #1
 8004c22:	d113      	bne.n	8004c4c <HAL_PCD_EP_DB_Transmit+0x18a>
 8004c24:	68fb      	ldr	r3, [r7, #12]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004c2c:	b29b      	uxth	r3, r3
 8004c2e:	461a      	mov	r2, r3
 8004c30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c32:	4413      	add	r3, r2
 8004c34:	627b      	str	r3, [r7, #36]	@ 0x24
 8004c36:	68bb      	ldr	r3, [r7, #8]
 8004c38:	781b      	ldrb	r3, [r3, #0]
 8004c3a:	011a      	lsls	r2, r3, #4
 8004c3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c3e:	4413      	add	r3, r2
 8004c40:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004c44:	623b      	str	r3, [r7, #32]
 8004c46:	6a3b      	ldr	r3, [r7, #32]
 8004c48:	2200      	movs	r2, #0
 8004c4a:	801a      	strh	r2, [r3, #0]
 8004c4c:	68bb      	ldr	r3, [r7, #8]
 8004c4e:	781b      	ldrb	r3, [r3, #0]
 8004c50:	4619      	mov	r1, r3
 8004c52:	68f8      	ldr	r0, [r7, #12]
 8004c54:	f007 fd53 	bl	800c6fe <HAL_PCD_DataInStageCallback>
 8004c58:	88fb      	ldrh	r3, [r7, #6]
 8004c5a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	f000 82fc 	beq.w	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 8004c64:	68fb      	ldr	r3, [r7, #12]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	461a      	mov	r2, r3
 8004c6a:	68bb      	ldr	r3, [r7, #8]
 8004c6c:	781b      	ldrb	r3, [r3, #0]
 8004c6e:	009b      	lsls	r3, r3, #2
 8004c70:	4413      	add	r3, r2
 8004c72:	881b      	ldrh	r3, [r3, #0]
 8004c74:	b29b      	uxth	r3, r3
 8004c76:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004c7a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004c7e:	82fb      	strh	r3, [r7, #22]
 8004c80:	68fb      	ldr	r3, [r7, #12]
 8004c82:	681b      	ldr	r3, [r3, #0]
 8004c84:	461a      	mov	r2, r3
 8004c86:	68bb      	ldr	r3, [r7, #8]
 8004c88:	781b      	ldrb	r3, [r3, #0]
 8004c8a:	009b      	lsls	r3, r3, #2
 8004c8c:	441a      	add	r2, r3
 8004c8e:	8afb      	ldrh	r3, [r7, #22]
 8004c90:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004c94:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004c98:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004c9c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004ca0:	b29b      	uxth	r3, r3
 8004ca2:	8013      	strh	r3, [r2, #0]
 8004ca4:	e2da      	b.n	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 8004ca6:	88fb      	ldrh	r3, [r7, #6]
 8004ca8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	d021      	beq.n	8004cf4 <HAL_PCD_EP_DB_Transmit+0x232>
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	461a      	mov	r2, r3
 8004cb6:	68bb      	ldr	r3, [r7, #8]
 8004cb8:	781b      	ldrb	r3, [r3, #0]
 8004cba:	009b      	lsls	r3, r3, #2
 8004cbc:	4413      	add	r3, r2
 8004cbe:	881b      	ldrh	r3, [r3, #0]
 8004cc0:	b29b      	uxth	r3, r3
 8004cc2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004cc6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004cca:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	461a      	mov	r2, r3
 8004cd4:	68bb      	ldr	r3, [r7, #8]
 8004cd6:	781b      	ldrb	r3, [r3, #0]
 8004cd8:	009b      	lsls	r3, r3, #2
 8004cda:	441a      	add	r2, r3
 8004cdc:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 8004ce0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004ce4:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004ce8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004cec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004cf0:	b29b      	uxth	r3, r3
 8004cf2:	8013      	strh	r3, [r2, #0]
 8004cf4:	68bb      	ldr	r3, [r7, #8]
 8004cf6:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8004cfa:	2b01      	cmp	r3, #1
 8004cfc:	f040 82ae 	bne.w	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 8004d00:	68bb      	ldr	r3, [r7, #8]
 8004d02:	695a      	ldr	r2, [r3, #20]
 8004d04:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004d08:	441a      	add	r2, r3
 8004d0a:	68bb      	ldr	r3, [r7, #8]
 8004d0c:	615a      	str	r2, [r3, #20]
 8004d0e:	68bb      	ldr	r3, [r7, #8]
 8004d10:	69da      	ldr	r2, [r3, #28]
 8004d12:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004d16:	441a      	add	r2, r3
 8004d18:	68bb      	ldr	r3, [r7, #8]
 8004d1a:	61da      	str	r2, [r3, #28]
 8004d1c:	68bb      	ldr	r3, [r7, #8]
 8004d1e:	6a1a      	ldr	r2, [r3, #32]
 8004d20:	68bb      	ldr	r3, [r7, #8]
 8004d22:	691b      	ldr	r3, [r3, #16]
 8004d24:	429a      	cmp	r2, r3
 8004d26:	d30b      	bcc.n	8004d40 <HAL_PCD_EP_DB_Transmit+0x27e>
 8004d28:	68bb      	ldr	r3, [r7, #8]
 8004d2a:	691b      	ldr	r3, [r3, #16]
 8004d2c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004d30:	68bb      	ldr	r3, [r7, #8]
 8004d32:	6a1a      	ldr	r2, [r3, #32]
 8004d34:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004d38:	1ad2      	subs	r2, r2, r3
 8004d3a:	68bb      	ldr	r3, [r7, #8]
 8004d3c:	621a      	str	r2, [r3, #32]
 8004d3e:	e017      	b.n	8004d70 <HAL_PCD_EP_DB_Transmit+0x2ae>
 8004d40:	68bb      	ldr	r3, [r7, #8]
 8004d42:	6a1b      	ldr	r3, [r3, #32]
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	d108      	bne.n	8004d5a <HAL_PCD_EP_DB_Transmit+0x298>
 8004d48:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004d4c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004d50:	68bb      	ldr	r3, [r7, #8]
 8004d52:	2200      	movs	r2, #0
 8004d54:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004d58:	e00a      	b.n	8004d70 <HAL_PCD_EP_DB_Transmit+0x2ae>
 8004d5a:	68bb      	ldr	r3, [r7, #8]
 8004d5c:	2200      	movs	r2, #0
 8004d5e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004d62:	68bb      	ldr	r3, [r7, #8]
 8004d64:	6a1b      	ldr	r3, [r3, #32]
 8004d66:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004d6a:	68bb      	ldr	r3, [r7, #8]
 8004d6c:	2200      	movs	r2, #0
 8004d6e:	621a      	str	r2, [r3, #32]
 8004d70:	68bb      	ldr	r3, [r7, #8]
 8004d72:	785b      	ldrb	r3, [r3, #1]
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d165      	bne.n	8004e44 <HAL_PCD_EP_DB_Transmit+0x382>
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	681b      	ldr	r3, [r3, #0]
 8004d82:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004d86:	b29b      	uxth	r3, r3
 8004d88:	461a      	mov	r2, r3
 8004d8a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004d8c:	4413      	add	r3, r2
 8004d8e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004d90:	68bb      	ldr	r3, [r7, #8]
 8004d92:	781b      	ldrb	r3, [r3, #0]
 8004d94:	011a      	lsls	r2, r3, #4
 8004d96:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004d98:	4413      	add	r3, r2
 8004d9a:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004d9e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004da0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004da2:	881b      	ldrh	r3, [r3, #0]
 8004da4:	b29b      	uxth	r3, r3
 8004da6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004daa:	b29a      	uxth	r2, r3
 8004dac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dae:	801a      	strh	r2, [r3, #0]
 8004db0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004db4:	2b00      	cmp	r3, #0
 8004db6:	d10a      	bne.n	8004dce <HAL_PCD_EP_DB_Transmit+0x30c>
 8004db8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dba:	881b      	ldrh	r3, [r3, #0]
 8004dbc:	b29b      	uxth	r3, r3
 8004dbe:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004dc2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004dc6:	b29a      	uxth	r2, r3
 8004dc8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dca:	801a      	strh	r2, [r3, #0]
 8004dcc:	e057      	b.n	8004e7e <HAL_PCD_EP_DB_Transmit+0x3bc>
 8004dce:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004dd2:	2b3e      	cmp	r3, #62	@ 0x3e
 8004dd4:	d818      	bhi.n	8004e08 <HAL_PCD_EP_DB_Transmit+0x346>
 8004dd6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004dda:	085b      	lsrs	r3, r3, #1
 8004ddc:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004dde:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004de2:	f003 0301 	and.w	r3, r3, #1
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d002      	beq.n	8004df0 <HAL_PCD_EP_DB_Transmit+0x32e>
 8004dea:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004dec:	3301      	adds	r3, #1
 8004dee:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004df0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004df2:	881b      	ldrh	r3, [r3, #0]
 8004df4:	b29a      	uxth	r2, r3
 8004df6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004df8:	b29b      	uxth	r3, r3
 8004dfa:	029b      	lsls	r3, r3, #10
 8004dfc:	b29b      	uxth	r3, r3
 8004dfe:	4313      	orrs	r3, r2
 8004e00:	b29a      	uxth	r2, r3
 8004e02:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e04:	801a      	strh	r2, [r3, #0]
 8004e06:	e03a      	b.n	8004e7e <HAL_PCD_EP_DB_Transmit+0x3bc>
 8004e08:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004e0c:	095b      	lsrs	r3, r3, #5
 8004e0e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e10:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004e14:	f003 031f 	and.w	r3, r3, #31
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d102      	bne.n	8004e22 <HAL_PCD_EP_DB_Transmit+0x360>
 8004e1c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004e1e:	3b01      	subs	r3, #1
 8004e20:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e22:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e24:	881b      	ldrh	r3, [r3, #0]
 8004e26:	b29a      	uxth	r2, r3
 8004e28:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004e2a:	b29b      	uxth	r3, r3
 8004e2c:	029b      	lsls	r3, r3, #10
 8004e2e:	b29b      	uxth	r3, r3
 8004e30:	4313      	orrs	r3, r2
 8004e32:	b29b      	uxth	r3, r3
 8004e34:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004e38:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004e3c:	b29a      	uxth	r2, r3
 8004e3e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e40:	801a      	strh	r2, [r3, #0]
 8004e42:	e01c      	b.n	8004e7e <HAL_PCD_EP_DB_Transmit+0x3bc>
 8004e44:	68bb      	ldr	r3, [r7, #8]
 8004e46:	785b      	ldrb	r3, [r3, #1]
 8004e48:	2b01      	cmp	r3, #1
 8004e4a:	d118      	bne.n	8004e7e <HAL_PCD_EP_DB_Transmit+0x3bc>
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	647b      	str	r3, [r7, #68]	@ 0x44
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004e5a:	b29b      	uxth	r3, r3
 8004e5c:	461a      	mov	r2, r3
 8004e5e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004e60:	4413      	add	r3, r2
 8004e62:	647b      	str	r3, [r7, #68]	@ 0x44
 8004e64:	68bb      	ldr	r3, [r7, #8]
 8004e66:	781b      	ldrb	r3, [r3, #0]
 8004e68:	011a      	lsls	r2, r3, #4
 8004e6a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004e6c:	4413      	add	r3, r2
 8004e6e:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004e72:	643b      	str	r3, [r7, #64]	@ 0x40
 8004e74:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004e78:	b29a      	uxth	r2, r3
 8004e7a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004e7c:	801a      	strh	r2, [r3, #0]
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	6818      	ldr	r0, [r3, #0]
 8004e82:	68bb      	ldr	r3, [r7, #8]
 8004e84:	6959      	ldr	r1, [r3, #20]
 8004e86:	68bb      	ldr	r3, [r7, #8]
 8004e88:	891a      	ldrh	r2, [r3, #8]
 8004e8a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004e8e:	b29b      	uxth	r3, r3
 8004e90:	f005 fed3 	bl	800ac3a <USB_WritePMA>
 8004e94:	e1e2      	b.n	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	681b      	ldr	r3, [r3, #0]
 8004e9a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004e9e:	b29b      	uxth	r3, r3
 8004ea0:	461a      	mov	r2, r3
 8004ea2:	68bb      	ldr	r3, [r7, #8]
 8004ea4:	781b      	ldrb	r3, [r3, #0]
 8004ea6:	00db      	lsls	r3, r3, #3
 8004ea8:	4413      	add	r3, r2
 8004eaa:	3306      	adds	r3, #6
 8004eac:	005b      	lsls	r3, r3, #1
 8004eae:	68fa      	ldr	r2, [r7, #12]
 8004eb0:	6812      	ldr	r2, [r2, #0]
 8004eb2:	4413      	add	r3, r2
 8004eb4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004eb8:	881b      	ldrh	r3, [r3, #0]
 8004eba:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004ebe:	f8a7 3088 	strh.w	r3, [r7, #136]	@ 0x88
 8004ec2:	68bb      	ldr	r3, [r7, #8]
 8004ec4:	699a      	ldr	r2, [r3, #24]
 8004ec6:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004eca:	429a      	cmp	r2, r3
 8004ecc:	d307      	bcc.n	8004ede <HAL_PCD_EP_DB_Transmit+0x41c>
 8004ece:	68bb      	ldr	r3, [r7, #8]
 8004ed0:	699a      	ldr	r2, [r3, #24]
 8004ed2:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8004ed6:	1ad2      	subs	r2, r2, r3
 8004ed8:	68bb      	ldr	r3, [r7, #8]
 8004eda:	619a      	str	r2, [r3, #24]
 8004edc:	e002      	b.n	8004ee4 <HAL_PCD_EP_DB_Transmit+0x422>
 8004ede:	68bb      	ldr	r3, [r7, #8]
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	619a      	str	r2, [r3, #24]
 8004ee4:	68bb      	ldr	r3, [r7, #8]
 8004ee6:	699b      	ldr	r3, [r3, #24]
 8004ee8:	2b00      	cmp	r3, #0
 8004eea:	f040 80c0 	bne.w	800506e <HAL_PCD_EP_DB_Transmit+0x5ac>
 8004eee:	68bb      	ldr	r3, [r7, #8]
 8004ef0:	785b      	ldrb	r3, [r3, #1]
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d126      	bne.n	8004f44 <HAL_PCD_EP_DB_Transmit+0x482>
 8004ef6:	68fb      	ldr	r3, [r7, #12]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004f04:	b29b      	uxth	r3, r3
 8004f06:	461a      	mov	r2, r3
 8004f08:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8004f0a:	4413      	add	r3, r2
 8004f0c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004f0e:	68bb      	ldr	r3, [r7, #8]
 8004f10:	781b      	ldrb	r3, [r3, #0]
 8004f12:	011a      	lsls	r2, r3, #4
 8004f14:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8004f16:	4413      	add	r3, r2
 8004f18:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004f1c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004f1e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004f20:	881b      	ldrh	r3, [r3, #0]
 8004f22:	b29b      	uxth	r3, r3
 8004f24:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004f28:	b29a      	uxth	r2, r3
 8004f2a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004f2c:	801a      	strh	r2, [r3, #0]
 8004f2e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004f30:	881b      	ldrh	r3, [r3, #0]
 8004f32:	b29b      	uxth	r3, r3
 8004f34:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004f38:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004f3c:	b29a      	uxth	r2, r3
 8004f3e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004f40:	801a      	strh	r2, [r3, #0]
 8004f42:	e01a      	b.n	8004f7a <HAL_PCD_EP_DB_Transmit+0x4b8>
 8004f44:	68bb      	ldr	r3, [r7, #8]
 8004f46:	785b      	ldrb	r3, [r3, #1]
 8004f48:	2b01      	cmp	r3, #1
 8004f4a:	d116      	bne.n	8004f7a <HAL_PCD_EP_DB_Transmit+0x4b8>
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	667b      	str	r3, [r7, #100]	@ 0x64
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004f5a:	b29b      	uxth	r3, r3
 8004f5c:	461a      	mov	r2, r3
 8004f5e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004f60:	4413      	add	r3, r2
 8004f62:	667b      	str	r3, [r7, #100]	@ 0x64
 8004f64:	68bb      	ldr	r3, [r7, #8]
 8004f66:	781b      	ldrb	r3, [r3, #0]
 8004f68:	011a      	lsls	r2, r3, #4
 8004f6a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004f6c:	4413      	add	r3, r2
 8004f6e:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004f72:	663b      	str	r3, [r7, #96]	@ 0x60
 8004f74:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004f76:	2200      	movs	r2, #0
 8004f78:	801a      	strh	r2, [r3, #0]
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	677b      	str	r3, [r7, #116]	@ 0x74
 8004f80:	68bb      	ldr	r3, [r7, #8]
 8004f82:	785b      	ldrb	r3, [r3, #1]
 8004f84:	2b00      	cmp	r3, #0
 8004f86:	d12b      	bne.n	8004fe0 <HAL_PCD_EP_DB_Transmit+0x51e>
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004f96:	b29b      	uxth	r3, r3
 8004f98:	461a      	mov	r2, r3
 8004f9a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004f9c:	4413      	add	r3, r2
 8004f9e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004fa0:	68bb      	ldr	r3, [r7, #8]
 8004fa2:	781b      	ldrb	r3, [r3, #0]
 8004fa4:	011a      	lsls	r2, r3, #4
 8004fa6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004fa8:	4413      	add	r3, r2
 8004faa:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004fae:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004fb2:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004fb6:	881b      	ldrh	r3, [r3, #0]
 8004fb8:	b29b      	uxth	r3, r3
 8004fba:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004fbe:	b29a      	uxth	r2, r3
 8004fc0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004fc4:	801a      	strh	r2, [r3, #0]
 8004fc6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004fca:	881b      	ldrh	r3, [r3, #0]
 8004fcc:	b29b      	uxth	r3, r3
 8004fce:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004fd2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004fd6:	b29a      	uxth	r2, r3
 8004fd8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004fdc:	801a      	strh	r2, [r3, #0]
 8004fde:	e017      	b.n	8005010 <HAL_PCD_EP_DB_Transmit+0x54e>
 8004fe0:	68bb      	ldr	r3, [r7, #8]
 8004fe2:	785b      	ldrb	r3, [r3, #1]
 8004fe4:	2b01      	cmp	r3, #1
 8004fe6:	d113      	bne.n	8005010 <HAL_PCD_EP_DB_Transmit+0x54e>
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	681b      	ldr	r3, [r3, #0]
 8004fec:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004ff0:	b29b      	uxth	r3, r3
 8004ff2:	461a      	mov	r2, r3
 8004ff4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004ff6:	4413      	add	r3, r2
 8004ff8:	677b      	str	r3, [r7, #116]	@ 0x74
 8004ffa:	68bb      	ldr	r3, [r7, #8]
 8004ffc:	781b      	ldrb	r3, [r3, #0]
 8004ffe:	011a      	lsls	r2, r3, #4
 8005000:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005002:	4413      	add	r3, r2
 8005004:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005008:	673b      	str	r3, [r7, #112]	@ 0x70
 800500a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800500c:	2200      	movs	r2, #0
 800500e:	801a      	strh	r2, [r3, #0]
 8005010:	68bb      	ldr	r3, [r7, #8]
 8005012:	781b      	ldrb	r3, [r3, #0]
 8005014:	4619      	mov	r1, r3
 8005016:	68f8      	ldr	r0, [r7, #12]
 8005018:	f007 fb71 	bl	800c6fe <HAL_PCD_DataInStageCallback>
 800501c:	88fb      	ldrh	r3, [r7, #6]
 800501e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005022:	2b00      	cmp	r3, #0
 8005024:	f040 811a 	bne.w	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	461a      	mov	r2, r3
 800502e:	68bb      	ldr	r3, [r7, #8]
 8005030:	781b      	ldrb	r3, [r3, #0]
 8005032:	009b      	lsls	r3, r3, #2
 8005034:	4413      	add	r3, r2
 8005036:	881b      	ldrh	r3, [r3, #0]
 8005038:	b29b      	uxth	r3, r3
 800503a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800503e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005042:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	461a      	mov	r2, r3
 800504c:	68bb      	ldr	r3, [r7, #8]
 800504e:	781b      	ldrb	r3, [r3, #0]
 8005050:	009b      	lsls	r3, r3, #2
 8005052:	441a      	add	r2, r3
 8005054:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 8005058:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800505c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8005060:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005064:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005068:	b29b      	uxth	r3, r3
 800506a:	8013      	strh	r3, [r2, #0]
 800506c:	e0f6      	b.n	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 800506e:	88fb      	ldrh	r3, [r7, #6]
 8005070:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005074:	2b00      	cmp	r3, #0
 8005076:	d121      	bne.n	80050bc <HAL_PCD_EP_DB_Transmit+0x5fa>
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	681b      	ldr	r3, [r3, #0]
 800507c:	461a      	mov	r2, r3
 800507e:	68bb      	ldr	r3, [r7, #8]
 8005080:	781b      	ldrb	r3, [r3, #0]
 8005082:	009b      	lsls	r3, r3, #2
 8005084:	4413      	add	r3, r2
 8005086:	881b      	ldrh	r3, [r3, #0]
 8005088:	b29b      	uxth	r3, r3
 800508a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800508e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005092:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 8005096:	68fb      	ldr	r3, [r7, #12]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	461a      	mov	r2, r3
 800509c:	68bb      	ldr	r3, [r7, #8]
 800509e:	781b      	ldrb	r3, [r3, #0]
 80050a0:	009b      	lsls	r3, r3, #2
 80050a2:	441a      	add	r2, r3
 80050a4:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 80050a8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80050ac:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80050b0:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80050b4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80050b8:	b29b      	uxth	r3, r3
 80050ba:	8013      	strh	r3, [r2, #0]
 80050bc:	68bb      	ldr	r3, [r7, #8]
 80050be:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80050c2:	2b01      	cmp	r3, #1
 80050c4:	f040 80ca 	bne.w	800525c <HAL_PCD_EP_DB_Transmit+0x79a>
 80050c8:	68bb      	ldr	r3, [r7, #8]
 80050ca:	695a      	ldr	r2, [r3, #20]
 80050cc:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 80050d0:	441a      	add	r2, r3
 80050d2:	68bb      	ldr	r3, [r7, #8]
 80050d4:	615a      	str	r2, [r3, #20]
 80050d6:	68bb      	ldr	r3, [r7, #8]
 80050d8:	69da      	ldr	r2, [r3, #28]
 80050da:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 80050de:	441a      	add	r2, r3
 80050e0:	68bb      	ldr	r3, [r7, #8]
 80050e2:	61da      	str	r2, [r3, #28]
 80050e4:	68bb      	ldr	r3, [r7, #8]
 80050e6:	6a1a      	ldr	r2, [r3, #32]
 80050e8:	68bb      	ldr	r3, [r7, #8]
 80050ea:	691b      	ldr	r3, [r3, #16]
 80050ec:	429a      	cmp	r2, r3
 80050ee:	d30b      	bcc.n	8005108 <HAL_PCD_EP_DB_Transmit+0x646>
 80050f0:	68bb      	ldr	r3, [r7, #8]
 80050f2:	691b      	ldr	r3, [r3, #16]
 80050f4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80050f8:	68bb      	ldr	r3, [r7, #8]
 80050fa:	6a1a      	ldr	r2, [r3, #32]
 80050fc:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005100:	1ad2      	subs	r2, r2, r3
 8005102:	68bb      	ldr	r3, [r7, #8]
 8005104:	621a      	str	r2, [r3, #32]
 8005106:	e017      	b.n	8005138 <HAL_PCD_EP_DB_Transmit+0x676>
 8005108:	68bb      	ldr	r3, [r7, #8]
 800510a:	6a1b      	ldr	r3, [r3, #32]
 800510c:	2b00      	cmp	r3, #0
 800510e:	d108      	bne.n	8005122 <HAL_PCD_EP_DB_Transmit+0x660>
 8005110:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 8005114:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005118:	68bb      	ldr	r3, [r7, #8]
 800511a:	2200      	movs	r2, #0
 800511c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005120:	e00a      	b.n	8005138 <HAL_PCD_EP_DB_Transmit+0x676>
 8005122:	68bb      	ldr	r3, [r7, #8]
 8005124:	6a1b      	ldr	r3, [r3, #32]
 8005126:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800512a:	68bb      	ldr	r3, [r7, #8]
 800512c:	2200      	movs	r2, #0
 800512e:	621a      	str	r2, [r3, #32]
 8005130:	68bb      	ldr	r3, [r7, #8]
 8005132:	2200      	movs	r2, #0
 8005134:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	657b      	str	r3, [r7, #84]	@ 0x54
 800513e:	68bb      	ldr	r3, [r7, #8]
 8005140:	785b      	ldrb	r3, [r3, #1]
 8005142:	2b00      	cmp	r3, #0
 8005144:	d165      	bne.n	8005212 <HAL_PCD_EP_DB_Transmit+0x750>
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005154:	b29b      	uxth	r3, r3
 8005156:	461a      	mov	r2, r3
 8005158:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800515a:	4413      	add	r3, r2
 800515c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800515e:	68bb      	ldr	r3, [r7, #8]
 8005160:	781b      	ldrb	r3, [r3, #0]
 8005162:	011a      	lsls	r2, r3, #4
 8005164:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005166:	4413      	add	r3, r2
 8005168:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800516c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800516e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005170:	881b      	ldrh	r3, [r3, #0]
 8005172:	b29b      	uxth	r3, r3
 8005174:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005178:	b29a      	uxth	r2, r3
 800517a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800517c:	801a      	strh	r2, [r3, #0]
 800517e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005182:	2b00      	cmp	r3, #0
 8005184:	d10a      	bne.n	800519c <HAL_PCD_EP_DB_Transmit+0x6da>
 8005186:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005188:	881b      	ldrh	r3, [r3, #0]
 800518a:	b29b      	uxth	r3, r3
 800518c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005190:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005194:	b29a      	uxth	r2, r3
 8005196:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005198:	801a      	strh	r2, [r3, #0]
 800519a:	e054      	b.n	8005246 <HAL_PCD_EP_DB_Transmit+0x784>
 800519c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80051a0:	2b3e      	cmp	r3, #62	@ 0x3e
 80051a2:	d818      	bhi.n	80051d6 <HAL_PCD_EP_DB_Transmit+0x714>
 80051a4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80051a8:	085b      	lsrs	r3, r3, #1
 80051aa:	66bb      	str	r3, [r7, #104]	@ 0x68
 80051ac:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80051b0:	f003 0301 	and.w	r3, r3, #1
 80051b4:	2b00      	cmp	r3, #0
 80051b6:	d002      	beq.n	80051be <HAL_PCD_EP_DB_Transmit+0x6fc>
 80051b8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80051ba:	3301      	adds	r3, #1
 80051bc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80051be:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80051c0:	881b      	ldrh	r3, [r3, #0]
 80051c2:	b29a      	uxth	r2, r3
 80051c4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80051c6:	b29b      	uxth	r3, r3
 80051c8:	029b      	lsls	r3, r3, #10
 80051ca:	b29b      	uxth	r3, r3
 80051cc:	4313      	orrs	r3, r2
 80051ce:	b29a      	uxth	r2, r3
 80051d0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80051d2:	801a      	strh	r2, [r3, #0]
 80051d4:	e037      	b.n	8005246 <HAL_PCD_EP_DB_Transmit+0x784>
 80051d6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80051da:	095b      	lsrs	r3, r3, #5
 80051dc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80051de:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80051e2:	f003 031f 	and.w	r3, r3, #31
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	d102      	bne.n	80051f0 <HAL_PCD_EP_DB_Transmit+0x72e>
 80051ea:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80051ec:	3b01      	subs	r3, #1
 80051ee:	66bb      	str	r3, [r7, #104]	@ 0x68
 80051f0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80051f2:	881b      	ldrh	r3, [r3, #0]
 80051f4:	b29a      	uxth	r2, r3
 80051f6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80051f8:	b29b      	uxth	r3, r3
 80051fa:	029b      	lsls	r3, r3, #10
 80051fc:	b29b      	uxth	r3, r3
 80051fe:	4313      	orrs	r3, r2
 8005200:	b29b      	uxth	r3, r3
 8005202:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005206:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800520a:	b29a      	uxth	r2, r3
 800520c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800520e:	801a      	strh	r2, [r3, #0]
 8005210:	e019      	b.n	8005246 <HAL_PCD_EP_DB_Transmit+0x784>
 8005212:	68bb      	ldr	r3, [r7, #8]
 8005214:	785b      	ldrb	r3, [r3, #1]
 8005216:	2b01      	cmp	r3, #1
 8005218:	d115      	bne.n	8005246 <HAL_PCD_EP_DB_Transmit+0x784>
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005222:	b29b      	uxth	r3, r3
 8005224:	461a      	mov	r2, r3
 8005226:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8005228:	4413      	add	r3, r2
 800522a:	657b      	str	r3, [r7, #84]	@ 0x54
 800522c:	68bb      	ldr	r3, [r7, #8]
 800522e:	781b      	ldrb	r3, [r3, #0]
 8005230:	011a      	lsls	r2, r3, #4
 8005232:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8005234:	4413      	add	r3, r2
 8005236:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800523a:	653b      	str	r3, [r7, #80]	@ 0x50
 800523c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005240:	b29a      	uxth	r2, r3
 8005242:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005244:	801a      	strh	r2, [r3, #0]
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	6818      	ldr	r0, [r3, #0]
 800524a:	68bb      	ldr	r3, [r7, #8]
 800524c:	6959      	ldr	r1, [r3, #20]
 800524e:	68bb      	ldr	r3, [r7, #8]
 8005250:	895a      	ldrh	r2, [r3, #10]
 8005252:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005256:	b29b      	uxth	r3, r3
 8005258:	f005 fcef 	bl	800ac3a <USB_WritePMA>
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	461a      	mov	r2, r3
 8005262:	68bb      	ldr	r3, [r7, #8]
 8005264:	781b      	ldrb	r3, [r3, #0]
 8005266:	009b      	lsls	r3, r3, #2
 8005268:	4413      	add	r3, r2
 800526a:	881b      	ldrh	r3, [r3, #0]
 800526c:	b29b      	uxth	r3, r3
 800526e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005272:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005276:	82bb      	strh	r3, [r7, #20]
 8005278:	8abb      	ldrh	r3, [r7, #20]
 800527a:	f083 0310 	eor.w	r3, r3, #16
 800527e:	82bb      	strh	r3, [r7, #20]
 8005280:	8abb      	ldrh	r3, [r7, #20]
 8005282:	f083 0320 	eor.w	r3, r3, #32
 8005286:	82bb      	strh	r3, [r7, #20]
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	461a      	mov	r2, r3
 800528e:	68bb      	ldr	r3, [r7, #8]
 8005290:	781b      	ldrb	r3, [r3, #0]
 8005292:	009b      	lsls	r3, r3, #2
 8005294:	441a      	add	r2, r3
 8005296:	8abb      	ldrh	r3, [r7, #20]
 8005298:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800529c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80052a0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80052a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80052a8:	b29b      	uxth	r3, r3
 80052aa:	8013      	strh	r3, [r2, #0]
 80052ac:	2300      	movs	r3, #0
 80052ae:	4618      	mov	r0, r3
 80052b0:	3790      	adds	r7, #144	@ 0x90
 80052b2:	46bd      	mov	sp, r7
 80052b4:	bd80      	pop	{r7, pc}

080052b6 <HAL_PCDEx_PMAConfig>:
 80052b6:	b480      	push	{r7}
 80052b8:	b087      	sub	sp, #28
 80052ba:	af00      	add	r7, sp, #0
 80052bc:	60f8      	str	r0, [r7, #12]
 80052be:	607b      	str	r3, [r7, #4]
 80052c0:	460b      	mov	r3, r1
 80052c2:	817b      	strh	r3, [r7, #10]
 80052c4:	4613      	mov	r3, r2
 80052c6:	813b      	strh	r3, [r7, #8]
 80052c8:	897b      	ldrh	r3, [r7, #10]
 80052ca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80052ce:	b29b      	uxth	r3, r3
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d00b      	beq.n	80052ec <HAL_PCDEx_PMAConfig+0x36>
 80052d4:	897b      	ldrh	r3, [r7, #10]
 80052d6:	f003 0207 	and.w	r2, r3, #7
 80052da:	4613      	mov	r3, r2
 80052dc:	009b      	lsls	r3, r3, #2
 80052de:	4413      	add	r3, r2
 80052e0:	00db      	lsls	r3, r3, #3
 80052e2:	3310      	adds	r3, #16
 80052e4:	68fa      	ldr	r2, [r7, #12]
 80052e6:	4413      	add	r3, r2
 80052e8:	617b      	str	r3, [r7, #20]
 80052ea:	e009      	b.n	8005300 <HAL_PCDEx_PMAConfig+0x4a>
 80052ec:	897a      	ldrh	r2, [r7, #10]
 80052ee:	4613      	mov	r3, r2
 80052f0:	009b      	lsls	r3, r3, #2
 80052f2:	4413      	add	r3, r2
 80052f4:	00db      	lsls	r3, r3, #3
 80052f6:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80052fa:	68fa      	ldr	r2, [r7, #12]
 80052fc:	4413      	add	r3, r2
 80052fe:	617b      	str	r3, [r7, #20]
 8005300:	893b      	ldrh	r3, [r7, #8]
 8005302:	2b00      	cmp	r3, #0
 8005304:	d107      	bne.n	8005316 <HAL_PCDEx_PMAConfig+0x60>
 8005306:	697b      	ldr	r3, [r7, #20]
 8005308:	2200      	movs	r2, #0
 800530a:	731a      	strb	r2, [r3, #12]
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	b29a      	uxth	r2, r3
 8005310:	697b      	ldr	r3, [r7, #20]
 8005312:	80da      	strh	r2, [r3, #6]
 8005314:	e00b      	b.n	800532e <HAL_PCDEx_PMAConfig+0x78>
 8005316:	697b      	ldr	r3, [r7, #20]
 8005318:	2201      	movs	r2, #1
 800531a:	731a      	strb	r2, [r3, #12]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	b29a      	uxth	r2, r3
 8005320:	697b      	ldr	r3, [r7, #20]
 8005322:	811a      	strh	r2, [r3, #8]
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	0c1b      	lsrs	r3, r3, #16
 8005328:	b29a      	uxth	r2, r3
 800532a:	697b      	ldr	r3, [r7, #20]
 800532c:	815a      	strh	r2, [r3, #10]
 800532e:	2300      	movs	r3, #0
 8005330:	4618      	mov	r0, r3
 8005332:	371c      	adds	r7, #28
 8005334:	46bd      	mov	sp, r7
 8005336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800533a:	4770      	bx	lr

0800533c <HAL_RCC_OscConfig>:
 800533c:	b580      	push	{r7, lr}
 800533e:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
 8005342:	af00      	add	r7, sp, #0
 8005344:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005348:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800534c:	6018      	str	r0, [r3, #0]
 800534e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005352:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	2b00      	cmp	r3, #0
 800535a:	d102      	bne.n	8005362 <HAL_RCC_OscConfig+0x26>
 800535c:	2301      	movs	r3, #1
 800535e:	f001 b823 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005362:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005366:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	f003 0301 	and.w	r3, r3, #1
 8005372:	2b00      	cmp	r3, #0
 8005374:	f000 817d 	beq.w	8005672 <HAL_RCC_OscConfig+0x336>
 8005378:	4bbc      	ldr	r3, [pc, #752]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 800537a:	685b      	ldr	r3, [r3, #4]
 800537c:	f003 030c 	and.w	r3, r3, #12
 8005380:	2b04      	cmp	r3, #4
 8005382:	d00c      	beq.n	800539e <HAL_RCC_OscConfig+0x62>
 8005384:	4bb9      	ldr	r3, [pc, #740]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005386:	685b      	ldr	r3, [r3, #4]
 8005388:	f003 030c 	and.w	r3, r3, #12
 800538c:	2b08      	cmp	r3, #8
 800538e:	d15c      	bne.n	800544a <HAL_RCC_OscConfig+0x10e>
 8005390:	4bb6      	ldr	r3, [pc, #728]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005392:	685b      	ldr	r3, [r3, #4]
 8005394:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005398:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800539c:	d155      	bne.n	800544a <HAL_RCC_OscConfig+0x10e>
 800539e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80053a2:	f8c7 31f0 	str.w	r3, [r7, #496]	@ 0x1f0
 80053a6:	f8d7 31f0 	ldr.w	r3, [r7, #496]	@ 0x1f0
 80053aa:	fa93 f3a3 	rbit	r3, r3
 80053ae:	f8c7 31ec 	str.w	r3, [r7, #492]	@ 0x1ec
 80053b2:	f8d7 31ec 	ldr.w	r3, [r7, #492]	@ 0x1ec
 80053b6:	fab3 f383 	clz	r3, r3
 80053ba:	b2db      	uxtb	r3, r3
 80053bc:	095b      	lsrs	r3, r3, #5
 80053be:	b2db      	uxtb	r3, r3
 80053c0:	f043 0301 	orr.w	r3, r3, #1
 80053c4:	b2db      	uxtb	r3, r3
 80053c6:	2b01      	cmp	r3, #1
 80053c8:	d102      	bne.n	80053d0 <HAL_RCC_OscConfig+0x94>
 80053ca:	4ba8      	ldr	r3, [pc, #672]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	e015      	b.n	80053fc <HAL_RCC_OscConfig+0xc0>
 80053d0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80053d4:	f8c7 31e8 	str.w	r3, [r7, #488]	@ 0x1e8
 80053d8:	f8d7 31e8 	ldr.w	r3, [r7, #488]	@ 0x1e8
 80053dc:	fa93 f3a3 	rbit	r3, r3
 80053e0:	f8c7 31e4 	str.w	r3, [r7, #484]	@ 0x1e4
 80053e4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80053e8:	f8c7 31e0 	str.w	r3, [r7, #480]	@ 0x1e0
 80053ec:	f8d7 31e0 	ldr.w	r3, [r7, #480]	@ 0x1e0
 80053f0:	fa93 f3a3 	rbit	r3, r3
 80053f4:	f8c7 31dc 	str.w	r3, [r7, #476]	@ 0x1dc
 80053f8:	4b9c      	ldr	r3, [pc, #624]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80053fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80053fc:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8005400:	f8c7 21d8 	str.w	r2, [r7, #472]	@ 0x1d8
 8005404:	f8d7 21d8 	ldr.w	r2, [r7, #472]	@ 0x1d8
 8005408:	fa92 f2a2 	rbit	r2, r2
 800540c:	f8c7 21d4 	str.w	r2, [r7, #468]	@ 0x1d4
 8005410:	f8d7 21d4 	ldr.w	r2, [r7, #468]	@ 0x1d4
 8005414:	fab2 f282 	clz	r2, r2
 8005418:	b2d2      	uxtb	r2, r2
 800541a:	f042 0220 	orr.w	r2, r2, #32
 800541e:	b2d2      	uxtb	r2, r2
 8005420:	f002 021f 	and.w	r2, r2, #31
 8005424:	2101      	movs	r1, #1
 8005426:	fa01 f202 	lsl.w	r2, r1, r2
 800542a:	4013      	ands	r3, r2
 800542c:	2b00      	cmp	r3, #0
 800542e:	f000 811f 	beq.w	8005670 <HAL_RCC_OscConfig+0x334>
 8005432:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005436:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800543a:	681b      	ldr	r3, [r3, #0]
 800543c:	685b      	ldr	r3, [r3, #4]
 800543e:	2b00      	cmp	r3, #0
 8005440:	f040 8116 	bne.w	8005670 <HAL_RCC_OscConfig+0x334>
 8005444:	2301      	movs	r3, #1
 8005446:	f000 bfaf 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 800544a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800544e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	685b      	ldr	r3, [r3, #4]
 8005456:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800545a:	d106      	bne.n	800546a <HAL_RCC_OscConfig+0x12e>
 800545c:	4b83      	ldr	r3, [pc, #524]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	4a82      	ldr	r2, [pc, #520]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005462:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005466:	6013      	str	r3, [r2, #0]
 8005468:	e036      	b.n	80054d8 <HAL_RCC_OscConfig+0x19c>
 800546a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800546e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	685b      	ldr	r3, [r3, #4]
 8005476:	2b00      	cmp	r3, #0
 8005478:	d10c      	bne.n	8005494 <HAL_RCC_OscConfig+0x158>
 800547a:	4b7c      	ldr	r3, [pc, #496]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	4a7b      	ldr	r2, [pc, #492]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005480:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005484:	6013      	str	r3, [r2, #0]
 8005486:	4b79      	ldr	r3, [pc, #484]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	4a78      	ldr	r2, [pc, #480]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 800548c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005490:	6013      	str	r3, [r2, #0]
 8005492:	e021      	b.n	80054d8 <HAL_RCC_OscConfig+0x19c>
 8005494:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005498:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	685b      	ldr	r3, [r3, #4]
 80054a0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80054a4:	d10c      	bne.n	80054c0 <HAL_RCC_OscConfig+0x184>
 80054a6:	4b71      	ldr	r3, [pc, #452]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054a8:	681b      	ldr	r3, [r3, #0]
 80054aa:	4a70      	ldr	r2, [pc, #448]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054ac:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80054b0:	6013      	str	r3, [r2, #0]
 80054b2:	4b6e      	ldr	r3, [pc, #440]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	4a6d      	ldr	r2, [pc, #436]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054b8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80054bc:	6013      	str	r3, [r2, #0]
 80054be:	e00b      	b.n	80054d8 <HAL_RCC_OscConfig+0x19c>
 80054c0:	4b6a      	ldr	r3, [pc, #424]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	4a69      	ldr	r2, [pc, #420]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054c6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80054ca:	6013      	str	r3, [r2, #0]
 80054cc:	4b67      	ldr	r3, [pc, #412]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	4a66      	ldr	r2, [pc, #408]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054d2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80054d6:	6013      	str	r3, [r2, #0]
 80054d8:	4b64      	ldr	r3, [pc, #400]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80054dc:	f023 020f 	bic.w	r2, r3, #15
 80054e0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80054e4:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	689b      	ldr	r3, [r3, #8]
 80054ec:	495f      	ldr	r1, [pc, #380]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 80054ee:	4313      	orrs	r3, r2
 80054f0:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80054f2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80054f6:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	685b      	ldr	r3, [r3, #4]
 80054fe:	2b00      	cmp	r3, #0
 8005500:	d059      	beq.n	80055b6 <HAL_RCC_OscConfig+0x27a>
 8005502:	f7fd f997 	bl	8002834 <HAL_GetTick>
 8005506:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 800550a:	e00a      	b.n	8005522 <HAL_RCC_OscConfig+0x1e6>
 800550c:	f7fd f992 	bl	8002834 <HAL_GetTick>
 8005510:	4602      	mov	r2, r0
 8005512:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005516:	1ad3      	subs	r3, r2, r3
 8005518:	2b64      	cmp	r3, #100	@ 0x64
 800551a:	d902      	bls.n	8005522 <HAL_RCC_OscConfig+0x1e6>
 800551c:	2303      	movs	r3, #3
 800551e:	f000 bf43 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005522:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8005526:	f8c7 31d0 	str.w	r3, [r7, #464]	@ 0x1d0
 800552a:	f8d7 31d0 	ldr.w	r3, [r7, #464]	@ 0x1d0
 800552e:	fa93 f3a3 	rbit	r3, r3
 8005532:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8005536:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 800553a:	fab3 f383 	clz	r3, r3
 800553e:	b2db      	uxtb	r3, r3
 8005540:	095b      	lsrs	r3, r3, #5
 8005542:	b2db      	uxtb	r3, r3
 8005544:	f043 0301 	orr.w	r3, r3, #1
 8005548:	b2db      	uxtb	r3, r3
 800554a:	2b01      	cmp	r3, #1
 800554c:	d102      	bne.n	8005554 <HAL_RCC_OscConfig+0x218>
 800554e:	4b47      	ldr	r3, [pc, #284]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	e015      	b.n	8005580 <HAL_RCC_OscConfig+0x244>
 8005554:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8005558:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 800555c:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 8005560:	fa93 f3a3 	rbit	r3, r3
 8005564:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8005568:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800556c:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
 8005570:	f8d7 31c0 	ldr.w	r3, [r7, #448]	@ 0x1c0
 8005574:	fa93 f3a3 	rbit	r3, r3
 8005578:	f8c7 31bc 	str.w	r3, [r7, #444]	@ 0x1bc
 800557c:	4b3b      	ldr	r3, [pc, #236]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 800557e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005580:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8005584:	f8c7 21b8 	str.w	r2, [r7, #440]	@ 0x1b8
 8005588:	f8d7 21b8 	ldr.w	r2, [r7, #440]	@ 0x1b8
 800558c:	fa92 f2a2 	rbit	r2, r2
 8005590:	f8c7 21b4 	str.w	r2, [r7, #436]	@ 0x1b4
 8005594:	f8d7 21b4 	ldr.w	r2, [r7, #436]	@ 0x1b4
 8005598:	fab2 f282 	clz	r2, r2
 800559c:	b2d2      	uxtb	r2, r2
 800559e:	f042 0220 	orr.w	r2, r2, #32
 80055a2:	b2d2      	uxtb	r2, r2
 80055a4:	f002 021f 	and.w	r2, r2, #31
 80055a8:	2101      	movs	r1, #1
 80055aa:	fa01 f202 	lsl.w	r2, r1, r2
 80055ae:	4013      	ands	r3, r2
 80055b0:	2b00      	cmp	r3, #0
 80055b2:	d0ab      	beq.n	800550c <HAL_RCC_OscConfig+0x1d0>
 80055b4:	e05d      	b.n	8005672 <HAL_RCC_OscConfig+0x336>
 80055b6:	f7fd f93d 	bl	8002834 <HAL_GetTick>
 80055ba:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80055be:	e00a      	b.n	80055d6 <HAL_RCC_OscConfig+0x29a>
 80055c0:	f7fd f938 	bl	8002834 <HAL_GetTick>
 80055c4:	4602      	mov	r2, r0
 80055c6:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80055ca:	1ad3      	subs	r3, r2, r3
 80055cc:	2b64      	cmp	r3, #100	@ 0x64
 80055ce:	d902      	bls.n	80055d6 <HAL_RCC_OscConfig+0x29a>
 80055d0:	2303      	movs	r3, #3
 80055d2:	f000 bee9 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 80055d6:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80055da:	f8c7 31b0 	str.w	r3, [r7, #432]	@ 0x1b0
 80055de:	f8d7 31b0 	ldr.w	r3, [r7, #432]	@ 0x1b0
 80055e2:	fa93 f3a3 	rbit	r3, r3
 80055e6:	f8c7 31ac 	str.w	r3, [r7, #428]	@ 0x1ac
 80055ea:	f8d7 31ac 	ldr.w	r3, [r7, #428]	@ 0x1ac
 80055ee:	fab3 f383 	clz	r3, r3
 80055f2:	b2db      	uxtb	r3, r3
 80055f4:	095b      	lsrs	r3, r3, #5
 80055f6:	b2db      	uxtb	r3, r3
 80055f8:	f043 0301 	orr.w	r3, r3, #1
 80055fc:	b2db      	uxtb	r3, r3
 80055fe:	2b01      	cmp	r3, #1
 8005600:	d102      	bne.n	8005608 <HAL_RCC_OscConfig+0x2cc>
 8005602:	4b1a      	ldr	r3, [pc, #104]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	e015      	b.n	8005634 <HAL_RCC_OscConfig+0x2f8>
 8005608:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 800560c:	f8c7 31a8 	str.w	r3, [r7, #424]	@ 0x1a8
 8005610:	f8d7 31a8 	ldr.w	r3, [r7, #424]	@ 0x1a8
 8005614:	fa93 f3a3 	rbit	r3, r3
 8005618:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 800561c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8005620:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8005624:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 8005628:	fa93 f3a3 	rbit	r3, r3
 800562c:	f8c7 319c 	str.w	r3, [r7, #412]	@ 0x19c
 8005630:	4b0e      	ldr	r3, [pc, #56]	@ (800566c <HAL_RCC_OscConfig+0x330>)
 8005632:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005634:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8005638:	f8c7 2198 	str.w	r2, [r7, #408]	@ 0x198
 800563c:	f8d7 2198 	ldr.w	r2, [r7, #408]	@ 0x198
 8005640:	fa92 f2a2 	rbit	r2, r2
 8005644:	f8c7 2194 	str.w	r2, [r7, #404]	@ 0x194
 8005648:	f8d7 2194 	ldr.w	r2, [r7, #404]	@ 0x194
 800564c:	fab2 f282 	clz	r2, r2
 8005650:	b2d2      	uxtb	r2, r2
 8005652:	f042 0220 	orr.w	r2, r2, #32
 8005656:	b2d2      	uxtb	r2, r2
 8005658:	f002 021f 	and.w	r2, r2, #31
 800565c:	2101      	movs	r1, #1
 800565e:	fa01 f202 	lsl.w	r2, r1, r2
 8005662:	4013      	ands	r3, r2
 8005664:	2b00      	cmp	r3, #0
 8005666:	d1ab      	bne.n	80055c0 <HAL_RCC_OscConfig+0x284>
 8005668:	e003      	b.n	8005672 <HAL_RCC_OscConfig+0x336>
 800566a:	bf00      	nop
 800566c:	40021000 	.word	0x40021000
 8005670:	bf00      	nop
 8005672:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005676:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	f003 0302 	and.w	r3, r3, #2
 8005682:	2b00      	cmp	r3, #0
 8005684:	f000 817d 	beq.w	8005982 <HAL_RCC_OscConfig+0x646>
 8005688:	4ba6      	ldr	r3, [pc, #664]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 800568a:	685b      	ldr	r3, [r3, #4]
 800568c:	f003 030c 	and.w	r3, r3, #12
 8005690:	2b00      	cmp	r3, #0
 8005692:	d00b      	beq.n	80056ac <HAL_RCC_OscConfig+0x370>
 8005694:	4ba3      	ldr	r3, [pc, #652]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005696:	685b      	ldr	r3, [r3, #4]
 8005698:	f003 030c 	and.w	r3, r3, #12
 800569c:	2b08      	cmp	r3, #8
 800569e:	d172      	bne.n	8005786 <HAL_RCC_OscConfig+0x44a>
 80056a0:	4ba0      	ldr	r3, [pc, #640]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 80056a2:	685b      	ldr	r3, [r3, #4]
 80056a4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	d16c      	bne.n	8005786 <HAL_RCC_OscConfig+0x44a>
 80056ac:	2302      	movs	r3, #2
 80056ae:	f8c7 3190 	str.w	r3, [r7, #400]	@ 0x190
 80056b2:	f8d7 3190 	ldr.w	r3, [r7, #400]	@ 0x190
 80056b6:	fa93 f3a3 	rbit	r3, r3
 80056ba:	f8c7 318c 	str.w	r3, [r7, #396]	@ 0x18c
 80056be:	f8d7 318c 	ldr.w	r3, [r7, #396]	@ 0x18c
 80056c2:	fab3 f383 	clz	r3, r3
 80056c6:	b2db      	uxtb	r3, r3
 80056c8:	095b      	lsrs	r3, r3, #5
 80056ca:	b2db      	uxtb	r3, r3
 80056cc:	f043 0301 	orr.w	r3, r3, #1
 80056d0:	b2db      	uxtb	r3, r3
 80056d2:	2b01      	cmp	r3, #1
 80056d4:	d102      	bne.n	80056dc <HAL_RCC_OscConfig+0x3a0>
 80056d6:	4b93      	ldr	r3, [pc, #588]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	e013      	b.n	8005704 <HAL_RCC_OscConfig+0x3c8>
 80056dc:	2302      	movs	r3, #2
 80056de:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
 80056e2:	f8d7 3188 	ldr.w	r3, [r7, #392]	@ 0x188
 80056e6:	fa93 f3a3 	rbit	r3, r3
 80056ea:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
 80056ee:	2302      	movs	r3, #2
 80056f0:	f8c7 3180 	str.w	r3, [r7, #384]	@ 0x180
 80056f4:	f8d7 3180 	ldr.w	r3, [r7, #384]	@ 0x180
 80056f8:	fa93 f3a3 	rbit	r3, r3
 80056fc:	f8c7 317c 	str.w	r3, [r7, #380]	@ 0x17c
 8005700:	4b88      	ldr	r3, [pc, #544]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005702:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005704:	2202      	movs	r2, #2
 8005706:	f8c7 2178 	str.w	r2, [r7, #376]	@ 0x178
 800570a:	f8d7 2178 	ldr.w	r2, [r7, #376]	@ 0x178
 800570e:	fa92 f2a2 	rbit	r2, r2
 8005712:	f8c7 2174 	str.w	r2, [r7, #372]	@ 0x174
 8005716:	f8d7 2174 	ldr.w	r2, [r7, #372]	@ 0x174
 800571a:	fab2 f282 	clz	r2, r2
 800571e:	b2d2      	uxtb	r2, r2
 8005720:	f042 0220 	orr.w	r2, r2, #32
 8005724:	b2d2      	uxtb	r2, r2
 8005726:	f002 021f 	and.w	r2, r2, #31
 800572a:	2101      	movs	r1, #1
 800572c:	fa01 f202 	lsl.w	r2, r1, r2
 8005730:	4013      	ands	r3, r2
 8005732:	2b00      	cmp	r3, #0
 8005734:	d00a      	beq.n	800574c <HAL_RCC_OscConfig+0x410>
 8005736:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800573a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800573e:	681b      	ldr	r3, [r3, #0]
 8005740:	691b      	ldr	r3, [r3, #16]
 8005742:	2b01      	cmp	r3, #1
 8005744:	d002      	beq.n	800574c <HAL_RCC_OscConfig+0x410>
 8005746:	2301      	movs	r3, #1
 8005748:	f000 be2e 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 800574c:	4b75      	ldr	r3, [pc, #468]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005754:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005758:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800575c:	681b      	ldr	r3, [r3, #0]
 800575e:	695b      	ldr	r3, [r3, #20]
 8005760:	21f8      	movs	r1, #248	@ 0xf8
 8005762:	f8c7 1170 	str.w	r1, [r7, #368]	@ 0x170
 8005766:	f8d7 1170 	ldr.w	r1, [r7, #368]	@ 0x170
 800576a:	fa91 f1a1 	rbit	r1, r1
 800576e:	f8c7 116c 	str.w	r1, [r7, #364]	@ 0x16c
 8005772:	f8d7 116c 	ldr.w	r1, [r7, #364]	@ 0x16c
 8005776:	fab1 f181 	clz	r1, r1
 800577a:	b2c9      	uxtb	r1, r1
 800577c:	408b      	lsls	r3, r1
 800577e:	4969      	ldr	r1, [pc, #420]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005780:	4313      	orrs	r3, r2
 8005782:	600b      	str	r3, [r1, #0]
 8005784:	e0fd      	b.n	8005982 <HAL_RCC_OscConfig+0x646>
 8005786:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800578a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	691b      	ldr	r3, [r3, #16]
 8005792:	2b00      	cmp	r3, #0
 8005794:	f000 8088 	beq.w	80058a8 <HAL_RCC_OscConfig+0x56c>
 8005798:	2301      	movs	r3, #1
 800579a:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168
 800579e:	f8d7 3168 	ldr.w	r3, [r7, #360]	@ 0x168
 80057a2:	fa93 f3a3 	rbit	r3, r3
 80057a6:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 80057aa:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 80057ae:	fab3 f383 	clz	r3, r3
 80057b2:	b2db      	uxtb	r3, r3
 80057b4:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80057b8:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80057bc:	009b      	lsls	r3, r3, #2
 80057be:	461a      	mov	r2, r3
 80057c0:	2301      	movs	r3, #1
 80057c2:	6013      	str	r3, [r2, #0]
 80057c4:	f7fd f836 	bl	8002834 <HAL_GetTick>
 80057c8:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80057cc:	e00a      	b.n	80057e4 <HAL_RCC_OscConfig+0x4a8>
 80057ce:	f7fd f831 	bl	8002834 <HAL_GetTick>
 80057d2:	4602      	mov	r2, r0
 80057d4:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80057d8:	1ad3      	subs	r3, r2, r3
 80057da:	2b02      	cmp	r3, #2
 80057dc:	d902      	bls.n	80057e4 <HAL_RCC_OscConfig+0x4a8>
 80057de:	2303      	movs	r3, #3
 80057e0:	f000 bde2 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 80057e4:	2302      	movs	r3, #2
 80057e6:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
 80057ea:	f8d7 3160 	ldr.w	r3, [r7, #352]	@ 0x160
 80057ee:	fa93 f3a3 	rbit	r3, r3
 80057f2:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
 80057f6:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80057fa:	fab3 f383 	clz	r3, r3
 80057fe:	b2db      	uxtb	r3, r3
 8005800:	095b      	lsrs	r3, r3, #5
 8005802:	b2db      	uxtb	r3, r3
 8005804:	f043 0301 	orr.w	r3, r3, #1
 8005808:	b2db      	uxtb	r3, r3
 800580a:	2b01      	cmp	r3, #1
 800580c:	d102      	bne.n	8005814 <HAL_RCC_OscConfig+0x4d8>
 800580e:	4b45      	ldr	r3, [pc, #276]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	e013      	b.n	800583c <HAL_RCC_OscConfig+0x500>
 8005814:	2302      	movs	r3, #2
 8005816:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 800581a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800581e:	fa93 f3a3 	rbit	r3, r3
 8005822:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
 8005826:	2302      	movs	r3, #2
 8005828:	f8c7 3150 	str.w	r3, [r7, #336]	@ 0x150
 800582c:	f8d7 3150 	ldr.w	r3, [r7, #336]	@ 0x150
 8005830:	fa93 f3a3 	rbit	r3, r3
 8005834:	f8c7 314c 	str.w	r3, [r7, #332]	@ 0x14c
 8005838:	4b3a      	ldr	r3, [pc, #232]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 800583a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800583c:	2202      	movs	r2, #2
 800583e:	f8c7 2148 	str.w	r2, [r7, #328]	@ 0x148
 8005842:	f8d7 2148 	ldr.w	r2, [r7, #328]	@ 0x148
 8005846:	fa92 f2a2 	rbit	r2, r2
 800584a:	f8c7 2144 	str.w	r2, [r7, #324]	@ 0x144
 800584e:	f8d7 2144 	ldr.w	r2, [r7, #324]	@ 0x144
 8005852:	fab2 f282 	clz	r2, r2
 8005856:	b2d2      	uxtb	r2, r2
 8005858:	f042 0220 	orr.w	r2, r2, #32
 800585c:	b2d2      	uxtb	r2, r2
 800585e:	f002 021f 	and.w	r2, r2, #31
 8005862:	2101      	movs	r1, #1
 8005864:	fa01 f202 	lsl.w	r2, r1, r2
 8005868:	4013      	ands	r3, r2
 800586a:	2b00      	cmp	r3, #0
 800586c:	d0af      	beq.n	80057ce <HAL_RCC_OscConfig+0x492>
 800586e:	4b2d      	ldr	r3, [pc, #180]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005876:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800587a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800587e:	681b      	ldr	r3, [r3, #0]
 8005880:	695b      	ldr	r3, [r3, #20]
 8005882:	21f8      	movs	r1, #248	@ 0xf8
 8005884:	f8c7 1140 	str.w	r1, [r7, #320]	@ 0x140
 8005888:	f8d7 1140 	ldr.w	r1, [r7, #320]	@ 0x140
 800588c:	fa91 f1a1 	rbit	r1, r1
 8005890:	f8c7 113c 	str.w	r1, [r7, #316]	@ 0x13c
 8005894:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 8005898:	fab1 f181 	clz	r1, r1
 800589c:	b2c9      	uxtb	r1, r1
 800589e:	408b      	lsls	r3, r1
 80058a0:	4920      	ldr	r1, [pc, #128]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 80058a2:	4313      	orrs	r3, r2
 80058a4:	600b      	str	r3, [r1, #0]
 80058a6:	e06c      	b.n	8005982 <HAL_RCC_OscConfig+0x646>
 80058a8:	2301      	movs	r3, #1
 80058aa:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 80058ae:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80058b2:	fa93 f3a3 	rbit	r3, r3
 80058b6:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 80058ba:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 80058be:	fab3 f383 	clz	r3, r3
 80058c2:	b2db      	uxtb	r3, r3
 80058c4:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80058c8:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80058cc:	009b      	lsls	r3, r3, #2
 80058ce:	461a      	mov	r2, r3
 80058d0:	2300      	movs	r3, #0
 80058d2:	6013      	str	r3, [r2, #0]
 80058d4:	f7fc ffae 	bl	8002834 <HAL_GetTick>
 80058d8:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80058dc:	e00a      	b.n	80058f4 <HAL_RCC_OscConfig+0x5b8>
 80058de:	f7fc ffa9 	bl	8002834 <HAL_GetTick>
 80058e2:	4602      	mov	r2, r0
 80058e4:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80058e8:	1ad3      	subs	r3, r2, r3
 80058ea:	2b02      	cmp	r3, #2
 80058ec:	d902      	bls.n	80058f4 <HAL_RCC_OscConfig+0x5b8>
 80058ee:	2303      	movs	r3, #3
 80058f0:	f000 bd5a 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 80058f4:	2302      	movs	r3, #2
 80058f6:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 80058fa:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 80058fe:	fa93 f3a3 	rbit	r3, r3
 8005902:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 8005906:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 800590a:	fab3 f383 	clz	r3, r3
 800590e:	b2db      	uxtb	r3, r3
 8005910:	095b      	lsrs	r3, r3, #5
 8005912:	b2db      	uxtb	r3, r3
 8005914:	f043 0301 	orr.w	r3, r3, #1
 8005918:	b2db      	uxtb	r3, r3
 800591a:	2b01      	cmp	r3, #1
 800591c:	d104      	bne.n	8005928 <HAL_RCC_OscConfig+0x5ec>
 800591e:	4b01      	ldr	r3, [pc, #4]	@ (8005924 <HAL_RCC_OscConfig+0x5e8>)
 8005920:	681b      	ldr	r3, [r3, #0]
 8005922:	e015      	b.n	8005950 <HAL_RCC_OscConfig+0x614>
 8005924:	40021000 	.word	0x40021000
 8005928:	2302      	movs	r3, #2
 800592a:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 800592e:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 8005932:	fa93 f3a3 	rbit	r3, r3
 8005936:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 800593a:	2302      	movs	r3, #2
 800593c:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 8005940:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8005944:	fa93 f3a3 	rbit	r3, r3
 8005948:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 800594c:	4bc8      	ldr	r3, [pc, #800]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 800594e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005950:	2202      	movs	r2, #2
 8005952:	f8c7 2118 	str.w	r2, [r7, #280]	@ 0x118
 8005956:	f8d7 2118 	ldr.w	r2, [r7, #280]	@ 0x118
 800595a:	fa92 f2a2 	rbit	r2, r2
 800595e:	f8c7 2114 	str.w	r2, [r7, #276]	@ 0x114
 8005962:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 8005966:	fab2 f282 	clz	r2, r2
 800596a:	b2d2      	uxtb	r2, r2
 800596c:	f042 0220 	orr.w	r2, r2, #32
 8005970:	b2d2      	uxtb	r2, r2
 8005972:	f002 021f 	and.w	r2, r2, #31
 8005976:	2101      	movs	r1, #1
 8005978:	fa01 f202 	lsl.w	r2, r1, r2
 800597c:	4013      	ands	r3, r2
 800597e:	2b00      	cmp	r3, #0
 8005980:	d1ad      	bne.n	80058de <HAL_RCC_OscConfig+0x5a2>
 8005982:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005986:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800598a:	681b      	ldr	r3, [r3, #0]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	f003 0308 	and.w	r3, r3, #8
 8005992:	2b00      	cmp	r3, #0
 8005994:	f000 8110 	beq.w	8005bb8 <HAL_RCC_OscConfig+0x87c>
 8005998:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800599c:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	699b      	ldr	r3, [r3, #24]
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d079      	beq.n	8005a9c <HAL_RCC_OscConfig+0x760>
 80059a8:	2301      	movs	r3, #1
 80059aa:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 80059ae:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80059b2:	fa93 f3a3 	rbit	r3, r3
 80059b6:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 80059ba:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80059be:	fab3 f383 	clz	r3, r3
 80059c2:	b2db      	uxtb	r3, r3
 80059c4:	461a      	mov	r2, r3
 80059c6:	4bab      	ldr	r3, [pc, #684]	@ (8005c74 <HAL_RCC_OscConfig+0x938>)
 80059c8:	4413      	add	r3, r2
 80059ca:	009b      	lsls	r3, r3, #2
 80059cc:	461a      	mov	r2, r3
 80059ce:	2301      	movs	r3, #1
 80059d0:	6013      	str	r3, [r2, #0]
 80059d2:	f7fc ff2f 	bl	8002834 <HAL_GetTick>
 80059d6:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 80059da:	e00a      	b.n	80059f2 <HAL_RCC_OscConfig+0x6b6>
 80059dc:	f7fc ff2a 	bl	8002834 <HAL_GetTick>
 80059e0:	4602      	mov	r2, r0
 80059e2:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 80059e6:	1ad3      	subs	r3, r2, r3
 80059e8:	2b02      	cmp	r3, #2
 80059ea:	d902      	bls.n	80059f2 <HAL_RCC_OscConfig+0x6b6>
 80059ec:	2303      	movs	r3, #3
 80059ee:	f000 bcdb 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 80059f2:	2302      	movs	r3, #2
 80059f4:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 80059f8:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 80059fc:	fa93 f3a3 	rbit	r3, r3
 8005a00:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8005a04:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a08:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8005a0c:	2202      	movs	r2, #2
 8005a0e:	601a      	str	r2, [r3, #0]
 8005a10:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a14:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	fa93 f2a3 	rbit	r2, r3
 8005a1e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a22:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005a26:	601a      	str	r2, [r3, #0]
 8005a28:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a2c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a30:	2202      	movs	r2, #2
 8005a32:	601a      	str	r2, [r3, #0]
 8005a34:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a38:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	fa93 f2a3 	rbit	r2, r3
 8005a42:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a46:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8005a4a:	601a      	str	r2, [r3, #0]
 8005a4c:	4b88      	ldr	r3, [pc, #544]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005a4e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005a50:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a54:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8005a58:	2102      	movs	r1, #2
 8005a5a:	6019      	str	r1, [r3, #0]
 8005a5c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a60:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	fa93 f1a3 	rbit	r1, r3
 8005a6a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a6e:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8005a72:	6019      	str	r1, [r3, #0]
 8005a74:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005a78:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	fab3 f383 	clz	r3, r3
 8005a82:	b2db      	uxtb	r3, r3
 8005a84:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005a88:	b2db      	uxtb	r3, r3
 8005a8a:	f003 031f 	and.w	r3, r3, #31
 8005a8e:	2101      	movs	r1, #1
 8005a90:	fa01 f303 	lsl.w	r3, r1, r3
 8005a94:	4013      	ands	r3, r2
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d0a0      	beq.n	80059dc <HAL_RCC_OscConfig+0x6a0>
 8005a9a:	e08d      	b.n	8005bb8 <HAL_RCC_OscConfig+0x87c>
 8005a9c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005aa0:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8005aa4:	2201      	movs	r2, #1
 8005aa6:	601a      	str	r2, [r3, #0]
 8005aa8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005aac:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	fa93 f2a3 	rbit	r2, r3
 8005ab6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005aba:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8005abe:	601a      	str	r2, [r3, #0]
 8005ac0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005ac4:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	fab3 f383 	clz	r3, r3
 8005ace:	b2db      	uxtb	r3, r3
 8005ad0:	461a      	mov	r2, r3
 8005ad2:	4b68      	ldr	r3, [pc, #416]	@ (8005c74 <HAL_RCC_OscConfig+0x938>)
 8005ad4:	4413      	add	r3, r2
 8005ad6:	009b      	lsls	r3, r3, #2
 8005ad8:	461a      	mov	r2, r3
 8005ada:	2300      	movs	r3, #0
 8005adc:	6013      	str	r3, [r2, #0]
 8005ade:	f7fc fea9 	bl	8002834 <HAL_GetTick>
 8005ae2:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8005ae6:	e00a      	b.n	8005afe <HAL_RCC_OscConfig+0x7c2>
 8005ae8:	f7fc fea4 	bl	8002834 <HAL_GetTick>
 8005aec:	4602      	mov	r2, r0
 8005aee:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005af2:	1ad3      	subs	r3, r2, r3
 8005af4:	2b02      	cmp	r3, #2
 8005af6:	d902      	bls.n	8005afe <HAL_RCC_OscConfig+0x7c2>
 8005af8:	2303      	movs	r3, #3
 8005afa:	f000 bc55 	b.w	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005afe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b02:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8005b06:	2202      	movs	r2, #2
 8005b08:	601a      	str	r2, [r3, #0]
 8005b0a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b0e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	fa93 f2a3 	rbit	r2, r3
 8005b18:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b1c:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8005b20:	601a      	str	r2, [r3, #0]
 8005b22:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b26:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8005b2a:	2202      	movs	r2, #2
 8005b2c:	601a      	str	r2, [r3, #0]
 8005b2e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b32:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	fa93 f2a3 	rbit	r2, r3
 8005b3c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b40:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8005b44:	601a      	str	r2, [r3, #0]
 8005b46:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b4a:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8005b4e:	2202      	movs	r2, #2
 8005b50:	601a      	str	r2, [r3, #0]
 8005b52:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b56:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	fa93 f2a3 	rbit	r2, r3
 8005b60:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b64:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8005b68:	601a      	str	r2, [r3, #0]
 8005b6a:	4b41      	ldr	r3, [pc, #260]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005b6c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005b6e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b72:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8005b76:	2102      	movs	r1, #2
 8005b78:	6019      	str	r1, [r3, #0]
 8005b7a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b7e:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	fa93 f1a3 	rbit	r1, r3
 8005b88:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b8c:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8005b90:	6019      	str	r1, [r3, #0]
 8005b92:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005b96:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	fab3 f383 	clz	r3, r3
 8005ba0:	b2db      	uxtb	r3, r3
 8005ba2:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005ba6:	b2db      	uxtb	r3, r3
 8005ba8:	f003 031f 	and.w	r3, r3, #31
 8005bac:	2101      	movs	r1, #1
 8005bae:	fa01 f303 	lsl.w	r3, r1, r3
 8005bb2:	4013      	ands	r3, r2
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d197      	bne.n	8005ae8 <HAL_RCC_OscConfig+0x7ac>
 8005bb8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005bbc:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	681b      	ldr	r3, [r3, #0]
 8005bc4:	f003 0304 	and.w	r3, r3, #4
 8005bc8:	2b00      	cmp	r3, #0
 8005bca:	f000 81a1 	beq.w	8005f10 <HAL_RCC_OscConfig+0xbd4>
 8005bce:	2300      	movs	r3, #0
 8005bd0:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8005bd4:	4b26      	ldr	r3, [pc, #152]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005bd6:	69db      	ldr	r3, [r3, #28]
 8005bd8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d116      	bne.n	8005c0e <HAL_RCC_OscConfig+0x8d2>
 8005be0:	4b23      	ldr	r3, [pc, #140]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005be2:	69db      	ldr	r3, [r3, #28]
 8005be4:	4a22      	ldr	r2, [pc, #136]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005be6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005bea:	61d3      	str	r3, [r2, #28]
 8005bec:	4b20      	ldr	r3, [pc, #128]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005bee:	69db      	ldr	r3, [r3, #28]
 8005bf0:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8005bf4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005bf8:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8005bfc:	601a      	str	r2, [r3, #0]
 8005bfe:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005c02:	f5a3 73fc 	sub.w	r3, r3, #504	@ 0x1f8
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	2301      	movs	r3, #1
 8005c0a:	f887 31ff 	strb.w	r3, [r7, #511]	@ 0x1ff
 8005c0e:	4b1a      	ldr	r3, [pc, #104]	@ (8005c78 <HAL_RCC_OscConfig+0x93c>)
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d11a      	bne.n	8005c50 <HAL_RCC_OscConfig+0x914>
 8005c1a:	4b17      	ldr	r3, [pc, #92]	@ (8005c78 <HAL_RCC_OscConfig+0x93c>)
 8005c1c:	681b      	ldr	r3, [r3, #0]
 8005c1e:	4a16      	ldr	r2, [pc, #88]	@ (8005c78 <HAL_RCC_OscConfig+0x93c>)
 8005c20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005c24:	6013      	str	r3, [r2, #0]
 8005c26:	f7fc fe05 	bl	8002834 <HAL_GetTick>
 8005c2a:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8005c2e:	e009      	b.n	8005c44 <HAL_RCC_OscConfig+0x908>
 8005c30:	f7fc fe00 	bl	8002834 <HAL_GetTick>
 8005c34:	4602      	mov	r2, r0
 8005c36:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005c3a:	1ad3      	subs	r3, r2, r3
 8005c3c:	2b64      	cmp	r3, #100	@ 0x64
 8005c3e:	d901      	bls.n	8005c44 <HAL_RCC_OscConfig+0x908>
 8005c40:	2303      	movs	r3, #3
 8005c42:	e3b1      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005c44:	4b0c      	ldr	r3, [pc, #48]	@ (8005c78 <HAL_RCC_OscConfig+0x93c>)
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005c4c:	2b00      	cmp	r3, #0
 8005c4e:	d0ef      	beq.n	8005c30 <HAL_RCC_OscConfig+0x8f4>
 8005c50:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005c54:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	68db      	ldr	r3, [r3, #12]
 8005c5c:	2b01      	cmp	r3, #1
 8005c5e:	d10d      	bne.n	8005c7c <HAL_RCC_OscConfig+0x940>
 8005c60:	4b03      	ldr	r3, [pc, #12]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005c62:	6a1b      	ldr	r3, [r3, #32]
 8005c64:	4a02      	ldr	r2, [pc, #8]	@ (8005c70 <HAL_RCC_OscConfig+0x934>)
 8005c66:	f043 0301 	orr.w	r3, r3, #1
 8005c6a:	6213      	str	r3, [r2, #32]
 8005c6c:	e03c      	b.n	8005ce8 <HAL_RCC_OscConfig+0x9ac>
 8005c6e:	bf00      	nop
 8005c70:	40021000 	.word	0x40021000
 8005c74:	10908120 	.word	0x10908120
 8005c78:	40007000 	.word	0x40007000
 8005c7c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005c80:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	68db      	ldr	r3, [r3, #12]
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d10c      	bne.n	8005ca6 <HAL_RCC_OscConfig+0x96a>
 8005c8c:	4bc1      	ldr	r3, [pc, #772]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005c8e:	6a1b      	ldr	r3, [r3, #32]
 8005c90:	4ac0      	ldr	r2, [pc, #768]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005c92:	f023 0301 	bic.w	r3, r3, #1
 8005c96:	6213      	str	r3, [r2, #32]
 8005c98:	4bbe      	ldr	r3, [pc, #760]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005c9a:	6a1b      	ldr	r3, [r3, #32]
 8005c9c:	4abd      	ldr	r2, [pc, #756]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005c9e:	f023 0304 	bic.w	r3, r3, #4
 8005ca2:	6213      	str	r3, [r2, #32]
 8005ca4:	e020      	b.n	8005ce8 <HAL_RCC_OscConfig+0x9ac>
 8005ca6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005caa:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	68db      	ldr	r3, [r3, #12]
 8005cb2:	2b05      	cmp	r3, #5
 8005cb4:	d10c      	bne.n	8005cd0 <HAL_RCC_OscConfig+0x994>
 8005cb6:	4bb7      	ldr	r3, [pc, #732]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cb8:	6a1b      	ldr	r3, [r3, #32]
 8005cba:	4ab6      	ldr	r2, [pc, #728]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cbc:	f043 0304 	orr.w	r3, r3, #4
 8005cc0:	6213      	str	r3, [r2, #32]
 8005cc2:	4bb4      	ldr	r3, [pc, #720]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cc4:	6a1b      	ldr	r3, [r3, #32]
 8005cc6:	4ab3      	ldr	r2, [pc, #716]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cc8:	f043 0301 	orr.w	r3, r3, #1
 8005ccc:	6213      	str	r3, [r2, #32]
 8005cce:	e00b      	b.n	8005ce8 <HAL_RCC_OscConfig+0x9ac>
 8005cd0:	4bb0      	ldr	r3, [pc, #704]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cd2:	6a1b      	ldr	r3, [r3, #32]
 8005cd4:	4aaf      	ldr	r2, [pc, #700]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cd6:	f023 0301 	bic.w	r3, r3, #1
 8005cda:	6213      	str	r3, [r2, #32]
 8005cdc:	4bad      	ldr	r3, [pc, #692]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005cde:	6a1b      	ldr	r3, [r3, #32]
 8005ce0:	4aac      	ldr	r2, [pc, #688]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005ce2:	f023 0304 	bic.w	r3, r3, #4
 8005ce6:	6213      	str	r3, [r2, #32]
 8005ce8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005cec:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	68db      	ldr	r3, [r3, #12]
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	f000 8081 	beq.w	8005dfc <HAL_RCC_OscConfig+0xac0>
 8005cfa:	f7fc fd9b 	bl	8002834 <HAL_GetTick>
 8005cfe:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8005d02:	e00b      	b.n	8005d1c <HAL_RCC_OscConfig+0x9e0>
 8005d04:	f7fc fd96 	bl	8002834 <HAL_GetTick>
 8005d08:	4602      	mov	r2, r0
 8005d0a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005d0e:	1ad3      	subs	r3, r2, r3
 8005d10:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005d14:	4293      	cmp	r3, r2
 8005d16:	d901      	bls.n	8005d1c <HAL_RCC_OscConfig+0x9e0>
 8005d18:	2303      	movs	r3, #3
 8005d1a:	e345      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005d1c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d20:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8005d24:	2202      	movs	r2, #2
 8005d26:	601a      	str	r2, [r3, #0]
 8005d28:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d2c:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	fa93 f2a3 	rbit	r2, r3
 8005d36:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d3a:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 8005d3e:	601a      	str	r2, [r3, #0]
 8005d40:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d44:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005d48:	2202      	movs	r2, #2
 8005d4a:	601a      	str	r2, [r3, #0]
 8005d4c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d50:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	fa93 f2a3 	rbit	r2, r3
 8005d5a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d5e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8005d62:	601a      	str	r2, [r3, #0]
 8005d64:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d68:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	fab3 f383 	clz	r3, r3
 8005d72:	b2db      	uxtb	r3, r3
 8005d74:	095b      	lsrs	r3, r3, #5
 8005d76:	b2db      	uxtb	r3, r3
 8005d78:	f043 0302 	orr.w	r3, r3, #2
 8005d7c:	b2db      	uxtb	r3, r3
 8005d7e:	2b02      	cmp	r3, #2
 8005d80:	d102      	bne.n	8005d88 <HAL_RCC_OscConfig+0xa4c>
 8005d82:	4b84      	ldr	r3, [pc, #528]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005d84:	6a1b      	ldr	r3, [r3, #32]
 8005d86:	e013      	b.n	8005db0 <HAL_RCC_OscConfig+0xa74>
 8005d88:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d8c:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8005d90:	2202      	movs	r2, #2
 8005d92:	601a      	str	r2, [r3, #0]
 8005d94:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005d98:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	fa93 f2a3 	rbit	r2, r3
 8005da2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005da6:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8005daa:	601a      	str	r2, [r3, #0]
 8005dac:	4b79      	ldr	r3, [pc, #484]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005dae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005db0:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005db4:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8005db8:	2102      	movs	r1, #2
 8005dba:	6011      	str	r1, [r2, #0]
 8005dbc:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005dc0:	f5a2 72ac 	sub.w	r2, r2, #344	@ 0x158
 8005dc4:	6812      	ldr	r2, [r2, #0]
 8005dc6:	fa92 f1a2 	rbit	r1, r2
 8005dca:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005dce:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8005dd2:	6011      	str	r1, [r2, #0]
 8005dd4:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005dd8:	f5a2 72ae 	sub.w	r2, r2, #348	@ 0x15c
 8005ddc:	6812      	ldr	r2, [r2, #0]
 8005dde:	fab2 f282 	clz	r2, r2
 8005de2:	b2d2      	uxtb	r2, r2
 8005de4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005de8:	b2d2      	uxtb	r2, r2
 8005dea:	f002 021f 	and.w	r2, r2, #31
 8005dee:	2101      	movs	r1, #1
 8005df0:	fa01 f202 	lsl.w	r2, r1, r2
 8005df4:	4013      	ands	r3, r2
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d084      	beq.n	8005d04 <HAL_RCC_OscConfig+0x9c8>
 8005dfa:	e07f      	b.n	8005efc <HAL_RCC_OscConfig+0xbc0>
 8005dfc:	f7fc fd1a 	bl	8002834 <HAL_GetTick>
 8005e00:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8005e04:	e00b      	b.n	8005e1e <HAL_RCC_OscConfig+0xae2>
 8005e06:	f7fc fd15 	bl	8002834 <HAL_GetTick>
 8005e0a:	4602      	mov	r2, r0
 8005e0c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005e10:	1ad3      	subs	r3, r2, r3
 8005e12:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d901      	bls.n	8005e1e <HAL_RCC_OscConfig+0xae2>
 8005e1a:	2303      	movs	r3, #3
 8005e1c:	e2c4      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005e1e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e22:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8005e26:	2202      	movs	r2, #2
 8005e28:	601a      	str	r2, [r3, #0]
 8005e2a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e2e:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	fa93 f2a3 	rbit	r2, r3
 8005e38:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e3c:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8005e40:	601a      	str	r2, [r3, #0]
 8005e42:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e46:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8005e4a:	2202      	movs	r2, #2
 8005e4c:	601a      	str	r2, [r3, #0]
 8005e4e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e52:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	fa93 f2a3 	rbit	r2, r3
 8005e5c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e60:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 8005e64:	601a      	str	r2, [r3, #0]
 8005e66:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e6a:	f5a3 73b6 	sub.w	r3, r3, #364	@ 0x16c
 8005e6e:	681b      	ldr	r3, [r3, #0]
 8005e70:	fab3 f383 	clz	r3, r3
 8005e74:	b2db      	uxtb	r3, r3
 8005e76:	095b      	lsrs	r3, r3, #5
 8005e78:	b2db      	uxtb	r3, r3
 8005e7a:	f043 0302 	orr.w	r3, r3, #2
 8005e7e:	b2db      	uxtb	r3, r3
 8005e80:	2b02      	cmp	r3, #2
 8005e82:	d102      	bne.n	8005e8a <HAL_RCC_OscConfig+0xb4e>
 8005e84:	4b43      	ldr	r3, [pc, #268]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005e86:	6a1b      	ldr	r3, [r3, #32]
 8005e88:	e013      	b.n	8005eb2 <HAL_RCC_OscConfig+0xb76>
 8005e8a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e8e:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 8005e92:	2202      	movs	r2, #2
 8005e94:	601a      	str	r2, [r3, #0]
 8005e96:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005e9a:	f5a3 73b8 	sub.w	r3, r3, #368	@ 0x170
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	fa93 f2a3 	rbit	r2, r3
 8005ea4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005ea8:	f5a3 73ba 	sub.w	r3, r3, #372	@ 0x174
 8005eac:	601a      	str	r2, [r3, #0]
 8005eae:	4b39      	ldr	r3, [pc, #228]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005eb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005eb2:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005eb6:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8005eba:	2102      	movs	r1, #2
 8005ebc:	6011      	str	r1, [r2, #0]
 8005ebe:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005ec2:	f5a2 72bc 	sub.w	r2, r2, #376	@ 0x178
 8005ec6:	6812      	ldr	r2, [r2, #0]
 8005ec8:	fa92 f1a2 	rbit	r1, r2
 8005ecc:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005ed0:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8005ed4:	6011      	str	r1, [r2, #0]
 8005ed6:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8005eda:	f5a2 72be 	sub.w	r2, r2, #380	@ 0x17c
 8005ede:	6812      	ldr	r2, [r2, #0]
 8005ee0:	fab2 f282 	clz	r2, r2
 8005ee4:	b2d2      	uxtb	r2, r2
 8005ee6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005eea:	b2d2      	uxtb	r2, r2
 8005eec:	f002 021f 	and.w	r2, r2, #31
 8005ef0:	2101      	movs	r1, #1
 8005ef2:	fa01 f202 	lsl.w	r2, r1, r2
 8005ef6:	4013      	ands	r3, r2
 8005ef8:	2b00      	cmp	r3, #0
 8005efa:	d184      	bne.n	8005e06 <HAL_RCC_OscConfig+0xaca>
 8005efc:	f897 31ff 	ldrb.w	r3, [r7, #511]	@ 0x1ff
 8005f00:	2b01      	cmp	r3, #1
 8005f02:	d105      	bne.n	8005f10 <HAL_RCC_OscConfig+0xbd4>
 8005f04:	4b23      	ldr	r3, [pc, #140]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005f06:	69db      	ldr	r3, [r3, #28]
 8005f08:	4a22      	ldr	r2, [pc, #136]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005f0a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005f0e:	61d3      	str	r3, [r2, #28]
 8005f10:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f14:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	69db      	ldr	r3, [r3, #28]
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	f000 8242 	beq.w	80063a6 <HAL_RCC_OscConfig+0x106a>
 8005f22:	4b1c      	ldr	r3, [pc, #112]	@ (8005f94 <HAL_RCC_OscConfig+0xc58>)
 8005f24:	685b      	ldr	r3, [r3, #4]
 8005f26:	f003 030c 	and.w	r3, r3, #12
 8005f2a:	2b08      	cmp	r3, #8
 8005f2c:	f000 8213 	beq.w	8006356 <HAL_RCC_OscConfig+0x101a>
 8005f30:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f34:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	69db      	ldr	r3, [r3, #28]
 8005f3c:	2b02      	cmp	r3, #2
 8005f3e:	f040 8162 	bne.w	8006206 <HAL_RCC_OscConfig+0xeca>
 8005f42:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f46:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 8005f4a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005f4e:	601a      	str	r2, [r3, #0]
 8005f50:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f54:	f5a3 73c0 	sub.w	r3, r3, #384	@ 0x180
 8005f58:	681b      	ldr	r3, [r3, #0]
 8005f5a:	fa93 f2a3 	rbit	r2, r3
 8005f5e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f62:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 8005f66:	601a      	str	r2, [r3, #0]
 8005f68:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005f6c:	f5a3 73c2 	sub.w	r3, r3, #388	@ 0x184
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	fab3 f383 	clz	r3, r3
 8005f76:	b2db      	uxtb	r3, r3
 8005f78:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8005f7c:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8005f80:	009b      	lsls	r3, r3, #2
 8005f82:	461a      	mov	r2, r3
 8005f84:	2300      	movs	r3, #0
 8005f86:	6013      	str	r3, [r2, #0]
 8005f88:	f7fc fc54 	bl	8002834 <HAL_GetTick>
 8005f8c:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8005f90:	e00c      	b.n	8005fac <HAL_RCC_OscConfig+0xc70>
 8005f92:	bf00      	nop
 8005f94:	40021000 	.word	0x40021000
 8005f98:	f7fc fc4c 	bl	8002834 <HAL_GetTick>
 8005f9c:	4602      	mov	r2, r0
 8005f9e:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8005fa2:	1ad3      	subs	r3, r2, r3
 8005fa4:	2b02      	cmp	r3, #2
 8005fa6:	d901      	bls.n	8005fac <HAL_RCC_OscConfig+0xc70>
 8005fa8:	2303      	movs	r3, #3
 8005faa:	e1fd      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 8005fac:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005fb0:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8005fb4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005fb8:	601a      	str	r2, [r3, #0]
 8005fba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005fbe:	f5a3 73c4 	sub.w	r3, r3, #392	@ 0x188
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	fa93 f2a3 	rbit	r2, r3
 8005fc8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005fcc:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 8005fd0:	601a      	str	r2, [r3, #0]
 8005fd2:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005fd6:	f5a3 73c6 	sub.w	r3, r3, #396	@ 0x18c
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	fab3 f383 	clz	r3, r3
 8005fe0:	b2db      	uxtb	r3, r3
 8005fe2:	095b      	lsrs	r3, r3, #5
 8005fe4:	b2db      	uxtb	r3, r3
 8005fe6:	f043 0301 	orr.w	r3, r3, #1
 8005fea:	b2db      	uxtb	r3, r3
 8005fec:	2b01      	cmp	r3, #1
 8005fee:	d102      	bne.n	8005ff6 <HAL_RCC_OscConfig+0xcba>
 8005ff0:	4bb0      	ldr	r3, [pc, #704]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	e027      	b.n	8006046 <HAL_RCC_OscConfig+0xd0a>
 8005ff6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8005ffa:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 8005ffe:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006002:	601a      	str	r2, [r3, #0]
 8006004:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006008:	f5a3 73c8 	sub.w	r3, r3, #400	@ 0x190
 800600c:	681b      	ldr	r3, [r3, #0]
 800600e:	fa93 f2a3 	rbit	r2, r3
 8006012:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006016:	f5a3 73ca 	sub.w	r3, r3, #404	@ 0x194
 800601a:	601a      	str	r2, [r3, #0]
 800601c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006020:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8006024:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006028:	601a      	str	r2, [r3, #0]
 800602a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800602e:	f5a3 73cc 	sub.w	r3, r3, #408	@ 0x198
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	fa93 f2a3 	rbit	r2, r3
 8006038:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800603c:	f5a3 73ce 	sub.w	r3, r3, #412	@ 0x19c
 8006040:	601a      	str	r2, [r3, #0]
 8006042:	4b9c      	ldr	r3, [pc, #624]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 8006044:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006046:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800604a:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 800604e:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8006052:	6011      	str	r1, [r2, #0]
 8006054:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8006058:	f5a2 72d0 	sub.w	r2, r2, #416	@ 0x1a0
 800605c:	6812      	ldr	r2, [r2, #0]
 800605e:	fa92 f1a2 	rbit	r1, r2
 8006062:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8006066:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 800606a:	6011      	str	r1, [r2, #0]
 800606c:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8006070:	f5a2 72d2 	sub.w	r2, r2, #420	@ 0x1a4
 8006074:	6812      	ldr	r2, [r2, #0]
 8006076:	fab2 f282 	clz	r2, r2
 800607a:	b2d2      	uxtb	r2, r2
 800607c:	f042 0220 	orr.w	r2, r2, #32
 8006080:	b2d2      	uxtb	r2, r2
 8006082:	f002 021f 	and.w	r2, r2, #31
 8006086:	2101      	movs	r1, #1
 8006088:	fa01 f202 	lsl.w	r2, r1, r2
 800608c:	4013      	ands	r3, r2
 800608e:	2b00      	cmp	r3, #0
 8006090:	d182      	bne.n	8005f98 <HAL_RCC_OscConfig+0xc5c>
 8006092:	4b88      	ldr	r3, [pc, #544]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 8006094:	685b      	ldr	r3, [r3, #4]
 8006096:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 800609a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800609e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80060a6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80060aa:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	6a1b      	ldr	r3, [r3, #32]
 80060b2:	430b      	orrs	r3, r1
 80060b4:	497f      	ldr	r1, [pc, #508]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 80060b6:	4313      	orrs	r3, r2
 80060b8:	604b      	str	r3, [r1, #4]
 80060ba:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80060be:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 80060c2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80060c6:	601a      	str	r2, [r3, #0]
 80060c8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80060cc:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	fa93 f2a3 	rbit	r2, r3
 80060d6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80060da:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 80060de:	601a      	str	r2, [r3, #0]
 80060e0:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80060e4:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	fab3 f383 	clz	r3, r3
 80060ee:	b2db      	uxtb	r3, r3
 80060f0:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 80060f4:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 80060f8:	009b      	lsls	r3, r3, #2
 80060fa:	461a      	mov	r2, r3
 80060fc:	2301      	movs	r3, #1
 80060fe:	6013      	str	r3, [r2, #0]
 8006100:	f7fc fb98 	bl	8002834 <HAL_GetTick>
 8006104:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8006108:	e009      	b.n	800611e <HAL_RCC_OscConfig+0xde2>
 800610a:	f7fc fb93 	bl	8002834 <HAL_GetTick>
 800610e:	4602      	mov	r2, r0
 8006110:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8006114:	1ad3      	subs	r3, r2, r3
 8006116:	2b02      	cmp	r3, #2
 8006118:	d901      	bls.n	800611e <HAL_RCC_OscConfig+0xde2>
 800611a:	2303      	movs	r3, #3
 800611c:	e144      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 800611e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006122:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8006126:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800612a:	601a      	str	r2, [r3, #0]
 800612c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006130:	f5a3 73d8 	sub.w	r3, r3, #432	@ 0x1b0
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	fa93 f2a3 	rbit	r2, r3
 800613a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800613e:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 8006142:	601a      	str	r2, [r3, #0]
 8006144:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006148:	f5a3 73da 	sub.w	r3, r3, #436	@ 0x1b4
 800614c:	681b      	ldr	r3, [r3, #0]
 800614e:	fab3 f383 	clz	r3, r3
 8006152:	b2db      	uxtb	r3, r3
 8006154:	095b      	lsrs	r3, r3, #5
 8006156:	b2db      	uxtb	r3, r3
 8006158:	f043 0301 	orr.w	r3, r3, #1
 800615c:	b2db      	uxtb	r3, r3
 800615e:	2b01      	cmp	r3, #1
 8006160:	d102      	bne.n	8006168 <HAL_RCC_OscConfig+0xe2c>
 8006162:	4b54      	ldr	r3, [pc, #336]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	e027      	b.n	80061b8 <HAL_RCC_OscConfig+0xe7c>
 8006168:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800616c:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 8006170:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006174:	601a      	str	r2, [r3, #0]
 8006176:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800617a:	f5a3 73dc 	sub.w	r3, r3, #440	@ 0x1b8
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	fa93 f2a3 	rbit	r2, r3
 8006184:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006188:	f5a3 73de 	sub.w	r3, r3, #444	@ 0x1bc
 800618c:	601a      	str	r2, [r3, #0]
 800618e:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006192:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 8006196:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800619a:	601a      	str	r2, [r3, #0]
 800619c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80061a0:	f5a3 73e0 	sub.w	r3, r3, #448	@ 0x1c0
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	fa93 f2a3 	rbit	r2, r3
 80061aa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80061ae:	f5a3 73e2 	sub.w	r3, r3, #452	@ 0x1c4
 80061b2:	601a      	str	r2, [r3, #0]
 80061b4:	4b3f      	ldr	r3, [pc, #252]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 80061b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80061b8:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80061bc:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 80061c0:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 80061c4:	6011      	str	r1, [r2, #0]
 80061c6:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80061ca:	f5a2 72e4 	sub.w	r2, r2, #456	@ 0x1c8
 80061ce:	6812      	ldr	r2, [r2, #0]
 80061d0:	fa92 f1a2 	rbit	r1, r2
 80061d4:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80061d8:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 80061dc:	6011      	str	r1, [r2, #0]
 80061de:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 80061e2:	f5a2 72e6 	sub.w	r2, r2, #460	@ 0x1cc
 80061e6:	6812      	ldr	r2, [r2, #0]
 80061e8:	fab2 f282 	clz	r2, r2
 80061ec:	b2d2      	uxtb	r2, r2
 80061ee:	f042 0220 	orr.w	r2, r2, #32
 80061f2:	b2d2      	uxtb	r2, r2
 80061f4:	f002 021f 	and.w	r2, r2, #31
 80061f8:	2101      	movs	r1, #1
 80061fa:	fa01 f202 	lsl.w	r2, r1, r2
 80061fe:	4013      	ands	r3, r2
 8006200:	2b00      	cmp	r3, #0
 8006202:	d082      	beq.n	800610a <HAL_RCC_OscConfig+0xdce>
 8006204:	e0cf      	b.n	80063a6 <HAL_RCC_OscConfig+0x106a>
 8006206:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800620a:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 800620e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006212:	601a      	str	r2, [r3, #0]
 8006214:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006218:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	fa93 f2a3 	rbit	r2, r3
 8006222:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006226:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 800622a:	601a      	str	r2, [r3, #0]
 800622c:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006230:	f5a3 73ea 	sub.w	r3, r3, #468	@ 0x1d4
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	fab3 f383 	clz	r3, r3
 800623a:	b2db      	uxtb	r3, r3
 800623c:	f103 5384 	add.w	r3, r3, #276824064	@ 0x10800000
 8006240:	f503 1384 	add.w	r3, r3, #1081344	@ 0x108000
 8006244:	009b      	lsls	r3, r3, #2
 8006246:	461a      	mov	r2, r3
 8006248:	2300      	movs	r3, #0
 800624a:	6013      	str	r3, [r2, #0]
 800624c:	f7fc faf2 	bl	8002834 <HAL_GetTick>
 8006250:	f8c7 01f8 	str.w	r0, [r7, #504]	@ 0x1f8
 8006254:	e009      	b.n	800626a <HAL_RCC_OscConfig+0xf2e>
 8006256:	f7fc faed 	bl	8002834 <HAL_GetTick>
 800625a:	4602      	mov	r2, r0
 800625c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	@ 0x1f8
 8006260:	1ad3      	subs	r3, r2, r3
 8006262:	2b02      	cmp	r3, #2
 8006264:	d901      	bls.n	800626a <HAL_RCC_OscConfig+0xf2e>
 8006266:	2303      	movs	r3, #3
 8006268:	e09e      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 800626a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800626e:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8006272:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006276:	601a      	str	r2, [r3, #0]
 8006278:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800627c:	f5a3 73ec 	sub.w	r3, r3, #472	@ 0x1d8
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	fa93 f2a3 	rbit	r2, r3
 8006286:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800628a:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 800628e:	601a      	str	r2, [r3, #0]
 8006290:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006294:	f5a3 73ee 	sub.w	r3, r3, #476	@ 0x1dc
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	fab3 f383 	clz	r3, r3
 800629e:	b2db      	uxtb	r3, r3
 80062a0:	095b      	lsrs	r3, r3, #5
 80062a2:	b2db      	uxtb	r3, r3
 80062a4:	f043 0301 	orr.w	r3, r3, #1
 80062a8:	b2db      	uxtb	r3, r3
 80062aa:	2b01      	cmp	r3, #1
 80062ac:	d104      	bne.n	80062b8 <HAL_RCC_OscConfig+0xf7c>
 80062ae:	4b01      	ldr	r3, [pc, #4]	@ (80062b4 <HAL_RCC_OscConfig+0xf78>)
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	e029      	b.n	8006308 <HAL_RCC_OscConfig+0xfcc>
 80062b4:	40021000 	.word	0x40021000
 80062b8:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062bc:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 80062c0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80062c4:	601a      	str	r2, [r3, #0]
 80062c6:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062ca:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	fa93 f2a3 	rbit	r2, r3
 80062d4:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062d8:	f5a3 73f2 	sub.w	r3, r3, #484	@ 0x1e4
 80062dc:	601a      	str	r2, [r3, #0]
 80062de:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062e2:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 80062e6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80062ea:	601a      	str	r2, [r3, #0]
 80062ec:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062f0:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	fa93 f2a3 	rbit	r2, r3
 80062fa:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 80062fe:	f5a3 73f6 	sub.w	r3, r3, #492	@ 0x1ec
 8006302:	601a      	str	r2, [r3, #0]
 8006304:	4b2b      	ldr	r3, [pc, #172]	@ (80063b4 <HAL_RCC_OscConfig+0x1078>)
 8006306:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006308:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800630c:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 8006310:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
 8006314:	6011      	str	r1, [r2, #0]
 8006316:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 800631a:	f5a2 72f8 	sub.w	r2, r2, #496	@ 0x1f0
 800631e:	6812      	ldr	r2, [r2, #0]
 8006320:	fa92 f1a2 	rbit	r1, r2
 8006324:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8006328:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 800632c:	6011      	str	r1, [r2, #0]
 800632e:	f507 7200 	add.w	r2, r7, #512	@ 0x200
 8006332:	f5a2 72fa 	sub.w	r2, r2, #500	@ 0x1f4
 8006336:	6812      	ldr	r2, [r2, #0]
 8006338:	fab2 f282 	clz	r2, r2
 800633c:	b2d2      	uxtb	r2, r2
 800633e:	f042 0220 	orr.w	r2, r2, #32
 8006342:	b2d2      	uxtb	r2, r2
 8006344:	f002 021f 	and.w	r2, r2, #31
 8006348:	2101      	movs	r1, #1
 800634a:	fa01 f202 	lsl.w	r2, r1, r2
 800634e:	4013      	ands	r3, r2
 8006350:	2b00      	cmp	r3, #0
 8006352:	d180      	bne.n	8006256 <HAL_RCC_OscConfig+0xf1a>
 8006354:	e027      	b.n	80063a6 <HAL_RCC_OscConfig+0x106a>
 8006356:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800635a:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800635e:	681b      	ldr	r3, [r3, #0]
 8006360:	69db      	ldr	r3, [r3, #28]
 8006362:	2b01      	cmp	r3, #1
 8006364:	d101      	bne.n	800636a <HAL_RCC_OscConfig+0x102e>
 8006366:	2301      	movs	r3, #1
 8006368:	e01e      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 800636a:	4b12      	ldr	r3, [pc, #72]	@ (80063b4 <HAL_RCC_OscConfig+0x1078>)
 800636c:	685b      	ldr	r3, [r3, #4]
 800636e:	f8c7 31f4 	str.w	r3, [r7, #500]	@ 0x1f4
 8006372:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 8006376:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800637a:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 800637e:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	6a1b      	ldr	r3, [r3, #32]
 8006386:	429a      	cmp	r2, r3
 8006388:	d10b      	bne.n	80063a2 <HAL_RCC_OscConfig+0x1066>
 800638a:	f8d7 31f4 	ldr.w	r3, [r7, #500]	@ 0x1f4
 800638e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8006392:	f507 7300 	add.w	r3, r7, #512	@ 0x200
 8006396:	f5a3 73fe 	sub.w	r3, r3, #508	@ 0x1fc
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800639e:	429a      	cmp	r2, r3
 80063a0:	d001      	beq.n	80063a6 <HAL_RCC_OscConfig+0x106a>
 80063a2:	2301      	movs	r3, #1
 80063a4:	e000      	b.n	80063a8 <HAL_RCC_OscConfig+0x106c>
 80063a6:	2300      	movs	r3, #0
 80063a8:	4618      	mov	r0, r3
 80063aa:	f507 7700 	add.w	r7, r7, #512	@ 0x200
 80063ae:	46bd      	mov	sp, r7
 80063b0:	bd80      	pop	{r7, pc}
 80063b2:	bf00      	nop
 80063b4:	40021000 	.word	0x40021000

080063b8 <HAL_RCC_ClockConfig>:
 80063b8:	b580      	push	{r7, lr}
 80063ba:	b09e      	sub	sp, #120	@ 0x78
 80063bc:	af00      	add	r7, sp, #0
 80063be:	6078      	str	r0, [r7, #4]
 80063c0:	6039      	str	r1, [r7, #0]
 80063c2:	2300      	movs	r3, #0
 80063c4:	677b      	str	r3, [r7, #116]	@ 0x74
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	2b00      	cmp	r3, #0
 80063ca:	d101      	bne.n	80063d0 <HAL_RCC_ClockConfig+0x18>
 80063cc:	2301      	movs	r3, #1
 80063ce:	e162      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 80063d0:	4b90      	ldr	r3, [pc, #576]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	f003 0307 	and.w	r3, r3, #7
 80063d8:	683a      	ldr	r2, [r7, #0]
 80063da:	429a      	cmp	r2, r3
 80063dc:	d910      	bls.n	8006400 <HAL_RCC_ClockConfig+0x48>
 80063de:	4b8d      	ldr	r3, [pc, #564]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	f023 0207 	bic.w	r2, r3, #7
 80063e6:	498b      	ldr	r1, [pc, #556]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80063e8:	683b      	ldr	r3, [r7, #0]
 80063ea:	4313      	orrs	r3, r2
 80063ec:	600b      	str	r3, [r1, #0]
 80063ee:	4b89      	ldr	r3, [pc, #548]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	f003 0307 	and.w	r3, r3, #7
 80063f6:	683a      	ldr	r2, [r7, #0]
 80063f8:	429a      	cmp	r2, r3
 80063fa:	d001      	beq.n	8006400 <HAL_RCC_ClockConfig+0x48>
 80063fc:	2301      	movs	r3, #1
 80063fe:	e14a      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	f003 0302 	and.w	r3, r3, #2
 8006408:	2b00      	cmp	r3, #0
 800640a:	d008      	beq.n	800641e <HAL_RCC_ClockConfig+0x66>
 800640c:	4b82      	ldr	r3, [pc, #520]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 800640e:	685b      	ldr	r3, [r3, #4]
 8006410:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	689b      	ldr	r3, [r3, #8]
 8006418:	497f      	ldr	r1, [pc, #508]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 800641a:	4313      	orrs	r3, r2
 800641c:	604b      	str	r3, [r1, #4]
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	f003 0301 	and.w	r3, r3, #1
 8006426:	2b00      	cmp	r3, #0
 8006428:	f000 80dc 	beq.w	80065e4 <HAL_RCC_ClockConfig+0x22c>
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	685b      	ldr	r3, [r3, #4]
 8006430:	2b01      	cmp	r3, #1
 8006432:	d13c      	bne.n	80064ae <HAL_RCC_ClockConfig+0xf6>
 8006434:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8006438:	673b      	str	r3, [r7, #112]	@ 0x70
 800643a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800643c:	fa93 f3a3 	rbit	r3, r3
 8006440:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006442:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8006444:	fab3 f383 	clz	r3, r3
 8006448:	b2db      	uxtb	r3, r3
 800644a:	095b      	lsrs	r3, r3, #5
 800644c:	b2db      	uxtb	r3, r3
 800644e:	f043 0301 	orr.w	r3, r3, #1
 8006452:	b2db      	uxtb	r3, r3
 8006454:	2b01      	cmp	r3, #1
 8006456:	d102      	bne.n	800645e <HAL_RCC_ClockConfig+0xa6>
 8006458:	4b6f      	ldr	r3, [pc, #444]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 800645a:	681b      	ldr	r3, [r3, #0]
 800645c:	e00f      	b.n	800647e <HAL_RCC_ClockConfig+0xc6>
 800645e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8006462:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006464:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8006466:	fa93 f3a3 	rbit	r3, r3
 800646a:	667b      	str	r3, [r7, #100]	@ 0x64
 800646c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8006470:	663b      	str	r3, [r7, #96]	@ 0x60
 8006472:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006474:	fa93 f3a3 	rbit	r3, r3
 8006478:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800647a:	4b67      	ldr	r3, [pc, #412]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 800647c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800647e:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8006482:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006484:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006486:	fa92 f2a2 	rbit	r2, r2
 800648a:	657a      	str	r2, [r7, #84]	@ 0x54
 800648c:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800648e:	fab2 f282 	clz	r2, r2
 8006492:	b2d2      	uxtb	r2, r2
 8006494:	f042 0220 	orr.w	r2, r2, #32
 8006498:	b2d2      	uxtb	r2, r2
 800649a:	f002 021f 	and.w	r2, r2, #31
 800649e:	2101      	movs	r1, #1
 80064a0:	fa01 f202 	lsl.w	r2, r1, r2
 80064a4:	4013      	ands	r3, r2
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d17b      	bne.n	80065a2 <HAL_RCC_ClockConfig+0x1ea>
 80064aa:	2301      	movs	r3, #1
 80064ac:	e0f3      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	685b      	ldr	r3, [r3, #4]
 80064b2:	2b02      	cmp	r3, #2
 80064b4:	d13c      	bne.n	8006530 <HAL_RCC_ClockConfig+0x178>
 80064b6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80064ba:	653b      	str	r3, [r7, #80]	@ 0x50
 80064bc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80064be:	fa93 f3a3 	rbit	r3, r3
 80064c2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80064c4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80064c6:	fab3 f383 	clz	r3, r3
 80064ca:	b2db      	uxtb	r3, r3
 80064cc:	095b      	lsrs	r3, r3, #5
 80064ce:	b2db      	uxtb	r3, r3
 80064d0:	f043 0301 	orr.w	r3, r3, #1
 80064d4:	b2db      	uxtb	r3, r3
 80064d6:	2b01      	cmp	r3, #1
 80064d8:	d102      	bne.n	80064e0 <HAL_RCC_ClockConfig+0x128>
 80064da:	4b4f      	ldr	r3, [pc, #316]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 80064dc:	681b      	ldr	r3, [r3, #0]
 80064de:	e00f      	b.n	8006500 <HAL_RCC_ClockConfig+0x148>
 80064e0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80064e4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80064e6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80064e8:	fa93 f3a3 	rbit	r3, r3
 80064ec:	647b      	str	r3, [r7, #68]	@ 0x44
 80064ee:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80064f2:	643b      	str	r3, [r7, #64]	@ 0x40
 80064f4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80064f6:	fa93 f3a3 	rbit	r3, r3
 80064fa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80064fc:	4b46      	ldr	r3, [pc, #280]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 80064fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006500:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006504:	63ba      	str	r2, [r7, #56]	@ 0x38
 8006506:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8006508:	fa92 f2a2 	rbit	r2, r2
 800650c:	637a      	str	r2, [r7, #52]	@ 0x34
 800650e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8006510:	fab2 f282 	clz	r2, r2
 8006514:	b2d2      	uxtb	r2, r2
 8006516:	f042 0220 	orr.w	r2, r2, #32
 800651a:	b2d2      	uxtb	r2, r2
 800651c:	f002 021f 	and.w	r2, r2, #31
 8006520:	2101      	movs	r1, #1
 8006522:	fa01 f202 	lsl.w	r2, r1, r2
 8006526:	4013      	ands	r3, r2
 8006528:	2b00      	cmp	r3, #0
 800652a:	d13a      	bne.n	80065a2 <HAL_RCC_ClockConfig+0x1ea>
 800652c:	2301      	movs	r3, #1
 800652e:	e0b2      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 8006530:	2302      	movs	r3, #2
 8006532:	633b      	str	r3, [r7, #48]	@ 0x30
 8006534:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006536:	fa93 f3a3 	rbit	r3, r3
 800653a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800653c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800653e:	fab3 f383 	clz	r3, r3
 8006542:	b2db      	uxtb	r3, r3
 8006544:	095b      	lsrs	r3, r3, #5
 8006546:	b2db      	uxtb	r3, r3
 8006548:	f043 0301 	orr.w	r3, r3, #1
 800654c:	b2db      	uxtb	r3, r3
 800654e:	2b01      	cmp	r3, #1
 8006550:	d102      	bne.n	8006558 <HAL_RCC_ClockConfig+0x1a0>
 8006552:	4b31      	ldr	r3, [pc, #196]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	e00d      	b.n	8006574 <HAL_RCC_ClockConfig+0x1bc>
 8006558:	2302      	movs	r3, #2
 800655a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800655c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800655e:	fa93 f3a3 	rbit	r3, r3
 8006562:	627b      	str	r3, [r7, #36]	@ 0x24
 8006564:	2302      	movs	r3, #2
 8006566:	623b      	str	r3, [r7, #32]
 8006568:	6a3b      	ldr	r3, [r7, #32]
 800656a:	fa93 f3a3 	rbit	r3, r3
 800656e:	61fb      	str	r3, [r7, #28]
 8006570:	4b29      	ldr	r3, [pc, #164]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 8006572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006574:	2202      	movs	r2, #2
 8006576:	61ba      	str	r2, [r7, #24]
 8006578:	69ba      	ldr	r2, [r7, #24]
 800657a:	fa92 f2a2 	rbit	r2, r2
 800657e:	617a      	str	r2, [r7, #20]
 8006580:	697a      	ldr	r2, [r7, #20]
 8006582:	fab2 f282 	clz	r2, r2
 8006586:	b2d2      	uxtb	r2, r2
 8006588:	f042 0220 	orr.w	r2, r2, #32
 800658c:	b2d2      	uxtb	r2, r2
 800658e:	f002 021f 	and.w	r2, r2, #31
 8006592:	2101      	movs	r1, #1
 8006594:	fa01 f202 	lsl.w	r2, r1, r2
 8006598:	4013      	ands	r3, r2
 800659a:	2b00      	cmp	r3, #0
 800659c:	d101      	bne.n	80065a2 <HAL_RCC_ClockConfig+0x1ea>
 800659e:	2301      	movs	r3, #1
 80065a0:	e079      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 80065a2:	4b1d      	ldr	r3, [pc, #116]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 80065a4:	685b      	ldr	r3, [r3, #4]
 80065a6:	f023 0203 	bic.w	r2, r3, #3
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	685b      	ldr	r3, [r3, #4]
 80065ae:	491a      	ldr	r1, [pc, #104]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 80065b0:	4313      	orrs	r3, r2
 80065b2:	604b      	str	r3, [r1, #4]
 80065b4:	f7fc f93e 	bl	8002834 <HAL_GetTick>
 80065b8:	6778      	str	r0, [r7, #116]	@ 0x74
 80065ba:	e00a      	b.n	80065d2 <HAL_RCC_ClockConfig+0x21a>
 80065bc:	f7fc f93a 	bl	8002834 <HAL_GetTick>
 80065c0:	4602      	mov	r2, r0
 80065c2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80065c4:	1ad3      	subs	r3, r2, r3
 80065c6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80065ca:	4293      	cmp	r3, r2
 80065cc:	d901      	bls.n	80065d2 <HAL_RCC_ClockConfig+0x21a>
 80065ce:	2303      	movs	r3, #3
 80065d0:	e061      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 80065d2:	4b11      	ldr	r3, [pc, #68]	@ (8006618 <HAL_RCC_ClockConfig+0x260>)
 80065d4:	685b      	ldr	r3, [r3, #4]
 80065d6:	f003 020c 	and.w	r2, r3, #12
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	685b      	ldr	r3, [r3, #4]
 80065de:	009b      	lsls	r3, r3, #2
 80065e0:	429a      	cmp	r2, r3
 80065e2:	d1eb      	bne.n	80065bc <HAL_RCC_ClockConfig+0x204>
 80065e4:	4b0b      	ldr	r3, [pc, #44]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	f003 0307 	and.w	r3, r3, #7
 80065ec:	683a      	ldr	r2, [r7, #0]
 80065ee:	429a      	cmp	r2, r3
 80065f0:	d214      	bcs.n	800661c <HAL_RCC_ClockConfig+0x264>
 80065f2:	4b08      	ldr	r3, [pc, #32]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	f023 0207 	bic.w	r2, r3, #7
 80065fa:	4906      	ldr	r1, [pc, #24]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 80065fc:	683b      	ldr	r3, [r7, #0]
 80065fe:	4313      	orrs	r3, r2
 8006600:	600b      	str	r3, [r1, #0]
 8006602:	4b04      	ldr	r3, [pc, #16]	@ (8006614 <HAL_RCC_ClockConfig+0x25c>)
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	f003 0307 	and.w	r3, r3, #7
 800660a:	683a      	ldr	r2, [r7, #0]
 800660c:	429a      	cmp	r2, r3
 800660e:	d005      	beq.n	800661c <HAL_RCC_ClockConfig+0x264>
 8006610:	2301      	movs	r3, #1
 8006612:	e040      	b.n	8006696 <HAL_RCC_ClockConfig+0x2de>
 8006614:	40022000 	.word	0x40022000
 8006618:	40021000 	.word	0x40021000
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	681b      	ldr	r3, [r3, #0]
 8006620:	f003 0304 	and.w	r3, r3, #4
 8006624:	2b00      	cmp	r3, #0
 8006626:	d008      	beq.n	800663a <HAL_RCC_ClockConfig+0x282>
 8006628:	4b1d      	ldr	r3, [pc, #116]	@ (80066a0 <HAL_RCC_ClockConfig+0x2e8>)
 800662a:	685b      	ldr	r3, [r3, #4]
 800662c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	68db      	ldr	r3, [r3, #12]
 8006634:	491a      	ldr	r1, [pc, #104]	@ (80066a0 <HAL_RCC_ClockConfig+0x2e8>)
 8006636:	4313      	orrs	r3, r2
 8006638:	604b      	str	r3, [r1, #4]
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	681b      	ldr	r3, [r3, #0]
 800663e:	f003 0308 	and.w	r3, r3, #8
 8006642:	2b00      	cmp	r3, #0
 8006644:	d009      	beq.n	800665a <HAL_RCC_ClockConfig+0x2a2>
 8006646:	4b16      	ldr	r3, [pc, #88]	@ (80066a0 <HAL_RCC_ClockConfig+0x2e8>)
 8006648:	685b      	ldr	r3, [r3, #4]
 800664a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	691b      	ldr	r3, [r3, #16]
 8006652:	00db      	lsls	r3, r3, #3
 8006654:	4912      	ldr	r1, [pc, #72]	@ (80066a0 <HAL_RCC_ClockConfig+0x2e8>)
 8006656:	4313      	orrs	r3, r2
 8006658:	604b      	str	r3, [r1, #4]
 800665a:	f000 f829 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 800665e:	4601      	mov	r1, r0
 8006660:	4b0f      	ldr	r3, [pc, #60]	@ (80066a0 <HAL_RCC_ClockConfig+0x2e8>)
 8006662:	685b      	ldr	r3, [r3, #4]
 8006664:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006668:	22f0      	movs	r2, #240	@ 0xf0
 800666a:	613a      	str	r2, [r7, #16]
 800666c:	693a      	ldr	r2, [r7, #16]
 800666e:	fa92 f2a2 	rbit	r2, r2
 8006672:	60fa      	str	r2, [r7, #12]
 8006674:	68fa      	ldr	r2, [r7, #12]
 8006676:	fab2 f282 	clz	r2, r2
 800667a:	b2d2      	uxtb	r2, r2
 800667c:	40d3      	lsrs	r3, r2
 800667e:	4a09      	ldr	r2, [pc, #36]	@ (80066a4 <HAL_RCC_ClockConfig+0x2ec>)
 8006680:	5cd3      	ldrb	r3, [r2, r3]
 8006682:	fa21 f303 	lsr.w	r3, r1, r3
 8006686:	4a08      	ldr	r2, [pc, #32]	@ (80066a8 <HAL_RCC_ClockConfig+0x2f0>)
 8006688:	6013      	str	r3, [r2, #0]
 800668a:	4b08      	ldr	r3, [pc, #32]	@ (80066ac <HAL_RCC_ClockConfig+0x2f4>)
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	4618      	mov	r0, r3
 8006690:	f7fc f88c 	bl	80027ac <HAL_InitTick>
 8006694:	2300      	movs	r3, #0
 8006696:	4618      	mov	r0, r3
 8006698:	3778      	adds	r7, #120	@ 0x78
 800669a:	46bd      	mov	sp, r7
 800669c:	bd80      	pop	{r7, pc}
 800669e:	bf00      	nop
 80066a0:	40021000 	.word	0x40021000
 80066a4:	0800f5b8 	.word	0x0800f5b8
 80066a8:	20000000 	.word	0x20000000
 80066ac:	20000004 	.word	0x20000004

080066b0 <HAL_RCC_GetSysClockFreq>:
 80066b0:	b480      	push	{r7}
 80066b2:	b087      	sub	sp, #28
 80066b4:	af00      	add	r7, sp, #0
 80066b6:	2300      	movs	r3, #0
 80066b8:	60fb      	str	r3, [r7, #12]
 80066ba:	2300      	movs	r3, #0
 80066bc:	60bb      	str	r3, [r7, #8]
 80066be:	2300      	movs	r3, #0
 80066c0:	617b      	str	r3, [r7, #20]
 80066c2:	2300      	movs	r3, #0
 80066c4:	607b      	str	r3, [r7, #4]
 80066c6:	2300      	movs	r3, #0
 80066c8:	613b      	str	r3, [r7, #16]
 80066ca:	4b1e      	ldr	r3, [pc, #120]	@ (8006744 <HAL_RCC_GetSysClockFreq+0x94>)
 80066cc:	685b      	ldr	r3, [r3, #4]
 80066ce:	60fb      	str	r3, [r7, #12]
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	f003 030c 	and.w	r3, r3, #12
 80066d6:	2b04      	cmp	r3, #4
 80066d8:	d002      	beq.n	80066e0 <HAL_RCC_GetSysClockFreq+0x30>
 80066da:	2b08      	cmp	r3, #8
 80066dc:	d003      	beq.n	80066e6 <HAL_RCC_GetSysClockFreq+0x36>
 80066de:	e026      	b.n	800672e <HAL_RCC_GetSysClockFreq+0x7e>
 80066e0:	4b19      	ldr	r3, [pc, #100]	@ (8006748 <HAL_RCC_GetSysClockFreq+0x98>)
 80066e2:	613b      	str	r3, [r7, #16]
 80066e4:	e026      	b.n	8006734 <HAL_RCC_GetSysClockFreq+0x84>
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	0c9b      	lsrs	r3, r3, #18
 80066ea:	f003 030f 	and.w	r3, r3, #15
 80066ee:	4a17      	ldr	r2, [pc, #92]	@ (800674c <HAL_RCC_GetSysClockFreq+0x9c>)
 80066f0:	5cd3      	ldrb	r3, [r2, r3]
 80066f2:	607b      	str	r3, [r7, #4]
 80066f4:	4b13      	ldr	r3, [pc, #76]	@ (8006744 <HAL_RCC_GetSysClockFreq+0x94>)
 80066f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80066f8:	f003 030f 	and.w	r3, r3, #15
 80066fc:	4a14      	ldr	r2, [pc, #80]	@ (8006750 <HAL_RCC_GetSysClockFreq+0xa0>)
 80066fe:	5cd3      	ldrb	r3, [r2, r3]
 8006700:	60bb      	str	r3, [r7, #8]
 8006702:	68fb      	ldr	r3, [r7, #12]
 8006704:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006708:	2b00      	cmp	r3, #0
 800670a:	d008      	beq.n	800671e <HAL_RCC_GetSysClockFreq+0x6e>
 800670c:	4a0e      	ldr	r2, [pc, #56]	@ (8006748 <HAL_RCC_GetSysClockFreq+0x98>)
 800670e:	68bb      	ldr	r3, [r7, #8]
 8006710:	fbb2 f2f3 	udiv	r2, r2, r3
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	fb02 f303 	mul.w	r3, r2, r3
 800671a:	617b      	str	r3, [r7, #20]
 800671c:	e004      	b.n	8006728 <HAL_RCC_GetSysClockFreq+0x78>
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	4a0c      	ldr	r2, [pc, #48]	@ (8006754 <HAL_RCC_GetSysClockFreq+0xa4>)
 8006722:	fb02 f303 	mul.w	r3, r2, r3
 8006726:	617b      	str	r3, [r7, #20]
 8006728:	697b      	ldr	r3, [r7, #20]
 800672a:	613b      	str	r3, [r7, #16]
 800672c:	e002      	b.n	8006734 <HAL_RCC_GetSysClockFreq+0x84>
 800672e:	4b06      	ldr	r3, [pc, #24]	@ (8006748 <HAL_RCC_GetSysClockFreq+0x98>)
 8006730:	613b      	str	r3, [r7, #16]
 8006732:	bf00      	nop
 8006734:	693b      	ldr	r3, [r7, #16]
 8006736:	4618      	mov	r0, r3
 8006738:	371c      	adds	r7, #28
 800673a:	46bd      	mov	sp, r7
 800673c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006740:	4770      	bx	lr
 8006742:	bf00      	nop
 8006744:	40021000 	.word	0x40021000
 8006748:	007a1200 	.word	0x007a1200
 800674c:	0800f5d0 	.word	0x0800f5d0
 8006750:	0800f5e0 	.word	0x0800f5e0
 8006754:	003d0900 	.word	0x003d0900

08006758 <HAL_RCC_GetHCLKFreq>:
 8006758:	b480      	push	{r7}
 800675a:	af00      	add	r7, sp, #0
 800675c:	4b03      	ldr	r3, [pc, #12]	@ (800676c <HAL_RCC_GetHCLKFreq+0x14>)
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	4618      	mov	r0, r3
 8006762:	46bd      	mov	sp, r7
 8006764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006768:	4770      	bx	lr
 800676a:	bf00      	nop
 800676c:	20000000 	.word	0x20000000

08006770 <HAL_RCC_GetPCLK1Freq>:
 8006770:	b580      	push	{r7, lr}
 8006772:	b082      	sub	sp, #8
 8006774:	af00      	add	r7, sp, #0
 8006776:	f7ff ffef 	bl	8006758 <HAL_RCC_GetHCLKFreq>
 800677a:	4601      	mov	r1, r0
 800677c:	4b0b      	ldr	r3, [pc, #44]	@ (80067ac <HAL_RCC_GetPCLK1Freq+0x3c>)
 800677e:	685b      	ldr	r3, [r3, #4]
 8006780:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8006784:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 8006788:	607a      	str	r2, [r7, #4]
 800678a:	687a      	ldr	r2, [r7, #4]
 800678c:	fa92 f2a2 	rbit	r2, r2
 8006790:	603a      	str	r2, [r7, #0]
 8006792:	683a      	ldr	r2, [r7, #0]
 8006794:	fab2 f282 	clz	r2, r2
 8006798:	b2d2      	uxtb	r2, r2
 800679a:	40d3      	lsrs	r3, r2
 800679c:	4a04      	ldr	r2, [pc, #16]	@ (80067b0 <HAL_RCC_GetPCLK1Freq+0x40>)
 800679e:	5cd3      	ldrb	r3, [r2, r3]
 80067a0:	fa21 f303 	lsr.w	r3, r1, r3
 80067a4:	4618      	mov	r0, r3
 80067a6:	3708      	adds	r7, #8
 80067a8:	46bd      	mov	sp, r7
 80067aa:	bd80      	pop	{r7, pc}
 80067ac:	40021000 	.word	0x40021000
 80067b0:	0800f5c8 	.word	0x0800f5c8

080067b4 <HAL_RCC_GetPCLK2Freq>:
 80067b4:	b580      	push	{r7, lr}
 80067b6:	b082      	sub	sp, #8
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	f7ff ffcd 	bl	8006758 <HAL_RCC_GetHCLKFreq>
 80067be:	4601      	mov	r1, r0
 80067c0:	4b0b      	ldr	r3, [pc, #44]	@ (80067f0 <HAL_RCC_GetPCLK2Freq+0x3c>)
 80067c2:	685b      	ldr	r3, [r3, #4]
 80067c4:	f403 5360 	and.w	r3, r3, #14336	@ 0x3800
 80067c8:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 80067cc:	607a      	str	r2, [r7, #4]
 80067ce:	687a      	ldr	r2, [r7, #4]
 80067d0:	fa92 f2a2 	rbit	r2, r2
 80067d4:	603a      	str	r2, [r7, #0]
 80067d6:	683a      	ldr	r2, [r7, #0]
 80067d8:	fab2 f282 	clz	r2, r2
 80067dc:	b2d2      	uxtb	r2, r2
 80067de:	40d3      	lsrs	r3, r2
 80067e0:	4a04      	ldr	r2, [pc, #16]	@ (80067f4 <HAL_RCC_GetPCLK2Freq+0x40>)
 80067e2:	5cd3      	ldrb	r3, [r2, r3]
 80067e4:	fa21 f303 	lsr.w	r3, r1, r3
 80067e8:	4618      	mov	r0, r3
 80067ea:	3708      	adds	r7, #8
 80067ec:	46bd      	mov	sp, r7
 80067ee:	bd80      	pop	{r7, pc}
 80067f0:	40021000 	.word	0x40021000
 80067f4:	0800f5c8 	.word	0x0800f5c8

080067f8 <HAL_RCCEx_PeriphCLKConfig>:
 80067f8:	b580      	push	{r7, lr}
 80067fa:	b092      	sub	sp, #72	@ 0x48
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	6078      	str	r0, [r7, #4]
 8006800:	2300      	movs	r3, #0
 8006802:	643b      	str	r3, [r7, #64]	@ 0x40
 8006804:	2300      	movs	r3, #0
 8006806:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006808:	2300      	movs	r3, #0
 800680a:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	681b      	ldr	r3, [r3, #0]
 8006812:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006816:	2b00      	cmp	r3, #0
 8006818:	f000 80d4 	beq.w	80069c4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800681c:	4b4e      	ldr	r3, [pc, #312]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800681e:	69db      	ldr	r3, [r3, #28]
 8006820:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006824:	2b00      	cmp	r3, #0
 8006826:	d10e      	bne.n	8006846 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8006828:	4b4b      	ldr	r3, [pc, #300]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800682a:	69db      	ldr	r3, [r3, #28]
 800682c:	4a4a      	ldr	r2, [pc, #296]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800682e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006832:	61d3      	str	r3, [r2, #28]
 8006834:	4b48      	ldr	r3, [pc, #288]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8006836:	69db      	ldr	r3, [r3, #28]
 8006838:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800683c:	60bb      	str	r3, [r7, #8]
 800683e:	68bb      	ldr	r3, [r7, #8]
 8006840:	2301      	movs	r3, #1
 8006842:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8006846:	4b45      	ldr	r3, [pc, #276]	@ (800695c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800684e:	2b00      	cmp	r3, #0
 8006850:	d118      	bne.n	8006884 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8006852:	4b42      	ldr	r3, [pc, #264]	@ (800695c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	4a41      	ldr	r2, [pc, #260]	@ (800695c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8006858:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800685c:	6013      	str	r3, [r2, #0]
 800685e:	f7fb ffe9 	bl	8002834 <HAL_GetTick>
 8006862:	6438      	str	r0, [r7, #64]	@ 0x40
 8006864:	e008      	b.n	8006878 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8006866:	f7fb ffe5 	bl	8002834 <HAL_GetTick>
 800686a:	4602      	mov	r2, r0
 800686c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800686e:	1ad3      	subs	r3, r2, r3
 8006870:	2b64      	cmp	r3, #100	@ 0x64
 8006872:	d901      	bls.n	8006878 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8006874:	2303      	movs	r3, #3
 8006876:	e169      	b.n	8006b4c <HAL_RCCEx_PeriphCLKConfig+0x354>
 8006878:	4b38      	ldr	r3, [pc, #224]	@ (800695c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006880:	2b00      	cmp	r3, #0
 8006882:	d0f0      	beq.n	8006866 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8006884:	4b34      	ldr	r3, [pc, #208]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8006886:	6a1b      	ldr	r3, [r3, #32]
 8006888:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800688c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800688e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006890:	2b00      	cmp	r3, #0
 8006892:	f000 8084 	beq.w	800699e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	685b      	ldr	r3, [r3, #4]
 800689a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800689e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80068a0:	429a      	cmp	r2, r3
 80068a2:	d07c      	beq.n	800699e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80068a4:	4b2c      	ldr	r3, [pc, #176]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80068a6:	6a1b      	ldr	r3, [r3, #32]
 80068a8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80068ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068ae:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80068b2:	633b      	str	r3, [r7, #48]	@ 0x30
 80068b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80068b6:	fa93 f3a3 	rbit	r3, r3
 80068ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80068bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80068be:	fab3 f383 	clz	r3, r3
 80068c2:	b2db      	uxtb	r3, r3
 80068c4:	461a      	mov	r2, r3
 80068c6:	4b26      	ldr	r3, [pc, #152]	@ (8006960 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80068c8:	4413      	add	r3, r2
 80068ca:	009b      	lsls	r3, r3, #2
 80068cc:	461a      	mov	r2, r3
 80068ce:	2301      	movs	r3, #1
 80068d0:	6013      	str	r3, [r2, #0]
 80068d2:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80068d6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80068d8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80068da:	fa93 f3a3 	rbit	r3, r3
 80068de:	637b      	str	r3, [r7, #52]	@ 0x34
 80068e0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80068e2:	fab3 f383 	clz	r3, r3
 80068e6:	b2db      	uxtb	r3, r3
 80068e8:	461a      	mov	r2, r3
 80068ea:	4b1d      	ldr	r3, [pc, #116]	@ (8006960 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80068ec:	4413      	add	r3, r2
 80068ee:	009b      	lsls	r3, r3, #2
 80068f0:	461a      	mov	r2, r3
 80068f2:	2300      	movs	r3, #0
 80068f4:	6013      	str	r3, [r2, #0]
 80068f6:	4a18      	ldr	r2, [pc, #96]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80068f8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80068fa:	6213      	str	r3, [r2, #32]
 80068fc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80068fe:	f003 0301 	and.w	r3, r3, #1
 8006902:	2b00      	cmp	r3, #0
 8006904:	d04b      	beq.n	800699e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8006906:	f7fb ff95 	bl	8002834 <HAL_GetTick>
 800690a:	6438      	str	r0, [r7, #64]	@ 0x40
 800690c:	e00a      	b.n	8006924 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 800690e:	f7fb ff91 	bl	8002834 <HAL_GetTick>
 8006912:	4602      	mov	r2, r0
 8006914:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006916:	1ad3      	subs	r3, r2, r3
 8006918:	f241 3288 	movw	r2, #5000	@ 0x1388
 800691c:	4293      	cmp	r3, r2
 800691e:	d901      	bls.n	8006924 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8006920:	2303      	movs	r3, #3
 8006922:	e113      	b.n	8006b4c <HAL_RCCEx_PeriphCLKConfig+0x354>
 8006924:	2302      	movs	r3, #2
 8006926:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006928:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800692a:	fa93 f3a3 	rbit	r3, r3
 800692e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006930:	2302      	movs	r3, #2
 8006932:	623b      	str	r3, [r7, #32]
 8006934:	6a3b      	ldr	r3, [r7, #32]
 8006936:	fa93 f3a3 	rbit	r3, r3
 800693a:	61fb      	str	r3, [r7, #28]
 800693c:	69fb      	ldr	r3, [r7, #28]
 800693e:	fab3 f383 	clz	r3, r3
 8006942:	b2db      	uxtb	r3, r3
 8006944:	095b      	lsrs	r3, r3, #5
 8006946:	b2db      	uxtb	r3, r3
 8006948:	f043 0302 	orr.w	r3, r3, #2
 800694c:	b2db      	uxtb	r3, r3
 800694e:	2b02      	cmp	r3, #2
 8006950:	d108      	bne.n	8006964 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 8006952:	4b01      	ldr	r3, [pc, #4]	@ (8006958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8006954:	6a1b      	ldr	r3, [r3, #32]
 8006956:	e00d      	b.n	8006974 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8006958:	40021000 	.word	0x40021000
 800695c:	40007000 	.word	0x40007000
 8006960:	10908100 	.word	0x10908100
 8006964:	2302      	movs	r3, #2
 8006966:	61bb      	str	r3, [r7, #24]
 8006968:	69bb      	ldr	r3, [r7, #24]
 800696a:	fa93 f3a3 	rbit	r3, r3
 800696e:	617b      	str	r3, [r7, #20]
 8006970:	4b78      	ldr	r3, [pc, #480]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006972:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006974:	2202      	movs	r2, #2
 8006976:	613a      	str	r2, [r7, #16]
 8006978:	693a      	ldr	r2, [r7, #16]
 800697a:	fa92 f2a2 	rbit	r2, r2
 800697e:	60fa      	str	r2, [r7, #12]
 8006980:	68fa      	ldr	r2, [r7, #12]
 8006982:	fab2 f282 	clz	r2, r2
 8006986:	b2d2      	uxtb	r2, r2
 8006988:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800698c:	b2d2      	uxtb	r2, r2
 800698e:	f002 021f 	and.w	r2, r2, #31
 8006992:	2101      	movs	r1, #1
 8006994:	fa01 f202 	lsl.w	r2, r1, r2
 8006998:	4013      	ands	r3, r2
 800699a:	2b00      	cmp	r3, #0
 800699c:	d0b7      	beq.n	800690e <HAL_RCCEx_PeriphCLKConfig+0x116>
 800699e:	4b6d      	ldr	r3, [pc, #436]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069a0:	6a1b      	ldr	r3, [r3, #32]
 80069a2:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	685b      	ldr	r3, [r3, #4]
 80069aa:	496a      	ldr	r1, [pc, #424]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069ac:	4313      	orrs	r3, r2
 80069ae:	620b      	str	r3, [r1, #32]
 80069b0:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 80069b4:	2b01      	cmp	r3, #1
 80069b6:	d105      	bne.n	80069c4 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 80069b8:	4b66      	ldr	r3, [pc, #408]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069ba:	69db      	ldr	r3, [r3, #28]
 80069bc:	4a65      	ldr	r2, [pc, #404]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069be:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80069c2:	61d3      	str	r3, [r2, #28]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f003 0301 	and.w	r3, r3, #1
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d008      	beq.n	80069e2 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 80069d0:	4b60      	ldr	r3, [pc, #384]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80069d4:	f023 0203 	bic.w	r2, r3, #3
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	689b      	ldr	r3, [r3, #8]
 80069dc:	495d      	ldr	r1, [pc, #372]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069de:	4313      	orrs	r3, r2
 80069e0:	630b      	str	r3, [r1, #48]	@ 0x30
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	f003 0302 	and.w	r3, r3, #2
 80069ea:	2b00      	cmp	r3, #0
 80069ec:	d008      	beq.n	8006a00 <HAL_RCCEx_PeriphCLKConfig+0x208>
 80069ee:	4b59      	ldr	r3, [pc, #356]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80069f2:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	68db      	ldr	r3, [r3, #12]
 80069fa:	4956      	ldr	r1, [pc, #344]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 80069fc:	4313      	orrs	r3, r2
 80069fe:	630b      	str	r3, [r1, #48]	@ 0x30
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	f003 0304 	and.w	r3, r3, #4
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d008      	beq.n	8006a1e <HAL_RCCEx_PeriphCLKConfig+0x226>
 8006a0c:	4b51      	ldr	r3, [pc, #324]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a10:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	691b      	ldr	r3, [r3, #16]
 8006a18:	494e      	ldr	r1, [pc, #312]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a1a:	4313      	orrs	r3, r2
 8006a1c:	630b      	str	r3, [r1, #48]	@ 0x30
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	f003 0320 	and.w	r3, r3, #32
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d008      	beq.n	8006a3c <HAL_RCCEx_PeriphCLKConfig+0x244>
 8006a2a:	4b4a      	ldr	r3, [pc, #296]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a2e:	f023 0210 	bic.w	r2, r3, #16
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	69db      	ldr	r3, [r3, #28]
 8006a36:	4947      	ldr	r1, [pc, #284]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a38:	4313      	orrs	r3, r2
 8006a3a:	630b      	str	r3, [r1, #48]	@ 0x30
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	681b      	ldr	r3, [r3, #0]
 8006a40:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d008      	beq.n	8006a5a <HAL_RCCEx_PeriphCLKConfig+0x262>
 8006a48:	4b42      	ldr	r3, [pc, #264]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a4a:	685b      	ldr	r3, [r3, #4]
 8006a4c:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a54:	493f      	ldr	r1, [pc, #252]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a56:	4313      	orrs	r3, r2
 8006a58:	604b      	str	r3, [r1, #4]
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a62:	2b00      	cmp	r3, #0
 8006a64:	d008      	beq.n	8006a78 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8006a66:	4b3b      	ldr	r3, [pc, #236]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a6a:	f023 0220 	bic.w	r2, r3, #32
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	6a1b      	ldr	r3, [r3, #32]
 8006a72:	4938      	ldr	r1, [pc, #224]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a74:	4313      	orrs	r3, r2
 8006a76:	630b      	str	r3, [r1, #48]	@ 0x30
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	f003 0308 	and.w	r3, r3, #8
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d008      	beq.n	8006a96 <HAL_RCCEx_PeriphCLKConfig+0x29e>
 8006a84:	4b33      	ldr	r3, [pc, #204]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a88:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	695b      	ldr	r3, [r3, #20]
 8006a90:	4930      	ldr	r1, [pc, #192]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006a92:	4313      	orrs	r3, r2
 8006a94:	630b      	str	r3, [r1, #48]	@ 0x30
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	681b      	ldr	r3, [r3, #0]
 8006a9a:	f003 0310 	and.w	r3, r3, #16
 8006a9e:	2b00      	cmp	r3, #0
 8006aa0:	d008      	beq.n	8006ab4 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8006aa2:	4b2c      	ldr	r3, [pc, #176]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006aa4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006aa6:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8006aaa:	687b      	ldr	r3, [r7, #4]
 8006aac:	699b      	ldr	r3, [r3, #24]
 8006aae:	4929      	ldr	r1, [pc, #164]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006ab0:	4313      	orrs	r3, r2
 8006ab2:	630b      	str	r3, [r1, #48]	@ 0x30
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d008      	beq.n	8006ad2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8006ac0:	4b24      	ldr	r3, [pc, #144]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006ac2:	685b      	ldr	r3, [r3, #4]
 8006ac4:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006acc:	4921      	ldr	r1, [pc, #132]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006ace:	4313      	orrs	r3, r2
 8006ad0:	604b      	str	r3, [r1, #4]
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	681b      	ldr	r3, [r3, #0]
 8006ad6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006ada:	2b00      	cmp	r3, #0
 8006adc:	d008      	beq.n	8006af0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8006ade:	4b1d      	ldr	r3, [pc, #116]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006ae0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006ae2:	f423 72f8 	bic.w	r2, r3, #496	@ 0x1f0
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006aea:	491a      	ldr	r1, [pc, #104]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006aec:	4313      	orrs	r3, r2
 8006aee:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006af8:	2b00      	cmp	r3, #0
 8006afa:	d008      	beq.n	8006b0e <HAL_RCCEx_PeriphCLKConfig+0x316>
 8006afc:	4b15      	ldr	r3, [pc, #84]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006afe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006b00:	f423 5278 	bic.w	r2, r3, #15872	@ 0x3e00
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b08:	4912      	ldr	r1, [pc, #72]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006b0a:	4313      	orrs	r3, r2
 8006b0c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	681b      	ldr	r3, [r3, #0]
 8006b12:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d008      	beq.n	8006b2c <HAL_RCCEx_PeriphCLKConfig+0x334>
 8006b1a:	4b0e      	ldr	r3, [pc, #56]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006b1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006b1e:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006b26:	490b      	ldr	r1, [pc, #44]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006b28:	4313      	orrs	r3, r2
 8006b2a:	630b      	str	r3, [r1, #48]	@ 0x30
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006b34:	2b00      	cmp	r3, #0
 8006b36:	d008      	beq.n	8006b4a <HAL_RCCEx_PeriphCLKConfig+0x352>
 8006b38:	4b06      	ldr	r3, [pc, #24]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006b3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006b3c:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006b44:	4903      	ldr	r1, [pc, #12]	@ (8006b54 <HAL_RCCEx_PeriphCLKConfig+0x35c>)
 8006b46:	4313      	orrs	r3, r2
 8006b48:	630b      	str	r3, [r1, #48]	@ 0x30
 8006b4a:	2300      	movs	r3, #0
 8006b4c:	4618      	mov	r0, r3
 8006b4e:	3748      	adds	r7, #72	@ 0x48
 8006b50:	46bd      	mov	sp, r7
 8006b52:	bd80      	pop	{r7, pc}
 8006b54:	40021000 	.word	0x40021000

08006b58 <HAL_SPI_Init>:
 8006b58:	b580      	push	{r7, lr}
 8006b5a:	b084      	sub	sp, #16
 8006b5c:	af00      	add	r7, sp, #0
 8006b5e:	6078      	str	r0, [r7, #4]
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	2b00      	cmp	r3, #0
 8006b64:	d101      	bne.n	8006b6a <HAL_SPI_Init+0x12>
 8006b66:	2301      	movs	r3, #1
 8006b68:	e09d      	b.n	8006ca6 <HAL_SPI_Init+0x14e>
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	d108      	bne.n	8006b84 <HAL_SPI_Init+0x2c>
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	685b      	ldr	r3, [r3, #4]
 8006b76:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006b7a:	d009      	beq.n	8006b90 <HAL_SPI_Init+0x38>
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	2200      	movs	r2, #0
 8006b80:	61da      	str	r2, [r3, #28]
 8006b82:	e005      	b.n	8006b90 <HAL_SPI_Init+0x38>
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	2200      	movs	r2, #0
 8006b88:	611a      	str	r2, [r3, #16]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	2200      	movs	r2, #0
 8006b8e:	615a      	str	r2, [r3, #20]
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	2200      	movs	r2, #0
 8006b94:	629a      	str	r2, [r3, #40]	@ 0x28
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8006b9c:	b2db      	uxtb	r3, r3
 8006b9e:	2b00      	cmp	r3, #0
 8006ba0:	d106      	bne.n	8006bb0 <HAL_SPI_Init+0x58>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	2200      	movs	r2, #0
 8006ba6:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006baa:	6878      	ldr	r0, [r7, #4]
 8006bac:	f7fb f88e 	bl	8001ccc <HAL_SPI_MspInit>
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	2202      	movs	r2, #2
 8006bb4:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	681a      	ldr	r2, [r3, #0]
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	681b      	ldr	r3, [r3, #0]
 8006bc2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006bc6:	601a      	str	r2, [r3, #0]
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	68db      	ldr	r3, [r3, #12]
 8006bcc:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006bd0:	d902      	bls.n	8006bd8 <HAL_SPI_Init+0x80>
 8006bd2:	2300      	movs	r3, #0
 8006bd4:	60fb      	str	r3, [r7, #12]
 8006bd6:	e002      	b.n	8006bde <HAL_SPI_Init+0x86>
 8006bd8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8006bdc:	60fb      	str	r3, [r7, #12]
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	68db      	ldr	r3, [r3, #12]
 8006be2:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8006be6:	d007      	beq.n	8006bf8 <HAL_SPI_Init+0xa0>
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	68db      	ldr	r3, [r3, #12]
 8006bec:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006bf0:	d002      	beq.n	8006bf8 <HAL_SPI_Init+0xa0>
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	2200      	movs	r2, #0
 8006bf6:	629a      	str	r2, [r3, #40]	@ 0x28
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	685b      	ldr	r3, [r3, #4]
 8006bfc:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	689b      	ldr	r3, [r3, #8]
 8006c04:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8006c08:	431a      	orrs	r2, r3
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	691b      	ldr	r3, [r3, #16]
 8006c0e:	f003 0302 	and.w	r3, r3, #2
 8006c12:	431a      	orrs	r2, r3
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	695b      	ldr	r3, [r3, #20]
 8006c18:	f003 0301 	and.w	r3, r3, #1
 8006c1c:	431a      	orrs	r2, r3
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	699b      	ldr	r3, [r3, #24]
 8006c22:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006c26:	431a      	orrs	r2, r3
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	69db      	ldr	r3, [r3, #28]
 8006c2c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006c30:	431a      	orrs	r2, r3
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	6a1b      	ldr	r3, [r3, #32]
 8006c36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006c3a:	ea42 0103 	orr.w	r1, r2, r3
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c42:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	430a      	orrs	r2, r1
 8006c4c:	601a      	str	r2, [r3, #0]
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	699b      	ldr	r3, [r3, #24]
 8006c52:	0c1b      	lsrs	r3, r3, #16
 8006c54:	f003 0204 	and.w	r2, r3, #4
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c5c:	f003 0310 	and.w	r3, r3, #16
 8006c60:	431a      	orrs	r2, r3
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006c66:	f003 0308 	and.w	r3, r3, #8
 8006c6a:	431a      	orrs	r2, r3
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	68db      	ldr	r3, [r3, #12]
 8006c70:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8006c74:	ea42 0103 	orr.w	r1, r2, r3
 8006c78:	68fb      	ldr	r3, [r7, #12]
 8006c7a:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	430a      	orrs	r2, r1
 8006c84:	605a      	str	r2, [r3, #4]
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	69da      	ldr	r2, [r3, #28]
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006c94:	61da      	str	r2, [r3, #28]
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	2200      	movs	r2, #0
 8006c9a:	661a      	str	r2, [r3, #96]	@ 0x60
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	2201      	movs	r2, #1
 8006ca0:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006ca4:	2300      	movs	r3, #0
 8006ca6:	4618      	mov	r0, r3
 8006ca8:	3710      	adds	r7, #16
 8006caa:	46bd      	mov	sp, r7
 8006cac:	bd80      	pop	{r7, pc}

08006cae <HAL_TIM_Base_Init>:
 8006cae:	b580      	push	{r7, lr}
 8006cb0:	b082      	sub	sp, #8
 8006cb2:	af00      	add	r7, sp, #0
 8006cb4:	6078      	str	r0, [r7, #4]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	2b00      	cmp	r3, #0
 8006cba:	d101      	bne.n	8006cc0 <HAL_TIM_Base_Init+0x12>
 8006cbc:	2301      	movs	r3, #1
 8006cbe:	e049      	b.n	8006d54 <HAL_TIM_Base_Init+0xa6>
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006cc6:	b2db      	uxtb	r3, r3
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	d106      	bne.n	8006cda <HAL_TIM_Base_Init+0x2c>
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	2200      	movs	r2, #0
 8006cd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006cd4:	6878      	ldr	r0, [r7, #4]
 8006cd6:	f7fb f85b 	bl	8001d90 <HAL_TIM_Base_MspInit>
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	2202      	movs	r2, #2
 8006cde:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006ce2:	687b      	ldr	r3, [r7, #4]
 8006ce4:	681a      	ldr	r2, [r3, #0]
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	3304      	adds	r3, #4
 8006cea:	4619      	mov	r1, r3
 8006cec:	4610      	mov	r0, r2
 8006cee:	f000 fb35 	bl	800735c <TIM_Base_SetConfig>
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	2201      	movs	r2, #1
 8006cf6:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	2201      	movs	r2, #1
 8006cfe:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	2201      	movs	r2, #1
 8006d06:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	2201      	movs	r2, #1
 8006d0e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	2201      	movs	r2, #1
 8006d16:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	2201      	movs	r2, #1
 8006d1e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	2201      	movs	r2, #1
 8006d26:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	2201      	movs	r2, #1
 8006d2e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	2201      	movs	r2, #1
 8006d36:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	2201      	movs	r2, #1
 8006d3e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2201      	movs	r2, #1
 8006d46:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	2201      	movs	r2, #1
 8006d4e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006d52:	2300      	movs	r3, #0
 8006d54:	4618      	mov	r0, r3
 8006d56:	3708      	adds	r7, #8
 8006d58:	46bd      	mov	sp, r7
 8006d5a:	bd80      	pop	{r7, pc}

08006d5c <HAL_TIM_Base_Start_IT>:
 8006d5c:	b480      	push	{r7}
 8006d5e:	b085      	sub	sp, #20
 8006d60:	af00      	add	r7, sp, #0
 8006d62:	6078      	str	r0, [r7, #4]
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006d6a:	b2db      	uxtb	r3, r3
 8006d6c:	2b01      	cmp	r3, #1
 8006d6e:	d001      	beq.n	8006d74 <HAL_TIM_Base_Start_IT+0x18>
 8006d70:	2301      	movs	r3, #1
 8006d72:	e04a      	b.n	8006e0a <HAL_TIM_Base_Start_IT+0xae>
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	2202      	movs	r2, #2
 8006d78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	681b      	ldr	r3, [r3, #0]
 8006d80:	68da      	ldr	r2, [r3, #12]
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	f042 0201 	orr.w	r2, r2, #1
 8006d8a:	60da      	str	r2, [r3, #12]
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	4a21      	ldr	r2, [pc, #132]	@ (8006e18 <HAL_TIM_Base_Start_IT+0xbc>)
 8006d92:	4293      	cmp	r3, r2
 8006d94:	d018      	beq.n	8006dc8 <HAL_TIM_Base_Start_IT+0x6c>
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	681b      	ldr	r3, [r3, #0]
 8006d9a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006d9e:	d013      	beq.n	8006dc8 <HAL_TIM_Base_Start_IT+0x6c>
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	681b      	ldr	r3, [r3, #0]
 8006da4:	4a1d      	ldr	r2, [pc, #116]	@ (8006e1c <HAL_TIM_Base_Start_IT+0xc0>)
 8006da6:	4293      	cmp	r3, r2
 8006da8:	d00e      	beq.n	8006dc8 <HAL_TIM_Base_Start_IT+0x6c>
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	4a1c      	ldr	r2, [pc, #112]	@ (8006e20 <HAL_TIM_Base_Start_IT+0xc4>)
 8006db0:	4293      	cmp	r3, r2
 8006db2:	d009      	beq.n	8006dc8 <HAL_TIM_Base_Start_IT+0x6c>
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	4a1a      	ldr	r2, [pc, #104]	@ (8006e24 <HAL_TIM_Base_Start_IT+0xc8>)
 8006dba:	4293      	cmp	r3, r2
 8006dbc:	d004      	beq.n	8006dc8 <HAL_TIM_Base_Start_IT+0x6c>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	681b      	ldr	r3, [r3, #0]
 8006dc2:	4a19      	ldr	r2, [pc, #100]	@ (8006e28 <HAL_TIM_Base_Start_IT+0xcc>)
 8006dc4:	4293      	cmp	r3, r2
 8006dc6:	d115      	bne.n	8006df4 <HAL_TIM_Base_Start_IT+0x98>
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	689a      	ldr	r2, [r3, #8]
 8006dce:	4b17      	ldr	r3, [pc, #92]	@ (8006e2c <HAL_TIM_Base_Start_IT+0xd0>)
 8006dd0:	4013      	ands	r3, r2
 8006dd2:	60fb      	str	r3, [r7, #12]
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	2b06      	cmp	r3, #6
 8006dd8:	d015      	beq.n	8006e06 <HAL_TIM_Base_Start_IT+0xaa>
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006de0:	d011      	beq.n	8006e06 <HAL_TIM_Base_Start_IT+0xaa>
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	681a      	ldr	r2, [r3, #0]
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	f042 0201 	orr.w	r2, r2, #1
 8006df0:	601a      	str	r2, [r3, #0]
 8006df2:	e008      	b.n	8006e06 <HAL_TIM_Base_Start_IT+0xaa>
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	681a      	ldr	r2, [r3, #0]
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	f042 0201 	orr.w	r2, r2, #1
 8006e02:	601a      	str	r2, [r3, #0]
 8006e04:	e000      	b.n	8006e08 <HAL_TIM_Base_Start_IT+0xac>
 8006e06:	bf00      	nop
 8006e08:	2300      	movs	r3, #0
 8006e0a:	4618      	mov	r0, r3
 8006e0c:	3714      	adds	r7, #20
 8006e0e:	46bd      	mov	sp, r7
 8006e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e14:	4770      	bx	lr
 8006e16:	bf00      	nop
 8006e18:	40012c00 	.word	0x40012c00
 8006e1c:	40000400 	.word	0x40000400
 8006e20:	40000800 	.word	0x40000800
 8006e24:	40013400 	.word	0x40013400
 8006e28:	40014000 	.word	0x40014000
 8006e2c:	00010007 	.word	0x00010007

08006e30 <HAL_TIM_PWM_Init>:
 8006e30:	b580      	push	{r7, lr}
 8006e32:	b082      	sub	sp, #8
 8006e34:	af00      	add	r7, sp, #0
 8006e36:	6078      	str	r0, [r7, #4]
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	2b00      	cmp	r3, #0
 8006e3c:	d101      	bne.n	8006e42 <HAL_TIM_PWM_Init+0x12>
 8006e3e:	2301      	movs	r3, #1
 8006e40:	e049      	b.n	8006ed6 <HAL_TIM_PWM_Init+0xa6>
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006e48:	b2db      	uxtb	r3, r3
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d106      	bne.n	8006e5c <HAL_TIM_PWM_Init+0x2c>
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	2200      	movs	r2, #0
 8006e52:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006e56:	6878      	ldr	r0, [r7, #4]
 8006e58:	f7fa ff7a 	bl	8001d50 <HAL_TIM_PWM_MspInit>
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	2202      	movs	r2, #2
 8006e60:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681a      	ldr	r2, [r3, #0]
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	3304      	adds	r3, #4
 8006e6c:	4619      	mov	r1, r3
 8006e6e:	4610      	mov	r0, r2
 8006e70:	f000 fa74 	bl	800735c <TIM_Base_SetConfig>
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	2201      	movs	r2, #1
 8006e78:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	2201      	movs	r2, #1
 8006e80:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	2201      	movs	r2, #1
 8006e88:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	2201      	movs	r2, #1
 8006e90:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	2201      	movs	r2, #1
 8006e98:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	2201      	movs	r2, #1
 8006ea0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	2201      	movs	r2, #1
 8006ea8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	2201      	movs	r2, #1
 8006eb0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	2201      	movs	r2, #1
 8006eb8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	2201      	movs	r2, #1
 8006ec0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	2201      	movs	r2, #1
 8006ec8:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	2201      	movs	r2, #1
 8006ed0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006ed4:	2300      	movs	r3, #0
 8006ed6:	4618      	mov	r0, r3
 8006ed8:	3708      	adds	r7, #8
 8006eda:	46bd      	mov	sp, r7
 8006edc:	bd80      	pop	{r7, pc}

08006ede <HAL_TIM_IRQHandler>:
 8006ede:	b580      	push	{r7, lr}
 8006ee0:	b084      	sub	sp, #16
 8006ee2:	af00      	add	r7, sp, #0
 8006ee4:	6078      	str	r0, [r7, #4]
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	68db      	ldr	r3, [r3, #12]
 8006eec:	60fb      	str	r3, [r7, #12]
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	681b      	ldr	r3, [r3, #0]
 8006ef2:	691b      	ldr	r3, [r3, #16]
 8006ef4:	60bb      	str	r3, [r7, #8]
 8006ef6:	68bb      	ldr	r3, [r7, #8]
 8006ef8:	f003 0302 	and.w	r3, r3, #2
 8006efc:	2b00      	cmp	r3, #0
 8006efe:	d020      	beq.n	8006f42 <HAL_TIM_IRQHandler+0x64>
 8006f00:	68fb      	ldr	r3, [r7, #12]
 8006f02:	f003 0302 	and.w	r3, r3, #2
 8006f06:	2b00      	cmp	r3, #0
 8006f08:	d01b      	beq.n	8006f42 <HAL_TIM_IRQHandler+0x64>
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	681b      	ldr	r3, [r3, #0]
 8006f0e:	f06f 0202 	mvn.w	r2, #2
 8006f12:	611a      	str	r2, [r3, #16]
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	2201      	movs	r2, #1
 8006f18:	771a      	strb	r2, [r3, #28]
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	699b      	ldr	r3, [r3, #24]
 8006f20:	f003 0303 	and.w	r3, r3, #3
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	d003      	beq.n	8006f30 <HAL_TIM_IRQHandler+0x52>
 8006f28:	6878      	ldr	r0, [r7, #4]
 8006f2a:	f000 f9f9 	bl	8007320 <HAL_TIM_IC_CaptureCallback>
 8006f2e:	e005      	b.n	8006f3c <HAL_TIM_IRQHandler+0x5e>
 8006f30:	6878      	ldr	r0, [r7, #4]
 8006f32:	f000 f9eb 	bl	800730c <HAL_TIM_OC_DelayElapsedCallback>
 8006f36:	6878      	ldr	r0, [r7, #4]
 8006f38:	f000 f9fc 	bl	8007334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	2200      	movs	r2, #0
 8006f40:	771a      	strb	r2, [r3, #28]
 8006f42:	68bb      	ldr	r3, [r7, #8]
 8006f44:	f003 0304 	and.w	r3, r3, #4
 8006f48:	2b00      	cmp	r3, #0
 8006f4a:	d020      	beq.n	8006f8e <HAL_TIM_IRQHandler+0xb0>
 8006f4c:	68fb      	ldr	r3, [r7, #12]
 8006f4e:	f003 0304 	and.w	r3, r3, #4
 8006f52:	2b00      	cmp	r3, #0
 8006f54:	d01b      	beq.n	8006f8e <HAL_TIM_IRQHandler+0xb0>
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	f06f 0204 	mvn.w	r2, #4
 8006f5e:	611a      	str	r2, [r3, #16]
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	2202      	movs	r2, #2
 8006f64:	771a      	strb	r2, [r3, #28]
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	699b      	ldr	r3, [r3, #24]
 8006f6c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006f70:	2b00      	cmp	r3, #0
 8006f72:	d003      	beq.n	8006f7c <HAL_TIM_IRQHandler+0x9e>
 8006f74:	6878      	ldr	r0, [r7, #4]
 8006f76:	f000 f9d3 	bl	8007320 <HAL_TIM_IC_CaptureCallback>
 8006f7a:	e005      	b.n	8006f88 <HAL_TIM_IRQHandler+0xaa>
 8006f7c:	6878      	ldr	r0, [r7, #4]
 8006f7e:	f000 f9c5 	bl	800730c <HAL_TIM_OC_DelayElapsedCallback>
 8006f82:	6878      	ldr	r0, [r7, #4]
 8006f84:	f000 f9d6 	bl	8007334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	2200      	movs	r2, #0
 8006f8c:	771a      	strb	r2, [r3, #28]
 8006f8e:	68bb      	ldr	r3, [r7, #8]
 8006f90:	f003 0308 	and.w	r3, r3, #8
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d020      	beq.n	8006fda <HAL_TIM_IRQHandler+0xfc>
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	f003 0308 	and.w	r3, r3, #8
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d01b      	beq.n	8006fda <HAL_TIM_IRQHandler+0xfc>
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f06f 0208 	mvn.w	r2, #8
 8006faa:	611a      	str	r2, [r3, #16]
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	2204      	movs	r2, #4
 8006fb0:	771a      	strb	r2, [r3, #28]
 8006fb2:	687b      	ldr	r3, [r7, #4]
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	69db      	ldr	r3, [r3, #28]
 8006fb8:	f003 0303 	and.w	r3, r3, #3
 8006fbc:	2b00      	cmp	r3, #0
 8006fbe:	d003      	beq.n	8006fc8 <HAL_TIM_IRQHandler+0xea>
 8006fc0:	6878      	ldr	r0, [r7, #4]
 8006fc2:	f000 f9ad 	bl	8007320 <HAL_TIM_IC_CaptureCallback>
 8006fc6:	e005      	b.n	8006fd4 <HAL_TIM_IRQHandler+0xf6>
 8006fc8:	6878      	ldr	r0, [r7, #4]
 8006fca:	f000 f99f 	bl	800730c <HAL_TIM_OC_DelayElapsedCallback>
 8006fce:	6878      	ldr	r0, [r7, #4]
 8006fd0:	f000 f9b0 	bl	8007334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2200      	movs	r2, #0
 8006fd8:	771a      	strb	r2, [r3, #28]
 8006fda:	68bb      	ldr	r3, [r7, #8]
 8006fdc:	f003 0310 	and.w	r3, r3, #16
 8006fe0:	2b00      	cmp	r3, #0
 8006fe2:	d020      	beq.n	8007026 <HAL_TIM_IRQHandler+0x148>
 8006fe4:	68fb      	ldr	r3, [r7, #12]
 8006fe6:	f003 0310 	and.w	r3, r3, #16
 8006fea:	2b00      	cmp	r3, #0
 8006fec:	d01b      	beq.n	8007026 <HAL_TIM_IRQHandler+0x148>
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	681b      	ldr	r3, [r3, #0]
 8006ff2:	f06f 0210 	mvn.w	r2, #16
 8006ff6:	611a      	str	r2, [r3, #16]
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	2208      	movs	r2, #8
 8006ffc:	771a      	strb	r2, [r3, #28]
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	69db      	ldr	r3, [r3, #28]
 8007004:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007008:	2b00      	cmp	r3, #0
 800700a:	d003      	beq.n	8007014 <HAL_TIM_IRQHandler+0x136>
 800700c:	6878      	ldr	r0, [r7, #4]
 800700e:	f000 f987 	bl	8007320 <HAL_TIM_IC_CaptureCallback>
 8007012:	e005      	b.n	8007020 <HAL_TIM_IRQHandler+0x142>
 8007014:	6878      	ldr	r0, [r7, #4]
 8007016:	f000 f979 	bl	800730c <HAL_TIM_OC_DelayElapsedCallback>
 800701a:	6878      	ldr	r0, [r7, #4]
 800701c:	f000 f98a 	bl	8007334 <HAL_TIM_PWM_PulseFinishedCallback>
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	2200      	movs	r2, #0
 8007024:	771a      	strb	r2, [r3, #28]
 8007026:	68bb      	ldr	r3, [r7, #8]
 8007028:	f003 0301 	and.w	r3, r3, #1
 800702c:	2b00      	cmp	r3, #0
 800702e:	d00c      	beq.n	800704a <HAL_TIM_IRQHandler+0x16c>
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	f003 0301 	and.w	r3, r3, #1
 8007036:	2b00      	cmp	r3, #0
 8007038:	d007      	beq.n	800704a <HAL_TIM_IRQHandler+0x16c>
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	681b      	ldr	r3, [r3, #0]
 800703e:	f06f 0201 	mvn.w	r2, #1
 8007042:	611a      	str	r2, [r3, #16]
 8007044:	6878      	ldr	r0, [r7, #4]
 8007046:	f7fa fa5f 	bl	8001508 <HAL_TIM_PeriodElapsedCallback>
 800704a:	68bb      	ldr	r3, [r7, #8]
 800704c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007050:	2b00      	cmp	r3, #0
 8007052:	d00c      	beq.n	800706e <HAL_TIM_IRQHandler+0x190>
 8007054:	68fb      	ldr	r3, [r7, #12]
 8007056:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800705a:	2b00      	cmp	r3, #0
 800705c:	d007      	beq.n	800706e <HAL_TIM_IRQHandler+0x190>
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	681b      	ldr	r3, [r3, #0]
 8007062:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007066:	611a      	str	r2, [r3, #16]
 8007068:	6878      	ldr	r0, [r7, #4]
 800706a:	f000 fd73 	bl	8007b54 <HAL_TIMEx_BreakCallback>
 800706e:	68bb      	ldr	r3, [r7, #8]
 8007070:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007074:	2b00      	cmp	r3, #0
 8007076:	d00c      	beq.n	8007092 <HAL_TIM_IRQHandler+0x1b4>
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800707e:	2b00      	cmp	r3, #0
 8007080:	d007      	beq.n	8007092 <HAL_TIM_IRQHandler+0x1b4>
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800708a:	611a      	str	r2, [r3, #16]
 800708c:	6878      	ldr	r0, [r7, #4]
 800708e:	f000 fd6b 	bl	8007b68 <HAL_TIMEx_Break2Callback>
 8007092:	68bb      	ldr	r3, [r7, #8]
 8007094:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007098:	2b00      	cmp	r3, #0
 800709a:	d00c      	beq.n	80070b6 <HAL_TIM_IRQHandler+0x1d8>
 800709c:	68fb      	ldr	r3, [r7, #12]
 800709e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d007      	beq.n	80070b6 <HAL_TIM_IRQHandler+0x1d8>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80070ae:	611a      	str	r2, [r3, #16]
 80070b0:	6878      	ldr	r0, [r7, #4]
 80070b2:	f000 f949 	bl	8007348 <HAL_TIM_TriggerCallback>
 80070b6:	68bb      	ldr	r3, [r7, #8]
 80070b8:	f003 0320 	and.w	r3, r3, #32
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d00c      	beq.n	80070da <HAL_TIM_IRQHandler+0x1fc>
 80070c0:	68fb      	ldr	r3, [r7, #12]
 80070c2:	f003 0320 	and.w	r3, r3, #32
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d007      	beq.n	80070da <HAL_TIM_IRQHandler+0x1fc>
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	f06f 0220 	mvn.w	r2, #32
 80070d2:	611a      	str	r2, [r3, #16]
 80070d4:	6878      	ldr	r0, [r7, #4]
 80070d6:	f000 fd33 	bl	8007b40 <HAL_TIMEx_CommutCallback>
 80070da:	bf00      	nop
 80070dc:	3710      	adds	r7, #16
 80070de:	46bd      	mov	sp, r7
 80070e0:	bd80      	pop	{r7, pc}
	...

080070e4 <HAL_TIM_PWM_ConfigChannel>:
 80070e4:	b580      	push	{r7, lr}
 80070e6:	b086      	sub	sp, #24
 80070e8:	af00      	add	r7, sp, #0
 80070ea:	60f8      	str	r0, [r7, #12]
 80070ec:	60b9      	str	r1, [r7, #8]
 80070ee:	607a      	str	r2, [r7, #4]
 80070f0:	2300      	movs	r3, #0
 80070f2:	75fb      	strb	r3, [r7, #23]
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80070fa:	2b01      	cmp	r3, #1
 80070fc:	d101      	bne.n	8007102 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80070fe:	2302      	movs	r3, #2
 8007100:	e0ff      	b.n	8007302 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8007102:	68fb      	ldr	r3, [r7, #12]
 8007104:	2201      	movs	r2, #1
 8007106:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	2b14      	cmp	r3, #20
 800710e:	f200 80f0 	bhi.w	80072f2 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8007112:	a201      	add	r2, pc, #4	@ (adr r2, 8007118 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007114:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007118:	0800716d 	.word	0x0800716d
 800711c:	080072f3 	.word	0x080072f3
 8007120:	080072f3 	.word	0x080072f3
 8007124:	080072f3 	.word	0x080072f3
 8007128:	080071ad 	.word	0x080071ad
 800712c:	080072f3 	.word	0x080072f3
 8007130:	080072f3 	.word	0x080072f3
 8007134:	080072f3 	.word	0x080072f3
 8007138:	080071ef 	.word	0x080071ef
 800713c:	080072f3 	.word	0x080072f3
 8007140:	080072f3 	.word	0x080072f3
 8007144:	080072f3 	.word	0x080072f3
 8007148:	0800722f 	.word	0x0800722f
 800714c:	080072f3 	.word	0x080072f3
 8007150:	080072f3 	.word	0x080072f3
 8007154:	080072f3 	.word	0x080072f3
 8007158:	08007271 	.word	0x08007271
 800715c:	080072f3 	.word	0x080072f3
 8007160:	080072f3 	.word	0x080072f3
 8007164:	080072f3 	.word	0x080072f3
 8007168:	080072b1 	.word	0x080072b1
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	681b      	ldr	r3, [r3, #0]
 8007170:	68b9      	ldr	r1, [r7, #8]
 8007172:	4618      	mov	r0, r3
 8007174:	f000 f98e 	bl	8007494 <TIM_OC1_SetConfig>
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	699a      	ldr	r2, [r3, #24]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	f042 0208 	orr.w	r2, r2, #8
 8007186:	619a      	str	r2, [r3, #24]
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	699a      	ldr	r2, [r3, #24]
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	681b      	ldr	r3, [r3, #0]
 8007192:	f022 0204 	bic.w	r2, r2, #4
 8007196:	619a      	str	r2, [r3, #24]
 8007198:	68fb      	ldr	r3, [r7, #12]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	6999      	ldr	r1, [r3, #24]
 800719e:	68bb      	ldr	r3, [r7, #8]
 80071a0:	691a      	ldr	r2, [r3, #16]
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	430a      	orrs	r2, r1
 80071a8:	619a      	str	r2, [r3, #24]
 80071aa:	e0a5      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	68b9      	ldr	r1, [r7, #8]
 80071b2:	4618      	mov	r0, r3
 80071b4:	f000 f9fe 	bl	80075b4 <TIM_OC2_SetConfig>
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	699a      	ldr	r2, [r3, #24]
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80071c6:	619a      	str	r2, [r3, #24]
 80071c8:	68fb      	ldr	r3, [r7, #12]
 80071ca:	681b      	ldr	r3, [r3, #0]
 80071cc:	699a      	ldr	r2, [r3, #24]
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80071d6:	619a      	str	r2, [r3, #24]
 80071d8:	68fb      	ldr	r3, [r7, #12]
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	6999      	ldr	r1, [r3, #24]
 80071de:	68bb      	ldr	r3, [r7, #8]
 80071e0:	691b      	ldr	r3, [r3, #16]
 80071e2:	021a      	lsls	r2, r3, #8
 80071e4:	68fb      	ldr	r3, [r7, #12]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	430a      	orrs	r2, r1
 80071ea:	619a      	str	r2, [r3, #24]
 80071ec:	e084      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 80071ee:	68fb      	ldr	r3, [r7, #12]
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	68b9      	ldr	r1, [r7, #8]
 80071f4:	4618      	mov	r0, r3
 80071f6:	f000 fa67 	bl	80076c8 <TIM_OC3_SetConfig>
 80071fa:	68fb      	ldr	r3, [r7, #12]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	69da      	ldr	r2, [r3, #28]
 8007200:	68fb      	ldr	r3, [r7, #12]
 8007202:	681b      	ldr	r3, [r3, #0]
 8007204:	f042 0208 	orr.w	r2, r2, #8
 8007208:	61da      	str	r2, [r3, #28]
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	681b      	ldr	r3, [r3, #0]
 800720e:	69da      	ldr	r2, [r3, #28]
 8007210:	68fb      	ldr	r3, [r7, #12]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	f022 0204 	bic.w	r2, r2, #4
 8007218:	61da      	str	r2, [r3, #28]
 800721a:	68fb      	ldr	r3, [r7, #12]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	69d9      	ldr	r1, [r3, #28]
 8007220:	68bb      	ldr	r3, [r7, #8]
 8007222:	691a      	ldr	r2, [r3, #16]
 8007224:	68fb      	ldr	r3, [r7, #12]
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	430a      	orrs	r2, r1
 800722a:	61da      	str	r2, [r3, #28]
 800722c:	e064      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800722e:	68fb      	ldr	r3, [r7, #12]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	68b9      	ldr	r1, [r7, #8]
 8007234:	4618      	mov	r0, r3
 8007236:	f000 facf 	bl	80077d8 <TIM_OC4_SetConfig>
 800723a:	68fb      	ldr	r3, [r7, #12]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	69da      	ldr	r2, [r3, #28]
 8007240:	68fb      	ldr	r3, [r7, #12]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007248:	61da      	str	r2, [r3, #28]
 800724a:	68fb      	ldr	r3, [r7, #12]
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	69da      	ldr	r2, [r3, #28]
 8007250:	68fb      	ldr	r3, [r7, #12]
 8007252:	681b      	ldr	r3, [r3, #0]
 8007254:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007258:	61da      	str	r2, [r3, #28]
 800725a:	68fb      	ldr	r3, [r7, #12]
 800725c:	681b      	ldr	r3, [r3, #0]
 800725e:	69d9      	ldr	r1, [r3, #28]
 8007260:	68bb      	ldr	r3, [r7, #8]
 8007262:	691b      	ldr	r3, [r3, #16]
 8007264:	021a      	lsls	r2, r3, #8
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	681b      	ldr	r3, [r3, #0]
 800726a:	430a      	orrs	r2, r1
 800726c:	61da      	str	r2, [r3, #28]
 800726e:	e043      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	68b9      	ldr	r1, [r7, #8]
 8007276:	4618      	mov	r0, r3
 8007278:	f000 fb18 	bl	80078ac <TIM_OC5_SetConfig>
 800727c:	68fb      	ldr	r3, [r7, #12]
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007282:	68fb      	ldr	r3, [r7, #12]
 8007284:	681b      	ldr	r3, [r3, #0]
 8007286:	f042 0208 	orr.w	r2, r2, #8
 800728a:	655a      	str	r2, [r3, #84]	@ 0x54
 800728c:	68fb      	ldr	r3, [r7, #12]
 800728e:	681b      	ldr	r3, [r3, #0]
 8007290:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007292:	68fb      	ldr	r3, [r7, #12]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	f022 0204 	bic.w	r2, r2, #4
 800729a:	655a      	str	r2, [r3, #84]	@ 0x54
 800729c:	68fb      	ldr	r3, [r7, #12]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80072a2:	68bb      	ldr	r3, [r7, #8]
 80072a4:	691a      	ldr	r2, [r3, #16]
 80072a6:	68fb      	ldr	r3, [r7, #12]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	430a      	orrs	r2, r1
 80072ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80072ae:	e023      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 80072b0:	68fb      	ldr	r3, [r7, #12]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	68b9      	ldr	r1, [r7, #8]
 80072b6:	4618      	mov	r0, r3
 80072b8:	f000 fb5c 	bl	8007974 <TIM_OC6_SetConfig>
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80072c2:	68fb      	ldr	r3, [r7, #12]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80072ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80072d2:	68fb      	ldr	r3, [r7, #12]
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80072da:	655a      	str	r2, [r3, #84]	@ 0x54
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80072e2:	68bb      	ldr	r3, [r7, #8]
 80072e4:	691b      	ldr	r3, [r3, #16]
 80072e6:	021a      	lsls	r2, r3, #8
 80072e8:	68fb      	ldr	r3, [r7, #12]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	430a      	orrs	r2, r1
 80072ee:	655a      	str	r2, [r3, #84]	@ 0x54
 80072f0:	e002      	b.n	80072f8 <HAL_TIM_PWM_ConfigChannel+0x214>
 80072f2:	2301      	movs	r3, #1
 80072f4:	75fb      	strb	r3, [r7, #23]
 80072f6:	bf00      	nop
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	2200      	movs	r2, #0
 80072fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007300:	7dfb      	ldrb	r3, [r7, #23]
 8007302:	4618      	mov	r0, r3
 8007304:	3718      	adds	r7, #24
 8007306:	46bd      	mov	sp, r7
 8007308:	bd80      	pop	{r7, pc}
 800730a:	bf00      	nop

0800730c <HAL_TIM_OC_DelayElapsedCallback>:
 800730c:	b480      	push	{r7}
 800730e:	b083      	sub	sp, #12
 8007310:	af00      	add	r7, sp, #0
 8007312:	6078      	str	r0, [r7, #4]
 8007314:	bf00      	nop
 8007316:	370c      	adds	r7, #12
 8007318:	46bd      	mov	sp, r7
 800731a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800731e:	4770      	bx	lr

08007320 <HAL_TIM_IC_CaptureCallback>:
 8007320:	b480      	push	{r7}
 8007322:	b083      	sub	sp, #12
 8007324:	af00      	add	r7, sp, #0
 8007326:	6078      	str	r0, [r7, #4]
 8007328:	bf00      	nop
 800732a:	370c      	adds	r7, #12
 800732c:	46bd      	mov	sp, r7
 800732e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007332:	4770      	bx	lr

08007334 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007334:	b480      	push	{r7}
 8007336:	b083      	sub	sp, #12
 8007338:	af00      	add	r7, sp, #0
 800733a:	6078      	str	r0, [r7, #4]
 800733c:	bf00      	nop
 800733e:	370c      	adds	r7, #12
 8007340:	46bd      	mov	sp, r7
 8007342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007346:	4770      	bx	lr

08007348 <HAL_TIM_TriggerCallback>:
 8007348:	b480      	push	{r7}
 800734a:	b083      	sub	sp, #12
 800734c:	af00      	add	r7, sp, #0
 800734e:	6078      	str	r0, [r7, #4]
 8007350:	bf00      	nop
 8007352:	370c      	adds	r7, #12
 8007354:	46bd      	mov	sp, r7
 8007356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800735a:	4770      	bx	lr

0800735c <TIM_Base_SetConfig>:
 800735c:	b480      	push	{r7}
 800735e:	b085      	sub	sp, #20
 8007360:	af00      	add	r7, sp, #0
 8007362:	6078      	str	r0, [r7, #4]
 8007364:	6039      	str	r1, [r7, #0]
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	60fb      	str	r3, [r7, #12]
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	4a42      	ldr	r2, [pc, #264]	@ (8007478 <TIM_Base_SetConfig+0x11c>)
 8007370:	4293      	cmp	r3, r2
 8007372:	d00f      	beq.n	8007394 <TIM_Base_SetConfig+0x38>
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800737a:	d00b      	beq.n	8007394 <TIM_Base_SetConfig+0x38>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	4a3f      	ldr	r2, [pc, #252]	@ (800747c <TIM_Base_SetConfig+0x120>)
 8007380:	4293      	cmp	r3, r2
 8007382:	d007      	beq.n	8007394 <TIM_Base_SetConfig+0x38>
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	4a3e      	ldr	r2, [pc, #248]	@ (8007480 <TIM_Base_SetConfig+0x124>)
 8007388:	4293      	cmp	r3, r2
 800738a:	d003      	beq.n	8007394 <TIM_Base_SetConfig+0x38>
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	4a3d      	ldr	r2, [pc, #244]	@ (8007484 <TIM_Base_SetConfig+0x128>)
 8007390:	4293      	cmp	r3, r2
 8007392:	d108      	bne.n	80073a6 <TIM_Base_SetConfig+0x4a>
 8007394:	68fb      	ldr	r3, [r7, #12]
 8007396:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800739a:	60fb      	str	r3, [r7, #12]
 800739c:	683b      	ldr	r3, [r7, #0]
 800739e:	685b      	ldr	r3, [r3, #4]
 80073a0:	68fa      	ldr	r2, [r7, #12]
 80073a2:	4313      	orrs	r3, r2
 80073a4:	60fb      	str	r3, [r7, #12]
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	4a33      	ldr	r2, [pc, #204]	@ (8007478 <TIM_Base_SetConfig+0x11c>)
 80073aa:	4293      	cmp	r3, r2
 80073ac:	d01b      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80073b4:	d017      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	4a30      	ldr	r2, [pc, #192]	@ (800747c <TIM_Base_SetConfig+0x120>)
 80073ba:	4293      	cmp	r3, r2
 80073bc:	d013      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	4a2f      	ldr	r2, [pc, #188]	@ (8007480 <TIM_Base_SetConfig+0x124>)
 80073c2:	4293      	cmp	r3, r2
 80073c4:	d00f      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	4a2e      	ldr	r2, [pc, #184]	@ (8007484 <TIM_Base_SetConfig+0x128>)
 80073ca:	4293      	cmp	r3, r2
 80073cc:	d00b      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	4a2d      	ldr	r2, [pc, #180]	@ (8007488 <TIM_Base_SetConfig+0x12c>)
 80073d2:	4293      	cmp	r3, r2
 80073d4:	d007      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	4a2c      	ldr	r2, [pc, #176]	@ (800748c <TIM_Base_SetConfig+0x130>)
 80073da:	4293      	cmp	r3, r2
 80073dc:	d003      	beq.n	80073e6 <TIM_Base_SetConfig+0x8a>
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	4a2b      	ldr	r2, [pc, #172]	@ (8007490 <TIM_Base_SetConfig+0x134>)
 80073e2:	4293      	cmp	r3, r2
 80073e4:	d108      	bne.n	80073f8 <TIM_Base_SetConfig+0x9c>
 80073e6:	68fb      	ldr	r3, [r7, #12]
 80073e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80073ec:	60fb      	str	r3, [r7, #12]
 80073ee:	683b      	ldr	r3, [r7, #0]
 80073f0:	68db      	ldr	r3, [r3, #12]
 80073f2:	68fa      	ldr	r2, [r7, #12]
 80073f4:	4313      	orrs	r3, r2
 80073f6:	60fb      	str	r3, [r7, #12]
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80073fe:	683b      	ldr	r3, [r7, #0]
 8007400:	695b      	ldr	r3, [r3, #20]
 8007402:	4313      	orrs	r3, r2
 8007404:	60fb      	str	r3, [r7, #12]
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	68fa      	ldr	r2, [r7, #12]
 800740a:	601a      	str	r2, [r3, #0]
 800740c:	683b      	ldr	r3, [r7, #0]
 800740e:	689a      	ldr	r2, [r3, #8]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007414:	683b      	ldr	r3, [r7, #0]
 8007416:	681a      	ldr	r2, [r3, #0]
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	629a      	str	r2, [r3, #40]	@ 0x28
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	4a16      	ldr	r2, [pc, #88]	@ (8007478 <TIM_Base_SetConfig+0x11c>)
 8007420:	4293      	cmp	r3, r2
 8007422:	d00f      	beq.n	8007444 <TIM_Base_SetConfig+0xe8>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	4a17      	ldr	r2, [pc, #92]	@ (8007484 <TIM_Base_SetConfig+0x128>)
 8007428:	4293      	cmp	r3, r2
 800742a:	d00b      	beq.n	8007444 <TIM_Base_SetConfig+0xe8>
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	4a16      	ldr	r2, [pc, #88]	@ (8007488 <TIM_Base_SetConfig+0x12c>)
 8007430:	4293      	cmp	r3, r2
 8007432:	d007      	beq.n	8007444 <TIM_Base_SetConfig+0xe8>
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	4a15      	ldr	r2, [pc, #84]	@ (800748c <TIM_Base_SetConfig+0x130>)
 8007438:	4293      	cmp	r3, r2
 800743a:	d003      	beq.n	8007444 <TIM_Base_SetConfig+0xe8>
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	4a14      	ldr	r2, [pc, #80]	@ (8007490 <TIM_Base_SetConfig+0x134>)
 8007440:	4293      	cmp	r3, r2
 8007442:	d103      	bne.n	800744c <TIM_Base_SetConfig+0xf0>
 8007444:	683b      	ldr	r3, [r7, #0]
 8007446:	691a      	ldr	r2, [r3, #16]
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	631a      	str	r2, [r3, #48]	@ 0x30
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	2201      	movs	r2, #1
 8007450:	615a      	str	r2, [r3, #20]
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	691b      	ldr	r3, [r3, #16]
 8007456:	f003 0301 	and.w	r3, r3, #1
 800745a:	2b01      	cmp	r3, #1
 800745c:	d105      	bne.n	800746a <TIM_Base_SetConfig+0x10e>
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	691b      	ldr	r3, [r3, #16]
 8007462:	f023 0201 	bic.w	r2, r3, #1
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	611a      	str	r2, [r3, #16]
 800746a:	bf00      	nop
 800746c:	3714      	adds	r7, #20
 800746e:	46bd      	mov	sp, r7
 8007470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007474:	4770      	bx	lr
 8007476:	bf00      	nop
 8007478:	40012c00 	.word	0x40012c00
 800747c:	40000400 	.word	0x40000400
 8007480:	40000800 	.word	0x40000800
 8007484:	40013400 	.word	0x40013400
 8007488:	40014000 	.word	0x40014000
 800748c:	40014400 	.word	0x40014400
 8007490:	40014800 	.word	0x40014800

08007494 <TIM_OC1_SetConfig>:
 8007494:	b480      	push	{r7}
 8007496:	b087      	sub	sp, #28
 8007498:	af00      	add	r7, sp, #0
 800749a:	6078      	str	r0, [r7, #4]
 800749c:	6039      	str	r1, [r7, #0]
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	6a1b      	ldr	r3, [r3, #32]
 80074a2:	617b      	str	r3, [r7, #20]
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	6a1b      	ldr	r3, [r3, #32]
 80074a8:	f023 0201 	bic.w	r2, r3, #1
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	621a      	str	r2, [r3, #32]
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	685b      	ldr	r3, [r3, #4]
 80074b4:	613b      	str	r3, [r7, #16]
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	699b      	ldr	r3, [r3, #24]
 80074ba:	60fb      	str	r3, [r7, #12]
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80074c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80074c6:	60fb      	str	r3, [r7, #12]
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	f023 0303 	bic.w	r3, r3, #3
 80074ce:	60fb      	str	r3, [r7, #12]
 80074d0:	683b      	ldr	r3, [r7, #0]
 80074d2:	681b      	ldr	r3, [r3, #0]
 80074d4:	68fa      	ldr	r2, [r7, #12]
 80074d6:	4313      	orrs	r3, r2
 80074d8:	60fb      	str	r3, [r7, #12]
 80074da:	697b      	ldr	r3, [r7, #20]
 80074dc:	f023 0302 	bic.w	r3, r3, #2
 80074e0:	617b      	str	r3, [r7, #20]
 80074e2:	683b      	ldr	r3, [r7, #0]
 80074e4:	689b      	ldr	r3, [r3, #8]
 80074e6:	697a      	ldr	r2, [r7, #20]
 80074e8:	4313      	orrs	r3, r2
 80074ea:	617b      	str	r3, [r7, #20]
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	4a2c      	ldr	r2, [pc, #176]	@ (80075a0 <TIM_OC1_SetConfig+0x10c>)
 80074f0:	4293      	cmp	r3, r2
 80074f2:	d00f      	beq.n	8007514 <TIM_OC1_SetConfig+0x80>
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	4a2b      	ldr	r2, [pc, #172]	@ (80075a4 <TIM_OC1_SetConfig+0x110>)
 80074f8:	4293      	cmp	r3, r2
 80074fa:	d00b      	beq.n	8007514 <TIM_OC1_SetConfig+0x80>
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	4a2a      	ldr	r2, [pc, #168]	@ (80075a8 <TIM_OC1_SetConfig+0x114>)
 8007500:	4293      	cmp	r3, r2
 8007502:	d007      	beq.n	8007514 <TIM_OC1_SetConfig+0x80>
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	4a29      	ldr	r2, [pc, #164]	@ (80075ac <TIM_OC1_SetConfig+0x118>)
 8007508:	4293      	cmp	r3, r2
 800750a:	d003      	beq.n	8007514 <TIM_OC1_SetConfig+0x80>
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	4a28      	ldr	r2, [pc, #160]	@ (80075b0 <TIM_OC1_SetConfig+0x11c>)
 8007510:	4293      	cmp	r3, r2
 8007512:	d10c      	bne.n	800752e <TIM_OC1_SetConfig+0x9a>
 8007514:	697b      	ldr	r3, [r7, #20]
 8007516:	f023 0308 	bic.w	r3, r3, #8
 800751a:	617b      	str	r3, [r7, #20]
 800751c:	683b      	ldr	r3, [r7, #0]
 800751e:	68db      	ldr	r3, [r3, #12]
 8007520:	697a      	ldr	r2, [r7, #20]
 8007522:	4313      	orrs	r3, r2
 8007524:	617b      	str	r3, [r7, #20]
 8007526:	697b      	ldr	r3, [r7, #20]
 8007528:	f023 0304 	bic.w	r3, r3, #4
 800752c:	617b      	str	r3, [r7, #20]
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	4a1b      	ldr	r2, [pc, #108]	@ (80075a0 <TIM_OC1_SetConfig+0x10c>)
 8007532:	4293      	cmp	r3, r2
 8007534:	d00f      	beq.n	8007556 <TIM_OC1_SetConfig+0xc2>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	4a1a      	ldr	r2, [pc, #104]	@ (80075a4 <TIM_OC1_SetConfig+0x110>)
 800753a:	4293      	cmp	r3, r2
 800753c:	d00b      	beq.n	8007556 <TIM_OC1_SetConfig+0xc2>
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	4a19      	ldr	r2, [pc, #100]	@ (80075a8 <TIM_OC1_SetConfig+0x114>)
 8007542:	4293      	cmp	r3, r2
 8007544:	d007      	beq.n	8007556 <TIM_OC1_SetConfig+0xc2>
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	4a18      	ldr	r2, [pc, #96]	@ (80075ac <TIM_OC1_SetConfig+0x118>)
 800754a:	4293      	cmp	r3, r2
 800754c:	d003      	beq.n	8007556 <TIM_OC1_SetConfig+0xc2>
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	4a17      	ldr	r2, [pc, #92]	@ (80075b0 <TIM_OC1_SetConfig+0x11c>)
 8007552:	4293      	cmp	r3, r2
 8007554:	d111      	bne.n	800757a <TIM_OC1_SetConfig+0xe6>
 8007556:	693b      	ldr	r3, [r7, #16]
 8007558:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800755c:	613b      	str	r3, [r7, #16]
 800755e:	693b      	ldr	r3, [r7, #16]
 8007560:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007564:	613b      	str	r3, [r7, #16]
 8007566:	683b      	ldr	r3, [r7, #0]
 8007568:	695b      	ldr	r3, [r3, #20]
 800756a:	693a      	ldr	r2, [r7, #16]
 800756c:	4313      	orrs	r3, r2
 800756e:	613b      	str	r3, [r7, #16]
 8007570:	683b      	ldr	r3, [r7, #0]
 8007572:	699b      	ldr	r3, [r3, #24]
 8007574:	693a      	ldr	r2, [r7, #16]
 8007576:	4313      	orrs	r3, r2
 8007578:	613b      	str	r3, [r7, #16]
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	693a      	ldr	r2, [r7, #16]
 800757e:	605a      	str	r2, [r3, #4]
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	68fa      	ldr	r2, [r7, #12]
 8007584:	619a      	str	r2, [r3, #24]
 8007586:	683b      	ldr	r3, [r7, #0]
 8007588:	685a      	ldr	r2, [r3, #4]
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	635a      	str	r2, [r3, #52]	@ 0x34
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	697a      	ldr	r2, [r7, #20]
 8007592:	621a      	str	r2, [r3, #32]
 8007594:	bf00      	nop
 8007596:	371c      	adds	r7, #28
 8007598:	46bd      	mov	sp, r7
 800759a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759e:	4770      	bx	lr
 80075a0:	40012c00 	.word	0x40012c00
 80075a4:	40013400 	.word	0x40013400
 80075a8:	40014000 	.word	0x40014000
 80075ac:	40014400 	.word	0x40014400
 80075b0:	40014800 	.word	0x40014800

080075b4 <TIM_OC2_SetConfig>:
 80075b4:	b480      	push	{r7}
 80075b6:	b087      	sub	sp, #28
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	6078      	str	r0, [r7, #4]
 80075bc:	6039      	str	r1, [r7, #0]
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	6a1b      	ldr	r3, [r3, #32]
 80075c2:	617b      	str	r3, [r7, #20]
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	6a1b      	ldr	r3, [r3, #32]
 80075c8:	f023 0210 	bic.w	r2, r3, #16
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	621a      	str	r2, [r3, #32]
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	685b      	ldr	r3, [r3, #4]
 80075d4:	613b      	str	r3, [r7, #16]
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	699b      	ldr	r3, [r3, #24]
 80075da:	60fb      	str	r3, [r7, #12]
 80075dc:	68fb      	ldr	r3, [r7, #12]
 80075de:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80075e2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80075e6:	60fb      	str	r3, [r7, #12]
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80075ee:	60fb      	str	r3, [r7, #12]
 80075f0:	683b      	ldr	r3, [r7, #0]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	021b      	lsls	r3, r3, #8
 80075f6:	68fa      	ldr	r2, [r7, #12]
 80075f8:	4313      	orrs	r3, r2
 80075fa:	60fb      	str	r3, [r7, #12]
 80075fc:	697b      	ldr	r3, [r7, #20]
 80075fe:	f023 0320 	bic.w	r3, r3, #32
 8007602:	617b      	str	r3, [r7, #20]
 8007604:	683b      	ldr	r3, [r7, #0]
 8007606:	689b      	ldr	r3, [r3, #8]
 8007608:	011b      	lsls	r3, r3, #4
 800760a:	697a      	ldr	r2, [r7, #20]
 800760c:	4313      	orrs	r3, r2
 800760e:	617b      	str	r3, [r7, #20]
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	4a28      	ldr	r2, [pc, #160]	@ (80076b4 <TIM_OC2_SetConfig+0x100>)
 8007614:	4293      	cmp	r3, r2
 8007616:	d003      	beq.n	8007620 <TIM_OC2_SetConfig+0x6c>
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	4a27      	ldr	r2, [pc, #156]	@ (80076b8 <TIM_OC2_SetConfig+0x104>)
 800761c:	4293      	cmp	r3, r2
 800761e:	d10d      	bne.n	800763c <TIM_OC2_SetConfig+0x88>
 8007620:	697b      	ldr	r3, [r7, #20]
 8007622:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007626:	617b      	str	r3, [r7, #20]
 8007628:	683b      	ldr	r3, [r7, #0]
 800762a:	68db      	ldr	r3, [r3, #12]
 800762c:	011b      	lsls	r3, r3, #4
 800762e:	697a      	ldr	r2, [r7, #20]
 8007630:	4313      	orrs	r3, r2
 8007632:	617b      	str	r3, [r7, #20]
 8007634:	697b      	ldr	r3, [r7, #20]
 8007636:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800763a:	617b      	str	r3, [r7, #20]
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	4a1d      	ldr	r2, [pc, #116]	@ (80076b4 <TIM_OC2_SetConfig+0x100>)
 8007640:	4293      	cmp	r3, r2
 8007642:	d00f      	beq.n	8007664 <TIM_OC2_SetConfig+0xb0>
 8007644:	687b      	ldr	r3, [r7, #4]
 8007646:	4a1c      	ldr	r2, [pc, #112]	@ (80076b8 <TIM_OC2_SetConfig+0x104>)
 8007648:	4293      	cmp	r3, r2
 800764a:	d00b      	beq.n	8007664 <TIM_OC2_SetConfig+0xb0>
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	4a1b      	ldr	r2, [pc, #108]	@ (80076bc <TIM_OC2_SetConfig+0x108>)
 8007650:	4293      	cmp	r3, r2
 8007652:	d007      	beq.n	8007664 <TIM_OC2_SetConfig+0xb0>
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	4a1a      	ldr	r2, [pc, #104]	@ (80076c0 <TIM_OC2_SetConfig+0x10c>)
 8007658:	4293      	cmp	r3, r2
 800765a:	d003      	beq.n	8007664 <TIM_OC2_SetConfig+0xb0>
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	4a19      	ldr	r2, [pc, #100]	@ (80076c4 <TIM_OC2_SetConfig+0x110>)
 8007660:	4293      	cmp	r3, r2
 8007662:	d113      	bne.n	800768c <TIM_OC2_SetConfig+0xd8>
 8007664:	693b      	ldr	r3, [r7, #16]
 8007666:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800766a:	613b      	str	r3, [r7, #16]
 800766c:	693b      	ldr	r3, [r7, #16]
 800766e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007672:	613b      	str	r3, [r7, #16]
 8007674:	683b      	ldr	r3, [r7, #0]
 8007676:	695b      	ldr	r3, [r3, #20]
 8007678:	009b      	lsls	r3, r3, #2
 800767a:	693a      	ldr	r2, [r7, #16]
 800767c:	4313      	orrs	r3, r2
 800767e:	613b      	str	r3, [r7, #16]
 8007680:	683b      	ldr	r3, [r7, #0]
 8007682:	699b      	ldr	r3, [r3, #24]
 8007684:	009b      	lsls	r3, r3, #2
 8007686:	693a      	ldr	r2, [r7, #16]
 8007688:	4313      	orrs	r3, r2
 800768a:	613b      	str	r3, [r7, #16]
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	693a      	ldr	r2, [r7, #16]
 8007690:	605a      	str	r2, [r3, #4]
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	68fa      	ldr	r2, [r7, #12]
 8007696:	619a      	str	r2, [r3, #24]
 8007698:	683b      	ldr	r3, [r7, #0]
 800769a:	685a      	ldr	r2, [r3, #4]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	639a      	str	r2, [r3, #56]	@ 0x38
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	697a      	ldr	r2, [r7, #20]
 80076a4:	621a      	str	r2, [r3, #32]
 80076a6:	bf00      	nop
 80076a8:	371c      	adds	r7, #28
 80076aa:	46bd      	mov	sp, r7
 80076ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076b0:	4770      	bx	lr
 80076b2:	bf00      	nop
 80076b4:	40012c00 	.word	0x40012c00
 80076b8:	40013400 	.word	0x40013400
 80076bc:	40014000 	.word	0x40014000
 80076c0:	40014400 	.word	0x40014400
 80076c4:	40014800 	.word	0x40014800

080076c8 <TIM_OC3_SetConfig>:
 80076c8:	b480      	push	{r7}
 80076ca:	b087      	sub	sp, #28
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	6078      	str	r0, [r7, #4]
 80076d0:	6039      	str	r1, [r7, #0]
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	6a1b      	ldr	r3, [r3, #32]
 80076d6:	617b      	str	r3, [r7, #20]
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	6a1b      	ldr	r3, [r3, #32]
 80076dc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	621a      	str	r2, [r3, #32]
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	685b      	ldr	r3, [r3, #4]
 80076e8:	613b      	str	r3, [r7, #16]
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	69db      	ldr	r3, [r3, #28]
 80076ee:	60fb      	str	r3, [r7, #12]
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80076f6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80076fa:	60fb      	str	r3, [r7, #12]
 80076fc:	68fb      	ldr	r3, [r7, #12]
 80076fe:	f023 0303 	bic.w	r3, r3, #3
 8007702:	60fb      	str	r3, [r7, #12]
 8007704:	683b      	ldr	r3, [r7, #0]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	68fa      	ldr	r2, [r7, #12]
 800770a:	4313      	orrs	r3, r2
 800770c:	60fb      	str	r3, [r7, #12]
 800770e:	697b      	ldr	r3, [r7, #20]
 8007710:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007714:	617b      	str	r3, [r7, #20]
 8007716:	683b      	ldr	r3, [r7, #0]
 8007718:	689b      	ldr	r3, [r3, #8]
 800771a:	021b      	lsls	r3, r3, #8
 800771c:	697a      	ldr	r2, [r7, #20]
 800771e:	4313      	orrs	r3, r2
 8007720:	617b      	str	r3, [r7, #20]
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	4a27      	ldr	r2, [pc, #156]	@ (80077c4 <TIM_OC3_SetConfig+0xfc>)
 8007726:	4293      	cmp	r3, r2
 8007728:	d003      	beq.n	8007732 <TIM_OC3_SetConfig+0x6a>
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	4a26      	ldr	r2, [pc, #152]	@ (80077c8 <TIM_OC3_SetConfig+0x100>)
 800772e:	4293      	cmp	r3, r2
 8007730:	d10d      	bne.n	800774e <TIM_OC3_SetConfig+0x86>
 8007732:	697b      	ldr	r3, [r7, #20]
 8007734:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007738:	617b      	str	r3, [r7, #20]
 800773a:	683b      	ldr	r3, [r7, #0]
 800773c:	68db      	ldr	r3, [r3, #12]
 800773e:	021b      	lsls	r3, r3, #8
 8007740:	697a      	ldr	r2, [r7, #20]
 8007742:	4313      	orrs	r3, r2
 8007744:	617b      	str	r3, [r7, #20]
 8007746:	697b      	ldr	r3, [r7, #20]
 8007748:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800774c:	617b      	str	r3, [r7, #20]
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	4a1c      	ldr	r2, [pc, #112]	@ (80077c4 <TIM_OC3_SetConfig+0xfc>)
 8007752:	4293      	cmp	r3, r2
 8007754:	d00f      	beq.n	8007776 <TIM_OC3_SetConfig+0xae>
 8007756:	687b      	ldr	r3, [r7, #4]
 8007758:	4a1b      	ldr	r2, [pc, #108]	@ (80077c8 <TIM_OC3_SetConfig+0x100>)
 800775a:	4293      	cmp	r3, r2
 800775c:	d00b      	beq.n	8007776 <TIM_OC3_SetConfig+0xae>
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	4a1a      	ldr	r2, [pc, #104]	@ (80077cc <TIM_OC3_SetConfig+0x104>)
 8007762:	4293      	cmp	r3, r2
 8007764:	d007      	beq.n	8007776 <TIM_OC3_SetConfig+0xae>
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	4a19      	ldr	r2, [pc, #100]	@ (80077d0 <TIM_OC3_SetConfig+0x108>)
 800776a:	4293      	cmp	r3, r2
 800776c:	d003      	beq.n	8007776 <TIM_OC3_SetConfig+0xae>
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	4a18      	ldr	r2, [pc, #96]	@ (80077d4 <TIM_OC3_SetConfig+0x10c>)
 8007772:	4293      	cmp	r3, r2
 8007774:	d113      	bne.n	800779e <TIM_OC3_SetConfig+0xd6>
 8007776:	693b      	ldr	r3, [r7, #16]
 8007778:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800777c:	613b      	str	r3, [r7, #16]
 800777e:	693b      	ldr	r3, [r7, #16]
 8007780:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007784:	613b      	str	r3, [r7, #16]
 8007786:	683b      	ldr	r3, [r7, #0]
 8007788:	695b      	ldr	r3, [r3, #20]
 800778a:	011b      	lsls	r3, r3, #4
 800778c:	693a      	ldr	r2, [r7, #16]
 800778e:	4313      	orrs	r3, r2
 8007790:	613b      	str	r3, [r7, #16]
 8007792:	683b      	ldr	r3, [r7, #0]
 8007794:	699b      	ldr	r3, [r3, #24]
 8007796:	011b      	lsls	r3, r3, #4
 8007798:	693a      	ldr	r2, [r7, #16]
 800779a:	4313      	orrs	r3, r2
 800779c:	613b      	str	r3, [r7, #16]
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	693a      	ldr	r2, [r7, #16]
 80077a2:	605a      	str	r2, [r3, #4]
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	68fa      	ldr	r2, [r7, #12]
 80077a8:	61da      	str	r2, [r3, #28]
 80077aa:	683b      	ldr	r3, [r7, #0]
 80077ac:	685a      	ldr	r2, [r3, #4]
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	697a      	ldr	r2, [r7, #20]
 80077b6:	621a      	str	r2, [r3, #32]
 80077b8:	bf00      	nop
 80077ba:	371c      	adds	r7, #28
 80077bc:	46bd      	mov	sp, r7
 80077be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c2:	4770      	bx	lr
 80077c4:	40012c00 	.word	0x40012c00
 80077c8:	40013400 	.word	0x40013400
 80077cc:	40014000 	.word	0x40014000
 80077d0:	40014400 	.word	0x40014400
 80077d4:	40014800 	.word	0x40014800

080077d8 <TIM_OC4_SetConfig>:
 80077d8:	b480      	push	{r7}
 80077da:	b087      	sub	sp, #28
 80077dc:	af00      	add	r7, sp, #0
 80077de:	6078      	str	r0, [r7, #4]
 80077e0:	6039      	str	r1, [r7, #0]
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	6a1b      	ldr	r3, [r3, #32]
 80077e6:	613b      	str	r3, [r7, #16]
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	6a1b      	ldr	r3, [r3, #32]
 80077ec:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	621a      	str	r2, [r3, #32]
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	685b      	ldr	r3, [r3, #4]
 80077f8:	617b      	str	r3, [r7, #20]
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	69db      	ldr	r3, [r3, #28]
 80077fe:	60fb      	str	r3, [r7, #12]
 8007800:	68fb      	ldr	r3, [r7, #12]
 8007802:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007806:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800780a:	60fb      	str	r3, [r7, #12]
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007812:	60fb      	str	r3, [r7, #12]
 8007814:	683b      	ldr	r3, [r7, #0]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	021b      	lsls	r3, r3, #8
 800781a:	68fa      	ldr	r2, [r7, #12]
 800781c:	4313      	orrs	r3, r2
 800781e:	60fb      	str	r3, [r7, #12]
 8007820:	693b      	ldr	r3, [r7, #16]
 8007822:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007826:	613b      	str	r3, [r7, #16]
 8007828:	683b      	ldr	r3, [r7, #0]
 800782a:	689b      	ldr	r3, [r3, #8]
 800782c:	031b      	lsls	r3, r3, #12
 800782e:	693a      	ldr	r2, [r7, #16]
 8007830:	4313      	orrs	r3, r2
 8007832:	613b      	str	r3, [r7, #16]
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	4a18      	ldr	r2, [pc, #96]	@ (8007898 <TIM_OC4_SetConfig+0xc0>)
 8007838:	4293      	cmp	r3, r2
 800783a:	d00f      	beq.n	800785c <TIM_OC4_SetConfig+0x84>
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	4a17      	ldr	r2, [pc, #92]	@ (800789c <TIM_OC4_SetConfig+0xc4>)
 8007840:	4293      	cmp	r3, r2
 8007842:	d00b      	beq.n	800785c <TIM_OC4_SetConfig+0x84>
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	4a16      	ldr	r2, [pc, #88]	@ (80078a0 <TIM_OC4_SetConfig+0xc8>)
 8007848:	4293      	cmp	r3, r2
 800784a:	d007      	beq.n	800785c <TIM_OC4_SetConfig+0x84>
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	4a15      	ldr	r2, [pc, #84]	@ (80078a4 <TIM_OC4_SetConfig+0xcc>)
 8007850:	4293      	cmp	r3, r2
 8007852:	d003      	beq.n	800785c <TIM_OC4_SetConfig+0x84>
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	4a14      	ldr	r2, [pc, #80]	@ (80078a8 <TIM_OC4_SetConfig+0xd0>)
 8007858:	4293      	cmp	r3, r2
 800785a:	d109      	bne.n	8007870 <TIM_OC4_SetConfig+0x98>
 800785c:	697b      	ldr	r3, [r7, #20]
 800785e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007862:	617b      	str	r3, [r7, #20]
 8007864:	683b      	ldr	r3, [r7, #0]
 8007866:	695b      	ldr	r3, [r3, #20]
 8007868:	019b      	lsls	r3, r3, #6
 800786a:	697a      	ldr	r2, [r7, #20]
 800786c:	4313      	orrs	r3, r2
 800786e:	617b      	str	r3, [r7, #20]
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	697a      	ldr	r2, [r7, #20]
 8007874:	605a      	str	r2, [r3, #4]
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	68fa      	ldr	r2, [r7, #12]
 800787a:	61da      	str	r2, [r3, #28]
 800787c:	683b      	ldr	r3, [r7, #0]
 800787e:	685a      	ldr	r2, [r3, #4]
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	641a      	str	r2, [r3, #64]	@ 0x40
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	693a      	ldr	r2, [r7, #16]
 8007888:	621a      	str	r2, [r3, #32]
 800788a:	bf00      	nop
 800788c:	371c      	adds	r7, #28
 800788e:	46bd      	mov	sp, r7
 8007890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007894:	4770      	bx	lr
 8007896:	bf00      	nop
 8007898:	40012c00 	.word	0x40012c00
 800789c:	40013400 	.word	0x40013400
 80078a0:	40014000 	.word	0x40014000
 80078a4:	40014400 	.word	0x40014400
 80078a8:	40014800 	.word	0x40014800

080078ac <TIM_OC5_SetConfig>:
 80078ac:	b480      	push	{r7}
 80078ae:	b087      	sub	sp, #28
 80078b0:	af00      	add	r7, sp, #0
 80078b2:	6078      	str	r0, [r7, #4]
 80078b4:	6039      	str	r1, [r7, #0]
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	6a1b      	ldr	r3, [r3, #32]
 80078ba:	613b      	str	r3, [r7, #16]
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	6a1b      	ldr	r3, [r3, #32]
 80078c0:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	621a      	str	r2, [r3, #32]
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	685b      	ldr	r3, [r3, #4]
 80078cc:	617b      	str	r3, [r7, #20]
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078d2:	60fb      	str	r3, [r7, #12]
 80078d4:	68fb      	ldr	r3, [r7, #12]
 80078d6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80078da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80078de:	60fb      	str	r3, [r7, #12]
 80078e0:	683b      	ldr	r3, [r7, #0]
 80078e2:	681b      	ldr	r3, [r3, #0]
 80078e4:	68fa      	ldr	r2, [r7, #12]
 80078e6:	4313      	orrs	r3, r2
 80078e8:	60fb      	str	r3, [r7, #12]
 80078ea:	693b      	ldr	r3, [r7, #16]
 80078ec:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80078f0:	613b      	str	r3, [r7, #16]
 80078f2:	683b      	ldr	r3, [r7, #0]
 80078f4:	689b      	ldr	r3, [r3, #8]
 80078f6:	041b      	lsls	r3, r3, #16
 80078f8:	693a      	ldr	r2, [r7, #16]
 80078fa:	4313      	orrs	r3, r2
 80078fc:	613b      	str	r3, [r7, #16]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	4a17      	ldr	r2, [pc, #92]	@ (8007960 <TIM_OC5_SetConfig+0xb4>)
 8007902:	4293      	cmp	r3, r2
 8007904:	d00f      	beq.n	8007926 <TIM_OC5_SetConfig+0x7a>
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	4a16      	ldr	r2, [pc, #88]	@ (8007964 <TIM_OC5_SetConfig+0xb8>)
 800790a:	4293      	cmp	r3, r2
 800790c:	d00b      	beq.n	8007926 <TIM_OC5_SetConfig+0x7a>
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	4a15      	ldr	r2, [pc, #84]	@ (8007968 <TIM_OC5_SetConfig+0xbc>)
 8007912:	4293      	cmp	r3, r2
 8007914:	d007      	beq.n	8007926 <TIM_OC5_SetConfig+0x7a>
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	4a14      	ldr	r2, [pc, #80]	@ (800796c <TIM_OC5_SetConfig+0xc0>)
 800791a:	4293      	cmp	r3, r2
 800791c:	d003      	beq.n	8007926 <TIM_OC5_SetConfig+0x7a>
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	4a13      	ldr	r2, [pc, #76]	@ (8007970 <TIM_OC5_SetConfig+0xc4>)
 8007922:	4293      	cmp	r3, r2
 8007924:	d109      	bne.n	800793a <TIM_OC5_SetConfig+0x8e>
 8007926:	697b      	ldr	r3, [r7, #20]
 8007928:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800792c:	617b      	str	r3, [r7, #20]
 800792e:	683b      	ldr	r3, [r7, #0]
 8007930:	695b      	ldr	r3, [r3, #20]
 8007932:	021b      	lsls	r3, r3, #8
 8007934:	697a      	ldr	r2, [r7, #20]
 8007936:	4313      	orrs	r3, r2
 8007938:	617b      	str	r3, [r7, #20]
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	697a      	ldr	r2, [r7, #20]
 800793e:	605a      	str	r2, [r3, #4]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	68fa      	ldr	r2, [r7, #12]
 8007944:	655a      	str	r2, [r3, #84]	@ 0x54
 8007946:	683b      	ldr	r3, [r7, #0]
 8007948:	685a      	ldr	r2, [r3, #4]
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	659a      	str	r2, [r3, #88]	@ 0x58
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	693a      	ldr	r2, [r7, #16]
 8007952:	621a      	str	r2, [r3, #32]
 8007954:	bf00      	nop
 8007956:	371c      	adds	r7, #28
 8007958:	46bd      	mov	sp, r7
 800795a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795e:	4770      	bx	lr
 8007960:	40012c00 	.word	0x40012c00
 8007964:	40013400 	.word	0x40013400
 8007968:	40014000 	.word	0x40014000
 800796c:	40014400 	.word	0x40014400
 8007970:	40014800 	.word	0x40014800

08007974 <TIM_OC6_SetConfig>:
 8007974:	b480      	push	{r7}
 8007976:	b087      	sub	sp, #28
 8007978:	af00      	add	r7, sp, #0
 800797a:	6078      	str	r0, [r7, #4]
 800797c:	6039      	str	r1, [r7, #0]
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	6a1b      	ldr	r3, [r3, #32]
 8007982:	613b      	str	r3, [r7, #16]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	6a1b      	ldr	r3, [r3, #32]
 8007988:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	621a      	str	r2, [r3, #32]
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	685b      	ldr	r3, [r3, #4]
 8007994:	617b      	str	r3, [r7, #20]
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800799a:	60fb      	str	r3, [r7, #12]
 800799c:	68fb      	ldr	r3, [r7, #12]
 800799e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80079a2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80079a6:	60fb      	str	r3, [r7, #12]
 80079a8:	683b      	ldr	r3, [r7, #0]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	021b      	lsls	r3, r3, #8
 80079ae:	68fa      	ldr	r2, [r7, #12]
 80079b0:	4313      	orrs	r3, r2
 80079b2:	60fb      	str	r3, [r7, #12]
 80079b4:	693b      	ldr	r3, [r7, #16]
 80079b6:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80079ba:	613b      	str	r3, [r7, #16]
 80079bc:	683b      	ldr	r3, [r7, #0]
 80079be:	689b      	ldr	r3, [r3, #8]
 80079c0:	051b      	lsls	r3, r3, #20
 80079c2:	693a      	ldr	r2, [r7, #16]
 80079c4:	4313      	orrs	r3, r2
 80079c6:	613b      	str	r3, [r7, #16]
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	4a18      	ldr	r2, [pc, #96]	@ (8007a2c <TIM_OC6_SetConfig+0xb8>)
 80079cc:	4293      	cmp	r3, r2
 80079ce:	d00f      	beq.n	80079f0 <TIM_OC6_SetConfig+0x7c>
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	4a17      	ldr	r2, [pc, #92]	@ (8007a30 <TIM_OC6_SetConfig+0xbc>)
 80079d4:	4293      	cmp	r3, r2
 80079d6:	d00b      	beq.n	80079f0 <TIM_OC6_SetConfig+0x7c>
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	4a16      	ldr	r2, [pc, #88]	@ (8007a34 <TIM_OC6_SetConfig+0xc0>)
 80079dc:	4293      	cmp	r3, r2
 80079de:	d007      	beq.n	80079f0 <TIM_OC6_SetConfig+0x7c>
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	4a15      	ldr	r2, [pc, #84]	@ (8007a38 <TIM_OC6_SetConfig+0xc4>)
 80079e4:	4293      	cmp	r3, r2
 80079e6:	d003      	beq.n	80079f0 <TIM_OC6_SetConfig+0x7c>
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	4a14      	ldr	r2, [pc, #80]	@ (8007a3c <TIM_OC6_SetConfig+0xc8>)
 80079ec:	4293      	cmp	r3, r2
 80079ee:	d109      	bne.n	8007a04 <TIM_OC6_SetConfig+0x90>
 80079f0:	697b      	ldr	r3, [r7, #20]
 80079f2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80079f6:	617b      	str	r3, [r7, #20]
 80079f8:	683b      	ldr	r3, [r7, #0]
 80079fa:	695b      	ldr	r3, [r3, #20]
 80079fc:	029b      	lsls	r3, r3, #10
 80079fe:	697a      	ldr	r2, [r7, #20]
 8007a00:	4313      	orrs	r3, r2
 8007a02:	617b      	str	r3, [r7, #20]
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	697a      	ldr	r2, [r7, #20]
 8007a08:	605a      	str	r2, [r3, #4]
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	68fa      	ldr	r2, [r7, #12]
 8007a0e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007a10:	683b      	ldr	r3, [r7, #0]
 8007a12:	685a      	ldr	r2, [r3, #4]
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	693a      	ldr	r2, [r7, #16]
 8007a1c:	621a      	str	r2, [r3, #32]
 8007a1e:	bf00      	nop
 8007a20:	371c      	adds	r7, #28
 8007a22:	46bd      	mov	sp, r7
 8007a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a28:	4770      	bx	lr
 8007a2a:	bf00      	nop
 8007a2c:	40012c00 	.word	0x40012c00
 8007a30:	40013400 	.word	0x40013400
 8007a34:	40014000 	.word	0x40014000
 8007a38:	40014400 	.word	0x40014400
 8007a3c:	40014800 	.word	0x40014800

08007a40 <HAL_TIMEx_MasterConfigSynchronization>:
 8007a40:	b480      	push	{r7}
 8007a42:	b085      	sub	sp, #20
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	6078      	str	r0, [r7, #4]
 8007a48:	6039      	str	r1, [r7, #0]
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007a50:	2b01      	cmp	r3, #1
 8007a52:	d101      	bne.n	8007a58 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007a54:	2302      	movs	r3, #2
 8007a56:	e063      	b.n	8007b20 <HAL_TIMEx_MasterConfigSynchronization+0xe0>
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	2201      	movs	r2, #1
 8007a5c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007a60:	687b      	ldr	r3, [r7, #4]
 8007a62:	2202      	movs	r2, #2
 8007a64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007a68:	687b      	ldr	r3, [r7, #4]
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	685b      	ldr	r3, [r3, #4]
 8007a6e:	60fb      	str	r3, [r7, #12]
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	689b      	ldr	r3, [r3, #8]
 8007a76:	60bb      	str	r3, [r7, #8]
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	4a2b      	ldr	r2, [pc, #172]	@ (8007b2c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007a7e:	4293      	cmp	r3, r2
 8007a80:	d004      	beq.n	8007a8c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007a82:	687b      	ldr	r3, [r7, #4]
 8007a84:	681b      	ldr	r3, [r3, #0]
 8007a86:	4a2a      	ldr	r2, [pc, #168]	@ (8007b30 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007a88:	4293      	cmp	r3, r2
 8007a8a:	d108      	bne.n	8007a9e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007a8c:	68fb      	ldr	r3, [r7, #12]
 8007a8e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8007a92:	60fb      	str	r3, [r7, #12]
 8007a94:	683b      	ldr	r3, [r7, #0]
 8007a96:	685b      	ldr	r3, [r3, #4]
 8007a98:	68fa      	ldr	r2, [r7, #12]
 8007a9a:	4313      	orrs	r3, r2
 8007a9c:	60fb      	str	r3, [r7, #12]
 8007a9e:	68fb      	ldr	r3, [r7, #12]
 8007aa0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007aa4:	60fb      	str	r3, [r7, #12]
 8007aa6:	683b      	ldr	r3, [r7, #0]
 8007aa8:	681b      	ldr	r3, [r3, #0]
 8007aaa:	68fa      	ldr	r2, [r7, #12]
 8007aac:	4313      	orrs	r3, r2
 8007aae:	60fb      	str	r3, [r7, #12]
 8007ab0:	687b      	ldr	r3, [r7, #4]
 8007ab2:	681b      	ldr	r3, [r3, #0]
 8007ab4:	68fa      	ldr	r2, [r7, #12]
 8007ab6:	605a      	str	r2, [r3, #4]
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	4a1b      	ldr	r2, [pc, #108]	@ (8007b2c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007abe:	4293      	cmp	r3, r2
 8007ac0:	d018      	beq.n	8007af4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007aca:	d013      	beq.n	8007af4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	4a18      	ldr	r2, [pc, #96]	@ (8007b34 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007ad2:	4293      	cmp	r3, r2
 8007ad4:	d00e      	beq.n	8007af4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	4a17      	ldr	r2, [pc, #92]	@ (8007b38 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8007adc:	4293      	cmp	r3, r2
 8007ade:	d009      	beq.n	8007af4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	681b      	ldr	r3, [r3, #0]
 8007ae4:	4a12      	ldr	r2, [pc, #72]	@ (8007b30 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007ae6:	4293      	cmp	r3, r2
 8007ae8:	d004      	beq.n	8007af4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	4a13      	ldr	r2, [pc, #76]	@ (8007b3c <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8007af0:	4293      	cmp	r3, r2
 8007af2:	d10c      	bne.n	8007b0e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007af4:	68bb      	ldr	r3, [r7, #8]
 8007af6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007afa:	60bb      	str	r3, [r7, #8]
 8007afc:	683b      	ldr	r3, [r7, #0]
 8007afe:	689b      	ldr	r3, [r3, #8]
 8007b00:	68ba      	ldr	r2, [r7, #8]
 8007b02:	4313      	orrs	r3, r2
 8007b04:	60bb      	str	r3, [r7, #8]
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	681b      	ldr	r3, [r3, #0]
 8007b0a:	68ba      	ldr	r2, [r7, #8]
 8007b0c:	609a      	str	r2, [r3, #8]
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	2201      	movs	r2, #1
 8007b12:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	2200      	movs	r2, #0
 8007b1a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007b1e:	2300      	movs	r3, #0
 8007b20:	4618      	mov	r0, r3
 8007b22:	3714      	adds	r7, #20
 8007b24:	46bd      	mov	sp, r7
 8007b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b2a:	4770      	bx	lr
 8007b2c:	40012c00 	.word	0x40012c00
 8007b30:	40013400 	.word	0x40013400
 8007b34:	40000400 	.word	0x40000400
 8007b38:	40000800 	.word	0x40000800
 8007b3c:	40014000 	.word	0x40014000

08007b40 <HAL_TIMEx_CommutCallback>:
 8007b40:	b480      	push	{r7}
 8007b42:	b083      	sub	sp, #12
 8007b44:	af00      	add	r7, sp, #0
 8007b46:	6078      	str	r0, [r7, #4]
 8007b48:	bf00      	nop
 8007b4a:	370c      	adds	r7, #12
 8007b4c:	46bd      	mov	sp, r7
 8007b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b52:	4770      	bx	lr

08007b54 <HAL_TIMEx_BreakCallback>:
 8007b54:	b480      	push	{r7}
 8007b56:	b083      	sub	sp, #12
 8007b58:	af00      	add	r7, sp, #0
 8007b5a:	6078      	str	r0, [r7, #4]
 8007b5c:	bf00      	nop
 8007b5e:	370c      	adds	r7, #12
 8007b60:	46bd      	mov	sp, r7
 8007b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b66:	4770      	bx	lr

08007b68 <HAL_TIMEx_Break2Callback>:
 8007b68:	b480      	push	{r7}
 8007b6a:	b083      	sub	sp, #12
 8007b6c:	af00      	add	r7, sp, #0
 8007b6e:	6078      	str	r0, [r7, #4]
 8007b70:	bf00      	nop
 8007b72:	370c      	adds	r7, #12
 8007b74:	46bd      	mov	sp, r7
 8007b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b7a:	4770      	bx	lr

08007b7c <HAL_UART_Init>:
 8007b7c:	b580      	push	{r7, lr}
 8007b7e:	b082      	sub	sp, #8
 8007b80:	af00      	add	r7, sp, #0
 8007b82:	6078      	str	r0, [r7, #4]
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	2b00      	cmp	r3, #0
 8007b88:	d101      	bne.n	8007b8e <HAL_UART_Init+0x12>
 8007b8a:	2301      	movs	r3, #1
 8007b8c:	e040      	b.n	8007c10 <HAL_UART_Init+0x94>
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d106      	bne.n	8007ba4 <HAL_UART_Init+0x28>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	2200      	movs	r2, #0
 8007b9a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007b9e:	6878      	ldr	r0, [r7, #4]
 8007ba0:	f7fa f970 	bl	8001e84 <HAL_UART_MspInit>
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	2224      	movs	r2, #36	@ 0x24
 8007ba8:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	681a      	ldr	r2, [r3, #0]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	681b      	ldr	r3, [r3, #0]
 8007bb4:	f022 0201 	bic.w	r2, r2, #1
 8007bb8:	601a      	str	r2, [r3, #0]
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	d002      	beq.n	8007bc8 <HAL_UART_Init+0x4c>
 8007bc2:	6878      	ldr	r0, [r7, #4]
 8007bc4:	f000 fb3c 	bl	8008240 <UART_AdvFeatureConfig>
 8007bc8:	6878      	ldr	r0, [r7, #4]
 8007bca:	f000 f965 	bl	8007e98 <UART_SetConfig>
 8007bce:	4603      	mov	r3, r0
 8007bd0:	2b01      	cmp	r3, #1
 8007bd2:	d101      	bne.n	8007bd8 <HAL_UART_Init+0x5c>
 8007bd4:	2301      	movs	r3, #1
 8007bd6:	e01b      	b.n	8007c10 <HAL_UART_Init+0x94>
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	685a      	ldr	r2, [r3, #4]
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007be6:	605a      	str	r2, [r3, #4]
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	689a      	ldr	r2, [r3, #8]
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007bf6:	609a      	str	r2, [r3, #8]
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	681b      	ldr	r3, [r3, #0]
 8007bfc:	681a      	ldr	r2, [r3, #0]
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	f042 0201 	orr.w	r2, r2, #1
 8007c06:	601a      	str	r2, [r3, #0]
 8007c08:	6878      	ldr	r0, [r7, #4]
 8007c0a:	f000 fbbb 	bl	8008384 <UART_CheckIdleState>
 8007c0e:	4603      	mov	r3, r0
 8007c10:	4618      	mov	r0, r3
 8007c12:	3708      	adds	r7, #8
 8007c14:	46bd      	mov	sp, r7
 8007c16:	bd80      	pop	{r7, pc}

08007c18 <HAL_UART_Transmit>:
 8007c18:	b580      	push	{r7, lr}
 8007c1a:	b08a      	sub	sp, #40	@ 0x28
 8007c1c:	af02      	add	r7, sp, #8
 8007c1e:	60f8      	str	r0, [r7, #12]
 8007c20:	60b9      	str	r1, [r7, #8]
 8007c22:	603b      	str	r3, [r7, #0]
 8007c24:	4613      	mov	r3, r2
 8007c26:	80fb      	strh	r3, [r7, #6]
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007c2c:	2b20      	cmp	r3, #32
 8007c2e:	d177      	bne.n	8007d20 <HAL_UART_Transmit+0x108>
 8007c30:	68bb      	ldr	r3, [r7, #8]
 8007c32:	2b00      	cmp	r3, #0
 8007c34:	d002      	beq.n	8007c3c <HAL_UART_Transmit+0x24>
 8007c36:	88fb      	ldrh	r3, [r7, #6]
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	d101      	bne.n	8007c40 <HAL_UART_Transmit+0x28>
 8007c3c:	2301      	movs	r3, #1
 8007c3e:	e070      	b.n	8007d22 <HAL_UART_Transmit+0x10a>
 8007c40:	68fb      	ldr	r3, [r7, #12]
 8007c42:	2200      	movs	r2, #0
 8007c44:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007c48:	68fb      	ldr	r3, [r7, #12]
 8007c4a:	2221      	movs	r2, #33	@ 0x21
 8007c4c:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007c4e:	f7fa fdf1 	bl	8002834 <HAL_GetTick>
 8007c52:	6178      	str	r0, [r7, #20]
 8007c54:	68fb      	ldr	r3, [r7, #12]
 8007c56:	88fa      	ldrh	r2, [r7, #6]
 8007c58:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8007c5c:	68fb      	ldr	r3, [r7, #12]
 8007c5e:	88fa      	ldrh	r2, [r7, #6]
 8007c60:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8007c64:	68fb      	ldr	r3, [r7, #12]
 8007c66:	689b      	ldr	r3, [r3, #8]
 8007c68:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007c6c:	d108      	bne.n	8007c80 <HAL_UART_Transmit+0x68>
 8007c6e:	68fb      	ldr	r3, [r7, #12]
 8007c70:	691b      	ldr	r3, [r3, #16]
 8007c72:	2b00      	cmp	r3, #0
 8007c74:	d104      	bne.n	8007c80 <HAL_UART_Transmit+0x68>
 8007c76:	2300      	movs	r3, #0
 8007c78:	61fb      	str	r3, [r7, #28]
 8007c7a:	68bb      	ldr	r3, [r7, #8]
 8007c7c:	61bb      	str	r3, [r7, #24]
 8007c7e:	e003      	b.n	8007c88 <HAL_UART_Transmit+0x70>
 8007c80:	68bb      	ldr	r3, [r7, #8]
 8007c82:	61fb      	str	r3, [r7, #28]
 8007c84:	2300      	movs	r3, #0
 8007c86:	61bb      	str	r3, [r7, #24]
 8007c88:	e02f      	b.n	8007cea <HAL_UART_Transmit+0xd2>
 8007c8a:	683b      	ldr	r3, [r7, #0]
 8007c8c:	9300      	str	r3, [sp, #0]
 8007c8e:	697b      	ldr	r3, [r7, #20]
 8007c90:	2200      	movs	r2, #0
 8007c92:	2180      	movs	r1, #128	@ 0x80
 8007c94:	68f8      	ldr	r0, [r7, #12]
 8007c96:	f000 fc1d 	bl	80084d4 <UART_WaitOnFlagUntilTimeout>
 8007c9a:	4603      	mov	r3, r0
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d004      	beq.n	8007caa <HAL_UART_Transmit+0x92>
 8007ca0:	68fb      	ldr	r3, [r7, #12]
 8007ca2:	2220      	movs	r2, #32
 8007ca4:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007ca6:	2303      	movs	r3, #3
 8007ca8:	e03b      	b.n	8007d22 <HAL_UART_Transmit+0x10a>
 8007caa:	69fb      	ldr	r3, [r7, #28]
 8007cac:	2b00      	cmp	r3, #0
 8007cae:	d10b      	bne.n	8007cc8 <HAL_UART_Transmit+0xb0>
 8007cb0:	69bb      	ldr	r3, [r7, #24]
 8007cb2:	881a      	ldrh	r2, [r3, #0]
 8007cb4:	68fb      	ldr	r3, [r7, #12]
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007cbc:	b292      	uxth	r2, r2
 8007cbe:	851a      	strh	r2, [r3, #40]	@ 0x28
 8007cc0:	69bb      	ldr	r3, [r7, #24]
 8007cc2:	3302      	adds	r3, #2
 8007cc4:	61bb      	str	r3, [r7, #24]
 8007cc6:	e007      	b.n	8007cd8 <HAL_UART_Transmit+0xc0>
 8007cc8:	69fb      	ldr	r3, [r7, #28]
 8007cca:	781a      	ldrb	r2, [r3, #0]
 8007ccc:	68fb      	ldr	r3, [r7, #12]
 8007cce:	681b      	ldr	r3, [r3, #0]
 8007cd0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8007cd2:	69fb      	ldr	r3, [r7, #28]
 8007cd4:	3301      	adds	r3, #1
 8007cd6:	61fb      	str	r3, [r7, #28]
 8007cd8:	68fb      	ldr	r3, [r7, #12]
 8007cda:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8007cde:	b29b      	uxth	r3, r3
 8007ce0:	3b01      	subs	r3, #1
 8007ce2:	b29a      	uxth	r2, r3
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8007cea:	68fb      	ldr	r3, [r7, #12]
 8007cec:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8007cf0:	b29b      	uxth	r3, r3
 8007cf2:	2b00      	cmp	r3, #0
 8007cf4:	d1c9      	bne.n	8007c8a <HAL_UART_Transmit+0x72>
 8007cf6:	683b      	ldr	r3, [r7, #0]
 8007cf8:	9300      	str	r3, [sp, #0]
 8007cfa:	697b      	ldr	r3, [r7, #20]
 8007cfc:	2200      	movs	r2, #0
 8007cfe:	2140      	movs	r1, #64	@ 0x40
 8007d00:	68f8      	ldr	r0, [r7, #12]
 8007d02:	f000 fbe7 	bl	80084d4 <UART_WaitOnFlagUntilTimeout>
 8007d06:	4603      	mov	r3, r0
 8007d08:	2b00      	cmp	r3, #0
 8007d0a:	d004      	beq.n	8007d16 <HAL_UART_Transmit+0xfe>
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	2220      	movs	r2, #32
 8007d10:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007d12:	2303      	movs	r3, #3
 8007d14:	e005      	b.n	8007d22 <HAL_UART_Transmit+0x10a>
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	2220      	movs	r2, #32
 8007d1a:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007d1c:	2300      	movs	r3, #0
 8007d1e:	e000      	b.n	8007d22 <HAL_UART_Transmit+0x10a>
 8007d20:	2302      	movs	r3, #2
 8007d22:	4618      	mov	r0, r3
 8007d24:	3720      	adds	r7, #32
 8007d26:	46bd      	mov	sp, r7
 8007d28:	bd80      	pop	{r7, pc}

08007d2a <HAL_UART_Receive>:
 8007d2a:	b580      	push	{r7, lr}
 8007d2c:	b08a      	sub	sp, #40	@ 0x28
 8007d2e:	af02      	add	r7, sp, #8
 8007d30:	60f8      	str	r0, [r7, #12]
 8007d32:	60b9      	str	r1, [r7, #8]
 8007d34:	603b      	str	r3, [r7, #0]
 8007d36:	4613      	mov	r3, r2
 8007d38:	80fb      	strh	r3, [r7, #6]
 8007d3a:	68fb      	ldr	r3, [r7, #12]
 8007d3c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007d40:	2b20      	cmp	r3, #32
 8007d42:	f040 80a3 	bne.w	8007e8c <HAL_UART_Receive+0x162>
 8007d46:	68bb      	ldr	r3, [r7, #8]
 8007d48:	2b00      	cmp	r3, #0
 8007d4a:	d002      	beq.n	8007d52 <HAL_UART_Receive+0x28>
 8007d4c:	88fb      	ldrh	r3, [r7, #6]
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d101      	bne.n	8007d56 <HAL_UART_Receive+0x2c>
 8007d52:	2301      	movs	r3, #1
 8007d54:	e09b      	b.n	8007e8e <HAL_UART_Receive+0x164>
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	2200      	movs	r2, #0
 8007d5a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	2222      	movs	r2, #34	@ 0x22
 8007d62:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	2200      	movs	r2, #0
 8007d6a:	661a      	str	r2, [r3, #96]	@ 0x60
 8007d6c:	f7fa fd62 	bl	8002834 <HAL_GetTick>
 8007d70:	6178      	str	r0, [r7, #20]
 8007d72:	68fb      	ldr	r3, [r7, #12]
 8007d74:	88fa      	ldrh	r2, [r7, #6]
 8007d76:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 8007d7a:	68fb      	ldr	r3, [r7, #12]
 8007d7c:	88fa      	ldrh	r2, [r7, #6]
 8007d7e:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007d82:	68fb      	ldr	r3, [r7, #12]
 8007d84:	689b      	ldr	r3, [r3, #8]
 8007d86:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007d8a:	d10e      	bne.n	8007daa <HAL_UART_Receive+0x80>
 8007d8c:	68fb      	ldr	r3, [r7, #12]
 8007d8e:	691b      	ldr	r3, [r3, #16]
 8007d90:	2b00      	cmp	r3, #0
 8007d92:	d105      	bne.n	8007da0 <HAL_UART_Receive+0x76>
 8007d94:	68fb      	ldr	r3, [r7, #12]
 8007d96:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8007d9a:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007d9e:	e01a      	b.n	8007dd6 <HAL_UART_Receive+0xac>
 8007da0:	68fb      	ldr	r3, [r7, #12]
 8007da2:	22ff      	movs	r2, #255	@ 0xff
 8007da4:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007da8:	e015      	b.n	8007dd6 <HAL_UART_Receive+0xac>
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	689b      	ldr	r3, [r3, #8]
 8007dae:	2b00      	cmp	r3, #0
 8007db0:	d10d      	bne.n	8007dce <HAL_UART_Receive+0xa4>
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	691b      	ldr	r3, [r3, #16]
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	d104      	bne.n	8007dc4 <HAL_UART_Receive+0x9a>
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	22ff      	movs	r2, #255	@ 0xff
 8007dbe:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007dc2:	e008      	b.n	8007dd6 <HAL_UART_Receive+0xac>
 8007dc4:	68fb      	ldr	r3, [r7, #12]
 8007dc6:	227f      	movs	r2, #127	@ 0x7f
 8007dc8:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007dcc:	e003      	b.n	8007dd6 <HAL_UART_Receive+0xac>
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	2200      	movs	r2, #0
 8007dd2:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8007dd6:	68fb      	ldr	r3, [r7, #12]
 8007dd8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8007ddc:	827b      	strh	r3, [r7, #18]
 8007dde:	68fb      	ldr	r3, [r7, #12]
 8007de0:	689b      	ldr	r3, [r3, #8]
 8007de2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007de6:	d108      	bne.n	8007dfa <HAL_UART_Receive+0xd0>
 8007de8:	68fb      	ldr	r3, [r7, #12]
 8007dea:	691b      	ldr	r3, [r3, #16]
 8007dec:	2b00      	cmp	r3, #0
 8007dee:	d104      	bne.n	8007dfa <HAL_UART_Receive+0xd0>
 8007df0:	2300      	movs	r3, #0
 8007df2:	61fb      	str	r3, [r7, #28]
 8007df4:	68bb      	ldr	r3, [r7, #8]
 8007df6:	61bb      	str	r3, [r7, #24]
 8007df8:	e003      	b.n	8007e02 <HAL_UART_Receive+0xd8>
 8007dfa:	68bb      	ldr	r3, [r7, #8]
 8007dfc:	61fb      	str	r3, [r7, #28]
 8007dfe:	2300      	movs	r3, #0
 8007e00:	61bb      	str	r3, [r7, #24]
 8007e02:	e037      	b.n	8007e74 <HAL_UART_Receive+0x14a>
 8007e04:	683b      	ldr	r3, [r7, #0]
 8007e06:	9300      	str	r3, [sp, #0]
 8007e08:	697b      	ldr	r3, [r7, #20]
 8007e0a:	2200      	movs	r2, #0
 8007e0c:	2120      	movs	r1, #32
 8007e0e:	68f8      	ldr	r0, [r7, #12]
 8007e10:	f000 fb60 	bl	80084d4 <UART_WaitOnFlagUntilTimeout>
 8007e14:	4603      	mov	r3, r0
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d005      	beq.n	8007e26 <HAL_UART_Receive+0xfc>
 8007e1a:	68fb      	ldr	r3, [r7, #12]
 8007e1c:	2220      	movs	r2, #32
 8007e1e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007e22:	2303      	movs	r3, #3
 8007e24:	e033      	b.n	8007e8e <HAL_UART_Receive+0x164>
 8007e26:	69fb      	ldr	r3, [r7, #28]
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	d10c      	bne.n	8007e46 <HAL_UART_Receive+0x11c>
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	681b      	ldr	r3, [r3, #0]
 8007e30:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8007e32:	b29a      	uxth	r2, r3
 8007e34:	8a7b      	ldrh	r3, [r7, #18]
 8007e36:	4013      	ands	r3, r2
 8007e38:	b29a      	uxth	r2, r3
 8007e3a:	69bb      	ldr	r3, [r7, #24]
 8007e3c:	801a      	strh	r2, [r3, #0]
 8007e3e:	69bb      	ldr	r3, [r7, #24]
 8007e40:	3302      	adds	r3, #2
 8007e42:	61bb      	str	r3, [r7, #24]
 8007e44:	e00d      	b.n	8007e62 <HAL_UART_Receive+0x138>
 8007e46:	68fb      	ldr	r3, [r7, #12]
 8007e48:	681b      	ldr	r3, [r3, #0]
 8007e4a:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8007e4c:	b29b      	uxth	r3, r3
 8007e4e:	b2da      	uxtb	r2, r3
 8007e50:	8a7b      	ldrh	r3, [r7, #18]
 8007e52:	b2db      	uxtb	r3, r3
 8007e54:	4013      	ands	r3, r2
 8007e56:	b2da      	uxtb	r2, r3
 8007e58:	69fb      	ldr	r3, [r7, #28]
 8007e5a:	701a      	strb	r2, [r3, #0]
 8007e5c:	69fb      	ldr	r3, [r7, #28]
 8007e5e:	3301      	adds	r3, #1
 8007e60:	61fb      	str	r3, [r7, #28]
 8007e62:	68fb      	ldr	r3, [r7, #12]
 8007e64:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007e68:	b29b      	uxth	r3, r3
 8007e6a:	3b01      	subs	r3, #1
 8007e6c:	b29a      	uxth	r2, r3
 8007e6e:	68fb      	ldr	r3, [r7, #12]
 8007e70:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8007e74:	68fb      	ldr	r3, [r7, #12]
 8007e76:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8007e7a:	b29b      	uxth	r3, r3
 8007e7c:	2b00      	cmp	r3, #0
 8007e7e:	d1c1      	bne.n	8007e04 <HAL_UART_Receive+0xda>
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	2220      	movs	r2, #32
 8007e84:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007e88:	2300      	movs	r3, #0
 8007e8a:	e000      	b.n	8007e8e <HAL_UART_Receive+0x164>
 8007e8c:	2302      	movs	r3, #2
 8007e8e:	4618      	mov	r0, r3
 8007e90:	3720      	adds	r7, #32
 8007e92:	46bd      	mov	sp, r7
 8007e94:	bd80      	pop	{r7, pc}
	...

08007e98 <UART_SetConfig>:
 8007e98:	b580      	push	{r7, lr}
 8007e9a:	b088      	sub	sp, #32
 8007e9c:	af00      	add	r7, sp, #0
 8007e9e:	6078      	str	r0, [r7, #4]
 8007ea0:	2300      	movs	r3, #0
 8007ea2:	77bb      	strb	r3, [r7, #30]
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	689a      	ldr	r2, [r3, #8]
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	691b      	ldr	r3, [r3, #16]
 8007eac:	431a      	orrs	r2, r3
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	695b      	ldr	r3, [r3, #20]
 8007eb2:	431a      	orrs	r2, r3
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	69db      	ldr	r3, [r3, #28]
 8007eb8:	4313      	orrs	r3, r2
 8007eba:	617b      	str	r3, [r7, #20]
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	f423 4316 	bic.w	r3, r3, #38400	@ 0x9600
 8007ec6:	f023 030c 	bic.w	r3, r3, #12
 8007eca:	687a      	ldr	r2, [r7, #4]
 8007ecc:	6812      	ldr	r2, [r2, #0]
 8007ece:	6979      	ldr	r1, [r7, #20]
 8007ed0:	430b      	orrs	r3, r1
 8007ed2:	6013      	str	r3, [r2, #0]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	685b      	ldr	r3, [r3, #4]
 8007eda:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	68da      	ldr	r2, [r3, #12]
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	681b      	ldr	r3, [r3, #0]
 8007ee6:	430a      	orrs	r2, r1
 8007ee8:	605a      	str	r2, [r3, #4]
 8007eea:	687b      	ldr	r3, [r7, #4]
 8007eec:	699b      	ldr	r3, [r3, #24]
 8007eee:	617b      	str	r3, [r7, #20]
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	6a1b      	ldr	r3, [r3, #32]
 8007ef4:	697a      	ldr	r2, [r7, #20]
 8007ef6:	4313      	orrs	r3, r2
 8007ef8:	617b      	str	r3, [r7, #20]
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	689b      	ldr	r3, [r3, #8]
 8007f00:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	697a      	ldr	r2, [r7, #20]
 8007f0a:	430a      	orrs	r2, r1
 8007f0c:	609a      	str	r2, [r3, #8]
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	681b      	ldr	r3, [r3, #0]
 8007f12:	4aa7      	ldr	r2, [pc, #668]	@ (80081b0 <UART_SetConfig+0x318>)
 8007f14:	4293      	cmp	r3, r2
 8007f16:	d120      	bne.n	8007f5a <UART_SetConfig+0xc2>
 8007f18:	4ba6      	ldr	r3, [pc, #664]	@ (80081b4 <UART_SetConfig+0x31c>)
 8007f1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007f1c:	f003 0303 	and.w	r3, r3, #3
 8007f20:	2b03      	cmp	r3, #3
 8007f22:	d817      	bhi.n	8007f54 <UART_SetConfig+0xbc>
 8007f24:	a201      	add	r2, pc, #4	@ (adr r2, 8007f2c <UART_SetConfig+0x94>)
 8007f26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007f2a:	bf00      	nop
 8007f2c:	08007f3d 	.word	0x08007f3d
 8007f30:	08007f49 	.word	0x08007f49
 8007f34:	08007f4f 	.word	0x08007f4f
 8007f38:	08007f43 	.word	0x08007f43
 8007f3c:	2301      	movs	r3, #1
 8007f3e:	77fb      	strb	r3, [r7, #31]
 8007f40:	e0b5      	b.n	80080ae <UART_SetConfig+0x216>
 8007f42:	2302      	movs	r3, #2
 8007f44:	77fb      	strb	r3, [r7, #31]
 8007f46:	e0b2      	b.n	80080ae <UART_SetConfig+0x216>
 8007f48:	2304      	movs	r3, #4
 8007f4a:	77fb      	strb	r3, [r7, #31]
 8007f4c:	e0af      	b.n	80080ae <UART_SetConfig+0x216>
 8007f4e:	2308      	movs	r3, #8
 8007f50:	77fb      	strb	r3, [r7, #31]
 8007f52:	e0ac      	b.n	80080ae <UART_SetConfig+0x216>
 8007f54:	2310      	movs	r3, #16
 8007f56:	77fb      	strb	r3, [r7, #31]
 8007f58:	e0a9      	b.n	80080ae <UART_SetConfig+0x216>
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	4a96      	ldr	r2, [pc, #600]	@ (80081b8 <UART_SetConfig+0x320>)
 8007f60:	4293      	cmp	r3, r2
 8007f62:	d124      	bne.n	8007fae <UART_SetConfig+0x116>
 8007f64:	4b93      	ldr	r3, [pc, #588]	@ (80081b4 <UART_SetConfig+0x31c>)
 8007f66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007f68:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8007f6c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007f70:	d011      	beq.n	8007f96 <UART_SetConfig+0xfe>
 8007f72:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007f76:	d817      	bhi.n	8007fa8 <UART_SetConfig+0x110>
 8007f78:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007f7c:	d011      	beq.n	8007fa2 <UART_SetConfig+0x10a>
 8007f7e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007f82:	d811      	bhi.n	8007fa8 <UART_SetConfig+0x110>
 8007f84:	2b00      	cmp	r3, #0
 8007f86:	d003      	beq.n	8007f90 <UART_SetConfig+0xf8>
 8007f88:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007f8c:	d006      	beq.n	8007f9c <UART_SetConfig+0x104>
 8007f8e:	e00b      	b.n	8007fa8 <UART_SetConfig+0x110>
 8007f90:	2300      	movs	r3, #0
 8007f92:	77fb      	strb	r3, [r7, #31]
 8007f94:	e08b      	b.n	80080ae <UART_SetConfig+0x216>
 8007f96:	2302      	movs	r3, #2
 8007f98:	77fb      	strb	r3, [r7, #31]
 8007f9a:	e088      	b.n	80080ae <UART_SetConfig+0x216>
 8007f9c:	2304      	movs	r3, #4
 8007f9e:	77fb      	strb	r3, [r7, #31]
 8007fa0:	e085      	b.n	80080ae <UART_SetConfig+0x216>
 8007fa2:	2308      	movs	r3, #8
 8007fa4:	77fb      	strb	r3, [r7, #31]
 8007fa6:	e082      	b.n	80080ae <UART_SetConfig+0x216>
 8007fa8:	2310      	movs	r3, #16
 8007faa:	77fb      	strb	r3, [r7, #31]
 8007fac:	e07f      	b.n	80080ae <UART_SetConfig+0x216>
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	4a82      	ldr	r2, [pc, #520]	@ (80081bc <UART_SetConfig+0x324>)
 8007fb4:	4293      	cmp	r3, r2
 8007fb6:	d124      	bne.n	8008002 <UART_SetConfig+0x16a>
 8007fb8:	4b7e      	ldr	r3, [pc, #504]	@ (80081b4 <UART_SetConfig+0x31c>)
 8007fba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007fbc:	f403 2340 	and.w	r3, r3, #786432	@ 0xc0000
 8007fc0:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8007fc4:	d011      	beq.n	8007fea <UART_SetConfig+0x152>
 8007fc6:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8007fca:	d817      	bhi.n	8007ffc <UART_SetConfig+0x164>
 8007fcc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8007fd0:	d011      	beq.n	8007ff6 <UART_SetConfig+0x15e>
 8007fd2:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8007fd6:	d811      	bhi.n	8007ffc <UART_SetConfig+0x164>
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	d003      	beq.n	8007fe4 <UART_SetConfig+0x14c>
 8007fdc:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007fe0:	d006      	beq.n	8007ff0 <UART_SetConfig+0x158>
 8007fe2:	e00b      	b.n	8007ffc <UART_SetConfig+0x164>
 8007fe4:	2300      	movs	r3, #0
 8007fe6:	77fb      	strb	r3, [r7, #31]
 8007fe8:	e061      	b.n	80080ae <UART_SetConfig+0x216>
 8007fea:	2302      	movs	r3, #2
 8007fec:	77fb      	strb	r3, [r7, #31]
 8007fee:	e05e      	b.n	80080ae <UART_SetConfig+0x216>
 8007ff0:	2304      	movs	r3, #4
 8007ff2:	77fb      	strb	r3, [r7, #31]
 8007ff4:	e05b      	b.n	80080ae <UART_SetConfig+0x216>
 8007ff6:	2308      	movs	r3, #8
 8007ff8:	77fb      	strb	r3, [r7, #31]
 8007ffa:	e058      	b.n	80080ae <UART_SetConfig+0x216>
 8007ffc:	2310      	movs	r3, #16
 8007ffe:	77fb      	strb	r3, [r7, #31]
 8008000:	e055      	b.n	80080ae <UART_SetConfig+0x216>
 8008002:	687b      	ldr	r3, [r7, #4]
 8008004:	681b      	ldr	r3, [r3, #0]
 8008006:	4a6e      	ldr	r2, [pc, #440]	@ (80081c0 <UART_SetConfig+0x328>)
 8008008:	4293      	cmp	r3, r2
 800800a:	d124      	bne.n	8008056 <UART_SetConfig+0x1be>
 800800c:	4b69      	ldr	r3, [pc, #420]	@ (80081b4 <UART_SetConfig+0x31c>)
 800800e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008010:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8008014:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008018:	d011      	beq.n	800803e <UART_SetConfig+0x1a6>
 800801a:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800801e:	d817      	bhi.n	8008050 <UART_SetConfig+0x1b8>
 8008020:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8008024:	d011      	beq.n	800804a <UART_SetConfig+0x1b2>
 8008026:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800802a:	d811      	bhi.n	8008050 <UART_SetConfig+0x1b8>
 800802c:	2b00      	cmp	r3, #0
 800802e:	d003      	beq.n	8008038 <UART_SetConfig+0x1a0>
 8008030:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008034:	d006      	beq.n	8008044 <UART_SetConfig+0x1ac>
 8008036:	e00b      	b.n	8008050 <UART_SetConfig+0x1b8>
 8008038:	2300      	movs	r3, #0
 800803a:	77fb      	strb	r3, [r7, #31]
 800803c:	e037      	b.n	80080ae <UART_SetConfig+0x216>
 800803e:	2302      	movs	r3, #2
 8008040:	77fb      	strb	r3, [r7, #31]
 8008042:	e034      	b.n	80080ae <UART_SetConfig+0x216>
 8008044:	2304      	movs	r3, #4
 8008046:	77fb      	strb	r3, [r7, #31]
 8008048:	e031      	b.n	80080ae <UART_SetConfig+0x216>
 800804a:	2308      	movs	r3, #8
 800804c:	77fb      	strb	r3, [r7, #31]
 800804e:	e02e      	b.n	80080ae <UART_SetConfig+0x216>
 8008050:	2310      	movs	r3, #16
 8008052:	77fb      	strb	r3, [r7, #31]
 8008054:	e02b      	b.n	80080ae <UART_SetConfig+0x216>
 8008056:	687b      	ldr	r3, [r7, #4]
 8008058:	681b      	ldr	r3, [r3, #0]
 800805a:	4a5a      	ldr	r2, [pc, #360]	@ (80081c4 <UART_SetConfig+0x32c>)
 800805c:	4293      	cmp	r3, r2
 800805e:	d124      	bne.n	80080aa <UART_SetConfig+0x212>
 8008060:	4b54      	ldr	r3, [pc, #336]	@ (80081b4 <UART_SetConfig+0x31c>)
 8008062:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008064:	f403 0340 	and.w	r3, r3, #12582912	@ 0xc00000
 8008068:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800806c:	d011      	beq.n	8008092 <UART_SetConfig+0x1fa>
 800806e:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8008072:	d817      	bhi.n	80080a4 <UART_SetConfig+0x20c>
 8008074:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8008078:	d011      	beq.n	800809e <UART_SetConfig+0x206>
 800807a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800807e:	d811      	bhi.n	80080a4 <UART_SetConfig+0x20c>
 8008080:	2b00      	cmp	r3, #0
 8008082:	d003      	beq.n	800808c <UART_SetConfig+0x1f4>
 8008084:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8008088:	d006      	beq.n	8008098 <UART_SetConfig+0x200>
 800808a:	e00b      	b.n	80080a4 <UART_SetConfig+0x20c>
 800808c:	2300      	movs	r3, #0
 800808e:	77fb      	strb	r3, [r7, #31]
 8008090:	e00d      	b.n	80080ae <UART_SetConfig+0x216>
 8008092:	2302      	movs	r3, #2
 8008094:	77fb      	strb	r3, [r7, #31]
 8008096:	e00a      	b.n	80080ae <UART_SetConfig+0x216>
 8008098:	2304      	movs	r3, #4
 800809a:	77fb      	strb	r3, [r7, #31]
 800809c:	e007      	b.n	80080ae <UART_SetConfig+0x216>
 800809e:	2308      	movs	r3, #8
 80080a0:	77fb      	strb	r3, [r7, #31]
 80080a2:	e004      	b.n	80080ae <UART_SetConfig+0x216>
 80080a4:	2310      	movs	r3, #16
 80080a6:	77fb      	strb	r3, [r7, #31]
 80080a8:	e001      	b.n	80080ae <UART_SetConfig+0x216>
 80080aa:	2310      	movs	r3, #16
 80080ac:	77fb      	strb	r3, [r7, #31]
 80080ae:	687b      	ldr	r3, [r7, #4]
 80080b0:	69db      	ldr	r3, [r3, #28]
 80080b2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80080b6:	d15b      	bne.n	8008170 <UART_SetConfig+0x2d8>
 80080b8:	7ffb      	ldrb	r3, [r7, #31]
 80080ba:	2b08      	cmp	r3, #8
 80080bc:	d827      	bhi.n	800810e <UART_SetConfig+0x276>
 80080be:	a201      	add	r2, pc, #4	@ (adr r2, 80080c4 <UART_SetConfig+0x22c>)
 80080c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80080c4:	080080e9 	.word	0x080080e9
 80080c8:	080080f1 	.word	0x080080f1
 80080cc:	080080f9 	.word	0x080080f9
 80080d0:	0800810f 	.word	0x0800810f
 80080d4:	080080ff 	.word	0x080080ff
 80080d8:	0800810f 	.word	0x0800810f
 80080dc:	0800810f 	.word	0x0800810f
 80080e0:	0800810f 	.word	0x0800810f
 80080e4:	08008107 	.word	0x08008107
 80080e8:	f7fe fb42 	bl	8006770 <HAL_RCC_GetPCLK1Freq>
 80080ec:	61b8      	str	r0, [r7, #24]
 80080ee:	e013      	b.n	8008118 <UART_SetConfig+0x280>
 80080f0:	f7fe fb60 	bl	80067b4 <HAL_RCC_GetPCLK2Freq>
 80080f4:	61b8      	str	r0, [r7, #24]
 80080f6:	e00f      	b.n	8008118 <UART_SetConfig+0x280>
 80080f8:	4b33      	ldr	r3, [pc, #204]	@ (80081c8 <UART_SetConfig+0x330>)
 80080fa:	61bb      	str	r3, [r7, #24]
 80080fc:	e00c      	b.n	8008118 <UART_SetConfig+0x280>
 80080fe:	f7fe fad7 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 8008102:	61b8      	str	r0, [r7, #24]
 8008104:	e008      	b.n	8008118 <UART_SetConfig+0x280>
 8008106:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800810a:	61bb      	str	r3, [r7, #24]
 800810c:	e004      	b.n	8008118 <UART_SetConfig+0x280>
 800810e:	2300      	movs	r3, #0
 8008110:	61bb      	str	r3, [r7, #24]
 8008112:	2301      	movs	r3, #1
 8008114:	77bb      	strb	r3, [r7, #30]
 8008116:	bf00      	nop
 8008118:	69bb      	ldr	r3, [r7, #24]
 800811a:	2b00      	cmp	r3, #0
 800811c:	f000 8082 	beq.w	8008224 <UART_SetConfig+0x38c>
 8008120:	69bb      	ldr	r3, [r7, #24]
 8008122:	005a      	lsls	r2, r3, #1
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	685b      	ldr	r3, [r3, #4]
 8008128:	085b      	lsrs	r3, r3, #1
 800812a:	441a      	add	r2, r3
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	685b      	ldr	r3, [r3, #4]
 8008130:	fbb2 f3f3 	udiv	r3, r2, r3
 8008134:	613b      	str	r3, [r7, #16]
 8008136:	693b      	ldr	r3, [r7, #16]
 8008138:	2b0f      	cmp	r3, #15
 800813a:	d916      	bls.n	800816a <UART_SetConfig+0x2d2>
 800813c:	693b      	ldr	r3, [r7, #16]
 800813e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008142:	d212      	bcs.n	800816a <UART_SetConfig+0x2d2>
 8008144:	693b      	ldr	r3, [r7, #16]
 8008146:	b29b      	uxth	r3, r3
 8008148:	f023 030f 	bic.w	r3, r3, #15
 800814c:	81fb      	strh	r3, [r7, #14]
 800814e:	693b      	ldr	r3, [r7, #16]
 8008150:	085b      	lsrs	r3, r3, #1
 8008152:	b29b      	uxth	r3, r3
 8008154:	f003 0307 	and.w	r3, r3, #7
 8008158:	b29a      	uxth	r2, r3
 800815a:	89fb      	ldrh	r3, [r7, #14]
 800815c:	4313      	orrs	r3, r2
 800815e:	81fb      	strh	r3, [r7, #14]
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	89fa      	ldrh	r2, [r7, #14]
 8008166:	60da      	str	r2, [r3, #12]
 8008168:	e05c      	b.n	8008224 <UART_SetConfig+0x38c>
 800816a:	2301      	movs	r3, #1
 800816c:	77bb      	strb	r3, [r7, #30]
 800816e:	e059      	b.n	8008224 <UART_SetConfig+0x38c>
 8008170:	7ffb      	ldrb	r3, [r7, #31]
 8008172:	2b08      	cmp	r3, #8
 8008174:	d835      	bhi.n	80081e2 <UART_SetConfig+0x34a>
 8008176:	a201      	add	r2, pc, #4	@ (adr r2, 800817c <UART_SetConfig+0x2e4>)
 8008178:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800817c:	080081a1 	.word	0x080081a1
 8008180:	080081a9 	.word	0x080081a9
 8008184:	080081cd 	.word	0x080081cd
 8008188:	080081e3 	.word	0x080081e3
 800818c:	080081d3 	.word	0x080081d3
 8008190:	080081e3 	.word	0x080081e3
 8008194:	080081e3 	.word	0x080081e3
 8008198:	080081e3 	.word	0x080081e3
 800819c:	080081db 	.word	0x080081db
 80081a0:	f7fe fae6 	bl	8006770 <HAL_RCC_GetPCLK1Freq>
 80081a4:	61b8      	str	r0, [r7, #24]
 80081a6:	e021      	b.n	80081ec <UART_SetConfig+0x354>
 80081a8:	f7fe fb04 	bl	80067b4 <HAL_RCC_GetPCLK2Freq>
 80081ac:	61b8      	str	r0, [r7, #24]
 80081ae:	e01d      	b.n	80081ec <UART_SetConfig+0x354>
 80081b0:	40013800 	.word	0x40013800
 80081b4:	40021000 	.word	0x40021000
 80081b8:	40004400 	.word	0x40004400
 80081bc:	40004800 	.word	0x40004800
 80081c0:	40004c00 	.word	0x40004c00
 80081c4:	40005000 	.word	0x40005000
 80081c8:	007a1200 	.word	0x007a1200
 80081cc:	4b1b      	ldr	r3, [pc, #108]	@ (800823c <UART_SetConfig+0x3a4>)
 80081ce:	61bb      	str	r3, [r7, #24]
 80081d0:	e00c      	b.n	80081ec <UART_SetConfig+0x354>
 80081d2:	f7fe fa6d 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 80081d6:	61b8      	str	r0, [r7, #24]
 80081d8:	e008      	b.n	80081ec <UART_SetConfig+0x354>
 80081da:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80081de:	61bb      	str	r3, [r7, #24]
 80081e0:	e004      	b.n	80081ec <UART_SetConfig+0x354>
 80081e2:	2300      	movs	r3, #0
 80081e4:	61bb      	str	r3, [r7, #24]
 80081e6:	2301      	movs	r3, #1
 80081e8:	77bb      	strb	r3, [r7, #30]
 80081ea:	bf00      	nop
 80081ec:	69bb      	ldr	r3, [r7, #24]
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	d018      	beq.n	8008224 <UART_SetConfig+0x38c>
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	685b      	ldr	r3, [r3, #4]
 80081f6:	085a      	lsrs	r2, r3, #1
 80081f8:	69bb      	ldr	r3, [r7, #24]
 80081fa:	441a      	add	r2, r3
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	685b      	ldr	r3, [r3, #4]
 8008200:	fbb2 f3f3 	udiv	r3, r2, r3
 8008204:	613b      	str	r3, [r7, #16]
 8008206:	693b      	ldr	r3, [r7, #16]
 8008208:	2b0f      	cmp	r3, #15
 800820a:	d909      	bls.n	8008220 <UART_SetConfig+0x388>
 800820c:	693b      	ldr	r3, [r7, #16]
 800820e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008212:	d205      	bcs.n	8008220 <UART_SetConfig+0x388>
 8008214:	693b      	ldr	r3, [r7, #16]
 8008216:	b29a      	uxth	r2, r3
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	60da      	str	r2, [r3, #12]
 800821e:	e001      	b.n	8008224 <UART_SetConfig+0x38c>
 8008220:	2301      	movs	r3, #1
 8008222:	77bb      	strb	r3, [r7, #30]
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	2200      	movs	r2, #0
 8008228:	669a      	str	r2, [r3, #104]	@ 0x68
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	2200      	movs	r2, #0
 800822e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008230:	7fbb      	ldrb	r3, [r7, #30]
 8008232:	4618      	mov	r0, r3
 8008234:	3720      	adds	r7, #32
 8008236:	46bd      	mov	sp, r7
 8008238:	bd80      	pop	{r7, pc}
 800823a:	bf00      	nop
 800823c:	007a1200 	.word	0x007a1200

08008240 <UART_AdvFeatureConfig>:
 8008240:	b480      	push	{r7}
 8008242:	b083      	sub	sp, #12
 8008244:	af00      	add	r7, sp, #0
 8008246:	6078      	str	r0, [r7, #4]
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800824c:	f003 0308 	and.w	r3, r3, #8
 8008250:	2b00      	cmp	r3, #0
 8008252:	d00a      	beq.n	800826a <UART_AdvFeatureConfig+0x2a>
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	681b      	ldr	r3, [r3, #0]
 8008258:	685b      	ldr	r3, [r3, #4]
 800825a:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	681b      	ldr	r3, [r3, #0]
 8008266:	430a      	orrs	r2, r1
 8008268:	605a      	str	r2, [r3, #4]
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800826e:	f003 0301 	and.w	r3, r3, #1
 8008272:	2b00      	cmp	r3, #0
 8008274:	d00a      	beq.n	800828c <UART_AdvFeatureConfig+0x4c>
 8008276:	687b      	ldr	r3, [r7, #4]
 8008278:	681b      	ldr	r3, [r3, #0]
 800827a:	685b      	ldr	r3, [r3, #4]
 800827c:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8008284:	687b      	ldr	r3, [r7, #4]
 8008286:	681b      	ldr	r3, [r3, #0]
 8008288:	430a      	orrs	r2, r1
 800828a:	605a      	str	r2, [r3, #4]
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008290:	f003 0302 	and.w	r3, r3, #2
 8008294:	2b00      	cmp	r3, #0
 8008296:	d00a      	beq.n	80082ae <UART_AdvFeatureConfig+0x6e>
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	685b      	ldr	r3, [r3, #4]
 800829e:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	681b      	ldr	r3, [r3, #0]
 80082aa:	430a      	orrs	r2, r1
 80082ac:	605a      	str	r2, [r3, #4]
 80082ae:	687b      	ldr	r3, [r7, #4]
 80082b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80082b2:	f003 0304 	and.w	r3, r3, #4
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d00a      	beq.n	80082d0 <UART_AdvFeatureConfig+0x90>
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	685b      	ldr	r3, [r3, #4]
 80082c0:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 80082c4:	687b      	ldr	r3, [r7, #4]
 80082c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	681b      	ldr	r3, [r3, #0]
 80082cc:	430a      	orrs	r2, r1
 80082ce:	605a      	str	r2, [r3, #4]
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80082d4:	f003 0310 	and.w	r3, r3, #16
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d00a      	beq.n	80082f2 <UART_AdvFeatureConfig+0xb2>
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	689b      	ldr	r3, [r3, #8]
 80082e2:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	681b      	ldr	r3, [r3, #0]
 80082ee:	430a      	orrs	r2, r1
 80082f0:	609a      	str	r2, [r3, #8]
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80082f6:	f003 0320 	and.w	r3, r3, #32
 80082fa:	2b00      	cmp	r3, #0
 80082fc:	d00a      	beq.n	8008314 <UART_AdvFeatureConfig+0xd4>
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	681b      	ldr	r3, [r3, #0]
 8008302:	689b      	ldr	r3, [r3, #8]
 8008304:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8008308:	687b      	ldr	r3, [r7, #4]
 800830a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	430a      	orrs	r2, r1
 8008312:	609a      	str	r2, [r3, #8]
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008318:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800831c:	2b00      	cmp	r3, #0
 800831e:	d01a      	beq.n	8008356 <UART_AdvFeatureConfig+0x116>
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	681b      	ldr	r3, [r3, #0]
 8008324:	685b      	ldr	r3, [r3, #4]
 8008326:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800832e:	687b      	ldr	r3, [r7, #4]
 8008330:	681b      	ldr	r3, [r3, #0]
 8008332:	430a      	orrs	r2, r1
 8008334:	605a      	str	r2, [r3, #4]
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800833a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800833e:	d10a      	bne.n	8008356 <UART_AdvFeatureConfig+0x116>
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	681b      	ldr	r3, [r3, #0]
 8008344:	685b      	ldr	r3, [r3, #4]
 8008346:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800834e:	687b      	ldr	r3, [r7, #4]
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	430a      	orrs	r2, r1
 8008354:	605a      	str	r2, [r3, #4]
 8008356:	687b      	ldr	r3, [r7, #4]
 8008358:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800835a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800835e:	2b00      	cmp	r3, #0
 8008360:	d00a      	beq.n	8008378 <UART_AdvFeatureConfig+0x138>
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	685b      	ldr	r3, [r3, #4]
 8008368:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	681b      	ldr	r3, [r3, #0]
 8008374:	430a      	orrs	r2, r1
 8008376:	605a      	str	r2, [r3, #4]
 8008378:	bf00      	nop
 800837a:	370c      	adds	r7, #12
 800837c:	46bd      	mov	sp, r7
 800837e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008382:	4770      	bx	lr

08008384 <UART_CheckIdleState>:
 8008384:	b580      	push	{r7, lr}
 8008386:	b098      	sub	sp, #96	@ 0x60
 8008388:	af02      	add	r7, sp, #8
 800838a:	6078      	str	r0, [r7, #4]
 800838c:	687b      	ldr	r3, [r7, #4]
 800838e:	2200      	movs	r2, #0
 8008390:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008394:	f7fa fa4e 	bl	8002834 <HAL_GetTick>
 8008398:	6578      	str	r0, [r7, #84]	@ 0x54
 800839a:	687b      	ldr	r3, [r7, #4]
 800839c:	681b      	ldr	r3, [r3, #0]
 800839e:	681b      	ldr	r3, [r3, #0]
 80083a0:	f003 0308 	and.w	r3, r3, #8
 80083a4:	2b08      	cmp	r3, #8
 80083a6:	d12e      	bne.n	8008406 <UART_CheckIdleState+0x82>
 80083a8:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80083ac:	9300      	str	r3, [sp, #0]
 80083ae:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80083b0:	2200      	movs	r2, #0
 80083b2:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80083b6:	6878      	ldr	r0, [r7, #4]
 80083b8:	f000 f88c 	bl	80084d4 <UART_WaitOnFlagUntilTimeout>
 80083bc:	4603      	mov	r3, r0
 80083be:	2b00      	cmp	r3, #0
 80083c0:	d021      	beq.n	8008406 <UART_CheckIdleState+0x82>
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80083c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80083ca:	e853 3f00 	ldrex	r3, [r3]
 80083ce:	637b      	str	r3, [r7, #52]	@ 0x34
 80083d0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80083d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80083d6:	653b      	str	r3, [r7, #80]	@ 0x50
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	681b      	ldr	r3, [r3, #0]
 80083dc:	461a      	mov	r2, r3
 80083de:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80083e0:	647b      	str	r3, [r7, #68]	@ 0x44
 80083e2:	643a      	str	r2, [r7, #64]	@ 0x40
 80083e4:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80083e6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80083e8:	e841 2300 	strex	r3, r2, [r1]
 80083ec:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80083ee:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80083f0:	2b00      	cmp	r3, #0
 80083f2:	d1e6      	bne.n	80083c2 <UART_CheckIdleState+0x3e>
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	2220      	movs	r2, #32
 80083f8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	2200      	movs	r2, #0
 80083fe:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8008402:	2303      	movs	r3, #3
 8008404:	e062      	b.n	80084cc <UART_CheckIdleState+0x148>
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	681b      	ldr	r3, [r3, #0]
 800840c:	f003 0304 	and.w	r3, r3, #4
 8008410:	2b04      	cmp	r3, #4
 8008412:	d149      	bne.n	80084a8 <UART_CheckIdleState+0x124>
 8008414:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008418:	9300      	str	r3, [sp, #0]
 800841a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800841c:	2200      	movs	r2, #0
 800841e:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8008422:	6878      	ldr	r0, [r7, #4]
 8008424:	f000 f856 	bl	80084d4 <UART_WaitOnFlagUntilTimeout>
 8008428:	4603      	mov	r3, r0
 800842a:	2b00      	cmp	r3, #0
 800842c:	d03c      	beq.n	80084a8 <UART_CheckIdleState+0x124>
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	681b      	ldr	r3, [r3, #0]
 8008432:	627b      	str	r3, [r7, #36]	@ 0x24
 8008434:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008436:	e853 3f00 	ldrex	r3, [r3]
 800843a:	623b      	str	r3, [r7, #32]
 800843c:	6a3b      	ldr	r3, [r7, #32]
 800843e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008442:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	461a      	mov	r2, r3
 800844a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800844c:	633b      	str	r3, [r7, #48]	@ 0x30
 800844e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8008450:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008452:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008454:	e841 2300 	strex	r3, r2, [r1]
 8008458:	62bb      	str	r3, [r7, #40]	@ 0x28
 800845a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800845c:	2b00      	cmp	r3, #0
 800845e:	d1e6      	bne.n	800842e <UART_CheckIdleState+0xaa>
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	681b      	ldr	r3, [r3, #0]
 8008464:	3308      	adds	r3, #8
 8008466:	613b      	str	r3, [r7, #16]
 8008468:	693b      	ldr	r3, [r7, #16]
 800846a:	e853 3f00 	ldrex	r3, [r3]
 800846e:	60fb      	str	r3, [r7, #12]
 8008470:	68fb      	ldr	r3, [r7, #12]
 8008472:	f023 0301 	bic.w	r3, r3, #1
 8008476:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	3308      	adds	r3, #8
 800847e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008480:	61fa      	str	r2, [r7, #28]
 8008482:	61bb      	str	r3, [r7, #24]
 8008484:	69b9      	ldr	r1, [r7, #24]
 8008486:	69fa      	ldr	r2, [r7, #28]
 8008488:	e841 2300 	strex	r3, r2, [r1]
 800848c:	617b      	str	r3, [r7, #20]
 800848e:	697b      	ldr	r3, [r7, #20]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d1e5      	bne.n	8008460 <UART_CheckIdleState+0xdc>
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	2220      	movs	r2, #32
 8008498:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	2200      	movs	r2, #0
 80084a0:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80084a4:	2303      	movs	r3, #3
 80084a6:	e011      	b.n	80084cc <UART_CheckIdleState+0x148>
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	2220      	movs	r2, #32
 80084ac:	67da      	str	r2, [r3, #124]	@ 0x7c
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	2220      	movs	r2, #32
 80084b2:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	2200      	movs	r2, #0
 80084ba:	661a      	str	r2, [r3, #96]	@ 0x60
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	2200      	movs	r2, #0
 80084c0:	665a      	str	r2, [r3, #100]	@ 0x64
 80084c2:	687b      	ldr	r3, [r7, #4]
 80084c4:	2200      	movs	r2, #0
 80084c6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80084ca:	2300      	movs	r3, #0
 80084cc:	4618      	mov	r0, r3
 80084ce:	3758      	adds	r7, #88	@ 0x58
 80084d0:	46bd      	mov	sp, r7
 80084d2:	bd80      	pop	{r7, pc}

080084d4 <UART_WaitOnFlagUntilTimeout>:
 80084d4:	b580      	push	{r7, lr}
 80084d6:	b084      	sub	sp, #16
 80084d8:	af00      	add	r7, sp, #0
 80084da:	60f8      	str	r0, [r7, #12]
 80084dc:	60b9      	str	r1, [r7, #8]
 80084de:	603b      	str	r3, [r7, #0]
 80084e0:	4613      	mov	r3, r2
 80084e2:	71fb      	strb	r3, [r7, #7]
 80084e4:	e04f      	b.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 80084e6:	69bb      	ldr	r3, [r7, #24]
 80084e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80084ec:	d04b      	beq.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 80084ee:	f7fa f9a1 	bl	8002834 <HAL_GetTick>
 80084f2:	4602      	mov	r2, r0
 80084f4:	683b      	ldr	r3, [r7, #0]
 80084f6:	1ad3      	subs	r3, r2, r3
 80084f8:	69ba      	ldr	r2, [r7, #24]
 80084fa:	429a      	cmp	r2, r3
 80084fc:	d302      	bcc.n	8008504 <UART_WaitOnFlagUntilTimeout+0x30>
 80084fe:	69bb      	ldr	r3, [r7, #24]
 8008500:	2b00      	cmp	r3, #0
 8008502:	d101      	bne.n	8008508 <UART_WaitOnFlagUntilTimeout+0x34>
 8008504:	2303      	movs	r3, #3
 8008506:	e04e      	b.n	80085a6 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008508:	68fb      	ldr	r3, [r7, #12]
 800850a:	681b      	ldr	r3, [r3, #0]
 800850c:	681b      	ldr	r3, [r3, #0]
 800850e:	f003 0304 	and.w	r3, r3, #4
 8008512:	2b00      	cmp	r3, #0
 8008514:	d037      	beq.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008516:	68bb      	ldr	r3, [r7, #8]
 8008518:	2b80      	cmp	r3, #128	@ 0x80
 800851a:	d034      	beq.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 800851c:	68bb      	ldr	r3, [r7, #8]
 800851e:	2b40      	cmp	r3, #64	@ 0x40
 8008520:	d031      	beq.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008522:	68fb      	ldr	r3, [r7, #12]
 8008524:	681b      	ldr	r3, [r3, #0]
 8008526:	69db      	ldr	r3, [r3, #28]
 8008528:	f003 0308 	and.w	r3, r3, #8
 800852c:	2b08      	cmp	r3, #8
 800852e:	d110      	bne.n	8008552 <UART_WaitOnFlagUntilTimeout+0x7e>
 8008530:	68fb      	ldr	r3, [r7, #12]
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	2208      	movs	r2, #8
 8008536:	621a      	str	r2, [r3, #32]
 8008538:	68f8      	ldr	r0, [r7, #12]
 800853a:	f000 f838 	bl	80085ae <UART_EndRxTransfer>
 800853e:	68fb      	ldr	r3, [r7, #12]
 8008540:	2208      	movs	r2, #8
 8008542:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008546:	68fb      	ldr	r3, [r7, #12]
 8008548:	2200      	movs	r2, #0
 800854a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800854e:	2301      	movs	r3, #1
 8008550:	e029      	b.n	80085a6 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008552:	68fb      	ldr	r3, [r7, #12]
 8008554:	681b      	ldr	r3, [r3, #0]
 8008556:	69db      	ldr	r3, [r3, #28]
 8008558:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800855c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008560:	d111      	bne.n	8008586 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008562:	68fb      	ldr	r3, [r7, #12]
 8008564:	681b      	ldr	r3, [r3, #0]
 8008566:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800856a:	621a      	str	r2, [r3, #32]
 800856c:	68f8      	ldr	r0, [r7, #12]
 800856e:	f000 f81e 	bl	80085ae <UART_EndRxTransfer>
 8008572:	68fb      	ldr	r3, [r7, #12]
 8008574:	2220      	movs	r2, #32
 8008576:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800857a:	68fb      	ldr	r3, [r7, #12]
 800857c:	2200      	movs	r2, #0
 800857e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8008582:	2303      	movs	r3, #3
 8008584:	e00f      	b.n	80085a6 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008586:	68fb      	ldr	r3, [r7, #12]
 8008588:	681b      	ldr	r3, [r3, #0]
 800858a:	69da      	ldr	r2, [r3, #28]
 800858c:	68bb      	ldr	r3, [r7, #8]
 800858e:	4013      	ands	r3, r2
 8008590:	68ba      	ldr	r2, [r7, #8]
 8008592:	429a      	cmp	r2, r3
 8008594:	bf0c      	ite	eq
 8008596:	2301      	moveq	r3, #1
 8008598:	2300      	movne	r3, #0
 800859a:	b2db      	uxtb	r3, r3
 800859c:	461a      	mov	r2, r3
 800859e:	79fb      	ldrb	r3, [r7, #7]
 80085a0:	429a      	cmp	r2, r3
 80085a2:	d0a0      	beq.n	80084e6 <UART_WaitOnFlagUntilTimeout+0x12>
 80085a4:	2300      	movs	r3, #0
 80085a6:	4618      	mov	r0, r3
 80085a8:	3710      	adds	r7, #16
 80085aa:	46bd      	mov	sp, r7
 80085ac:	bd80      	pop	{r7, pc}

080085ae <UART_EndRxTransfer>:
 80085ae:	b480      	push	{r7}
 80085b0:	b095      	sub	sp, #84	@ 0x54
 80085b2:	af00      	add	r7, sp, #0
 80085b4:	6078      	str	r0, [r7, #4]
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	637b      	str	r3, [r7, #52]	@ 0x34
 80085bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80085be:	e853 3f00 	ldrex	r3, [r3]
 80085c2:	633b      	str	r3, [r7, #48]	@ 0x30
 80085c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80085c6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80085ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	461a      	mov	r2, r3
 80085d2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80085d4:	643b      	str	r3, [r7, #64]	@ 0x40
 80085d6:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80085d8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80085da:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80085dc:	e841 2300 	strex	r3, r2, [r1]
 80085e0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80085e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80085e4:	2b00      	cmp	r3, #0
 80085e6:	d1e6      	bne.n	80085b6 <UART_EndRxTransfer+0x8>
 80085e8:	687b      	ldr	r3, [r7, #4]
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	3308      	adds	r3, #8
 80085ee:	623b      	str	r3, [r7, #32]
 80085f0:	6a3b      	ldr	r3, [r7, #32]
 80085f2:	e853 3f00 	ldrex	r3, [r3]
 80085f6:	61fb      	str	r3, [r7, #28]
 80085f8:	69fb      	ldr	r3, [r7, #28]
 80085fa:	f023 0301 	bic.w	r3, r3, #1
 80085fe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	681b      	ldr	r3, [r3, #0]
 8008604:	3308      	adds	r3, #8
 8008606:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008608:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800860a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800860c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800860e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008610:	e841 2300 	strex	r3, r2, [r1]
 8008614:	627b      	str	r3, [r7, #36]	@ 0x24
 8008616:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008618:	2b00      	cmp	r3, #0
 800861a:	d1e5      	bne.n	80085e8 <UART_EndRxTransfer+0x3a>
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008620:	2b01      	cmp	r3, #1
 8008622:	d118      	bne.n	8008656 <UART_EndRxTransfer+0xa8>
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	681b      	ldr	r3, [r3, #0]
 8008628:	60fb      	str	r3, [r7, #12]
 800862a:	68fb      	ldr	r3, [r7, #12]
 800862c:	e853 3f00 	ldrex	r3, [r3]
 8008630:	60bb      	str	r3, [r7, #8]
 8008632:	68bb      	ldr	r3, [r7, #8]
 8008634:	f023 0310 	bic.w	r3, r3, #16
 8008638:	647b      	str	r3, [r7, #68]	@ 0x44
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	461a      	mov	r2, r3
 8008640:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8008642:	61bb      	str	r3, [r7, #24]
 8008644:	617a      	str	r2, [r7, #20]
 8008646:	6979      	ldr	r1, [r7, #20]
 8008648:	69ba      	ldr	r2, [r7, #24]
 800864a:	e841 2300 	strex	r3, r2, [r1]
 800864e:	613b      	str	r3, [r7, #16]
 8008650:	693b      	ldr	r3, [r7, #16]
 8008652:	2b00      	cmp	r3, #0
 8008654:	d1e6      	bne.n	8008624 <UART_EndRxTransfer+0x76>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	2220      	movs	r2, #32
 800865a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800865e:	687b      	ldr	r3, [r7, #4]
 8008660:	2200      	movs	r2, #0
 8008662:	661a      	str	r2, [r3, #96]	@ 0x60
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	2200      	movs	r2, #0
 8008668:	669a      	str	r2, [r3, #104]	@ 0x68
 800866a:	bf00      	nop
 800866c:	3754      	adds	r7, #84	@ 0x54
 800866e:	46bd      	mov	sp, r7
 8008670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008674:	4770      	bx	lr

08008676 <USB_EnableGlobalInt>:
 8008676:	b480      	push	{r7}
 8008678:	b085      	sub	sp, #20
 800867a:	af00      	add	r7, sp, #0
 800867c:	6078      	str	r0, [r7, #4]
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	2200      	movs	r2, #0
 8008682:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8008686:	f44f 433f 	mov.w	r3, #48896	@ 0xbf00
 800868a:	60fb      	str	r3, [r7, #12]
 800868c:	68fb      	ldr	r3, [r7, #12]
 800868e:	b29a      	uxth	r2, r3
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8008696:	2300      	movs	r3, #0
 8008698:	4618      	mov	r0, r3
 800869a:	3714      	adds	r7, #20
 800869c:	46bd      	mov	sp, r7
 800869e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086a2:	4770      	bx	lr

080086a4 <USB_DisableGlobalInt>:
 80086a4:	b480      	push	{r7}
 80086a6:	b085      	sub	sp, #20
 80086a8:	af00      	add	r7, sp, #0
 80086aa:	6078      	str	r0, [r7, #4]
 80086ac:	f44f 433f 	mov.w	r3, #48896	@ 0xbf00
 80086b0:	60fb      	str	r3, [r7, #12]
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 80086b8:	b29a      	uxth	r2, r3
 80086ba:	68fb      	ldr	r3, [r7, #12]
 80086bc:	b29b      	uxth	r3, r3
 80086be:	43db      	mvns	r3, r3
 80086c0:	b29b      	uxth	r3, r3
 80086c2:	4013      	ands	r3, r2
 80086c4:	b29a      	uxth	r2, r3
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 80086cc:	2300      	movs	r3, #0
 80086ce:	4618      	mov	r0, r3
 80086d0:	3714      	adds	r7, #20
 80086d2:	46bd      	mov	sp, r7
 80086d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d8:	4770      	bx	lr

080086da <USB_DevInit>:
 80086da:	b480      	push	{r7}
 80086dc:	b085      	sub	sp, #20
 80086de:	af00      	add	r7, sp, #0
 80086e0:	60f8      	str	r0, [r7, #12]
 80086e2:	1d3b      	adds	r3, r7, #4
 80086e4:	e883 0006 	stmia.w	r3, {r1, r2}
 80086e8:	68fb      	ldr	r3, [r7, #12]
 80086ea:	2201      	movs	r2, #1
 80086ec:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	2200      	movs	r2, #0
 80086f4:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 80086f8:	68fb      	ldr	r3, [r7, #12]
 80086fa:	2200      	movs	r2, #0
 80086fc:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	2200      	movs	r2, #0
 8008704:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8008708:	2300      	movs	r3, #0
 800870a:	4618      	mov	r0, r3
 800870c:	3714      	adds	r7, #20
 800870e:	46bd      	mov	sp, r7
 8008710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008714:	4770      	bx	lr
	...

08008718 <USB_ActivateEndpoint>:
 8008718:	b480      	push	{r7}
 800871a:	b09d      	sub	sp, #116	@ 0x74
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	6039      	str	r1, [r7, #0]
 8008722:	2300      	movs	r3, #0
 8008724:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 8008728:	687a      	ldr	r2, [r7, #4]
 800872a:	683b      	ldr	r3, [r7, #0]
 800872c:	781b      	ldrb	r3, [r3, #0]
 800872e:	009b      	lsls	r3, r3, #2
 8008730:	4413      	add	r3, r2
 8008732:	881b      	ldrh	r3, [r3, #0]
 8008734:	b29b      	uxth	r3, r3
 8008736:	f423 43ec 	bic.w	r3, r3, #30208	@ 0x7600
 800873a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800873e:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8008742:	683b      	ldr	r3, [r7, #0]
 8008744:	78db      	ldrb	r3, [r3, #3]
 8008746:	2b03      	cmp	r3, #3
 8008748:	d81f      	bhi.n	800878a <USB_ActivateEndpoint+0x72>
 800874a:	a201      	add	r2, pc, #4	@ (adr r2, 8008750 <USB_ActivateEndpoint+0x38>)
 800874c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008750:	08008761 	.word	0x08008761
 8008754:	0800877d 	.word	0x0800877d
 8008758:	08008793 	.word	0x08008793
 800875c:	0800876f 	.word	0x0800876f
 8008760:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8008764:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8008768:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800876c:	e012      	b.n	8008794 <USB_ActivateEndpoint+0x7c>
 800876e:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8008772:	f443 63c0 	orr.w	r3, r3, #1536	@ 0x600
 8008776:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800877a:	e00b      	b.n	8008794 <USB_ActivateEndpoint+0x7c>
 800877c:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8008780:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8008784:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8008788:	e004      	b.n	8008794 <USB_ActivateEndpoint+0x7c>
 800878a:	2301      	movs	r3, #1
 800878c:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 8008790:	e000      	b.n	8008794 <USB_ActivateEndpoint+0x7c>
 8008792:	bf00      	nop
 8008794:	687a      	ldr	r2, [r7, #4]
 8008796:	683b      	ldr	r3, [r7, #0]
 8008798:	781b      	ldrb	r3, [r3, #0]
 800879a:	009b      	lsls	r3, r3, #2
 800879c:	441a      	add	r2, r3
 800879e:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 80087a2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80087a6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80087aa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80087ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80087b2:	b29b      	uxth	r3, r3
 80087b4:	8013      	strh	r3, [r2, #0]
 80087b6:	687a      	ldr	r2, [r7, #4]
 80087b8:	683b      	ldr	r3, [r7, #0]
 80087ba:	781b      	ldrb	r3, [r3, #0]
 80087bc:	009b      	lsls	r3, r3, #2
 80087be:	4413      	add	r3, r2
 80087c0:	881b      	ldrh	r3, [r3, #0]
 80087c2:	b29b      	uxth	r3, r3
 80087c4:	b21b      	sxth	r3, r3
 80087c6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80087ca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80087ce:	b21a      	sxth	r2, r3
 80087d0:	683b      	ldr	r3, [r7, #0]
 80087d2:	781b      	ldrb	r3, [r3, #0]
 80087d4:	b21b      	sxth	r3, r3
 80087d6:	4313      	orrs	r3, r2
 80087d8:	b21b      	sxth	r3, r3
 80087da:	f8a7 3066 	strh.w	r3, [r7, #102]	@ 0x66
 80087de:	687a      	ldr	r2, [r7, #4]
 80087e0:	683b      	ldr	r3, [r7, #0]
 80087e2:	781b      	ldrb	r3, [r3, #0]
 80087e4:	009b      	lsls	r3, r3, #2
 80087e6:	441a      	add	r2, r3
 80087e8:	f8b7 3066 	ldrh.w	r3, [r7, #102]	@ 0x66
 80087ec:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80087f0:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80087f4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80087f8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80087fc:	b29b      	uxth	r3, r3
 80087fe:	8013      	strh	r3, [r2, #0]
 8008800:	683b      	ldr	r3, [r7, #0]
 8008802:	7b1b      	ldrb	r3, [r3, #12]
 8008804:	2b00      	cmp	r3, #0
 8008806:	f040 8178 	bne.w	8008afa <USB_ActivateEndpoint+0x3e2>
 800880a:	683b      	ldr	r3, [r7, #0]
 800880c:	785b      	ldrb	r3, [r3, #1]
 800880e:	2b00      	cmp	r3, #0
 8008810:	f000 8084 	beq.w	800891c <USB_ActivateEndpoint+0x204>
 8008814:	687b      	ldr	r3, [r7, #4]
 8008816:	61bb      	str	r3, [r7, #24]
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800881e:	b29b      	uxth	r3, r3
 8008820:	461a      	mov	r2, r3
 8008822:	69bb      	ldr	r3, [r7, #24]
 8008824:	4413      	add	r3, r2
 8008826:	61bb      	str	r3, [r7, #24]
 8008828:	683b      	ldr	r3, [r7, #0]
 800882a:	781b      	ldrb	r3, [r3, #0]
 800882c:	011a      	lsls	r2, r3, #4
 800882e:	69bb      	ldr	r3, [r7, #24]
 8008830:	4413      	add	r3, r2
 8008832:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8008836:	617b      	str	r3, [r7, #20]
 8008838:	683b      	ldr	r3, [r7, #0]
 800883a:	88db      	ldrh	r3, [r3, #6]
 800883c:	085b      	lsrs	r3, r3, #1
 800883e:	b29b      	uxth	r3, r3
 8008840:	005b      	lsls	r3, r3, #1
 8008842:	b29a      	uxth	r2, r3
 8008844:	697b      	ldr	r3, [r7, #20]
 8008846:	801a      	strh	r2, [r3, #0]
 8008848:	687a      	ldr	r2, [r7, #4]
 800884a:	683b      	ldr	r3, [r7, #0]
 800884c:	781b      	ldrb	r3, [r3, #0]
 800884e:	009b      	lsls	r3, r3, #2
 8008850:	4413      	add	r3, r2
 8008852:	881b      	ldrh	r3, [r3, #0]
 8008854:	827b      	strh	r3, [r7, #18]
 8008856:	8a7b      	ldrh	r3, [r7, #18]
 8008858:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800885c:	2b00      	cmp	r3, #0
 800885e:	d01b      	beq.n	8008898 <USB_ActivateEndpoint+0x180>
 8008860:	687a      	ldr	r2, [r7, #4]
 8008862:	683b      	ldr	r3, [r7, #0]
 8008864:	781b      	ldrb	r3, [r3, #0]
 8008866:	009b      	lsls	r3, r3, #2
 8008868:	4413      	add	r3, r2
 800886a:	881b      	ldrh	r3, [r3, #0]
 800886c:	b29b      	uxth	r3, r3
 800886e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008872:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008876:	823b      	strh	r3, [r7, #16]
 8008878:	687a      	ldr	r2, [r7, #4]
 800887a:	683b      	ldr	r3, [r7, #0]
 800887c:	781b      	ldrb	r3, [r3, #0]
 800887e:	009b      	lsls	r3, r3, #2
 8008880:	441a      	add	r2, r3
 8008882:	8a3b      	ldrh	r3, [r7, #16]
 8008884:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008888:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800888c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008890:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8008894:	b29b      	uxth	r3, r3
 8008896:	8013      	strh	r3, [r2, #0]
 8008898:	683b      	ldr	r3, [r7, #0]
 800889a:	78db      	ldrb	r3, [r3, #3]
 800889c:	2b01      	cmp	r3, #1
 800889e:	d020      	beq.n	80088e2 <USB_ActivateEndpoint+0x1ca>
 80088a0:	687a      	ldr	r2, [r7, #4]
 80088a2:	683b      	ldr	r3, [r7, #0]
 80088a4:	781b      	ldrb	r3, [r3, #0]
 80088a6:	009b      	lsls	r3, r3, #2
 80088a8:	4413      	add	r3, r2
 80088aa:	881b      	ldrh	r3, [r3, #0]
 80088ac:	b29b      	uxth	r3, r3
 80088ae:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80088b2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80088b6:	81bb      	strh	r3, [r7, #12]
 80088b8:	89bb      	ldrh	r3, [r7, #12]
 80088ba:	f083 0320 	eor.w	r3, r3, #32
 80088be:	81bb      	strh	r3, [r7, #12]
 80088c0:	687a      	ldr	r2, [r7, #4]
 80088c2:	683b      	ldr	r3, [r7, #0]
 80088c4:	781b      	ldrb	r3, [r3, #0]
 80088c6:	009b      	lsls	r3, r3, #2
 80088c8:	441a      	add	r2, r3
 80088ca:	89bb      	ldrh	r3, [r7, #12]
 80088cc:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80088d0:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80088d4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80088d8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80088dc:	b29b      	uxth	r3, r3
 80088de:	8013      	strh	r3, [r2, #0]
 80088e0:	e2d5      	b.n	8008e8e <USB_ActivateEndpoint+0x776>
 80088e2:	687a      	ldr	r2, [r7, #4]
 80088e4:	683b      	ldr	r3, [r7, #0]
 80088e6:	781b      	ldrb	r3, [r3, #0]
 80088e8:	009b      	lsls	r3, r3, #2
 80088ea:	4413      	add	r3, r2
 80088ec:	881b      	ldrh	r3, [r3, #0]
 80088ee:	b29b      	uxth	r3, r3
 80088f0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80088f4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80088f8:	81fb      	strh	r3, [r7, #14]
 80088fa:	687a      	ldr	r2, [r7, #4]
 80088fc:	683b      	ldr	r3, [r7, #0]
 80088fe:	781b      	ldrb	r3, [r3, #0]
 8008900:	009b      	lsls	r3, r3, #2
 8008902:	441a      	add	r2, r3
 8008904:	89fb      	ldrh	r3, [r7, #14]
 8008906:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800890a:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800890e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008912:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008916:	b29b      	uxth	r3, r3
 8008918:	8013      	strh	r3, [r2, #0]
 800891a:	e2b8      	b.n	8008e8e <USB_ActivateEndpoint+0x776>
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8008926:	b29b      	uxth	r3, r3
 8008928:	461a      	mov	r2, r3
 800892a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800892c:	4413      	add	r3, r2
 800892e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008930:	683b      	ldr	r3, [r7, #0]
 8008932:	781b      	ldrb	r3, [r3, #0]
 8008934:	011a      	lsls	r2, r3, #4
 8008936:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008938:	4413      	add	r3, r2
 800893a:	f503 6381 	add.w	r3, r3, #1032	@ 0x408
 800893e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008940:	683b      	ldr	r3, [r7, #0]
 8008942:	88db      	ldrh	r3, [r3, #6]
 8008944:	085b      	lsrs	r3, r3, #1
 8008946:	b29b      	uxth	r3, r3
 8008948:	005b      	lsls	r3, r3, #1
 800894a:	b29a      	uxth	r2, r3
 800894c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800894e:	801a      	strh	r2, [r3, #0]
 8008950:	687b      	ldr	r3, [r7, #4]
 8008952:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800895a:	b29b      	uxth	r3, r3
 800895c:	461a      	mov	r2, r3
 800895e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008960:	4413      	add	r3, r2
 8008962:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008964:	683b      	ldr	r3, [r7, #0]
 8008966:	781b      	ldrb	r3, [r3, #0]
 8008968:	011a      	lsls	r2, r3, #4
 800896a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800896c:	4413      	add	r3, r2
 800896e:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8008972:	627b      	str	r3, [r7, #36]	@ 0x24
 8008974:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008976:	881b      	ldrh	r3, [r3, #0]
 8008978:	b29b      	uxth	r3, r3
 800897a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800897e:	b29a      	uxth	r2, r3
 8008980:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008982:	801a      	strh	r2, [r3, #0]
 8008984:	683b      	ldr	r3, [r7, #0]
 8008986:	691b      	ldr	r3, [r3, #16]
 8008988:	2b00      	cmp	r3, #0
 800898a:	d10a      	bne.n	80089a2 <USB_ActivateEndpoint+0x28a>
 800898c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800898e:	881b      	ldrh	r3, [r3, #0]
 8008990:	b29b      	uxth	r3, r3
 8008992:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008996:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800899a:	b29a      	uxth	r2, r3
 800899c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800899e:	801a      	strh	r2, [r3, #0]
 80089a0:	e039      	b.n	8008a16 <USB_ActivateEndpoint+0x2fe>
 80089a2:	683b      	ldr	r3, [r7, #0]
 80089a4:	691b      	ldr	r3, [r3, #16]
 80089a6:	2b3e      	cmp	r3, #62	@ 0x3e
 80089a8:	d818      	bhi.n	80089dc <USB_ActivateEndpoint+0x2c4>
 80089aa:	683b      	ldr	r3, [r7, #0]
 80089ac:	691b      	ldr	r3, [r3, #16]
 80089ae:	085b      	lsrs	r3, r3, #1
 80089b0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80089b2:	683b      	ldr	r3, [r7, #0]
 80089b4:	691b      	ldr	r3, [r3, #16]
 80089b6:	f003 0301 	and.w	r3, r3, #1
 80089ba:	2b00      	cmp	r3, #0
 80089bc:	d002      	beq.n	80089c4 <USB_ActivateEndpoint+0x2ac>
 80089be:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80089c0:	3301      	adds	r3, #1
 80089c2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80089c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089c6:	881b      	ldrh	r3, [r3, #0]
 80089c8:	b29a      	uxth	r2, r3
 80089ca:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80089cc:	b29b      	uxth	r3, r3
 80089ce:	029b      	lsls	r3, r3, #10
 80089d0:	b29b      	uxth	r3, r3
 80089d2:	4313      	orrs	r3, r2
 80089d4:	b29a      	uxth	r2, r3
 80089d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089d8:	801a      	strh	r2, [r3, #0]
 80089da:	e01c      	b.n	8008a16 <USB_ActivateEndpoint+0x2fe>
 80089dc:	683b      	ldr	r3, [r7, #0]
 80089de:	691b      	ldr	r3, [r3, #16]
 80089e0:	095b      	lsrs	r3, r3, #5
 80089e2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80089e4:	683b      	ldr	r3, [r7, #0]
 80089e6:	691b      	ldr	r3, [r3, #16]
 80089e8:	f003 031f 	and.w	r3, r3, #31
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d102      	bne.n	80089f6 <USB_ActivateEndpoint+0x2de>
 80089f0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80089f2:	3b01      	subs	r3, #1
 80089f4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80089f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089f8:	881b      	ldrh	r3, [r3, #0]
 80089fa:	b29a      	uxth	r2, r3
 80089fc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80089fe:	b29b      	uxth	r3, r3
 8008a00:	029b      	lsls	r3, r3, #10
 8008a02:	b29b      	uxth	r3, r3
 8008a04:	4313      	orrs	r3, r2
 8008a06:	b29b      	uxth	r3, r3
 8008a08:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008a0c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8008a10:	b29a      	uxth	r2, r3
 8008a12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a14:	801a      	strh	r2, [r3, #0]
 8008a16:	687a      	ldr	r2, [r7, #4]
 8008a18:	683b      	ldr	r3, [r7, #0]
 8008a1a:	781b      	ldrb	r3, [r3, #0]
 8008a1c:	009b      	lsls	r3, r3, #2
 8008a1e:	4413      	add	r3, r2
 8008a20:	881b      	ldrh	r3, [r3, #0]
 8008a22:	847b      	strh	r3, [r7, #34]	@ 0x22
 8008a24:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8008a26:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008a2a:	2b00      	cmp	r3, #0
 8008a2c:	d01b      	beq.n	8008a66 <USB_ActivateEndpoint+0x34e>
 8008a2e:	687a      	ldr	r2, [r7, #4]
 8008a30:	683b      	ldr	r3, [r7, #0]
 8008a32:	781b      	ldrb	r3, [r3, #0]
 8008a34:	009b      	lsls	r3, r3, #2
 8008a36:	4413      	add	r3, r2
 8008a38:	881b      	ldrh	r3, [r3, #0]
 8008a3a:	b29b      	uxth	r3, r3
 8008a3c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008a40:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008a44:	843b      	strh	r3, [r7, #32]
 8008a46:	687a      	ldr	r2, [r7, #4]
 8008a48:	683b      	ldr	r3, [r7, #0]
 8008a4a:	781b      	ldrb	r3, [r3, #0]
 8008a4c:	009b      	lsls	r3, r3, #2
 8008a4e:	441a      	add	r2, r3
 8008a50:	8c3b      	ldrh	r3, [r7, #32]
 8008a52:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008a56:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008a5a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8008a5e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008a62:	b29b      	uxth	r3, r3
 8008a64:	8013      	strh	r3, [r2, #0]
 8008a66:	683b      	ldr	r3, [r7, #0]
 8008a68:	781b      	ldrb	r3, [r3, #0]
 8008a6a:	2b00      	cmp	r3, #0
 8008a6c:	d124      	bne.n	8008ab8 <USB_ActivateEndpoint+0x3a0>
 8008a6e:	687a      	ldr	r2, [r7, #4]
 8008a70:	683b      	ldr	r3, [r7, #0]
 8008a72:	781b      	ldrb	r3, [r3, #0]
 8008a74:	009b      	lsls	r3, r3, #2
 8008a76:	4413      	add	r3, r2
 8008a78:	881b      	ldrh	r3, [r3, #0]
 8008a7a:	b29b      	uxth	r3, r3
 8008a7c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8008a80:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008a84:	83bb      	strh	r3, [r7, #28]
 8008a86:	8bbb      	ldrh	r3, [r7, #28]
 8008a88:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8008a8c:	83bb      	strh	r3, [r7, #28]
 8008a8e:	8bbb      	ldrh	r3, [r7, #28]
 8008a90:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8008a94:	83bb      	strh	r3, [r7, #28]
 8008a96:	687a      	ldr	r2, [r7, #4]
 8008a98:	683b      	ldr	r3, [r7, #0]
 8008a9a:	781b      	ldrb	r3, [r3, #0]
 8008a9c:	009b      	lsls	r3, r3, #2
 8008a9e:	441a      	add	r2, r3
 8008aa0:	8bbb      	ldrh	r3, [r7, #28]
 8008aa2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008aa6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008aaa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008aae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008ab2:	b29b      	uxth	r3, r3
 8008ab4:	8013      	strh	r3, [r2, #0]
 8008ab6:	e1ea      	b.n	8008e8e <USB_ActivateEndpoint+0x776>
 8008ab8:	687a      	ldr	r2, [r7, #4]
 8008aba:	683b      	ldr	r3, [r7, #0]
 8008abc:	781b      	ldrb	r3, [r3, #0]
 8008abe:	009b      	lsls	r3, r3, #2
 8008ac0:	4413      	add	r3, r2
 8008ac2:	881b      	ldrh	r3, [r3, #0]
 8008ac4:	b29b      	uxth	r3, r3
 8008ac6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8008aca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008ace:	83fb      	strh	r3, [r7, #30]
 8008ad0:	8bfb      	ldrh	r3, [r7, #30]
 8008ad2:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8008ad6:	83fb      	strh	r3, [r7, #30]
 8008ad8:	687a      	ldr	r2, [r7, #4]
 8008ada:	683b      	ldr	r3, [r7, #0]
 8008adc:	781b      	ldrb	r3, [r3, #0]
 8008ade:	009b      	lsls	r3, r3, #2
 8008ae0:	441a      	add	r2, r3
 8008ae2:	8bfb      	ldrh	r3, [r7, #30]
 8008ae4:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008ae8:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008aec:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008af0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008af4:	b29b      	uxth	r3, r3
 8008af6:	8013      	strh	r3, [r2, #0]
 8008af8:	e1c9      	b.n	8008e8e <USB_ActivateEndpoint+0x776>
 8008afa:	683b      	ldr	r3, [r7, #0]
 8008afc:	78db      	ldrb	r3, [r3, #3]
 8008afe:	2b02      	cmp	r3, #2
 8008b00:	d11e      	bne.n	8008b40 <USB_ActivateEndpoint+0x428>
 8008b02:	687a      	ldr	r2, [r7, #4]
 8008b04:	683b      	ldr	r3, [r7, #0]
 8008b06:	781b      	ldrb	r3, [r3, #0]
 8008b08:	009b      	lsls	r3, r3, #2
 8008b0a:	4413      	add	r3, r2
 8008b0c:	881b      	ldrh	r3, [r3, #0]
 8008b0e:	b29b      	uxth	r3, r3
 8008b10:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008b14:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008b18:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
 8008b1c:	687a      	ldr	r2, [r7, #4]
 8008b1e:	683b      	ldr	r3, [r7, #0]
 8008b20:	781b      	ldrb	r3, [r3, #0]
 8008b22:	009b      	lsls	r3, r3, #2
 8008b24:	441a      	add	r2, r3
 8008b26:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 8008b2a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008b2e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008b32:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 8008b36:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008b3a:	b29b      	uxth	r3, r3
 8008b3c:	8013      	strh	r3, [r2, #0]
 8008b3e:	e01d      	b.n	8008b7c <USB_ActivateEndpoint+0x464>
 8008b40:	687a      	ldr	r2, [r7, #4]
 8008b42:	683b      	ldr	r3, [r7, #0]
 8008b44:	781b      	ldrb	r3, [r3, #0]
 8008b46:	009b      	lsls	r3, r3, #2
 8008b48:	4413      	add	r3, r2
 8008b4a:	881b      	ldrh	r3, [r3, #0]
 8008b4c:	b29b      	uxth	r3, r3
 8008b4e:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 8008b52:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008b56:	f8a7 3064 	strh.w	r3, [r7, #100]	@ 0x64
 8008b5a:	687a      	ldr	r2, [r7, #4]
 8008b5c:	683b      	ldr	r3, [r7, #0]
 8008b5e:	781b      	ldrb	r3, [r3, #0]
 8008b60:	009b      	lsls	r3, r3, #2
 8008b62:	441a      	add	r2, r3
 8008b64:	f8b7 3064 	ldrh.w	r3, [r7, #100]	@ 0x64
 8008b68:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008b6c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008b70:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008b74:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008b78:	b29b      	uxth	r3, r3
 8008b7a:	8013      	strh	r3, [r2, #0]
 8008b7c:	687b      	ldr	r3, [r7, #4]
 8008b7e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8008b86:	b29b      	uxth	r3, r3
 8008b88:	461a      	mov	r2, r3
 8008b8a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008b8c:	4413      	add	r3, r2
 8008b8e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008b90:	683b      	ldr	r3, [r7, #0]
 8008b92:	781b      	ldrb	r3, [r3, #0]
 8008b94:	011a      	lsls	r2, r3, #4
 8008b96:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008b98:	4413      	add	r3, r2
 8008b9a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8008b9e:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008ba0:	683b      	ldr	r3, [r7, #0]
 8008ba2:	891b      	ldrh	r3, [r3, #8]
 8008ba4:	085b      	lsrs	r3, r3, #1
 8008ba6:	b29b      	uxth	r3, r3
 8008ba8:	005b      	lsls	r3, r3, #1
 8008baa:	b29a      	uxth	r2, r3
 8008bac:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8008bae:	801a      	strh	r2, [r3, #0]
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	657b      	str	r3, [r7, #84]	@ 0x54
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8008bba:	b29b      	uxth	r3, r3
 8008bbc:	461a      	mov	r2, r3
 8008bbe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8008bc0:	4413      	add	r3, r2
 8008bc2:	657b      	str	r3, [r7, #84]	@ 0x54
 8008bc4:	683b      	ldr	r3, [r7, #0]
 8008bc6:	781b      	ldrb	r3, [r3, #0]
 8008bc8:	011a      	lsls	r2, r3, #4
 8008bca:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8008bcc:	4413      	add	r3, r2
 8008bce:	f503 6381 	add.w	r3, r3, #1032	@ 0x408
 8008bd2:	653b      	str	r3, [r7, #80]	@ 0x50
 8008bd4:	683b      	ldr	r3, [r7, #0]
 8008bd6:	895b      	ldrh	r3, [r3, #10]
 8008bd8:	085b      	lsrs	r3, r3, #1
 8008bda:	b29b      	uxth	r3, r3
 8008bdc:	005b      	lsls	r3, r3, #1
 8008bde:	b29a      	uxth	r2, r3
 8008be0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008be2:	801a      	strh	r2, [r3, #0]
 8008be4:	683b      	ldr	r3, [r7, #0]
 8008be6:	785b      	ldrb	r3, [r3, #1]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	f040 8093 	bne.w	8008d14 <USB_ActivateEndpoint+0x5fc>
 8008bee:	687a      	ldr	r2, [r7, #4]
 8008bf0:	683b      	ldr	r3, [r7, #0]
 8008bf2:	781b      	ldrb	r3, [r3, #0]
 8008bf4:	009b      	lsls	r3, r3, #2
 8008bf6:	4413      	add	r3, r2
 8008bf8:	881b      	ldrh	r3, [r3, #0]
 8008bfa:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40
 8008bfe:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8008c02:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008c06:	2b00      	cmp	r3, #0
 8008c08:	d01b      	beq.n	8008c42 <USB_ActivateEndpoint+0x52a>
 8008c0a:	687a      	ldr	r2, [r7, #4]
 8008c0c:	683b      	ldr	r3, [r7, #0]
 8008c0e:	781b      	ldrb	r3, [r3, #0]
 8008c10:	009b      	lsls	r3, r3, #2
 8008c12:	4413      	add	r3, r2
 8008c14:	881b      	ldrh	r3, [r3, #0]
 8008c16:	b29b      	uxth	r3, r3
 8008c18:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008c1c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008c20:	87fb      	strh	r3, [r7, #62]	@ 0x3e
 8008c22:	687a      	ldr	r2, [r7, #4]
 8008c24:	683b      	ldr	r3, [r7, #0]
 8008c26:	781b      	ldrb	r3, [r3, #0]
 8008c28:	009b      	lsls	r3, r3, #2
 8008c2a:	441a      	add	r2, r3
 8008c2c:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8008c2e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008c32:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008c36:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8008c3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008c3e:	b29b      	uxth	r3, r3
 8008c40:	8013      	strh	r3, [r2, #0]
 8008c42:	687a      	ldr	r2, [r7, #4]
 8008c44:	683b      	ldr	r3, [r7, #0]
 8008c46:	781b      	ldrb	r3, [r3, #0]
 8008c48:	009b      	lsls	r3, r3, #2
 8008c4a:	4413      	add	r3, r2
 8008c4c:	881b      	ldrh	r3, [r3, #0]
 8008c4e:	87bb      	strh	r3, [r7, #60]	@ 0x3c
 8008c50:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8008c52:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c56:	2b00      	cmp	r3, #0
 8008c58:	d01b      	beq.n	8008c92 <USB_ActivateEndpoint+0x57a>
 8008c5a:	687a      	ldr	r2, [r7, #4]
 8008c5c:	683b      	ldr	r3, [r7, #0]
 8008c5e:	781b      	ldrb	r3, [r3, #0]
 8008c60:	009b      	lsls	r3, r3, #2
 8008c62:	4413      	add	r3, r2
 8008c64:	881b      	ldrh	r3, [r3, #0]
 8008c66:	b29b      	uxth	r3, r3
 8008c68:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008c6c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008c70:	877b      	strh	r3, [r7, #58]	@ 0x3a
 8008c72:	687a      	ldr	r2, [r7, #4]
 8008c74:	683b      	ldr	r3, [r7, #0]
 8008c76:	781b      	ldrb	r3, [r3, #0]
 8008c78:	009b      	lsls	r3, r3, #2
 8008c7a:	441a      	add	r2, r3
 8008c7c:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8008c7e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008c82:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008c86:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008c8a:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8008c8e:	b29b      	uxth	r3, r3
 8008c90:	8013      	strh	r3, [r2, #0]
 8008c92:	687a      	ldr	r2, [r7, #4]
 8008c94:	683b      	ldr	r3, [r7, #0]
 8008c96:	781b      	ldrb	r3, [r3, #0]
 8008c98:	009b      	lsls	r3, r3, #2
 8008c9a:	4413      	add	r3, r2
 8008c9c:	881b      	ldrh	r3, [r3, #0]
 8008c9e:	b29b      	uxth	r3, r3
 8008ca0:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8008ca4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008ca8:	873b      	strh	r3, [r7, #56]	@ 0x38
 8008caa:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8008cac:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8008cb0:	873b      	strh	r3, [r7, #56]	@ 0x38
 8008cb2:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8008cb4:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8008cb8:	873b      	strh	r3, [r7, #56]	@ 0x38
 8008cba:	687a      	ldr	r2, [r7, #4]
 8008cbc:	683b      	ldr	r3, [r7, #0]
 8008cbe:	781b      	ldrb	r3, [r3, #0]
 8008cc0:	009b      	lsls	r3, r3, #2
 8008cc2:	441a      	add	r2, r3
 8008cc4:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 8008cc6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008cca:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008cce:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008cd2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008cd6:	b29b      	uxth	r3, r3
 8008cd8:	8013      	strh	r3, [r2, #0]
 8008cda:	687a      	ldr	r2, [r7, #4]
 8008cdc:	683b      	ldr	r3, [r7, #0]
 8008cde:	781b      	ldrb	r3, [r3, #0]
 8008ce0:	009b      	lsls	r3, r3, #2
 8008ce2:	4413      	add	r3, r2
 8008ce4:	881b      	ldrh	r3, [r3, #0]
 8008ce6:	b29b      	uxth	r3, r3
 8008ce8:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008cec:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008cf0:	86fb      	strh	r3, [r7, #54]	@ 0x36
 8008cf2:	687a      	ldr	r2, [r7, #4]
 8008cf4:	683b      	ldr	r3, [r7, #0]
 8008cf6:	781b      	ldrb	r3, [r3, #0]
 8008cf8:	009b      	lsls	r3, r3, #2
 8008cfa:	441a      	add	r2, r3
 8008cfc:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8008cfe:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008d02:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008d06:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008d0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008d0e:	b29b      	uxth	r3, r3
 8008d10:	8013      	strh	r3, [r2, #0]
 8008d12:	e0bc      	b.n	8008e8e <USB_ActivateEndpoint+0x776>
 8008d14:	687a      	ldr	r2, [r7, #4]
 8008d16:	683b      	ldr	r3, [r7, #0]
 8008d18:	781b      	ldrb	r3, [r3, #0]
 8008d1a:	009b      	lsls	r3, r3, #2
 8008d1c:	4413      	add	r3, r2
 8008d1e:	881b      	ldrh	r3, [r3, #0]
 8008d20:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 8008d24:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 8008d28:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008d2c:	2b00      	cmp	r3, #0
 8008d2e:	d01d      	beq.n	8008d6c <USB_ActivateEndpoint+0x654>
 8008d30:	687a      	ldr	r2, [r7, #4]
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	781b      	ldrb	r3, [r3, #0]
 8008d36:	009b      	lsls	r3, r3, #2
 8008d38:	4413      	add	r3, r2
 8008d3a:	881b      	ldrh	r3, [r3, #0]
 8008d3c:	b29b      	uxth	r3, r3
 8008d3e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008d42:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008d46:	f8a7 304c 	strh.w	r3, [r7, #76]	@ 0x4c
 8008d4a:	687a      	ldr	r2, [r7, #4]
 8008d4c:	683b      	ldr	r3, [r7, #0]
 8008d4e:	781b      	ldrb	r3, [r3, #0]
 8008d50:	009b      	lsls	r3, r3, #2
 8008d52:	441a      	add	r2, r3
 8008d54:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 8008d58:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008d5c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008d60:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8008d64:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008d68:	b29b      	uxth	r3, r3
 8008d6a:	8013      	strh	r3, [r2, #0]
 8008d6c:	687a      	ldr	r2, [r7, #4]
 8008d6e:	683b      	ldr	r3, [r7, #0]
 8008d70:	781b      	ldrb	r3, [r3, #0]
 8008d72:	009b      	lsls	r3, r3, #2
 8008d74:	4413      	add	r3, r2
 8008d76:	881b      	ldrh	r3, [r3, #0]
 8008d78:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 8008d7c:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8008d80:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d01d      	beq.n	8008dc4 <USB_ActivateEndpoint+0x6ac>
 8008d88:	687a      	ldr	r2, [r7, #4]
 8008d8a:	683b      	ldr	r3, [r7, #0]
 8008d8c:	781b      	ldrb	r3, [r3, #0]
 8008d8e:	009b      	lsls	r3, r3, #2
 8008d90:	4413      	add	r3, r2
 8008d92:	881b      	ldrh	r3, [r3, #0]
 8008d94:	b29b      	uxth	r3, r3
 8008d96:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008d9a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008d9e:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
 8008da2:	687a      	ldr	r2, [r7, #4]
 8008da4:	683b      	ldr	r3, [r7, #0]
 8008da6:	781b      	ldrb	r3, [r3, #0]
 8008da8:	009b      	lsls	r3, r3, #2
 8008daa:	441a      	add	r2, r3
 8008dac:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8008db0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008db4:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008db8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008dbc:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8008dc0:	b29b      	uxth	r3, r3
 8008dc2:	8013      	strh	r3, [r2, #0]
 8008dc4:	683b      	ldr	r3, [r7, #0]
 8008dc6:	78db      	ldrb	r3, [r3, #3]
 8008dc8:	2b01      	cmp	r3, #1
 8008dca:	d024      	beq.n	8008e16 <USB_ActivateEndpoint+0x6fe>
 8008dcc:	687a      	ldr	r2, [r7, #4]
 8008dce:	683b      	ldr	r3, [r7, #0]
 8008dd0:	781b      	ldrb	r3, [r3, #0]
 8008dd2:	009b      	lsls	r3, r3, #2
 8008dd4:	4413      	add	r3, r2
 8008dd6:	881b      	ldrh	r3, [r3, #0]
 8008dd8:	b29b      	uxth	r3, r3
 8008dda:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008dde:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008de2:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 8008de6:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8008dea:	f083 0320 	eor.w	r3, r3, #32
 8008dee:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 8008df2:	687a      	ldr	r2, [r7, #4]
 8008df4:	683b      	ldr	r3, [r7, #0]
 8008df6:	781b      	ldrb	r3, [r3, #0]
 8008df8:	009b      	lsls	r3, r3, #2
 8008dfa:	441a      	add	r2, r3
 8008dfc:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8008e00:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008e04:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008e08:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008e0c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008e10:	b29b      	uxth	r3, r3
 8008e12:	8013      	strh	r3, [r2, #0]
 8008e14:	e01d      	b.n	8008e52 <USB_ActivateEndpoint+0x73a>
 8008e16:	687a      	ldr	r2, [r7, #4]
 8008e18:	683b      	ldr	r3, [r7, #0]
 8008e1a:	781b      	ldrb	r3, [r3, #0]
 8008e1c:	009b      	lsls	r3, r3, #2
 8008e1e:	4413      	add	r3, r2
 8008e20:	881b      	ldrh	r3, [r3, #0]
 8008e22:	b29b      	uxth	r3, r3
 8008e24:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008e28:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008e2c:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8008e30:	687a      	ldr	r2, [r7, #4]
 8008e32:	683b      	ldr	r3, [r7, #0]
 8008e34:	781b      	ldrb	r3, [r3, #0]
 8008e36:	009b      	lsls	r3, r3, #2
 8008e38:	441a      	add	r2, r3
 8008e3a:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8008e3e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008e42:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008e46:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008e4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008e4e:	b29b      	uxth	r3, r3
 8008e50:	8013      	strh	r3, [r2, #0]
 8008e52:	687a      	ldr	r2, [r7, #4]
 8008e54:	683b      	ldr	r3, [r7, #0]
 8008e56:	781b      	ldrb	r3, [r3, #0]
 8008e58:	009b      	lsls	r3, r3, #2
 8008e5a:	4413      	add	r3, r2
 8008e5c:	881b      	ldrh	r3, [r3, #0]
 8008e5e:	b29b      	uxth	r3, r3
 8008e60:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8008e64:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008e68:	f8a7 3042 	strh.w	r3, [r7, #66]	@ 0x42
 8008e6c:	687a      	ldr	r2, [r7, #4]
 8008e6e:	683b      	ldr	r3, [r7, #0]
 8008e70:	781b      	ldrb	r3, [r3, #0]
 8008e72:	009b      	lsls	r3, r3, #2
 8008e74:	441a      	add	r2, r3
 8008e76:	f8b7 3042 	ldrh.w	r3, [r7, #66]	@ 0x42
 8008e7a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008e7e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008e82:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008e86:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008e8a:	b29b      	uxth	r3, r3
 8008e8c:	8013      	strh	r3, [r2, #0]
 8008e8e:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8008e92:	4618      	mov	r0, r3
 8008e94:	3774      	adds	r7, #116	@ 0x74
 8008e96:	46bd      	mov	sp, r7
 8008e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e9c:	4770      	bx	lr
 8008e9e:	bf00      	nop

08008ea0 <USB_DeactivateEndpoint>:
 8008ea0:	b480      	push	{r7}
 8008ea2:	b08d      	sub	sp, #52	@ 0x34
 8008ea4:	af00      	add	r7, sp, #0
 8008ea6:	6078      	str	r0, [r7, #4]
 8008ea8:	6039      	str	r1, [r7, #0]
 8008eaa:	683b      	ldr	r3, [r7, #0]
 8008eac:	7b1b      	ldrb	r3, [r3, #12]
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	f040 808e 	bne.w	8008fd0 <USB_DeactivateEndpoint+0x130>
 8008eb4:	683b      	ldr	r3, [r7, #0]
 8008eb6:	785b      	ldrb	r3, [r3, #1]
 8008eb8:	2b00      	cmp	r3, #0
 8008eba:	d044      	beq.n	8008f46 <USB_DeactivateEndpoint+0xa6>
 8008ebc:	687a      	ldr	r2, [r7, #4]
 8008ebe:	683b      	ldr	r3, [r7, #0]
 8008ec0:	781b      	ldrb	r3, [r3, #0]
 8008ec2:	009b      	lsls	r3, r3, #2
 8008ec4:	4413      	add	r3, r2
 8008ec6:	881b      	ldrh	r3, [r3, #0]
 8008ec8:	81bb      	strh	r3, [r7, #12]
 8008eca:	89bb      	ldrh	r3, [r7, #12]
 8008ecc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d01b      	beq.n	8008f0c <USB_DeactivateEndpoint+0x6c>
 8008ed4:	687a      	ldr	r2, [r7, #4]
 8008ed6:	683b      	ldr	r3, [r7, #0]
 8008ed8:	781b      	ldrb	r3, [r3, #0]
 8008eda:	009b      	lsls	r3, r3, #2
 8008edc:	4413      	add	r3, r2
 8008ede:	881b      	ldrh	r3, [r3, #0]
 8008ee0:	b29b      	uxth	r3, r3
 8008ee2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008ee6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008eea:	817b      	strh	r3, [r7, #10]
 8008eec:	687a      	ldr	r2, [r7, #4]
 8008eee:	683b      	ldr	r3, [r7, #0]
 8008ef0:	781b      	ldrb	r3, [r3, #0]
 8008ef2:	009b      	lsls	r3, r3, #2
 8008ef4:	441a      	add	r2, r3
 8008ef6:	897b      	ldrh	r3, [r7, #10]
 8008ef8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008efc:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008f00:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008f04:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8008f08:	b29b      	uxth	r3, r3
 8008f0a:	8013      	strh	r3, [r2, #0]
 8008f0c:	687a      	ldr	r2, [r7, #4]
 8008f0e:	683b      	ldr	r3, [r7, #0]
 8008f10:	781b      	ldrb	r3, [r3, #0]
 8008f12:	009b      	lsls	r3, r3, #2
 8008f14:	4413      	add	r3, r2
 8008f16:	881b      	ldrh	r3, [r3, #0]
 8008f18:	b29b      	uxth	r3, r3
 8008f1a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008f1e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008f22:	813b      	strh	r3, [r7, #8]
 8008f24:	687a      	ldr	r2, [r7, #4]
 8008f26:	683b      	ldr	r3, [r7, #0]
 8008f28:	781b      	ldrb	r3, [r3, #0]
 8008f2a:	009b      	lsls	r3, r3, #2
 8008f2c:	441a      	add	r2, r3
 8008f2e:	893b      	ldrh	r3, [r7, #8]
 8008f30:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008f34:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008f38:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008f3c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008f40:	b29b      	uxth	r3, r3
 8008f42:	8013      	strh	r3, [r2, #0]
 8008f44:	e192      	b.n	800926c <USB_DeactivateEndpoint+0x3cc>
 8008f46:	687a      	ldr	r2, [r7, #4]
 8008f48:	683b      	ldr	r3, [r7, #0]
 8008f4a:	781b      	ldrb	r3, [r3, #0]
 8008f4c:	009b      	lsls	r3, r3, #2
 8008f4e:	4413      	add	r3, r2
 8008f50:	881b      	ldrh	r3, [r3, #0]
 8008f52:	827b      	strh	r3, [r7, #18]
 8008f54:	8a7b      	ldrh	r3, [r7, #18]
 8008f56:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008f5a:	2b00      	cmp	r3, #0
 8008f5c:	d01b      	beq.n	8008f96 <USB_DeactivateEndpoint+0xf6>
 8008f5e:	687a      	ldr	r2, [r7, #4]
 8008f60:	683b      	ldr	r3, [r7, #0]
 8008f62:	781b      	ldrb	r3, [r3, #0]
 8008f64:	009b      	lsls	r3, r3, #2
 8008f66:	4413      	add	r3, r2
 8008f68:	881b      	ldrh	r3, [r3, #0]
 8008f6a:	b29b      	uxth	r3, r3
 8008f6c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008f70:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008f74:	823b      	strh	r3, [r7, #16]
 8008f76:	687a      	ldr	r2, [r7, #4]
 8008f78:	683b      	ldr	r3, [r7, #0]
 8008f7a:	781b      	ldrb	r3, [r3, #0]
 8008f7c:	009b      	lsls	r3, r3, #2
 8008f7e:	441a      	add	r2, r3
 8008f80:	8a3b      	ldrh	r3, [r7, #16]
 8008f82:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008f86:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008f8a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8008f8e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008f92:	b29b      	uxth	r3, r3
 8008f94:	8013      	strh	r3, [r2, #0]
 8008f96:	687a      	ldr	r2, [r7, #4]
 8008f98:	683b      	ldr	r3, [r7, #0]
 8008f9a:	781b      	ldrb	r3, [r3, #0]
 8008f9c:	009b      	lsls	r3, r3, #2
 8008f9e:	4413      	add	r3, r2
 8008fa0:	881b      	ldrh	r3, [r3, #0]
 8008fa2:	b29b      	uxth	r3, r3
 8008fa4:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8008fa8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008fac:	81fb      	strh	r3, [r7, #14]
 8008fae:	687a      	ldr	r2, [r7, #4]
 8008fb0:	683b      	ldr	r3, [r7, #0]
 8008fb2:	781b      	ldrb	r3, [r3, #0]
 8008fb4:	009b      	lsls	r3, r3, #2
 8008fb6:	441a      	add	r2, r3
 8008fb8:	89fb      	ldrh	r3, [r7, #14]
 8008fba:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8008fbe:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8008fc2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8008fc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008fca:	b29b      	uxth	r3, r3
 8008fcc:	8013      	strh	r3, [r2, #0]
 8008fce:	e14d      	b.n	800926c <USB_DeactivateEndpoint+0x3cc>
 8008fd0:	683b      	ldr	r3, [r7, #0]
 8008fd2:	785b      	ldrb	r3, [r3, #1]
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	f040 80a5 	bne.w	8009124 <USB_DeactivateEndpoint+0x284>
 8008fda:	687a      	ldr	r2, [r7, #4]
 8008fdc:	683b      	ldr	r3, [r7, #0]
 8008fde:	781b      	ldrb	r3, [r3, #0]
 8008fe0:	009b      	lsls	r3, r3, #2
 8008fe2:	4413      	add	r3, r2
 8008fe4:	881b      	ldrh	r3, [r3, #0]
 8008fe6:	843b      	strh	r3, [r7, #32]
 8008fe8:	8c3b      	ldrh	r3, [r7, #32]
 8008fea:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008fee:	2b00      	cmp	r3, #0
 8008ff0:	d01b      	beq.n	800902a <USB_DeactivateEndpoint+0x18a>
 8008ff2:	687a      	ldr	r2, [r7, #4]
 8008ff4:	683b      	ldr	r3, [r7, #0]
 8008ff6:	781b      	ldrb	r3, [r3, #0]
 8008ff8:	009b      	lsls	r3, r3, #2
 8008ffa:	4413      	add	r3, r2
 8008ffc:	881b      	ldrh	r3, [r3, #0]
 8008ffe:	b29b      	uxth	r3, r3
 8009000:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009004:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009008:	83fb      	strh	r3, [r7, #30]
 800900a:	687a      	ldr	r2, [r7, #4]
 800900c:	683b      	ldr	r3, [r7, #0]
 800900e:	781b      	ldrb	r3, [r3, #0]
 8009010:	009b      	lsls	r3, r3, #2
 8009012:	441a      	add	r2, r3
 8009014:	8bfb      	ldrh	r3, [r7, #30]
 8009016:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800901a:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800901e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8009022:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009026:	b29b      	uxth	r3, r3
 8009028:	8013      	strh	r3, [r2, #0]
 800902a:	687a      	ldr	r2, [r7, #4]
 800902c:	683b      	ldr	r3, [r7, #0]
 800902e:	781b      	ldrb	r3, [r3, #0]
 8009030:	009b      	lsls	r3, r3, #2
 8009032:	4413      	add	r3, r2
 8009034:	881b      	ldrh	r3, [r3, #0]
 8009036:	83bb      	strh	r3, [r7, #28]
 8009038:	8bbb      	ldrh	r3, [r7, #28]
 800903a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800903e:	2b00      	cmp	r3, #0
 8009040:	d01b      	beq.n	800907a <USB_DeactivateEndpoint+0x1da>
 8009042:	687a      	ldr	r2, [r7, #4]
 8009044:	683b      	ldr	r3, [r7, #0]
 8009046:	781b      	ldrb	r3, [r3, #0]
 8009048:	009b      	lsls	r3, r3, #2
 800904a:	4413      	add	r3, r2
 800904c:	881b      	ldrh	r3, [r3, #0]
 800904e:	b29b      	uxth	r3, r3
 8009050:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009054:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009058:	837b      	strh	r3, [r7, #26]
 800905a:	687a      	ldr	r2, [r7, #4]
 800905c:	683b      	ldr	r3, [r7, #0]
 800905e:	781b      	ldrb	r3, [r3, #0]
 8009060:	009b      	lsls	r3, r3, #2
 8009062:	441a      	add	r2, r3
 8009064:	8b7b      	ldrh	r3, [r7, #26]
 8009066:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800906a:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800906e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009072:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8009076:	b29b      	uxth	r3, r3
 8009078:	8013      	strh	r3, [r2, #0]
 800907a:	687a      	ldr	r2, [r7, #4]
 800907c:	683b      	ldr	r3, [r7, #0]
 800907e:	781b      	ldrb	r3, [r3, #0]
 8009080:	009b      	lsls	r3, r3, #2
 8009082:	4413      	add	r3, r2
 8009084:	881b      	ldrh	r3, [r3, #0]
 8009086:	b29b      	uxth	r3, r3
 8009088:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800908c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009090:	833b      	strh	r3, [r7, #24]
 8009092:	687a      	ldr	r2, [r7, #4]
 8009094:	683b      	ldr	r3, [r7, #0]
 8009096:	781b      	ldrb	r3, [r3, #0]
 8009098:	009b      	lsls	r3, r3, #2
 800909a:	441a      	add	r2, r3
 800909c:	8b3b      	ldrh	r3, [r7, #24]
 800909e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80090a2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80090a6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80090aa:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80090ae:	b29b      	uxth	r3, r3
 80090b0:	8013      	strh	r3, [r2, #0]
 80090b2:	687a      	ldr	r2, [r7, #4]
 80090b4:	683b      	ldr	r3, [r7, #0]
 80090b6:	781b      	ldrb	r3, [r3, #0]
 80090b8:	009b      	lsls	r3, r3, #2
 80090ba:	4413      	add	r3, r2
 80090bc:	881b      	ldrh	r3, [r3, #0]
 80090be:	b29b      	uxth	r3, r3
 80090c0:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80090c4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80090c8:	82fb      	strh	r3, [r7, #22]
 80090ca:	687a      	ldr	r2, [r7, #4]
 80090cc:	683b      	ldr	r3, [r7, #0]
 80090ce:	781b      	ldrb	r3, [r3, #0]
 80090d0:	009b      	lsls	r3, r3, #2
 80090d2:	441a      	add	r2, r3
 80090d4:	8afb      	ldrh	r3, [r7, #22]
 80090d6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80090da:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80090de:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80090e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80090e6:	b29b      	uxth	r3, r3
 80090e8:	8013      	strh	r3, [r2, #0]
 80090ea:	687a      	ldr	r2, [r7, #4]
 80090ec:	683b      	ldr	r3, [r7, #0]
 80090ee:	781b      	ldrb	r3, [r3, #0]
 80090f0:	009b      	lsls	r3, r3, #2
 80090f2:	4413      	add	r3, r2
 80090f4:	881b      	ldrh	r3, [r3, #0]
 80090f6:	b29b      	uxth	r3, r3
 80090f8:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80090fc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009100:	82bb      	strh	r3, [r7, #20]
 8009102:	687a      	ldr	r2, [r7, #4]
 8009104:	683b      	ldr	r3, [r7, #0]
 8009106:	781b      	ldrb	r3, [r3, #0]
 8009108:	009b      	lsls	r3, r3, #2
 800910a:	441a      	add	r2, r3
 800910c:	8abb      	ldrh	r3, [r7, #20]
 800910e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8009112:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8009116:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800911a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800911e:	b29b      	uxth	r3, r3
 8009120:	8013      	strh	r3, [r2, #0]
 8009122:	e0a3      	b.n	800926c <USB_DeactivateEndpoint+0x3cc>
 8009124:	687a      	ldr	r2, [r7, #4]
 8009126:	683b      	ldr	r3, [r7, #0]
 8009128:	781b      	ldrb	r3, [r3, #0]
 800912a:	009b      	lsls	r3, r3, #2
 800912c:	4413      	add	r3, r2
 800912e:	881b      	ldrh	r3, [r3, #0]
 8009130:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8009132:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8009134:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8009138:	2b00      	cmp	r3, #0
 800913a:	d01b      	beq.n	8009174 <USB_DeactivateEndpoint+0x2d4>
 800913c:	687a      	ldr	r2, [r7, #4]
 800913e:	683b      	ldr	r3, [r7, #0]
 8009140:	781b      	ldrb	r3, [r3, #0]
 8009142:	009b      	lsls	r3, r3, #2
 8009144:	4413      	add	r3, r2
 8009146:	881b      	ldrh	r3, [r3, #0]
 8009148:	b29b      	uxth	r3, r3
 800914a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800914e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009152:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8009154:	687a      	ldr	r2, [r7, #4]
 8009156:	683b      	ldr	r3, [r7, #0]
 8009158:	781b      	ldrb	r3, [r3, #0]
 800915a:	009b      	lsls	r3, r3, #2
 800915c:	441a      	add	r2, r3
 800915e:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8009160:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8009164:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8009168:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800916c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009170:	b29b      	uxth	r3, r3
 8009172:	8013      	strh	r3, [r2, #0]
 8009174:	687a      	ldr	r2, [r7, #4]
 8009176:	683b      	ldr	r3, [r7, #0]
 8009178:	781b      	ldrb	r3, [r3, #0]
 800917a:	009b      	lsls	r3, r3, #2
 800917c:	4413      	add	r3, r2
 800917e:	881b      	ldrh	r3, [r3, #0]
 8009180:	857b      	strh	r3, [r7, #42]	@ 0x2a
 8009182:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8009184:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009188:	2b00      	cmp	r3, #0
 800918a:	d01b      	beq.n	80091c4 <USB_DeactivateEndpoint+0x324>
 800918c:	687a      	ldr	r2, [r7, #4]
 800918e:	683b      	ldr	r3, [r7, #0]
 8009190:	781b      	ldrb	r3, [r3, #0]
 8009192:	009b      	lsls	r3, r3, #2
 8009194:	4413      	add	r3, r2
 8009196:	881b      	ldrh	r3, [r3, #0]
 8009198:	b29b      	uxth	r3, r3
 800919a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800919e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80091a2:	853b      	strh	r3, [r7, #40]	@ 0x28
 80091a4:	687a      	ldr	r2, [r7, #4]
 80091a6:	683b      	ldr	r3, [r7, #0]
 80091a8:	781b      	ldrb	r3, [r3, #0]
 80091aa:	009b      	lsls	r3, r3, #2
 80091ac:	441a      	add	r2, r3
 80091ae:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 80091b0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80091b4:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80091b8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80091bc:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80091c0:	b29b      	uxth	r3, r3
 80091c2:	8013      	strh	r3, [r2, #0]
 80091c4:	687a      	ldr	r2, [r7, #4]
 80091c6:	683b      	ldr	r3, [r7, #0]
 80091c8:	781b      	ldrb	r3, [r3, #0]
 80091ca:	009b      	lsls	r3, r3, #2
 80091cc:	4413      	add	r3, r2
 80091ce:	881b      	ldrh	r3, [r3, #0]
 80091d0:	b29b      	uxth	r3, r3
 80091d2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80091d6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80091da:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80091dc:	687a      	ldr	r2, [r7, #4]
 80091de:	683b      	ldr	r3, [r7, #0]
 80091e0:	781b      	ldrb	r3, [r3, #0]
 80091e2:	009b      	lsls	r3, r3, #2
 80091e4:	441a      	add	r2, r3
 80091e6:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80091e8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80091ec:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80091f0:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80091f4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80091f8:	b29b      	uxth	r3, r3
 80091fa:	8013      	strh	r3, [r2, #0]
 80091fc:	687a      	ldr	r2, [r7, #4]
 80091fe:	683b      	ldr	r3, [r7, #0]
 8009200:	781b      	ldrb	r3, [r3, #0]
 8009202:	009b      	lsls	r3, r3, #2
 8009204:	4413      	add	r3, r2
 8009206:	881b      	ldrh	r3, [r3, #0]
 8009208:	b29b      	uxth	r3, r3
 800920a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800920e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009212:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8009214:	687a      	ldr	r2, [r7, #4]
 8009216:	683b      	ldr	r3, [r7, #0]
 8009218:	781b      	ldrb	r3, [r3, #0]
 800921a:	009b      	lsls	r3, r3, #2
 800921c:	441a      	add	r2, r3
 800921e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8009220:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8009224:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8009228:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800922c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009230:	b29b      	uxth	r3, r3
 8009232:	8013      	strh	r3, [r2, #0]
 8009234:	687a      	ldr	r2, [r7, #4]
 8009236:	683b      	ldr	r3, [r7, #0]
 8009238:	781b      	ldrb	r3, [r3, #0]
 800923a:	009b      	lsls	r3, r3, #2
 800923c:	4413      	add	r3, r2
 800923e:	881b      	ldrh	r3, [r3, #0]
 8009240:	b29b      	uxth	r3, r3
 8009242:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8009246:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800924a:	847b      	strh	r3, [r7, #34]	@ 0x22
 800924c:	687a      	ldr	r2, [r7, #4]
 800924e:	683b      	ldr	r3, [r7, #0]
 8009250:	781b      	ldrb	r3, [r3, #0]
 8009252:	009b      	lsls	r3, r3, #2
 8009254:	441a      	add	r2, r3
 8009256:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8009258:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800925c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8009260:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009264:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009268:	b29b      	uxth	r3, r3
 800926a:	8013      	strh	r3, [r2, #0]
 800926c:	2300      	movs	r3, #0
 800926e:	4618      	mov	r0, r3
 8009270:	3734      	adds	r7, #52	@ 0x34
 8009272:	46bd      	mov	sp, r7
 8009274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009278:	4770      	bx	lr

0800927a <USB_EPStartXfer>:
 800927a:	b580      	push	{r7, lr}
 800927c:	b0c2      	sub	sp, #264	@ 0x108
 800927e:	af00      	add	r7, sp, #0
 8009280:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009284:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009288:	6018      	str	r0, [r3, #0]
 800928a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800928e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009292:	6019      	str	r1, [r3, #0]
 8009294:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009298:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	785b      	ldrb	r3, [r3, #1]
 80092a0:	2b01      	cmp	r3, #1
 80092a2:	f040 86b7 	bne.w	800a014 <USB_EPStartXfer+0xd9a>
 80092a6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092aa:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092ae:	681b      	ldr	r3, [r3, #0]
 80092b0:	699a      	ldr	r2, [r3, #24]
 80092b2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092b6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092ba:	681b      	ldr	r3, [r3, #0]
 80092bc:	691b      	ldr	r3, [r3, #16]
 80092be:	429a      	cmp	r2, r3
 80092c0:	d908      	bls.n	80092d4 <USB_EPStartXfer+0x5a>
 80092c2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092c6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092ca:	681b      	ldr	r3, [r3, #0]
 80092cc:	691b      	ldr	r3, [r3, #16]
 80092ce:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 80092d2:	e007      	b.n	80092e4 <USB_EPStartXfer+0x6a>
 80092d4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092d8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092dc:	681b      	ldr	r3, [r3, #0]
 80092de:	699b      	ldr	r3, [r3, #24]
 80092e0:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 80092e4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092e8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092ec:	681b      	ldr	r3, [r3, #0]
 80092ee:	7b1b      	ldrb	r3, [r3, #12]
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	d13a      	bne.n	800936a <USB_EPStartXfer+0xf0>
 80092f4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80092f8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80092fc:	681b      	ldr	r3, [r3, #0]
 80092fe:	6959      	ldr	r1, [r3, #20]
 8009300:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009304:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009308:	681b      	ldr	r3, [r3, #0]
 800930a:	88da      	ldrh	r2, [r3, #6]
 800930c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009310:	b29b      	uxth	r3, r3
 8009312:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8009316:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 800931a:	6800      	ldr	r0, [r0, #0]
 800931c:	f001 fc8d 	bl	800ac3a <USB_WritePMA>
 8009320:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009324:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009328:	681b      	ldr	r3, [r3, #0]
 800932a:	613b      	str	r3, [r7, #16]
 800932c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009330:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009334:	681b      	ldr	r3, [r3, #0]
 8009336:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800933a:	b29b      	uxth	r3, r3
 800933c:	461a      	mov	r2, r3
 800933e:	693b      	ldr	r3, [r7, #16]
 8009340:	4413      	add	r3, r2
 8009342:	613b      	str	r3, [r7, #16]
 8009344:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009348:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800934c:	681b      	ldr	r3, [r3, #0]
 800934e:	781b      	ldrb	r3, [r3, #0]
 8009350:	011a      	lsls	r2, r3, #4
 8009352:	693b      	ldr	r3, [r7, #16]
 8009354:	4413      	add	r3, r2
 8009356:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800935a:	60fb      	str	r3, [r7, #12]
 800935c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009360:	b29a      	uxth	r2, r3
 8009362:	68fb      	ldr	r3, [r7, #12]
 8009364:	801a      	strh	r2, [r3, #0]
 8009366:	f000 be1f 	b.w	8009fa8 <USB_EPStartXfer+0xd2e>
 800936a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800936e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009372:	681b      	ldr	r3, [r3, #0]
 8009374:	78db      	ldrb	r3, [r3, #3]
 8009376:	2b02      	cmp	r3, #2
 8009378:	f040 8462 	bne.w	8009c40 <USB_EPStartXfer+0x9c6>
 800937c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009380:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009384:	681b      	ldr	r3, [r3, #0]
 8009386:	6a1a      	ldr	r2, [r3, #32]
 8009388:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800938c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009390:	681b      	ldr	r3, [r3, #0]
 8009392:	691b      	ldr	r3, [r3, #16]
 8009394:	429a      	cmp	r2, r3
 8009396:	f240 83df 	bls.w	8009b58 <USB_EPStartXfer+0x8de>
 800939a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800939e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80093a2:	681a      	ldr	r2, [r3, #0]
 80093a4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80093a8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80093ac:	681b      	ldr	r3, [r3, #0]
 80093ae:	781b      	ldrb	r3, [r3, #0]
 80093b0:	009b      	lsls	r3, r3, #2
 80093b2:	4413      	add	r3, r2
 80093b4:	881b      	ldrh	r3, [r3, #0]
 80093b6:	b29b      	uxth	r3, r3
 80093b8:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80093bc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80093c0:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 80093c4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80093c8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80093cc:	681a      	ldr	r2, [r3, #0]
 80093ce:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80093d2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80093d6:	681b      	ldr	r3, [r3, #0]
 80093d8:	781b      	ldrb	r3, [r3, #0]
 80093da:	009b      	lsls	r3, r3, #2
 80093dc:	441a      	add	r2, r3
 80093de:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 80093e2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80093e6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80093ea:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 80093ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80093f2:	b29b      	uxth	r3, r3
 80093f4:	8013      	strh	r3, [r2, #0]
 80093f6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80093fa:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80093fe:	681b      	ldr	r3, [r3, #0]
 8009400:	6a1a      	ldr	r2, [r3, #32]
 8009402:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009406:	1ad2      	subs	r2, r2, r3
 8009408:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800940c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009410:	681b      	ldr	r3, [r3, #0]
 8009412:	621a      	str	r2, [r3, #32]
 8009414:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009418:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800941c:	681a      	ldr	r2, [r3, #0]
 800941e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009422:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009426:	681b      	ldr	r3, [r3, #0]
 8009428:	781b      	ldrb	r3, [r3, #0]
 800942a:	009b      	lsls	r3, r3, #2
 800942c:	4413      	add	r3, r2
 800942e:	881b      	ldrh	r3, [r3, #0]
 8009430:	b29b      	uxth	r3, r3
 8009432:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009436:	2b00      	cmp	r3, #0
 8009438:	f000 81c7 	beq.w	80097ca <USB_EPStartXfer+0x550>
 800943c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009440:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	633b      	str	r3, [r7, #48]	@ 0x30
 8009448:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800944c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009450:	681b      	ldr	r3, [r3, #0]
 8009452:	785b      	ldrb	r3, [r3, #1]
 8009454:	2b00      	cmp	r3, #0
 8009456:	d177      	bne.n	8009548 <USB_EPStartXfer+0x2ce>
 8009458:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800945c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009460:	681b      	ldr	r3, [r3, #0]
 8009462:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009464:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009468:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800946c:	681b      	ldr	r3, [r3, #0]
 800946e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009472:	b29b      	uxth	r3, r3
 8009474:	461a      	mov	r2, r3
 8009476:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009478:	4413      	add	r3, r2
 800947a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800947c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009480:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009484:	681b      	ldr	r3, [r3, #0]
 8009486:	781b      	ldrb	r3, [r3, #0]
 8009488:	011a      	lsls	r2, r3, #4
 800948a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800948c:	4413      	add	r3, r2
 800948e:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009492:	627b      	str	r3, [r7, #36]	@ 0x24
 8009494:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009496:	881b      	ldrh	r3, [r3, #0]
 8009498:	b29b      	uxth	r3, r3
 800949a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800949e:	b29a      	uxth	r2, r3
 80094a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80094a2:	801a      	strh	r2, [r3, #0]
 80094a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80094a8:	2b00      	cmp	r3, #0
 80094aa:	d10a      	bne.n	80094c2 <USB_EPStartXfer+0x248>
 80094ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80094ae:	881b      	ldrh	r3, [r3, #0]
 80094b0:	b29b      	uxth	r3, r3
 80094b2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80094b6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80094ba:	b29a      	uxth	r2, r3
 80094bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80094be:	801a      	strh	r2, [r3, #0]
 80094c0:	e067      	b.n	8009592 <USB_EPStartXfer+0x318>
 80094c2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80094c6:	2b3e      	cmp	r3, #62	@ 0x3e
 80094c8:	d81c      	bhi.n	8009504 <USB_EPStartXfer+0x28a>
 80094ca:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80094ce:	085b      	lsrs	r3, r3, #1
 80094d0:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 80094d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80094d8:	f003 0301 	and.w	r3, r3, #1
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d004      	beq.n	80094ea <USB_EPStartXfer+0x270>
 80094e0:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 80094e4:	3301      	adds	r3, #1
 80094e6:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 80094ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80094ec:	881b      	ldrh	r3, [r3, #0]
 80094ee:	b29a      	uxth	r2, r3
 80094f0:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 80094f4:	b29b      	uxth	r3, r3
 80094f6:	029b      	lsls	r3, r3, #10
 80094f8:	b29b      	uxth	r3, r3
 80094fa:	4313      	orrs	r3, r2
 80094fc:	b29a      	uxth	r2, r3
 80094fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009500:	801a      	strh	r2, [r3, #0]
 8009502:	e046      	b.n	8009592 <USB_EPStartXfer+0x318>
 8009504:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009508:	095b      	lsrs	r3, r3, #5
 800950a:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 800950e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009512:	f003 031f 	and.w	r3, r3, #31
 8009516:	2b00      	cmp	r3, #0
 8009518:	d104      	bne.n	8009524 <USB_EPStartXfer+0x2aa>
 800951a:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 800951e:	3b01      	subs	r3, #1
 8009520:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8009524:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009526:	881b      	ldrh	r3, [r3, #0]
 8009528:	b29a      	uxth	r2, r3
 800952a:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 800952e:	b29b      	uxth	r3, r3
 8009530:	029b      	lsls	r3, r3, #10
 8009532:	b29b      	uxth	r3, r3
 8009534:	4313      	orrs	r3, r2
 8009536:	b29b      	uxth	r3, r3
 8009538:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800953c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009540:	b29a      	uxth	r2, r3
 8009542:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009544:	801a      	strh	r2, [r3, #0]
 8009546:	e024      	b.n	8009592 <USB_EPStartXfer+0x318>
 8009548:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800954c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	785b      	ldrb	r3, [r3, #1]
 8009554:	2b01      	cmp	r3, #1
 8009556:	d11c      	bne.n	8009592 <USB_EPStartXfer+0x318>
 8009558:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800955c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009566:	b29b      	uxth	r3, r3
 8009568:	461a      	mov	r2, r3
 800956a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800956c:	4413      	add	r3, r2
 800956e:	633b      	str	r3, [r7, #48]	@ 0x30
 8009570:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009574:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009578:	681b      	ldr	r3, [r3, #0]
 800957a:	781b      	ldrb	r3, [r3, #0]
 800957c:	011a      	lsls	r2, r3, #4
 800957e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009580:	4413      	add	r3, r2
 8009582:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009586:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009588:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800958c:	b29a      	uxth	r2, r3
 800958e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009590:	801a      	strh	r2, [r3, #0]
 8009592:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009596:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	895b      	ldrh	r3, [r3, #10]
 800959e:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 80095a2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80095a6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80095aa:	681b      	ldr	r3, [r3, #0]
 80095ac:	6959      	ldr	r1, [r3, #20]
 80095ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80095b2:	b29b      	uxth	r3, r3
 80095b4:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 80095b8:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 80095bc:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 80095c0:	6800      	ldr	r0, [r0, #0]
 80095c2:	f001 fb3a 	bl	800ac3a <USB_WritePMA>
 80095c6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80095ca:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	695a      	ldr	r2, [r3, #20]
 80095d2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80095d6:	441a      	add	r2, r3
 80095d8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80095dc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80095e0:	681b      	ldr	r3, [r3, #0]
 80095e2:	615a      	str	r2, [r3, #20]
 80095e4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80095e8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	6a1a      	ldr	r2, [r3, #32]
 80095f0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80095f4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	691b      	ldr	r3, [r3, #16]
 80095fc:	429a      	cmp	r2, r3
 80095fe:	d90f      	bls.n	8009620 <USB_EPStartXfer+0x3a6>
 8009600:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009604:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	6a1a      	ldr	r2, [r3, #32]
 800960c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009610:	1ad2      	subs	r2, r2, r3
 8009612:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009616:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800961a:	681b      	ldr	r3, [r3, #0]
 800961c:	621a      	str	r2, [r3, #32]
 800961e:	e00e      	b.n	800963e <USB_EPStartXfer+0x3c4>
 8009620:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009624:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009628:	681b      	ldr	r3, [r3, #0]
 800962a:	6a1b      	ldr	r3, [r3, #32]
 800962c:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8009630:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009634:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	2200      	movs	r2, #0
 800963c:	621a      	str	r2, [r3, #32]
 800963e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009642:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009646:	681b      	ldr	r3, [r3, #0]
 8009648:	785b      	ldrb	r3, [r3, #1]
 800964a:	2b00      	cmp	r3, #0
 800964c:	d177      	bne.n	800973e <USB_EPStartXfer+0x4c4>
 800964e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009652:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009656:	681b      	ldr	r3, [r3, #0]
 8009658:	61bb      	str	r3, [r7, #24]
 800965a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800965e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009662:	681b      	ldr	r3, [r3, #0]
 8009664:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009668:	b29b      	uxth	r3, r3
 800966a:	461a      	mov	r2, r3
 800966c:	69bb      	ldr	r3, [r7, #24]
 800966e:	4413      	add	r3, r2
 8009670:	61bb      	str	r3, [r7, #24]
 8009672:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009676:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	781b      	ldrb	r3, [r3, #0]
 800967e:	011a      	lsls	r2, r3, #4
 8009680:	69bb      	ldr	r3, [r7, #24]
 8009682:	4413      	add	r3, r2
 8009684:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009688:	617b      	str	r3, [r7, #20]
 800968a:	697b      	ldr	r3, [r7, #20]
 800968c:	881b      	ldrh	r3, [r3, #0]
 800968e:	b29b      	uxth	r3, r3
 8009690:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009694:	b29a      	uxth	r2, r3
 8009696:	697b      	ldr	r3, [r7, #20]
 8009698:	801a      	strh	r2, [r3, #0]
 800969a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d10a      	bne.n	80096b8 <USB_EPStartXfer+0x43e>
 80096a2:	697b      	ldr	r3, [r7, #20]
 80096a4:	881b      	ldrh	r3, [r3, #0]
 80096a6:	b29b      	uxth	r3, r3
 80096a8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80096ac:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80096b0:	b29a      	uxth	r2, r3
 80096b2:	697b      	ldr	r3, [r7, #20]
 80096b4:	801a      	strh	r2, [r3, #0]
 80096b6:	e06d      	b.n	8009794 <USB_EPStartXfer+0x51a>
 80096b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80096bc:	2b3e      	cmp	r3, #62	@ 0x3e
 80096be:	d81c      	bhi.n	80096fa <USB_EPStartXfer+0x480>
 80096c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80096c4:	085b      	lsrs	r3, r3, #1
 80096c6:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80096ca:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80096ce:	f003 0301 	and.w	r3, r3, #1
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	d004      	beq.n	80096e0 <USB_EPStartXfer+0x466>
 80096d6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80096da:	3301      	adds	r3, #1
 80096dc:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80096e0:	697b      	ldr	r3, [r7, #20]
 80096e2:	881b      	ldrh	r3, [r3, #0]
 80096e4:	b29a      	uxth	r2, r3
 80096e6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80096ea:	b29b      	uxth	r3, r3
 80096ec:	029b      	lsls	r3, r3, #10
 80096ee:	b29b      	uxth	r3, r3
 80096f0:	4313      	orrs	r3, r2
 80096f2:	b29a      	uxth	r2, r3
 80096f4:	697b      	ldr	r3, [r7, #20]
 80096f6:	801a      	strh	r2, [r3, #0]
 80096f8:	e04c      	b.n	8009794 <USB_EPStartXfer+0x51a>
 80096fa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80096fe:	095b      	lsrs	r3, r3, #5
 8009700:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8009704:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009708:	f003 031f 	and.w	r3, r3, #31
 800970c:	2b00      	cmp	r3, #0
 800970e:	d104      	bne.n	800971a <USB_EPStartXfer+0x4a0>
 8009710:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009714:	3b01      	subs	r3, #1
 8009716:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 800971a:	697b      	ldr	r3, [r7, #20]
 800971c:	881b      	ldrh	r3, [r3, #0]
 800971e:	b29a      	uxth	r2, r3
 8009720:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009724:	b29b      	uxth	r3, r3
 8009726:	029b      	lsls	r3, r3, #10
 8009728:	b29b      	uxth	r3, r3
 800972a:	4313      	orrs	r3, r2
 800972c:	b29b      	uxth	r3, r3
 800972e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009732:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009736:	b29a      	uxth	r2, r3
 8009738:	697b      	ldr	r3, [r7, #20]
 800973a:	801a      	strh	r2, [r3, #0]
 800973c:	e02a      	b.n	8009794 <USB_EPStartXfer+0x51a>
 800973e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009742:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009746:	681b      	ldr	r3, [r3, #0]
 8009748:	785b      	ldrb	r3, [r3, #1]
 800974a:	2b01      	cmp	r3, #1
 800974c:	d122      	bne.n	8009794 <USB_EPStartXfer+0x51a>
 800974e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009752:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009756:	681b      	ldr	r3, [r3, #0]
 8009758:	623b      	str	r3, [r7, #32]
 800975a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800975e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009762:	681b      	ldr	r3, [r3, #0]
 8009764:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009768:	b29b      	uxth	r3, r3
 800976a:	461a      	mov	r2, r3
 800976c:	6a3b      	ldr	r3, [r7, #32]
 800976e:	4413      	add	r3, r2
 8009770:	623b      	str	r3, [r7, #32]
 8009772:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009776:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800977a:	681b      	ldr	r3, [r3, #0]
 800977c:	781b      	ldrb	r3, [r3, #0]
 800977e:	011a      	lsls	r2, r3, #4
 8009780:	6a3b      	ldr	r3, [r7, #32]
 8009782:	4413      	add	r3, r2
 8009784:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009788:	61fb      	str	r3, [r7, #28]
 800978a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800978e:	b29a      	uxth	r2, r3
 8009790:	69fb      	ldr	r3, [r7, #28]
 8009792:	801a      	strh	r2, [r3, #0]
 8009794:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009798:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800979c:	681b      	ldr	r3, [r3, #0]
 800979e:	891b      	ldrh	r3, [r3, #8]
 80097a0:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 80097a4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80097a8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80097ac:	681b      	ldr	r3, [r3, #0]
 80097ae:	6959      	ldr	r1, [r3, #20]
 80097b0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80097b4:	b29b      	uxth	r3, r3
 80097b6:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 80097ba:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 80097be:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 80097c2:	6800      	ldr	r0, [r0, #0]
 80097c4:	f001 fa39 	bl	800ac3a <USB_WritePMA>
 80097c8:	e3ee      	b.n	8009fa8 <USB_EPStartXfer+0xd2e>
 80097ca:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80097ce:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80097d2:	681b      	ldr	r3, [r3, #0]
 80097d4:	785b      	ldrb	r3, [r3, #1]
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	d177      	bne.n	80098ca <USB_EPStartXfer+0x650>
 80097da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80097de:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80097e2:	681b      	ldr	r3, [r3, #0]
 80097e4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80097e6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80097ea:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80097ee:	681b      	ldr	r3, [r3, #0]
 80097f0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80097f4:	b29b      	uxth	r3, r3
 80097f6:	461a      	mov	r2, r3
 80097f8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80097fa:	4413      	add	r3, r2
 80097fc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80097fe:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009802:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009806:	681b      	ldr	r3, [r3, #0]
 8009808:	781b      	ldrb	r3, [r3, #0]
 800980a:	011a      	lsls	r2, r3, #4
 800980c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800980e:	4413      	add	r3, r2
 8009810:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009814:	647b      	str	r3, [r7, #68]	@ 0x44
 8009816:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009818:	881b      	ldrh	r3, [r3, #0]
 800981a:	b29b      	uxth	r3, r3
 800981c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009820:	b29a      	uxth	r2, r3
 8009822:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009824:	801a      	strh	r2, [r3, #0]
 8009826:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800982a:	2b00      	cmp	r3, #0
 800982c:	d10a      	bne.n	8009844 <USB_EPStartXfer+0x5ca>
 800982e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009830:	881b      	ldrh	r3, [r3, #0]
 8009832:	b29b      	uxth	r3, r3
 8009834:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009838:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800983c:	b29a      	uxth	r2, r3
 800983e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009840:	801a      	strh	r2, [r3, #0]
 8009842:	e06d      	b.n	8009920 <USB_EPStartXfer+0x6a6>
 8009844:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009848:	2b3e      	cmp	r3, #62	@ 0x3e
 800984a:	d81c      	bhi.n	8009886 <USB_EPStartXfer+0x60c>
 800984c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009850:	085b      	lsrs	r3, r3, #1
 8009852:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8009856:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800985a:	f003 0301 	and.w	r3, r3, #1
 800985e:	2b00      	cmp	r3, #0
 8009860:	d004      	beq.n	800986c <USB_EPStartXfer+0x5f2>
 8009862:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8009866:	3301      	adds	r3, #1
 8009868:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800986c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800986e:	881b      	ldrh	r3, [r3, #0]
 8009870:	b29a      	uxth	r2, r3
 8009872:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8009876:	b29b      	uxth	r3, r3
 8009878:	029b      	lsls	r3, r3, #10
 800987a:	b29b      	uxth	r3, r3
 800987c:	4313      	orrs	r3, r2
 800987e:	b29a      	uxth	r2, r3
 8009880:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009882:	801a      	strh	r2, [r3, #0]
 8009884:	e04c      	b.n	8009920 <USB_EPStartXfer+0x6a6>
 8009886:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800988a:	095b      	lsrs	r3, r3, #5
 800988c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8009890:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009894:	f003 031f 	and.w	r3, r3, #31
 8009898:	2b00      	cmp	r3, #0
 800989a:	d104      	bne.n	80098a6 <USB_EPStartXfer+0x62c>
 800989c:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80098a0:	3b01      	subs	r3, #1
 80098a2:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80098a6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80098a8:	881b      	ldrh	r3, [r3, #0]
 80098aa:	b29a      	uxth	r2, r3
 80098ac:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80098b0:	b29b      	uxth	r3, r3
 80098b2:	029b      	lsls	r3, r3, #10
 80098b4:	b29b      	uxth	r3, r3
 80098b6:	4313      	orrs	r3, r2
 80098b8:	b29b      	uxth	r3, r3
 80098ba:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80098be:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80098c2:	b29a      	uxth	r2, r3
 80098c4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80098c6:	801a      	strh	r2, [r3, #0]
 80098c8:	e02a      	b.n	8009920 <USB_EPStartXfer+0x6a6>
 80098ca:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80098ce:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80098d2:	681b      	ldr	r3, [r3, #0]
 80098d4:	785b      	ldrb	r3, [r3, #1]
 80098d6:	2b01      	cmp	r3, #1
 80098d8:	d122      	bne.n	8009920 <USB_EPStartXfer+0x6a6>
 80098da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80098de:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80098e2:	681b      	ldr	r3, [r3, #0]
 80098e4:	653b      	str	r3, [r7, #80]	@ 0x50
 80098e6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80098ea:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80098ee:	681b      	ldr	r3, [r3, #0]
 80098f0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80098f4:	b29b      	uxth	r3, r3
 80098f6:	461a      	mov	r2, r3
 80098f8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80098fa:	4413      	add	r3, r2
 80098fc:	653b      	str	r3, [r7, #80]	@ 0x50
 80098fe:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009902:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	781b      	ldrb	r3, [r3, #0]
 800990a:	011a      	lsls	r2, r3, #4
 800990c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800990e:	4413      	add	r3, r2
 8009910:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009914:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009916:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800991a:	b29a      	uxth	r2, r3
 800991c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800991e:	801a      	strh	r2, [r3, #0]
 8009920:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009924:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009928:	681b      	ldr	r3, [r3, #0]
 800992a:	891b      	ldrh	r3, [r3, #8]
 800992c:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8009930:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009934:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009938:	681b      	ldr	r3, [r3, #0]
 800993a:	6959      	ldr	r1, [r3, #20]
 800993c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009940:	b29b      	uxth	r3, r3
 8009942:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8009946:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 800994a:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 800994e:	6800      	ldr	r0, [r0, #0]
 8009950:	f001 f973 	bl	800ac3a <USB_WritePMA>
 8009954:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009958:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	695a      	ldr	r2, [r3, #20]
 8009960:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009964:	441a      	add	r2, r3
 8009966:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800996a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800996e:	681b      	ldr	r3, [r3, #0]
 8009970:	615a      	str	r2, [r3, #20]
 8009972:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009976:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	6a1a      	ldr	r2, [r3, #32]
 800997e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009982:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	691b      	ldr	r3, [r3, #16]
 800998a:	429a      	cmp	r2, r3
 800998c:	d90f      	bls.n	80099ae <USB_EPStartXfer+0x734>
 800998e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009992:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	6a1a      	ldr	r2, [r3, #32]
 800999a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800999e:	1ad2      	subs	r2, r2, r3
 80099a0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099a4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80099a8:	681b      	ldr	r3, [r3, #0]
 80099aa:	621a      	str	r2, [r3, #32]
 80099ac:	e00e      	b.n	80099cc <USB_EPStartXfer+0x752>
 80099ae:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099b2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80099b6:	681b      	ldr	r3, [r3, #0]
 80099b8:	6a1b      	ldr	r3, [r3, #32]
 80099ba:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 80099be:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099c2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80099c6:	681b      	ldr	r3, [r3, #0]
 80099c8:	2200      	movs	r2, #0
 80099ca:	621a      	str	r2, [r3, #32]
 80099cc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099d0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80099d4:	681b      	ldr	r3, [r3, #0]
 80099d6:	643b      	str	r3, [r7, #64]	@ 0x40
 80099d8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099dc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80099e0:	681b      	ldr	r3, [r3, #0]
 80099e2:	785b      	ldrb	r3, [r3, #1]
 80099e4:	2b00      	cmp	r3, #0
 80099e6:	d177      	bne.n	8009ad8 <USB_EPStartXfer+0x85e>
 80099e8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099ec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80099f0:	681b      	ldr	r3, [r3, #0]
 80099f2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80099f4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80099f8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80099fc:	681b      	ldr	r3, [r3, #0]
 80099fe:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009a02:	b29b      	uxth	r3, r3
 8009a04:	461a      	mov	r2, r3
 8009a06:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a08:	4413      	add	r3, r2
 8009a0a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009a0c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009a10:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009a14:	681b      	ldr	r3, [r3, #0]
 8009a16:	781b      	ldrb	r3, [r3, #0]
 8009a18:	011a      	lsls	r2, r3, #4
 8009a1a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a1c:	4413      	add	r3, r2
 8009a1e:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009a22:	637b      	str	r3, [r7, #52]	@ 0x34
 8009a24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a26:	881b      	ldrh	r3, [r3, #0]
 8009a28:	b29b      	uxth	r3, r3
 8009a2a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009a2e:	b29a      	uxth	r2, r3
 8009a30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a32:	801a      	strh	r2, [r3, #0]
 8009a34:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009a38:	2b00      	cmp	r3, #0
 8009a3a:	d10a      	bne.n	8009a52 <USB_EPStartXfer+0x7d8>
 8009a3c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a3e:	881b      	ldrh	r3, [r3, #0]
 8009a40:	b29b      	uxth	r3, r3
 8009a42:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009a46:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009a4a:	b29a      	uxth	r2, r3
 8009a4c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a4e:	801a      	strh	r2, [r3, #0]
 8009a50:	e067      	b.n	8009b22 <USB_EPStartXfer+0x8a8>
 8009a52:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009a56:	2b3e      	cmp	r3, #62	@ 0x3e
 8009a58:	d81c      	bhi.n	8009a94 <USB_EPStartXfer+0x81a>
 8009a5a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009a5e:	085b      	lsrs	r3, r3, #1
 8009a60:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8009a64:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009a68:	f003 0301 	and.w	r3, r3, #1
 8009a6c:	2b00      	cmp	r3, #0
 8009a6e:	d004      	beq.n	8009a7a <USB_EPStartXfer+0x800>
 8009a70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009a74:	3301      	adds	r3, #1
 8009a76:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8009a7a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a7c:	881b      	ldrh	r3, [r3, #0]
 8009a7e:	b29a      	uxth	r2, r3
 8009a80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009a84:	b29b      	uxth	r3, r3
 8009a86:	029b      	lsls	r3, r3, #10
 8009a88:	b29b      	uxth	r3, r3
 8009a8a:	4313      	orrs	r3, r2
 8009a8c:	b29a      	uxth	r2, r3
 8009a8e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009a90:	801a      	strh	r2, [r3, #0]
 8009a92:	e046      	b.n	8009b22 <USB_EPStartXfer+0x8a8>
 8009a94:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009a98:	095b      	lsrs	r3, r3, #5
 8009a9a:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8009a9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009aa2:	f003 031f 	and.w	r3, r3, #31
 8009aa6:	2b00      	cmp	r3, #0
 8009aa8:	d104      	bne.n	8009ab4 <USB_EPStartXfer+0x83a>
 8009aaa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009aae:	3b01      	subs	r3, #1
 8009ab0:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8009ab4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009ab6:	881b      	ldrh	r3, [r3, #0]
 8009ab8:	b29a      	uxth	r2, r3
 8009aba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009abe:	b29b      	uxth	r3, r3
 8009ac0:	029b      	lsls	r3, r3, #10
 8009ac2:	b29b      	uxth	r3, r3
 8009ac4:	4313      	orrs	r3, r2
 8009ac6:	b29b      	uxth	r3, r3
 8009ac8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009acc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009ad0:	b29a      	uxth	r2, r3
 8009ad2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009ad4:	801a      	strh	r2, [r3, #0]
 8009ad6:	e024      	b.n	8009b22 <USB_EPStartXfer+0x8a8>
 8009ad8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009adc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009ae0:	681b      	ldr	r3, [r3, #0]
 8009ae2:	785b      	ldrb	r3, [r3, #1]
 8009ae4:	2b01      	cmp	r3, #1
 8009ae6:	d11c      	bne.n	8009b22 <USB_EPStartXfer+0x8a8>
 8009ae8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009aec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009af0:	681b      	ldr	r3, [r3, #0]
 8009af2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009af6:	b29b      	uxth	r3, r3
 8009af8:	461a      	mov	r2, r3
 8009afa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8009afc:	4413      	add	r3, r2
 8009afe:	643b      	str	r3, [r7, #64]	@ 0x40
 8009b00:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b04:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	781b      	ldrb	r3, [r3, #0]
 8009b0c:	011a      	lsls	r2, r3, #4
 8009b0e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8009b10:	4413      	add	r3, r2
 8009b12:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009b16:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009b1c:	b29a      	uxth	r2, r3
 8009b1e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009b20:	801a      	strh	r2, [r3, #0]
 8009b22:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b26:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	895b      	ldrh	r3, [r3, #10]
 8009b2e:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8009b32:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b36:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009b3a:	681b      	ldr	r3, [r3, #0]
 8009b3c:	6959      	ldr	r1, [r3, #20]
 8009b3e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009b42:	b29b      	uxth	r3, r3
 8009b44:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8009b48:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8009b4c:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8009b50:	6800      	ldr	r0, [r0, #0]
 8009b52:	f001 f872 	bl	800ac3a <USB_WritePMA>
 8009b56:	e227      	b.n	8009fa8 <USB_EPStartXfer+0xd2e>
 8009b58:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b5c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009b60:	681b      	ldr	r3, [r3, #0]
 8009b62:	6a1b      	ldr	r3, [r3, #32]
 8009b64:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8009b68:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b6c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009b70:	681a      	ldr	r2, [r3, #0]
 8009b72:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b76:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009b7a:	681b      	ldr	r3, [r3, #0]
 8009b7c:	781b      	ldrb	r3, [r3, #0]
 8009b7e:	009b      	lsls	r3, r3, #2
 8009b80:	4413      	add	r3, r2
 8009b82:	881b      	ldrh	r3, [r3, #0]
 8009b84:	b29b      	uxth	r3, r3
 8009b86:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 8009b8a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009b8e:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
 8009b92:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009b96:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009b9a:	681a      	ldr	r2, [r3, #0]
 8009b9c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009ba0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009ba4:	681b      	ldr	r3, [r3, #0]
 8009ba6:	781b      	ldrb	r3, [r3, #0]
 8009ba8:	009b      	lsls	r3, r3, #2
 8009baa:	441a      	add	r2, r3
 8009bac:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 8009bb0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8009bb4:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8009bb8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009bbc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009bc0:	b29b      	uxth	r3, r3
 8009bc2:	8013      	strh	r3, [r2, #0]
 8009bc4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009bc8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009bcc:	681b      	ldr	r3, [r3, #0]
 8009bce:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8009bd0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009bd4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009bd8:	681b      	ldr	r3, [r3, #0]
 8009bda:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009bde:	b29b      	uxth	r3, r3
 8009be0:	461a      	mov	r2, r3
 8009be2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009be4:	4413      	add	r3, r2
 8009be6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8009be8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009bec:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	781b      	ldrb	r3, [r3, #0]
 8009bf4:	011a      	lsls	r2, r3, #4
 8009bf6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009bf8:	4413      	add	r3, r2
 8009bfa:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009bfe:	65bb      	str	r3, [r7, #88]	@ 0x58
 8009c00:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009c04:	b29a      	uxth	r2, r3
 8009c06:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009c08:	801a      	strh	r2, [r3, #0]
 8009c0a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c0e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c12:	681b      	ldr	r3, [r3, #0]
 8009c14:	891b      	ldrh	r3, [r3, #8]
 8009c16:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8009c1a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c1e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	6959      	ldr	r1, [r3, #20]
 8009c26:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009c2a:	b29b      	uxth	r3, r3
 8009c2c:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8009c30:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8009c34:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8009c38:	6800      	ldr	r0, [r0, #0]
 8009c3a:	f000 fffe 	bl	800ac3a <USB_WritePMA>
 8009c3e:	e1b3      	b.n	8009fa8 <USB_EPStartXfer+0xd2e>
 8009c40:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c44:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c48:	681b      	ldr	r3, [r3, #0]
 8009c4a:	6a1a      	ldr	r2, [r3, #32]
 8009c4c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009c50:	1ad2      	subs	r2, r2, r3
 8009c52:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c56:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c5a:	681b      	ldr	r3, [r3, #0]
 8009c5c:	621a      	str	r2, [r3, #32]
 8009c5e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c62:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009c66:	681a      	ldr	r2, [r3, #0]
 8009c68:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c6c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c70:	681b      	ldr	r3, [r3, #0]
 8009c72:	781b      	ldrb	r3, [r3, #0]
 8009c74:	009b      	lsls	r3, r3, #2
 8009c76:	4413      	add	r3, r2
 8009c78:	881b      	ldrh	r3, [r3, #0]
 8009c7a:	b29b      	uxth	r3, r3
 8009c7c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009c80:	2b00      	cmp	r3, #0
 8009c82:	f000 80c6 	beq.w	8009e12 <USB_EPStartXfer+0xb98>
 8009c86:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c8a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	673b      	str	r3, [r7, #112]	@ 0x70
 8009c92:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009c96:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009c9a:	681b      	ldr	r3, [r3, #0]
 8009c9c:	785b      	ldrb	r3, [r3, #1]
 8009c9e:	2b00      	cmp	r3, #0
 8009ca0:	d177      	bne.n	8009d92 <USB_EPStartXfer+0xb18>
 8009ca2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009ca6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	66bb      	str	r3, [r7, #104]	@ 0x68
 8009cae:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009cb2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009cb6:	681b      	ldr	r3, [r3, #0]
 8009cb8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009cbc:	b29b      	uxth	r3, r3
 8009cbe:	461a      	mov	r2, r3
 8009cc0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8009cc2:	4413      	add	r3, r2
 8009cc4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8009cc6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009cca:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009cce:	681b      	ldr	r3, [r3, #0]
 8009cd0:	781b      	ldrb	r3, [r3, #0]
 8009cd2:	011a      	lsls	r2, r3, #4
 8009cd4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8009cd6:	4413      	add	r3, r2
 8009cd8:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009cdc:	667b      	str	r3, [r7, #100]	@ 0x64
 8009cde:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009ce0:	881b      	ldrh	r3, [r3, #0]
 8009ce2:	b29b      	uxth	r3, r3
 8009ce4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009ce8:	b29a      	uxth	r2, r3
 8009cea:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009cec:	801a      	strh	r2, [r3, #0]
 8009cee:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009cf2:	2b00      	cmp	r3, #0
 8009cf4:	d10a      	bne.n	8009d0c <USB_EPStartXfer+0xa92>
 8009cf6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009cf8:	881b      	ldrh	r3, [r3, #0]
 8009cfa:	b29b      	uxth	r3, r3
 8009cfc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009d00:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009d04:	b29a      	uxth	r2, r3
 8009d06:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d08:	801a      	strh	r2, [r3, #0]
 8009d0a:	e067      	b.n	8009ddc <USB_EPStartXfer+0xb62>
 8009d0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009d10:	2b3e      	cmp	r3, #62	@ 0x3e
 8009d12:	d81c      	bhi.n	8009d4e <USB_EPStartXfer+0xad4>
 8009d14:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009d18:	085b      	lsrs	r3, r3, #1
 8009d1a:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8009d1e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009d22:	f003 0301 	and.w	r3, r3, #1
 8009d26:	2b00      	cmp	r3, #0
 8009d28:	d004      	beq.n	8009d34 <USB_EPStartXfer+0xaba>
 8009d2a:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8009d2e:	3301      	adds	r3, #1
 8009d30:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8009d34:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d36:	881b      	ldrh	r3, [r3, #0]
 8009d38:	b29a      	uxth	r2, r3
 8009d3a:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8009d3e:	b29b      	uxth	r3, r3
 8009d40:	029b      	lsls	r3, r3, #10
 8009d42:	b29b      	uxth	r3, r3
 8009d44:	4313      	orrs	r3, r2
 8009d46:	b29a      	uxth	r2, r3
 8009d48:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d4a:	801a      	strh	r2, [r3, #0]
 8009d4c:	e046      	b.n	8009ddc <USB_EPStartXfer+0xb62>
 8009d4e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009d52:	095b      	lsrs	r3, r3, #5
 8009d54:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8009d58:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009d5c:	f003 031f 	and.w	r3, r3, #31
 8009d60:	2b00      	cmp	r3, #0
 8009d62:	d104      	bne.n	8009d6e <USB_EPStartXfer+0xaf4>
 8009d64:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8009d68:	3b01      	subs	r3, #1
 8009d6a:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8009d6e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d70:	881b      	ldrh	r3, [r3, #0]
 8009d72:	b29a      	uxth	r2, r3
 8009d74:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8009d78:	b29b      	uxth	r3, r3
 8009d7a:	029b      	lsls	r3, r3, #10
 8009d7c:	b29b      	uxth	r3, r3
 8009d7e:	4313      	orrs	r3, r2
 8009d80:	b29b      	uxth	r3, r3
 8009d82:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009d86:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009d8a:	b29a      	uxth	r2, r3
 8009d8c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d8e:	801a      	strh	r2, [r3, #0]
 8009d90:	e024      	b.n	8009ddc <USB_EPStartXfer+0xb62>
 8009d92:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009d96:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009d9a:	681b      	ldr	r3, [r3, #0]
 8009d9c:	785b      	ldrb	r3, [r3, #1]
 8009d9e:	2b01      	cmp	r3, #1
 8009da0:	d11c      	bne.n	8009ddc <USB_EPStartXfer+0xb62>
 8009da2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009da6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009daa:	681b      	ldr	r3, [r3, #0]
 8009dac:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009db0:	b29b      	uxth	r3, r3
 8009db2:	461a      	mov	r2, r3
 8009db4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8009db6:	4413      	add	r3, r2
 8009db8:	673b      	str	r3, [r7, #112]	@ 0x70
 8009dba:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009dbe:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009dc2:	681b      	ldr	r3, [r3, #0]
 8009dc4:	781b      	ldrb	r3, [r3, #0]
 8009dc6:	011a      	lsls	r2, r3, #4
 8009dc8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8009dca:	4413      	add	r3, r2
 8009dcc:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8009dd0:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8009dd2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009dd6:	b29a      	uxth	r2, r3
 8009dd8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009dda:	801a      	strh	r2, [r3, #0]
 8009ddc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009de0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009de4:	681b      	ldr	r3, [r3, #0]
 8009de6:	895b      	ldrh	r3, [r3, #10]
 8009de8:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8009dec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009df0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009df4:	681b      	ldr	r3, [r3, #0]
 8009df6:	6959      	ldr	r1, [r3, #20]
 8009df8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009dfc:	b29b      	uxth	r3, r3
 8009dfe:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8009e02:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8009e06:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8009e0a:	6800      	ldr	r0, [r0, #0]
 8009e0c:	f000 ff15 	bl	800ac3a <USB_WritePMA>
 8009e10:	e0ca      	b.n	8009fa8 <USB_EPStartXfer+0xd2e>
 8009e12:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009e16:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009e1a:	681b      	ldr	r3, [r3, #0]
 8009e1c:	785b      	ldrb	r3, [r3, #1]
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d177      	bne.n	8009f12 <USB_EPStartXfer+0xc98>
 8009e22:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009e26:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009e2a:	681b      	ldr	r3, [r3, #0]
 8009e2c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8009e2e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009e32:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009e36:	681b      	ldr	r3, [r3, #0]
 8009e38:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009e3c:	b29b      	uxth	r3, r3
 8009e3e:	461a      	mov	r2, r3
 8009e40:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8009e42:	4413      	add	r3, r2
 8009e44:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8009e46:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009e4a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009e4e:	681b      	ldr	r3, [r3, #0]
 8009e50:	781b      	ldrb	r3, [r3, #0]
 8009e52:	011a      	lsls	r2, r3, #4
 8009e54:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8009e56:	4413      	add	r3, r2
 8009e58:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009e5c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8009e5e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009e60:	881b      	ldrh	r3, [r3, #0]
 8009e62:	b29b      	uxth	r3, r3
 8009e64:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8009e68:	b29a      	uxth	r2, r3
 8009e6a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009e6c:	801a      	strh	r2, [r3, #0]
 8009e6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	d10a      	bne.n	8009e8c <USB_EPStartXfer+0xc12>
 8009e76:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009e78:	881b      	ldrh	r3, [r3, #0]
 8009e7a:	b29b      	uxth	r3, r3
 8009e7c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009e80:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009e84:	b29a      	uxth	r2, r3
 8009e86:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009e88:	801a      	strh	r2, [r3, #0]
 8009e8a:	e073      	b.n	8009f74 <USB_EPStartXfer+0xcfa>
 8009e8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009e90:	2b3e      	cmp	r3, #62	@ 0x3e
 8009e92:	d81c      	bhi.n	8009ece <USB_EPStartXfer+0xc54>
 8009e94:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009e98:	085b      	lsrs	r3, r3, #1
 8009e9a:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8009e9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009ea2:	f003 0301 	and.w	r3, r3, #1
 8009ea6:	2b00      	cmp	r3, #0
 8009ea8:	d004      	beq.n	8009eb4 <USB_EPStartXfer+0xc3a>
 8009eaa:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8009eae:	3301      	adds	r3, #1
 8009eb0:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8009eb4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009eb6:	881b      	ldrh	r3, [r3, #0]
 8009eb8:	b29a      	uxth	r2, r3
 8009eba:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8009ebe:	b29b      	uxth	r3, r3
 8009ec0:	029b      	lsls	r3, r3, #10
 8009ec2:	b29b      	uxth	r3, r3
 8009ec4:	4313      	orrs	r3, r2
 8009ec6:	b29a      	uxth	r2, r3
 8009ec8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009eca:	801a      	strh	r2, [r3, #0]
 8009ecc:	e052      	b.n	8009f74 <USB_EPStartXfer+0xcfa>
 8009ece:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009ed2:	095b      	lsrs	r3, r3, #5
 8009ed4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8009ed8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009edc:	f003 031f 	and.w	r3, r3, #31
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	d104      	bne.n	8009eee <USB_EPStartXfer+0xc74>
 8009ee4:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8009ee8:	3b01      	subs	r3, #1
 8009eea:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8009eee:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009ef0:	881b      	ldrh	r3, [r3, #0]
 8009ef2:	b29a      	uxth	r2, r3
 8009ef4:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8009ef8:	b29b      	uxth	r3, r3
 8009efa:	029b      	lsls	r3, r3, #10
 8009efc:	b29b      	uxth	r3, r3
 8009efe:	4313      	orrs	r3, r2
 8009f00:	b29b      	uxth	r3, r3
 8009f02:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8009f06:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8009f0a:	b29a      	uxth	r2, r3
 8009f0c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009f0e:	801a      	strh	r2, [r3, #0]
 8009f10:	e030      	b.n	8009f74 <USB_EPStartXfer+0xcfa>
 8009f12:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f16:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009f1a:	681b      	ldr	r3, [r3, #0]
 8009f1c:	785b      	ldrb	r3, [r3, #1]
 8009f1e:	2b01      	cmp	r3, #1
 8009f20:	d128      	bne.n	8009f74 <USB_EPStartXfer+0xcfa>
 8009f22:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f26:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009f2a:	681b      	ldr	r3, [r3, #0]
 8009f2c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009f30:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f34:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009f38:	681b      	ldr	r3, [r3, #0]
 8009f3a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8009f3e:	b29b      	uxth	r3, r3
 8009f40:	461a      	mov	r2, r3
 8009f42:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8009f46:	4413      	add	r3, r2
 8009f48:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009f4c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f50:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	781b      	ldrb	r3, [r3, #0]
 8009f58:	011a      	lsls	r2, r3, #4
 8009f5a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8009f5e:	4413      	add	r3, r2
 8009f60:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8009f64:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8009f68:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009f6c:	b29a      	uxth	r2, r3
 8009f6e:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8009f72:	801a      	strh	r2, [r3, #0]
 8009f74:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f78:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009f7c:	681b      	ldr	r3, [r3, #0]
 8009f7e:	891b      	ldrh	r3, [r3, #8]
 8009f80:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8009f84:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009f88:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009f8c:	681b      	ldr	r3, [r3, #0]
 8009f8e:	6959      	ldr	r1, [r3, #20]
 8009f90:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8009f94:	b29b      	uxth	r3, r3
 8009f96:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8009f9a:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8009f9e:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8009fa2:	6800      	ldr	r0, [r0, #0]
 8009fa4:	f000 fe49 	bl	800ac3a <USB_WritePMA>
 8009fa8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009fac:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009fb0:	681a      	ldr	r2, [r3, #0]
 8009fb2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009fb6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009fba:	681b      	ldr	r3, [r3, #0]
 8009fbc:	781b      	ldrb	r3, [r3, #0]
 8009fbe:	009b      	lsls	r3, r3, #2
 8009fc0:	4413      	add	r3, r2
 8009fc2:	881b      	ldrh	r3, [r3, #0]
 8009fc4:	b29b      	uxth	r3, r3
 8009fc6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009fca:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009fce:	817b      	strh	r3, [r7, #10]
 8009fd0:	897b      	ldrh	r3, [r7, #10]
 8009fd2:	f083 0310 	eor.w	r3, r3, #16
 8009fd6:	817b      	strh	r3, [r7, #10]
 8009fd8:	897b      	ldrh	r3, [r7, #10]
 8009fda:	f083 0320 	eor.w	r3, r3, #32
 8009fde:	817b      	strh	r3, [r7, #10]
 8009fe0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009fe4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8009fe8:	681a      	ldr	r2, [r3, #0]
 8009fea:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8009fee:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8009ff2:	681b      	ldr	r3, [r3, #0]
 8009ff4:	781b      	ldrb	r3, [r3, #0]
 8009ff6:	009b      	lsls	r3, r3, #2
 8009ff8:	441a      	add	r2, r3
 8009ffa:	897b      	ldrh	r3, [r7, #10]
 8009ffc:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800a000:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800a004:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800a008:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a00c:	b29b      	uxth	r3, r3
 800a00e:	8013      	strh	r3, [r2, #0]
 800a010:	f000 bcdf 	b.w	800a9d2 <USB_EPStartXfer+0x1758>
 800a014:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a018:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a01c:	681b      	ldr	r3, [r3, #0]
 800a01e:	7b1b      	ldrb	r3, [r3, #12]
 800a020:	2b00      	cmp	r3, #0
 800a022:	f040 80bc 	bne.w	800a19e <USB_EPStartXfer+0xf24>
 800a026:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a02a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a02e:	681b      	ldr	r3, [r3, #0]
 800a030:	699a      	ldr	r2, [r3, #24]
 800a032:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a036:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a03a:	681b      	ldr	r3, [r3, #0]
 800a03c:	691b      	ldr	r3, [r3, #16]
 800a03e:	429a      	cmp	r2, r3
 800a040:	d917      	bls.n	800a072 <USB_EPStartXfer+0xdf8>
 800a042:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a046:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a04a:	681b      	ldr	r3, [r3, #0]
 800a04c:	691b      	ldr	r3, [r3, #16]
 800a04e:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800a052:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a056:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a05a:	681b      	ldr	r3, [r3, #0]
 800a05c:	699a      	ldr	r2, [r3, #24]
 800a05e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a062:	1ad2      	subs	r2, r2, r3
 800a064:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a068:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a06c:	681b      	ldr	r3, [r3, #0]
 800a06e:	619a      	str	r2, [r3, #24]
 800a070:	e00e      	b.n	800a090 <USB_EPStartXfer+0xe16>
 800a072:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a076:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a07a:	681b      	ldr	r3, [r3, #0]
 800a07c:	699b      	ldr	r3, [r3, #24]
 800a07e:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800a082:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a086:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a08a:	681b      	ldr	r3, [r3, #0]
 800a08c:	2200      	movs	r2, #0
 800a08e:	619a      	str	r2, [r3, #24]
 800a090:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a094:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800a09e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a0a2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a0a6:	681b      	ldr	r3, [r3, #0]
 800a0a8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a0ac:	b29b      	uxth	r3, r3
 800a0ae:	461a      	mov	r2, r3
 800a0b0:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a0b4:	4413      	add	r3, r2
 800a0b6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800a0ba:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a0be:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a0c2:	681b      	ldr	r3, [r3, #0]
 800a0c4:	781b      	ldrb	r3, [r3, #0]
 800a0c6:	011a      	lsls	r2, r3, #4
 800a0c8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a0cc:	4413      	add	r3, r2
 800a0ce:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800a0d2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800a0d6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a0da:	881b      	ldrh	r3, [r3, #0]
 800a0dc:	b29b      	uxth	r3, r3
 800a0de:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a0e2:	b29a      	uxth	r2, r3
 800a0e4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a0e8:	801a      	strh	r2, [r3, #0]
 800a0ea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a0ee:	2b00      	cmp	r3, #0
 800a0f0:	d10d      	bne.n	800a10e <USB_EPStartXfer+0xe94>
 800a0f2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a0f6:	881b      	ldrh	r3, [r3, #0]
 800a0f8:	b29b      	uxth	r3, r3
 800a0fa:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a0fe:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a102:	b29a      	uxth	r2, r3
 800a104:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a108:	801a      	strh	r2, [r3, #0]
 800a10a:	f000 bc28 	b.w	800a95e <USB_EPStartXfer+0x16e4>
 800a10e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a112:	2b3e      	cmp	r3, #62	@ 0x3e
 800a114:	d81f      	bhi.n	800a156 <USB_EPStartXfer+0xedc>
 800a116:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a11a:	085b      	lsrs	r3, r3, #1
 800a11c:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800a120:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a124:	f003 0301 	and.w	r3, r3, #1
 800a128:	2b00      	cmp	r3, #0
 800a12a:	d004      	beq.n	800a136 <USB_EPStartXfer+0xebc>
 800a12c:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800a130:	3301      	adds	r3, #1
 800a132:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800a136:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a13a:	881b      	ldrh	r3, [r3, #0]
 800a13c:	b29a      	uxth	r2, r3
 800a13e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800a142:	b29b      	uxth	r3, r3
 800a144:	029b      	lsls	r3, r3, #10
 800a146:	b29b      	uxth	r3, r3
 800a148:	4313      	orrs	r3, r2
 800a14a:	b29a      	uxth	r2, r3
 800a14c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a150:	801a      	strh	r2, [r3, #0]
 800a152:	f000 bc04 	b.w	800a95e <USB_EPStartXfer+0x16e4>
 800a156:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a15a:	095b      	lsrs	r3, r3, #5
 800a15c:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800a160:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a164:	f003 031f 	and.w	r3, r3, #31
 800a168:	2b00      	cmp	r3, #0
 800a16a:	d104      	bne.n	800a176 <USB_EPStartXfer+0xefc>
 800a16c:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800a170:	3b01      	subs	r3, #1
 800a172:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800a176:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a17a:	881b      	ldrh	r3, [r3, #0]
 800a17c:	b29a      	uxth	r2, r3
 800a17e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800a182:	b29b      	uxth	r3, r3
 800a184:	029b      	lsls	r3, r3, #10
 800a186:	b29b      	uxth	r3, r3
 800a188:	4313      	orrs	r3, r2
 800a18a:	b29b      	uxth	r3, r3
 800a18c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a190:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a194:	b29a      	uxth	r2, r3
 800a196:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a19a:	801a      	strh	r2, [r3, #0]
 800a19c:	e3df      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a19e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a1a2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a1a6:	681b      	ldr	r3, [r3, #0]
 800a1a8:	78db      	ldrb	r3, [r3, #3]
 800a1aa:	2b02      	cmp	r3, #2
 800a1ac:	f040 8218 	bne.w	800a5e0 <USB_EPStartXfer+0x1366>
 800a1b0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a1b4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	785b      	ldrb	r3, [r3, #1]
 800a1bc:	2b00      	cmp	r3, #0
 800a1be:	f040 809d 	bne.w	800a2fc <USB_EPStartXfer+0x1082>
 800a1c2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a1c6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a1d0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a1d4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a1d8:	681b      	ldr	r3, [r3, #0]
 800a1da:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a1de:	b29b      	uxth	r3, r3
 800a1e0:	461a      	mov	r2, r3
 800a1e2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a1e6:	4413      	add	r3, r2
 800a1e8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a1ec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a1f0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a1f4:	681b      	ldr	r3, [r3, #0]
 800a1f6:	781b      	ldrb	r3, [r3, #0]
 800a1f8:	011a      	lsls	r2, r3, #4
 800a1fa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a1fe:	4413      	add	r3, r2
 800a200:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800a204:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800a208:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a20c:	881b      	ldrh	r3, [r3, #0]
 800a20e:	b29b      	uxth	r3, r3
 800a210:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a214:	b29a      	uxth	r2, r3
 800a216:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a21a:	801a      	strh	r2, [r3, #0]
 800a21c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a220:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a224:	681b      	ldr	r3, [r3, #0]
 800a226:	691b      	ldr	r3, [r3, #16]
 800a228:	2b00      	cmp	r3, #0
 800a22a:	d10c      	bne.n	800a246 <USB_EPStartXfer+0xfcc>
 800a22c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a230:	881b      	ldrh	r3, [r3, #0]
 800a232:	b29b      	uxth	r3, r3
 800a234:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a238:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a23c:	b29a      	uxth	r2, r3
 800a23e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a242:	801a      	strh	r2, [r3, #0]
 800a244:	e08f      	b.n	800a366 <USB_EPStartXfer+0x10ec>
 800a246:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a24a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a24e:	681b      	ldr	r3, [r3, #0]
 800a250:	691b      	ldr	r3, [r3, #16]
 800a252:	2b3e      	cmp	r3, #62	@ 0x3e
 800a254:	d826      	bhi.n	800a2a4 <USB_EPStartXfer+0x102a>
 800a256:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a25a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	691b      	ldr	r3, [r3, #16]
 800a262:	085b      	lsrs	r3, r3, #1
 800a264:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800a268:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a26c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a270:	681b      	ldr	r3, [r3, #0]
 800a272:	691b      	ldr	r3, [r3, #16]
 800a274:	f003 0301 	and.w	r3, r3, #1
 800a278:	2b00      	cmp	r3, #0
 800a27a:	d004      	beq.n	800a286 <USB_EPStartXfer+0x100c>
 800a27c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a280:	3301      	adds	r3, #1
 800a282:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800a286:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a28a:	881b      	ldrh	r3, [r3, #0]
 800a28c:	b29a      	uxth	r2, r3
 800a28e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a292:	b29b      	uxth	r3, r3
 800a294:	029b      	lsls	r3, r3, #10
 800a296:	b29b      	uxth	r3, r3
 800a298:	4313      	orrs	r3, r2
 800a29a:	b29a      	uxth	r2, r3
 800a29c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a2a0:	801a      	strh	r2, [r3, #0]
 800a2a2:	e060      	b.n	800a366 <USB_EPStartXfer+0x10ec>
 800a2a4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a2a8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a2ac:	681b      	ldr	r3, [r3, #0]
 800a2ae:	691b      	ldr	r3, [r3, #16]
 800a2b0:	095b      	lsrs	r3, r3, #5
 800a2b2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800a2b6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a2ba:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	691b      	ldr	r3, [r3, #16]
 800a2c2:	f003 031f 	and.w	r3, r3, #31
 800a2c6:	2b00      	cmp	r3, #0
 800a2c8:	d104      	bne.n	800a2d4 <USB_EPStartXfer+0x105a>
 800a2ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a2ce:	3b01      	subs	r3, #1
 800a2d0:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800a2d4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a2d8:	881b      	ldrh	r3, [r3, #0]
 800a2da:	b29a      	uxth	r2, r3
 800a2dc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a2e0:	b29b      	uxth	r3, r3
 800a2e2:	029b      	lsls	r3, r3, #10
 800a2e4:	b29b      	uxth	r3, r3
 800a2e6:	4313      	orrs	r3, r2
 800a2e8:	b29b      	uxth	r3, r3
 800a2ea:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a2ee:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a2f2:	b29a      	uxth	r2, r3
 800a2f4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a2f8:	801a      	strh	r2, [r3, #0]
 800a2fa:	e034      	b.n	800a366 <USB_EPStartXfer+0x10ec>
 800a2fc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a300:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	785b      	ldrb	r3, [r3, #1]
 800a308:	2b01      	cmp	r3, #1
 800a30a:	d12c      	bne.n	800a366 <USB_EPStartXfer+0x10ec>
 800a30c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a310:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a314:	681b      	ldr	r3, [r3, #0]
 800a316:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a31a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a31e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a322:	681b      	ldr	r3, [r3, #0]
 800a324:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a328:	b29b      	uxth	r3, r3
 800a32a:	461a      	mov	r2, r3
 800a32c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a330:	4413      	add	r3, r2
 800a332:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a336:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a33a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	781b      	ldrb	r3, [r3, #0]
 800a342:	011a      	lsls	r2, r3, #4
 800a344:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a348:	4413      	add	r3, r2
 800a34a:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800a34e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800a352:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a356:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	691b      	ldr	r3, [r3, #16]
 800a35e:	b29a      	uxth	r2, r3
 800a360:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800a364:	801a      	strh	r2, [r3, #0]
 800a366:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a36a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a36e:	681b      	ldr	r3, [r3, #0]
 800a370:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a374:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a378:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	785b      	ldrb	r3, [r3, #1]
 800a380:	2b00      	cmp	r3, #0
 800a382:	f040 809d 	bne.w	800a4c0 <USB_EPStartXfer+0x1246>
 800a386:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a38a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a38e:	681b      	ldr	r3, [r3, #0]
 800a390:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800a394:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a398:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a39c:	681b      	ldr	r3, [r3, #0]
 800a39e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a3a2:	b29b      	uxth	r3, r3
 800a3a4:	461a      	mov	r2, r3
 800a3a6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a3aa:	4413      	add	r3, r2
 800a3ac:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800a3b0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a3b4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a3b8:	681b      	ldr	r3, [r3, #0]
 800a3ba:	781b      	ldrb	r3, [r3, #0]
 800a3bc:	011a      	lsls	r2, r3, #4
 800a3be:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a3c2:	4413      	add	r3, r2
 800a3c4:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800a3c8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800a3cc:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a3d0:	881b      	ldrh	r3, [r3, #0]
 800a3d2:	b29b      	uxth	r3, r3
 800a3d4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a3d8:	b29a      	uxth	r2, r3
 800a3da:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a3de:	801a      	strh	r2, [r3, #0]
 800a3e0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a3e4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	691b      	ldr	r3, [r3, #16]
 800a3ec:	2b00      	cmp	r3, #0
 800a3ee:	d10c      	bne.n	800a40a <USB_EPStartXfer+0x1190>
 800a3f0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a3f4:	881b      	ldrh	r3, [r3, #0]
 800a3f6:	b29b      	uxth	r3, r3
 800a3f8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a3fc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a400:	b29a      	uxth	r2, r3
 800a402:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a406:	801a      	strh	r2, [r3, #0]
 800a408:	e088      	b.n	800a51c <USB_EPStartXfer+0x12a2>
 800a40a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a40e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a412:	681b      	ldr	r3, [r3, #0]
 800a414:	691b      	ldr	r3, [r3, #16]
 800a416:	2b3e      	cmp	r3, #62	@ 0x3e
 800a418:	d826      	bhi.n	800a468 <USB_EPStartXfer+0x11ee>
 800a41a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a41e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a422:	681b      	ldr	r3, [r3, #0]
 800a424:	691b      	ldr	r3, [r3, #16]
 800a426:	085b      	lsrs	r3, r3, #1
 800a428:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800a42c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a430:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a434:	681b      	ldr	r3, [r3, #0]
 800a436:	691b      	ldr	r3, [r3, #16]
 800a438:	f003 0301 	and.w	r3, r3, #1
 800a43c:	2b00      	cmp	r3, #0
 800a43e:	d004      	beq.n	800a44a <USB_EPStartXfer+0x11d0>
 800a440:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a444:	3301      	adds	r3, #1
 800a446:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800a44a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a44e:	881b      	ldrh	r3, [r3, #0]
 800a450:	b29a      	uxth	r2, r3
 800a452:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a456:	b29b      	uxth	r3, r3
 800a458:	029b      	lsls	r3, r3, #10
 800a45a:	b29b      	uxth	r3, r3
 800a45c:	4313      	orrs	r3, r2
 800a45e:	b29a      	uxth	r2, r3
 800a460:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a464:	801a      	strh	r2, [r3, #0]
 800a466:	e059      	b.n	800a51c <USB_EPStartXfer+0x12a2>
 800a468:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a46c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a470:	681b      	ldr	r3, [r3, #0]
 800a472:	691b      	ldr	r3, [r3, #16]
 800a474:	095b      	lsrs	r3, r3, #5
 800a476:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800a47a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a47e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a482:	681b      	ldr	r3, [r3, #0]
 800a484:	691b      	ldr	r3, [r3, #16]
 800a486:	f003 031f 	and.w	r3, r3, #31
 800a48a:	2b00      	cmp	r3, #0
 800a48c:	d104      	bne.n	800a498 <USB_EPStartXfer+0x121e>
 800a48e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a492:	3b01      	subs	r3, #1
 800a494:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800a498:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a49c:	881b      	ldrh	r3, [r3, #0]
 800a49e:	b29a      	uxth	r2, r3
 800a4a0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a4a4:	b29b      	uxth	r3, r3
 800a4a6:	029b      	lsls	r3, r3, #10
 800a4a8:	b29b      	uxth	r3, r3
 800a4aa:	4313      	orrs	r3, r2
 800a4ac:	b29b      	uxth	r3, r3
 800a4ae:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a4b2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a4b6:	b29a      	uxth	r2, r3
 800a4b8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a4bc:	801a      	strh	r2, [r3, #0]
 800a4be:	e02d      	b.n	800a51c <USB_EPStartXfer+0x12a2>
 800a4c0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a4c4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	785b      	ldrb	r3, [r3, #1]
 800a4cc:	2b01      	cmp	r3, #1
 800a4ce:	d125      	bne.n	800a51c <USB_EPStartXfer+0x12a2>
 800a4d0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a4d4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a4d8:	681b      	ldr	r3, [r3, #0]
 800a4da:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a4de:	b29b      	uxth	r3, r3
 800a4e0:	461a      	mov	r2, r3
 800a4e2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a4e6:	4413      	add	r3, r2
 800a4e8:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a4ec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a4f0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a4f4:	681b      	ldr	r3, [r3, #0]
 800a4f6:	781b      	ldrb	r3, [r3, #0]
 800a4f8:	011a      	lsls	r2, r3, #4
 800a4fa:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a4fe:	4413      	add	r3, r2
 800a500:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800a504:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800a508:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a50c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a510:	681b      	ldr	r3, [r3, #0]
 800a512:	691b      	ldr	r3, [r3, #16]
 800a514:	b29a      	uxth	r2, r3
 800a516:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a51a:	801a      	strh	r2, [r3, #0]
 800a51c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a520:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a524:	681b      	ldr	r3, [r3, #0]
 800a526:	69db      	ldr	r3, [r3, #28]
 800a528:	2b00      	cmp	r3, #0
 800a52a:	f000 8218 	beq.w	800a95e <USB_EPStartXfer+0x16e4>
 800a52e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a532:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a536:	681a      	ldr	r2, [r3, #0]
 800a538:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a53c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a540:	681b      	ldr	r3, [r3, #0]
 800a542:	781b      	ldrb	r3, [r3, #0]
 800a544:	009b      	lsls	r3, r3, #2
 800a546:	4413      	add	r3, r2
 800a548:	881b      	ldrh	r3, [r3, #0]
 800a54a:	f8a7 3096 	strh.w	r3, [r7, #150]	@ 0x96
 800a54e:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 800a552:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800a556:	2b00      	cmp	r3, #0
 800a558:	d005      	beq.n	800a566 <USB_EPStartXfer+0x12ec>
 800a55a:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 800a55e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a562:	2b00      	cmp	r3, #0
 800a564:	d10d      	bne.n	800a582 <USB_EPStartXfer+0x1308>
 800a566:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 800a56a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800a56e:	2b00      	cmp	r3, #0
 800a570:	f040 81f5 	bne.w	800a95e <USB_EPStartXfer+0x16e4>
 800a574:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 800a578:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a57c:	2b00      	cmp	r3, #0
 800a57e:	f040 81ee 	bne.w	800a95e <USB_EPStartXfer+0x16e4>
 800a582:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a586:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a58a:	681a      	ldr	r2, [r3, #0]
 800a58c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a590:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a594:	681b      	ldr	r3, [r3, #0]
 800a596:	781b      	ldrb	r3, [r3, #0]
 800a598:	009b      	lsls	r3, r3, #2
 800a59a:	4413      	add	r3, r2
 800a59c:	881b      	ldrh	r3, [r3, #0]
 800a59e:	b29b      	uxth	r3, r3
 800a5a0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800a5a4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a5a8:	f8a7 3094 	strh.w	r3, [r7, #148]	@ 0x94
 800a5ac:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a5b0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a5b4:	681a      	ldr	r2, [r3, #0]
 800a5b6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a5ba:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a5be:	681b      	ldr	r3, [r3, #0]
 800a5c0:	781b      	ldrb	r3, [r3, #0]
 800a5c2:	009b      	lsls	r3, r3, #2
 800a5c4:	441a      	add	r2, r3
 800a5c6:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 800a5ca:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800a5ce:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800a5d2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800a5d6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800a5da:	b29b      	uxth	r3, r3
 800a5dc:	8013      	strh	r3, [r2, #0]
 800a5de:	e1be      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a5e0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a5e4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a5e8:	681b      	ldr	r3, [r3, #0]
 800a5ea:	78db      	ldrb	r3, [r3, #3]
 800a5ec:	2b01      	cmp	r3, #1
 800a5ee:	f040 81b4 	bne.w	800a95a <USB_EPStartXfer+0x16e0>
 800a5f2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a5f6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a5fa:	681b      	ldr	r3, [r3, #0]
 800a5fc:	699a      	ldr	r2, [r3, #24]
 800a5fe:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a602:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a606:	681b      	ldr	r3, [r3, #0]
 800a608:	691b      	ldr	r3, [r3, #16]
 800a60a:	429a      	cmp	r2, r3
 800a60c:	d917      	bls.n	800a63e <USB_EPStartXfer+0x13c4>
 800a60e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a612:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a616:	681b      	ldr	r3, [r3, #0]
 800a618:	691b      	ldr	r3, [r3, #16]
 800a61a:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800a61e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a622:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a626:	681b      	ldr	r3, [r3, #0]
 800a628:	699a      	ldr	r2, [r3, #24]
 800a62a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a62e:	1ad2      	subs	r2, r2, r3
 800a630:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a634:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	619a      	str	r2, [r3, #24]
 800a63c:	e00e      	b.n	800a65c <USB_EPStartXfer+0x13e2>
 800a63e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a642:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a646:	681b      	ldr	r3, [r3, #0]
 800a648:	699b      	ldr	r3, [r3, #24]
 800a64a:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800a64e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a652:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	2200      	movs	r2, #0
 800a65a:	619a      	str	r2, [r3, #24]
 800a65c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a660:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a664:	681b      	ldr	r3, [r3, #0]
 800a666:	785b      	ldrb	r3, [r3, #1]
 800a668:	2b00      	cmp	r3, #0
 800a66a:	f040 8085 	bne.w	800a778 <USB_EPStartXfer+0x14fe>
 800a66e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a672:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a676:	681b      	ldr	r3, [r3, #0]
 800a678:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800a67c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a680:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a684:	681b      	ldr	r3, [r3, #0]
 800a686:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a68a:	b29b      	uxth	r3, r3
 800a68c:	461a      	mov	r2, r3
 800a68e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800a692:	4413      	add	r3, r2
 800a694:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800a698:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a69c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a6a0:	681b      	ldr	r3, [r3, #0]
 800a6a2:	781b      	ldrb	r3, [r3, #0]
 800a6a4:	011a      	lsls	r2, r3, #4
 800a6a6:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800a6aa:	4413      	add	r3, r2
 800a6ac:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800a6b0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800a6b4:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a6b8:	881b      	ldrh	r3, [r3, #0]
 800a6ba:	b29b      	uxth	r3, r3
 800a6bc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a6c0:	b29a      	uxth	r2, r3
 800a6c2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a6c6:	801a      	strh	r2, [r3, #0]
 800a6c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a6cc:	2b00      	cmp	r3, #0
 800a6ce:	d10c      	bne.n	800a6ea <USB_EPStartXfer+0x1470>
 800a6d0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a6d4:	881b      	ldrh	r3, [r3, #0]
 800a6d6:	b29b      	uxth	r3, r3
 800a6d8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a6dc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a6e0:	b29a      	uxth	r2, r3
 800a6e2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a6e6:	801a      	strh	r2, [r3, #0]
 800a6e8:	e077      	b.n	800a7da <USB_EPStartXfer+0x1560>
 800a6ea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a6ee:	2b3e      	cmp	r3, #62	@ 0x3e
 800a6f0:	d81e      	bhi.n	800a730 <USB_EPStartXfer+0x14b6>
 800a6f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a6f6:	085b      	lsrs	r3, r3, #1
 800a6f8:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800a6fc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a700:	f003 0301 	and.w	r3, r3, #1
 800a704:	2b00      	cmp	r3, #0
 800a706:	d004      	beq.n	800a712 <USB_EPStartXfer+0x1498>
 800a708:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a70c:	3301      	adds	r3, #1
 800a70e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800a712:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a716:	881b      	ldrh	r3, [r3, #0]
 800a718:	b29a      	uxth	r2, r3
 800a71a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a71e:	b29b      	uxth	r3, r3
 800a720:	029b      	lsls	r3, r3, #10
 800a722:	b29b      	uxth	r3, r3
 800a724:	4313      	orrs	r3, r2
 800a726:	b29a      	uxth	r2, r3
 800a728:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a72c:	801a      	strh	r2, [r3, #0]
 800a72e:	e054      	b.n	800a7da <USB_EPStartXfer+0x1560>
 800a730:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a734:	095b      	lsrs	r3, r3, #5
 800a736:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800a73a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a73e:	f003 031f 	and.w	r3, r3, #31
 800a742:	2b00      	cmp	r3, #0
 800a744:	d104      	bne.n	800a750 <USB_EPStartXfer+0x14d6>
 800a746:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a74a:	3b01      	subs	r3, #1
 800a74c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800a750:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a754:	881b      	ldrh	r3, [r3, #0]
 800a756:	b29a      	uxth	r2, r3
 800a758:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a75c:	b29b      	uxth	r3, r3
 800a75e:	029b      	lsls	r3, r3, #10
 800a760:	b29b      	uxth	r3, r3
 800a762:	4313      	orrs	r3, r2
 800a764:	b29b      	uxth	r3, r3
 800a766:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a76a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a76e:	b29a      	uxth	r2, r3
 800a770:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a774:	801a      	strh	r2, [r3, #0]
 800a776:	e030      	b.n	800a7da <USB_EPStartXfer+0x1560>
 800a778:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a77c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	785b      	ldrb	r3, [r3, #1]
 800a784:	2b01      	cmp	r3, #1
 800a786:	d128      	bne.n	800a7da <USB_EPStartXfer+0x1560>
 800a788:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a78c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a790:	681b      	ldr	r3, [r3, #0]
 800a792:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800a796:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a79a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a79e:	681b      	ldr	r3, [r3, #0]
 800a7a0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a7a4:	b29b      	uxth	r3, r3
 800a7a6:	461a      	mov	r2, r3
 800a7a8:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800a7ac:	4413      	add	r3, r2
 800a7ae:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800a7b2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a7b6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a7ba:	681b      	ldr	r3, [r3, #0]
 800a7bc:	781b      	ldrb	r3, [r3, #0]
 800a7be:	011a      	lsls	r2, r3, #4
 800a7c0:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800a7c4:	4413      	add	r3, r2
 800a7c6:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800a7ca:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800a7ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a7d2:	b29a      	uxth	r2, r3
 800a7d4:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800a7d8:	801a      	strh	r2, [r3, #0]
 800a7da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a7de:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a7e2:	681b      	ldr	r3, [r3, #0]
 800a7e4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800a7e8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a7ec:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a7f0:	681b      	ldr	r3, [r3, #0]
 800a7f2:	785b      	ldrb	r3, [r3, #1]
 800a7f4:	2b00      	cmp	r3, #0
 800a7f6:	f040 8085 	bne.w	800a904 <USB_EPStartXfer+0x168a>
 800a7fa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a7fe:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a802:	681b      	ldr	r3, [r3, #0]
 800a804:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800a808:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a80c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a816:	b29b      	uxth	r3, r3
 800a818:	461a      	mov	r2, r3
 800a81a:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800a81e:	4413      	add	r3, r2
 800a820:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800a824:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a828:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	781b      	ldrb	r3, [r3, #0]
 800a830:	011a      	lsls	r2, r3, #4
 800a832:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800a836:	4413      	add	r3, r2
 800a838:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800a83c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800a840:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a844:	881b      	ldrh	r3, [r3, #0]
 800a846:	b29b      	uxth	r3, r3
 800a848:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a84c:	b29a      	uxth	r2, r3
 800a84e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a852:	801a      	strh	r2, [r3, #0]
 800a854:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a858:	2b00      	cmp	r3, #0
 800a85a:	d10c      	bne.n	800a876 <USB_EPStartXfer+0x15fc>
 800a85c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a860:	881b      	ldrh	r3, [r3, #0]
 800a862:	b29b      	uxth	r3, r3
 800a864:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a868:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a86c:	b29a      	uxth	r2, r3
 800a86e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a872:	801a      	strh	r2, [r3, #0]
 800a874:	e073      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a876:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a87a:	2b3e      	cmp	r3, #62	@ 0x3e
 800a87c:	d81e      	bhi.n	800a8bc <USB_EPStartXfer+0x1642>
 800a87e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a882:	085b      	lsrs	r3, r3, #1
 800a884:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800a888:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a88c:	f003 0301 	and.w	r3, r3, #1
 800a890:	2b00      	cmp	r3, #0
 800a892:	d004      	beq.n	800a89e <USB_EPStartXfer+0x1624>
 800a894:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800a898:	3301      	adds	r3, #1
 800a89a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800a89e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a8a2:	881b      	ldrh	r3, [r3, #0]
 800a8a4:	b29a      	uxth	r2, r3
 800a8a6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800a8aa:	b29b      	uxth	r3, r3
 800a8ac:	029b      	lsls	r3, r3, #10
 800a8ae:	b29b      	uxth	r3, r3
 800a8b0:	4313      	orrs	r3, r2
 800a8b2:	b29a      	uxth	r2, r3
 800a8b4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a8b8:	801a      	strh	r2, [r3, #0]
 800a8ba:	e050      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a8bc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a8c0:	095b      	lsrs	r3, r3, #5
 800a8c2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800a8c6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a8ca:	f003 031f 	and.w	r3, r3, #31
 800a8ce:	2b00      	cmp	r3, #0
 800a8d0:	d104      	bne.n	800a8dc <USB_EPStartXfer+0x1662>
 800a8d2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800a8d6:	3b01      	subs	r3, #1
 800a8d8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800a8dc:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a8e0:	881b      	ldrh	r3, [r3, #0]
 800a8e2:	b29a      	uxth	r2, r3
 800a8e4:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800a8e8:	b29b      	uxth	r3, r3
 800a8ea:	029b      	lsls	r3, r3, #10
 800a8ec:	b29b      	uxth	r3, r3
 800a8ee:	4313      	orrs	r3, r2
 800a8f0:	b29b      	uxth	r3, r3
 800a8f2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800a8f6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800a8fa:	b29a      	uxth	r2, r3
 800a8fc:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a900:	801a      	strh	r2, [r3, #0]
 800a902:	e02c      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a904:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a908:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a90c:	681b      	ldr	r3, [r3, #0]
 800a90e:	785b      	ldrb	r3, [r3, #1]
 800a910:	2b01      	cmp	r3, #1
 800a912:	d124      	bne.n	800a95e <USB_EPStartXfer+0x16e4>
 800a914:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a918:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a91c:	681b      	ldr	r3, [r3, #0]
 800a91e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800a922:	b29b      	uxth	r3, r3
 800a924:	461a      	mov	r2, r3
 800a926:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800a92a:	4413      	add	r3, r2
 800a92c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800a930:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a934:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a938:	681b      	ldr	r3, [r3, #0]
 800a93a:	781b      	ldrb	r3, [r3, #0]
 800a93c:	011a      	lsls	r2, r3, #4
 800a93e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800a942:	4413      	add	r3, r2
 800a944:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800a948:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800a94c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800a950:	b29a      	uxth	r2, r3
 800a952:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800a956:	801a      	strh	r2, [r3, #0]
 800a958:	e001      	b.n	800a95e <USB_EPStartXfer+0x16e4>
 800a95a:	2301      	movs	r3, #1
 800a95c:	e03a      	b.n	800a9d4 <USB_EPStartXfer+0x175a>
 800a95e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a962:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a966:	681a      	ldr	r2, [r3, #0]
 800a968:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a96c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a970:	681b      	ldr	r3, [r3, #0]
 800a972:	781b      	ldrb	r3, [r3, #0]
 800a974:	009b      	lsls	r3, r3, #2
 800a976:	4413      	add	r3, r2
 800a978:	881b      	ldrh	r3, [r3, #0]
 800a97a:	b29b      	uxth	r3, r3
 800a97c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800a980:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a984:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 800a988:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800a98c:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800a990:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 800a994:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800a998:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 800a99c:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 800a9a0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a9a4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800a9a8:	681a      	ldr	r2, [r3, #0]
 800a9aa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800a9ae:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	781b      	ldrb	r3, [r3, #0]
 800a9b6:	009b      	lsls	r3, r3, #2
 800a9b8:	441a      	add	r2, r3
 800a9ba:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800a9be:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800a9c2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800a9c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800a9ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800a9ce:	b29b      	uxth	r3, r3
 800a9d0:	8013      	strh	r3, [r2, #0]
 800a9d2:	2300      	movs	r3, #0
 800a9d4:	4618      	mov	r0, r3
 800a9d6:	f507 7784 	add.w	r7, r7, #264	@ 0x108
 800a9da:	46bd      	mov	sp, r7
 800a9dc:	bd80      	pop	{r7, pc}

0800a9de <USB_EPSetStall>:
 800a9de:	b480      	push	{r7}
 800a9e0:	b085      	sub	sp, #20
 800a9e2:	af00      	add	r7, sp, #0
 800a9e4:	6078      	str	r0, [r7, #4]
 800a9e6:	6039      	str	r1, [r7, #0]
 800a9e8:	683b      	ldr	r3, [r7, #0]
 800a9ea:	785b      	ldrb	r3, [r3, #1]
 800a9ec:	2b00      	cmp	r3, #0
 800a9ee:	d020      	beq.n	800aa32 <USB_EPSetStall+0x54>
 800a9f0:	687a      	ldr	r2, [r7, #4]
 800a9f2:	683b      	ldr	r3, [r7, #0]
 800a9f4:	781b      	ldrb	r3, [r3, #0]
 800a9f6:	009b      	lsls	r3, r3, #2
 800a9f8:	4413      	add	r3, r2
 800a9fa:	881b      	ldrh	r3, [r3, #0]
 800a9fc:	b29b      	uxth	r3, r3
 800a9fe:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800aa02:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800aa06:	81bb      	strh	r3, [r7, #12]
 800aa08:	89bb      	ldrh	r3, [r7, #12]
 800aa0a:	f083 0310 	eor.w	r3, r3, #16
 800aa0e:	81bb      	strh	r3, [r7, #12]
 800aa10:	687a      	ldr	r2, [r7, #4]
 800aa12:	683b      	ldr	r3, [r7, #0]
 800aa14:	781b      	ldrb	r3, [r3, #0]
 800aa16:	009b      	lsls	r3, r3, #2
 800aa18:	441a      	add	r2, r3
 800aa1a:	89bb      	ldrh	r3, [r7, #12]
 800aa1c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800aa20:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800aa24:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800aa28:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800aa2c:	b29b      	uxth	r3, r3
 800aa2e:	8013      	strh	r3, [r2, #0]
 800aa30:	e01f      	b.n	800aa72 <USB_EPSetStall+0x94>
 800aa32:	687a      	ldr	r2, [r7, #4]
 800aa34:	683b      	ldr	r3, [r7, #0]
 800aa36:	781b      	ldrb	r3, [r3, #0]
 800aa38:	009b      	lsls	r3, r3, #2
 800aa3a:	4413      	add	r3, r2
 800aa3c:	881b      	ldrh	r3, [r3, #0]
 800aa3e:	b29b      	uxth	r3, r3
 800aa40:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800aa44:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800aa48:	81fb      	strh	r3, [r7, #14]
 800aa4a:	89fb      	ldrh	r3, [r7, #14]
 800aa4c:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800aa50:	81fb      	strh	r3, [r7, #14]
 800aa52:	687a      	ldr	r2, [r7, #4]
 800aa54:	683b      	ldr	r3, [r7, #0]
 800aa56:	781b      	ldrb	r3, [r3, #0]
 800aa58:	009b      	lsls	r3, r3, #2
 800aa5a:	441a      	add	r2, r3
 800aa5c:	89fb      	ldrh	r3, [r7, #14]
 800aa5e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800aa62:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800aa66:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800aa6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800aa6e:	b29b      	uxth	r3, r3
 800aa70:	8013      	strh	r3, [r2, #0]
 800aa72:	2300      	movs	r3, #0
 800aa74:	4618      	mov	r0, r3
 800aa76:	3714      	adds	r7, #20
 800aa78:	46bd      	mov	sp, r7
 800aa7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa7e:	4770      	bx	lr

0800aa80 <USB_EPClearStall>:
 800aa80:	b480      	push	{r7}
 800aa82:	b087      	sub	sp, #28
 800aa84:	af00      	add	r7, sp, #0
 800aa86:	6078      	str	r0, [r7, #4]
 800aa88:	6039      	str	r1, [r7, #0]
 800aa8a:	683b      	ldr	r3, [r7, #0]
 800aa8c:	7b1b      	ldrb	r3, [r3, #12]
 800aa8e:	2b00      	cmp	r3, #0
 800aa90:	f040 809d 	bne.w	800abce <USB_EPClearStall+0x14e>
 800aa94:	683b      	ldr	r3, [r7, #0]
 800aa96:	785b      	ldrb	r3, [r3, #1]
 800aa98:	2b00      	cmp	r3, #0
 800aa9a:	d04c      	beq.n	800ab36 <USB_EPClearStall+0xb6>
 800aa9c:	687a      	ldr	r2, [r7, #4]
 800aa9e:	683b      	ldr	r3, [r7, #0]
 800aaa0:	781b      	ldrb	r3, [r3, #0]
 800aaa2:	009b      	lsls	r3, r3, #2
 800aaa4:	4413      	add	r3, r2
 800aaa6:	881b      	ldrh	r3, [r3, #0]
 800aaa8:	823b      	strh	r3, [r7, #16]
 800aaaa:	8a3b      	ldrh	r3, [r7, #16]
 800aaac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800aab0:	2b00      	cmp	r3, #0
 800aab2:	d01b      	beq.n	800aaec <USB_EPClearStall+0x6c>
 800aab4:	687a      	ldr	r2, [r7, #4]
 800aab6:	683b      	ldr	r3, [r7, #0]
 800aab8:	781b      	ldrb	r3, [r3, #0]
 800aaba:	009b      	lsls	r3, r3, #2
 800aabc:	4413      	add	r3, r2
 800aabe:	881b      	ldrh	r3, [r3, #0]
 800aac0:	b29b      	uxth	r3, r3
 800aac2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800aac6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800aaca:	81fb      	strh	r3, [r7, #14]
 800aacc:	687a      	ldr	r2, [r7, #4]
 800aace:	683b      	ldr	r3, [r7, #0]
 800aad0:	781b      	ldrb	r3, [r3, #0]
 800aad2:	009b      	lsls	r3, r3, #2
 800aad4:	441a      	add	r2, r3
 800aad6:	89fb      	ldrh	r3, [r7, #14]
 800aad8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800aadc:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800aae0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800aae4:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800aae8:	b29b      	uxth	r3, r3
 800aaea:	8013      	strh	r3, [r2, #0]
 800aaec:	683b      	ldr	r3, [r7, #0]
 800aaee:	78db      	ldrb	r3, [r3, #3]
 800aaf0:	2b01      	cmp	r3, #1
 800aaf2:	d06c      	beq.n	800abce <USB_EPClearStall+0x14e>
 800aaf4:	687a      	ldr	r2, [r7, #4]
 800aaf6:	683b      	ldr	r3, [r7, #0]
 800aaf8:	781b      	ldrb	r3, [r3, #0]
 800aafa:	009b      	lsls	r3, r3, #2
 800aafc:	4413      	add	r3, r2
 800aafe:	881b      	ldrh	r3, [r3, #0]
 800ab00:	b29b      	uxth	r3, r3
 800ab02:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800ab06:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ab0a:	81bb      	strh	r3, [r7, #12]
 800ab0c:	89bb      	ldrh	r3, [r7, #12]
 800ab0e:	f083 0320 	eor.w	r3, r3, #32
 800ab12:	81bb      	strh	r3, [r7, #12]
 800ab14:	687a      	ldr	r2, [r7, #4]
 800ab16:	683b      	ldr	r3, [r7, #0]
 800ab18:	781b      	ldrb	r3, [r3, #0]
 800ab1a:	009b      	lsls	r3, r3, #2
 800ab1c:	441a      	add	r2, r3
 800ab1e:	89bb      	ldrh	r3, [r7, #12]
 800ab20:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800ab24:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800ab28:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800ab2c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ab30:	b29b      	uxth	r3, r3
 800ab32:	8013      	strh	r3, [r2, #0]
 800ab34:	e04b      	b.n	800abce <USB_EPClearStall+0x14e>
 800ab36:	687a      	ldr	r2, [r7, #4]
 800ab38:	683b      	ldr	r3, [r7, #0]
 800ab3a:	781b      	ldrb	r3, [r3, #0]
 800ab3c:	009b      	lsls	r3, r3, #2
 800ab3e:	4413      	add	r3, r2
 800ab40:	881b      	ldrh	r3, [r3, #0]
 800ab42:	82fb      	strh	r3, [r7, #22]
 800ab44:	8afb      	ldrh	r3, [r7, #22]
 800ab46:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	d01b      	beq.n	800ab86 <USB_EPClearStall+0x106>
 800ab4e:	687a      	ldr	r2, [r7, #4]
 800ab50:	683b      	ldr	r3, [r7, #0]
 800ab52:	781b      	ldrb	r3, [r3, #0]
 800ab54:	009b      	lsls	r3, r3, #2
 800ab56:	4413      	add	r3, r2
 800ab58:	881b      	ldrh	r3, [r3, #0]
 800ab5a:	b29b      	uxth	r3, r3
 800ab5c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800ab60:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800ab64:	82bb      	strh	r3, [r7, #20]
 800ab66:	687a      	ldr	r2, [r7, #4]
 800ab68:	683b      	ldr	r3, [r7, #0]
 800ab6a:	781b      	ldrb	r3, [r3, #0]
 800ab6c:	009b      	lsls	r3, r3, #2
 800ab6e:	441a      	add	r2, r3
 800ab70:	8abb      	ldrh	r3, [r7, #20]
 800ab72:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800ab76:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800ab7a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800ab7e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ab82:	b29b      	uxth	r3, r3
 800ab84:	8013      	strh	r3, [r2, #0]
 800ab86:	687a      	ldr	r2, [r7, #4]
 800ab88:	683b      	ldr	r3, [r7, #0]
 800ab8a:	781b      	ldrb	r3, [r3, #0]
 800ab8c:	009b      	lsls	r3, r3, #2
 800ab8e:	4413      	add	r3, r2
 800ab90:	881b      	ldrh	r3, [r3, #0]
 800ab92:	b29b      	uxth	r3, r3
 800ab94:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800ab98:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800ab9c:	827b      	strh	r3, [r7, #18]
 800ab9e:	8a7b      	ldrh	r3, [r7, #18]
 800aba0:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800aba4:	827b      	strh	r3, [r7, #18]
 800aba6:	8a7b      	ldrh	r3, [r7, #18]
 800aba8:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 800abac:	827b      	strh	r3, [r7, #18]
 800abae:	687a      	ldr	r2, [r7, #4]
 800abb0:	683b      	ldr	r3, [r7, #0]
 800abb2:	781b      	ldrb	r3, [r3, #0]
 800abb4:	009b      	lsls	r3, r3, #2
 800abb6:	441a      	add	r2, r3
 800abb8:	8a7b      	ldrh	r3, [r7, #18]
 800abba:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800abbe:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800abc2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800abc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800abca:	b29b      	uxth	r3, r3
 800abcc:	8013      	strh	r3, [r2, #0]
 800abce:	2300      	movs	r3, #0
 800abd0:	4618      	mov	r0, r3
 800abd2:	371c      	adds	r7, #28
 800abd4:	46bd      	mov	sp, r7
 800abd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abda:	4770      	bx	lr

0800abdc <USB_SetDevAddress>:
 800abdc:	b480      	push	{r7}
 800abde:	b083      	sub	sp, #12
 800abe0:	af00      	add	r7, sp, #0
 800abe2:	6078      	str	r0, [r7, #4]
 800abe4:	460b      	mov	r3, r1
 800abe6:	70fb      	strb	r3, [r7, #3]
 800abe8:	78fb      	ldrb	r3, [r7, #3]
 800abea:	2b00      	cmp	r3, #0
 800abec:	d103      	bne.n	800abf6 <USB_SetDevAddress+0x1a>
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	2280      	movs	r2, #128	@ 0x80
 800abf2:	f8a3 204c 	strh.w	r2, [r3, #76]	@ 0x4c
 800abf6:	2300      	movs	r3, #0
 800abf8:	4618      	mov	r0, r3
 800abfa:	370c      	adds	r7, #12
 800abfc:	46bd      	mov	sp, r7
 800abfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac02:	4770      	bx	lr

0800ac04 <USB_DevConnect>:
 800ac04:	b480      	push	{r7}
 800ac06:	b083      	sub	sp, #12
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	6078      	str	r0, [r7, #4]
 800ac0c:	2300      	movs	r3, #0
 800ac0e:	4618      	mov	r0, r3
 800ac10:	370c      	adds	r7, #12
 800ac12:	46bd      	mov	sp, r7
 800ac14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac18:	4770      	bx	lr

0800ac1a <USB_ReadInterrupts>:
 800ac1a:	b480      	push	{r7}
 800ac1c:	b085      	sub	sp, #20
 800ac1e:	af00      	add	r7, sp, #0
 800ac20:	6078      	str	r0, [r7, #4]
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 800ac28:	b29b      	uxth	r3, r3
 800ac2a:	60fb      	str	r3, [r7, #12]
 800ac2c:	68fb      	ldr	r3, [r7, #12]
 800ac2e:	4618      	mov	r0, r3
 800ac30:	3714      	adds	r7, #20
 800ac32:	46bd      	mov	sp, r7
 800ac34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac38:	4770      	bx	lr

0800ac3a <USB_WritePMA>:
 800ac3a:	b480      	push	{r7}
 800ac3c:	b08b      	sub	sp, #44	@ 0x2c
 800ac3e:	af00      	add	r7, sp, #0
 800ac40:	60f8      	str	r0, [r7, #12]
 800ac42:	60b9      	str	r1, [r7, #8]
 800ac44:	4611      	mov	r1, r2
 800ac46:	461a      	mov	r2, r3
 800ac48:	460b      	mov	r3, r1
 800ac4a:	80fb      	strh	r3, [r7, #6]
 800ac4c:	4613      	mov	r3, r2
 800ac4e:	80bb      	strh	r3, [r7, #4]
 800ac50:	88bb      	ldrh	r3, [r7, #4]
 800ac52:	3301      	adds	r3, #1
 800ac54:	085b      	lsrs	r3, r3, #1
 800ac56:	61bb      	str	r3, [r7, #24]
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	617b      	str	r3, [r7, #20]
 800ac5c:	68bb      	ldr	r3, [r7, #8]
 800ac5e:	61fb      	str	r3, [r7, #28]
 800ac60:	88fb      	ldrh	r3, [r7, #6]
 800ac62:	005a      	lsls	r2, r3, #1
 800ac64:	697b      	ldr	r3, [r7, #20]
 800ac66:	4413      	add	r3, r2
 800ac68:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800ac6c:	623b      	str	r3, [r7, #32]
 800ac6e:	69bb      	ldr	r3, [r7, #24]
 800ac70:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac72:	e01e      	b.n	800acb2 <USB_WritePMA+0x78>
 800ac74:	69fb      	ldr	r3, [r7, #28]
 800ac76:	781b      	ldrb	r3, [r3, #0]
 800ac78:	827b      	strh	r3, [r7, #18]
 800ac7a:	69fb      	ldr	r3, [r7, #28]
 800ac7c:	3301      	adds	r3, #1
 800ac7e:	781b      	ldrb	r3, [r3, #0]
 800ac80:	021b      	lsls	r3, r3, #8
 800ac82:	b21a      	sxth	r2, r3
 800ac84:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ac88:	4313      	orrs	r3, r2
 800ac8a:	b21b      	sxth	r3, r3
 800ac8c:	827b      	strh	r3, [r7, #18]
 800ac8e:	6a3b      	ldr	r3, [r7, #32]
 800ac90:	8a7a      	ldrh	r2, [r7, #18]
 800ac92:	801a      	strh	r2, [r3, #0]
 800ac94:	6a3b      	ldr	r3, [r7, #32]
 800ac96:	3302      	adds	r3, #2
 800ac98:	623b      	str	r3, [r7, #32]
 800ac9a:	6a3b      	ldr	r3, [r7, #32]
 800ac9c:	3302      	adds	r3, #2
 800ac9e:	623b      	str	r3, [r7, #32]
 800aca0:	69fb      	ldr	r3, [r7, #28]
 800aca2:	3301      	adds	r3, #1
 800aca4:	61fb      	str	r3, [r7, #28]
 800aca6:	69fb      	ldr	r3, [r7, #28]
 800aca8:	3301      	adds	r3, #1
 800acaa:	61fb      	str	r3, [r7, #28]
 800acac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acae:	3b01      	subs	r3, #1
 800acb0:	627b      	str	r3, [r7, #36]	@ 0x24
 800acb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acb4:	2b00      	cmp	r3, #0
 800acb6:	d1dd      	bne.n	800ac74 <USB_WritePMA+0x3a>
 800acb8:	bf00      	nop
 800acba:	bf00      	nop
 800acbc:	372c      	adds	r7, #44	@ 0x2c
 800acbe:	46bd      	mov	sp, r7
 800acc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acc4:	4770      	bx	lr

0800acc6 <USB_ReadPMA>:
 800acc6:	b480      	push	{r7}
 800acc8:	b08b      	sub	sp, #44	@ 0x2c
 800acca:	af00      	add	r7, sp, #0
 800accc:	60f8      	str	r0, [r7, #12]
 800acce:	60b9      	str	r1, [r7, #8]
 800acd0:	4611      	mov	r1, r2
 800acd2:	461a      	mov	r2, r3
 800acd4:	460b      	mov	r3, r1
 800acd6:	80fb      	strh	r3, [r7, #6]
 800acd8:	4613      	mov	r3, r2
 800acda:	80bb      	strh	r3, [r7, #4]
 800acdc:	88bb      	ldrh	r3, [r7, #4]
 800acde:	085b      	lsrs	r3, r3, #1
 800ace0:	b29b      	uxth	r3, r3
 800ace2:	61bb      	str	r3, [r7, #24]
 800ace4:	68fb      	ldr	r3, [r7, #12]
 800ace6:	617b      	str	r3, [r7, #20]
 800ace8:	68bb      	ldr	r3, [r7, #8]
 800acea:	61fb      	str	r3, [r7, #28]
 800acec:	88fb      	ldrh	r3, [r7, #6]
 800acee:	005a      	lsls	r2, r3, #1
 800acf0:	697b      	ldr	r3, [r7, #20]
 800acf2:	4413      	add	r3, r2
 800acf4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800acf8:	623b      	str	r3, [r7, #32]
 800acfa:	69bb      	ldr	r3, [r7, #24]
 800acfc:	627b      	str	r3, [r7, #36]	@ 0x24
 800acfe:	e01b      	b.n	800ad38 <USB_ReadPMA+0x72>
 800ad00:	6a3b      	ldr	r3, [r7, #32]
 800ad02:	881b      	ldrh	r3, [r3, #0]
 800ad04:	b29b      	uxth	r3, r3
 800ad06:	613b      	str	r3, [r7, #16]
 800ad08:	6a3b      	ldr	r3, [r7, #32]
 800ad0a:	3302      	adds	r3, #2
 800ad0c:	623b      	str	r3, [r7, #32]
 800ad0e:	693b      	ldr	r3, [r7, #16]
 800ad10:	b2da      	uxtb	r2, r3
 800ad12:	69fb      	ldr	r3, [r7, #28]
 800ad14:	701a      	strb	r2, [r3, #0]
 800ad16:	69fb      	ldr	r3, [r7, #28]
 800ad18:	3301      	adds	r3, #1
 800ad1a:	61fb      	str	r3, [r7, #28]
 800ad1c:	693b      	ldr	r3, [r7, #16]
 800ad1e:	0a1b      	lsrs	r3, r3, #8
 800ad20:	b2da      	uxtb	r2, r3
 800ad22:	69fb      	ldr	r3, [r7, #28]
 800ad24:	701a      	strb	r2, [r3, #0]
 800ad26:	69fb      	ldr	r3, [r7, #28]
 800ad28:	3301      	adds	r3, #1
 800ad2a:	61fb      	str	r3, [r7, #28]
 800ad2c:	6a3b      	ldr	r3, [r7, #32]
 800ad2e:	3302      	adds	r3, #2
 800ad30:	623b      	str	r3, [r7, #32]
 800ad32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad34:	3b01      	subs	r3, #1
 800ad36:	627b      	str	r3, [r7, #36]	@ 0x24
 800ad38:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d1e0      	bne.n	800ad00 <USB_ReadPMA+0x3a>
 800ad3e:	88bb      	ldrh	r3, [r7, #4]
 800ad40:	f003 0301 	and.w	r3, r3, #1
 800ad44:	b29b      	uxth	r3, r3
 800ad46:	2b00      	cmp	r3, #0
 800ad48:	d007      	beq.n	800ad5a <USB_ReadPMA+0x94>
 800ad4a:	6a3b      	ldr	r3, [r7, #32]
 800ad4c:	881b      	ldrh	r3, [r3, #0]
 800ad4e:	b29b      	uxth	r3, r3
 800ad50:	613b      	str	r3, [r7, #16]
 800ad52:	693b      	ldr	r3, [r7, #16]
 800ad54:	b2da      	uxtb	r2, r3
 800ad56:	69fb      	ldr	r3, [r7, #28]
 800ad58:	701a      	strb	r2, [r3, #0]
 800ad5a:	bf00      	nop
 800ad5c:	372c      	adds	r7, #44	@ 0x2c
 800ad5e:	46bd      	mov	sp, r7
 800ad60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad64:	4770      	bx	lr

0800ad66 <USBD_CUSTOM_HID_Init>:
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_Init(USBD_HandleTypeDef *pdev,
                                     uint8_t cfgidx)
{
 800ad66:	b580      	push	{r7, lr}
 800ad68:	b084      	sub	sp, #16
 800ad6a:	af00      	add	r7, sp, #0
 800ad6c:	6078      	str	r0, [r7, #4]
 800ad6e:	460b      	mov	r3, r1
 800ad70:	70fb      	strb	r3, [r7, #3]
  uint8_t ret = 0U;
 800ad72:	2300      	movs	r3, #0
 800ad74:	73fb      	strb	r3, [r7, #15]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid;

  /* Open EP IN */
  USBD_LL_OpenEP(pdev, CUSTOM_HID_EPIN_ADDR, USBD_EP_TYPE_INTR,
 800ad76:	2302      	movs	r3, #2
 800ad78:	2203      	movs	r2, #3
 800ad7a:	2181      	movs	r1, #129	@ 0x81
 800ad7c:	6878      	ldr	r0, [r7, #4]
 800ad7e:	f001 fd98 	bl	800c8b2 <USBD_LL_OpenEP>
                 CUSTOM_HID_EPIN_SIZE);

  pdev->ep_in[CUSTOM_HID_EPIN_ADDR & 0xFU].is_used = 1U;
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	2201      	movs	r2, #1
 800ad86:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Open EP OUT */
  USBD_LL_OpenEP(pdev, CUSTOM_HID_EPOUT_ADDR, USBD_EP_TYPE_INTR,
 800ad88:	2302      	movs	r3, #2
 800ad8a:	2203      	movs	r2, #3
 800ad8c:	2101      	movs	r1, #1
 800ad8e:	6878      	ldr	r0, [r7, #4]
 800ad90:	f001 fd8f 	bl	800c8b2 <USBD_LL_OpenEP>
                 CUSTOM_HID_EPOUT_SIZE);

  pdev->ep_out[CUSTOM_HID_EPOUT_ADDR & 0xFU].is_used = 1U;
 800ad94:	687b      	ldr	r3, [r7, #4]
 800ad96:	2201      	movs	r2, #1
 800ad98:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c

  pdev->pClassData = USBD_malloc(sizeof(USBD_CUSTOM_HID_HandleTypeDef));
 800ad9c:	2024      	movs	r0, #36	@ 0x24
 800ad9e:	f001 fe9d 	bl	800cadc <USBD_static_malloc>
 800ada2:	4602      	mov	r2, r0
 800ada4:	687b      	ldr	r3, [r7, #4]
 800ada6:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8

  if (pdev->pClassData == NULL)
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800adb0:	2b00      	cmp	r3, #0
 800adb2:	d102      	bne.n	800adba <USBD_CUSTOM_HID_Init+0x54>
  {
    ret = 1U;
 800adb4:	2301      	movs	r3, #1
 800adb6:	73fb      	strb	r3, [r7, #15]
 800adb8:	e012      	b.n	800ade0 <USBD_CUSTOM_HID_Init+0x7a>
  }
  else
  {
    hhid = (USBD_CUSTOM_HID_HandleTypeDef *) pdev->pClassData;
 800adba:	687b      	ldr	r3, [r7, #4]
 800adbc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800adc0:	60bb      	str	r3, [r7, #8]

    hhid->state = CUSTOM_HID_IDLE;
 800adc2:	68bb      	ldr	r3, [r7, #8]
 800adc4:	2200      	movs	r2, #0
 800adc6:	f883 2020 	strb.w	r2, [r3, #32]
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->Init();
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800add0:	685b      	ldr	r3, [r3, #4]
 800add2:	4798      	blx	r3

    /* Prepare Out endpoint to receive 1st packet */
    USBD_LL_PrepareReceive(pdev, CUSTOM_HID_EPOUT_ADDR, hhid->Report_buf,
 800add4:	68ba      	ldr	r2, [r7, #8]
 800add6:	230d      	movs	r3, #13
 800add8:	2101      	movs	r1, #1
 800adda:	6878      	ldr	r0, [r7, #4]
 800addc:	f001 fe5a 	bl	800ca94 <USBD_LL_PrepareReceive>
                           USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
  }

  return ret;
 800ade0:	7bfb      	ldrb	r3, [r7, #15]
}
 800ade2:	4618      	mov	r0, r3
 800ade4:	3710      	adds	r7, #16
 800ade6:	46bd      	mov	sp, r7
 800ade8:	bd80      	pop	{r7, pc}

0800adea <USBD_CUSTOM_HID_DeInit>:
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DeInit(USBD_HandleTypeDef *pdev,
                                       uint8_t cfgidx)
{
 800adea:	b580      	push	{r7, lr}
 800adec:	b082      	sub	sp, #8
 800adee:	af00      	add	r7, sp, #0
 800adf0:	6078      	str	r0, [r7, #4]
 800adf2:	460b      	mov	r3, r1
 800adf4:	70fb      	strb	r3, [r7, #3]
  /* Close CUSTOM_HID EP IN */
  USBD_LL_CloseEP(pdev, CUSTOM_HID_EPIN_ADDR);
 800adf6:	2181      	movs	r1, #129	@ 0x81
 800adf8:	6878      	ldr	r0, [r7, #4]
 800adfa:	f001 fd80 	bl	800c8fe <USBD_LL_CloseEP>
  pdev->ep_in[CUSTOM_HID_EPIN_ADDR & 0xFU].is_used = 0U;
 800adfe:	687b      	ldr	r3, [r7, #4]
 800ae00:	2200      	movs	r2, #0
 800ae02:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Close CUSTOM_HID EP OUT */
  USBD_LL_CloseEP(pdev, CUSTOM_HID_EPOUT_ADDR);
 800ae04:	2101      	movs	r1, #1
 800ae06:	6878      	ldr	r0, [r7, #4]
 800ae08:	f001 fd79 	bl	800c8fe <USBD_LL_CloseEP>
  pdev->ep_out[CUSTOM_HID_EPOUT_ADDR & 0xFU].is_used = 0U;
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	2200      	movs	r2, #0
 800ae10:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c

  /* FRee allocated memory */
  if (pdev->pClassData != NULL)
 800ae14:	687b      	ldr	r3, [r7, #4]
 800ae16:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ae1a:	2b00      	cmp	r3, #0
 800ae1c:	d00e      	beq.n	800ae3c <USBD_CUSTOM_HID_DeInit+0x52>
  {
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->DeInit();
 800ae1e:	687b      	ldr	r3, [r7, #4]
 800ae20:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800ae24:	689b      	ldr	r3, [r3, #8]
 800ae26:	4798      	blx	r3
    USBD_free(pdev->pClassData);
 800ae28:	687b      	ldr	r3, [r7, #4]
 800ae2a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ae2e:	4618      	mov	r0, r3
 800ae30:	f001 fe62 	bl	800caf8 <USBD_static_free>
    pdev->pClassData = NULL;
 800ae34:	687b      	ldr	r3, [r7, #4]
 800ae36:	2200      	movs	r2, #0
 800ae38:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
  }
  return USBD_OK;
 800ae3c:	2300      	movs	r3, #0
}
 800ae3e:	4618      	mov	r0, r3
 800ae40:	3708      	adds	r7, #8
 800ae42:	46bd      	mov	sp, r7
 800ae44:	bd80      	pop	{r7, pc}
	...

0800ae48 <USBD_CUSTOM_HID_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_Setup(USBD_HandleTypeDef *pdev,
                                      USBD_SetupReqTypedef *req)
{
 800ae48:	b580      	push	{r7, lr}
 800ae4a:	b088      	sub	sp, #32
 800ae4c:	af00      	add	r7, sp, #0
 800ae4e:	6078      	str	r0, [r7, #4]
 800ae50:	6039      	str	r1, [r7, #0]
  USBD_CUSTOM_HID_HandleTypeDef *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ae58:	613b      	str	r3, [r7, #16]
  uint16_t len = 0U;
 800ae5a:	2300      	movs	r3, #0
 800ae5c:	83fb      	strh	r3, [r7, #30]
  uint8_t  *pbuf = NULL;
 800ae5e:	2300      	movs	r3, #0
 800ae60:	61bb      	str	r3, [r7, #24]
  uint16_t status_info = 0U;
 800ae62:	2300      	movs	r3, #0
 800ae64:	81fb      	strh	r3, [r7, #14]
  uint8_t ret = USBD_OK;
 800ae66:	2300      	movs	r3, #0
 800ae68:	75fb      	strb	r3, [r7, #23]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800ae6a:	683b      	ldr	r3, [r7, #0]
 800ae6c:	781b      	ldrb	r3, [r3, #0]
 800ae6e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ae72:	2b00      	cmp	r3, #0
 800ae74:	d051      	beq.n	800af1a <USBD_CUSTOM_HID_Setup+0xd2>
 800ae76:	2b20      	cmp	r3, #32
 800ae78:	f040 80d8 	bne.w	800b02c <USBD_CUSTOM_HID_Setup+0x1e4>
  {
    case USB_REQ_TYPE_CLASS :
      switch (req->bRequest)
 800ae7c:	683b      	ldr	r3, [r7, #0]
 800ae7e:	785b      	ldrb	r3, [r3, #1]
 800ae80:	3b02      	subs	r3, #2
 800ae82:	2b09      	cmp	r3, #9
 800ae84:	d841      	bhi.n	800af0a <USBD_CUSTOM_HID_Setup+0xc2>
 800ae86:	a201      	add	r2, pc, #4	@ (adr r2, 800ae8c <USBD_CUSTOM_HID_Setup+0x44>)
 800ae88:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ae8c:	0800aee5 	.word	0x0800aee5
 800ae90:	0800aec3 	.word	0x0800aec3
 800ae94:	0800af0b 	.word	0x0800af0b
 800ae98:	0800af0b 	.word	0x0800af0b
 800ae9c:	0800af0b 	.word	0x0800af0b
 800aea0:	0800af0b 	.word	0x0800af0b
 800aea4:	0800af0b 	.word	0x0800af0b
 800aea8:	0800aef5 	.word	0x0800aef5
 800aeac:	0800aed3 	.word	0x0800aed3
 800aeb0:	0800aeb5 	.word	0x0800aeb5
      {
        case CUSTOM_HID_REQ_SET_PROTOCOL:
          hhid->Protocol = (uint8_t)(req->wValue);
 800aeb4:	683b      	ldr	r3, [r7, #0]
 800aeb6:	885b      	ldrh	r3, [r3, #2]
 800aeb8:	b2db      	uxtb	r3, r3
 800aeba:	461a      	mov	r2, r3
 800aebc:	693b      	ldr	r3, [r7, #16]
 800aebe:	611a      	str	r2, [r3, #16]
          break;
 800aec0:	e02a      	b.n	800af18 <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_GET_PROTOCOL:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->Protocol, 1U);
 800aec2:	693b      	ldr	r3, [r7, #16]
 800aec4:	3310      	adds	r3, #16
 800aec6:	2201      	movs	r2, #1
 800aec8:	4619      	mov	r1, r3
 800aeca:	6878      	ldr	r0, [r7, #4]
 800aecc:	f001 f9a4 	bl	800c218 <USBD_CtlSendData>
          break;
 800aed0:	e022      	b.n	800af18 <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_SET_IDLE:
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800aed2:	683b      	ldr	r3, [r7, #0]
 800aed4:	885b      	ldrh	r3, [r3, #2]
 800aed6:	0a1b      	lsrs	r3, r3, #8
 800aed8:	b29b      	uxth	r3, r3
 800aeda:	b2db      	uxtb	r3, r3
 800aedc:	461a      	mov	r2, r3
 800aede:	693b      	ldr	r3, [r7, #16]
 800aee0:	615a      	str	r2, [r3, #20]
          break;
 800aee2:	e019      	b.n	800af18 <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_GET_IDLE:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->IdleState, 1U);
 800aee4:	693b      	ldr	r3, [r7, #16]
 800aee6:	3314      	adds	r3, #20
 800aee8:	2201      	movs	r2, #1
 800aeea:	4619      	mov	r1, r3
 800aeec:	6878      	ldr	r0, [r7, #4]
 800aeee:	f001 f993 	bl	800c218 <USBD_CtlSendData>
          break;
 800aef2:	e011      	b.n	800af18 <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_SET_REPORT:
          hhid->IsReportAvailable = 1U;
 800aef4:	693b      	ldr	r3, [r7, #16]
 800aef6:	2201      	movs	r2, #1
 800aef8:	61da      	str	r2, [r3, #28]
          USBD_CtlPrepareRx(pdev, hhid->Report_buf, req->wLength);
 800aefa:	6939      	ldr	r1, [r7, #16]
 800aefc:	683b      	ldr	r3, [r7, #0]
 800aefe:	88db      	ldrh	r3, [r3, #6]
 800af00:	461a      	mov	r2, r3
 800af02:	6878      	ldr	r0, [r7, #4]
 800af04:	f001 f9b6 	bl	800c274 <USBD_CtlPrepareRx>
          break;
 800af08:	e006      	b.n	800af18 <USBD_CUSTOM_HID_Setup+0xd0>

        default:
          USBD_CtlError(pdev, req);
 800af0a:	6839      	ldr	r1, [r7, #0]
 800af0c:	6878      	ldr	r0, [r7, #4]
 800af0e:	f001 f918 	bl	800c142 <USBD_CtlError>
          ret = USBD_FAIL;
 800af12:	2302      	movs	r3, #2
 800af14:	75fb      	strb	r3, [r7, #23]
          break;
 800af16:	bf00      	nop
      }
      break;
 800af18:	e08f      	b.n	800b03a <USBD_CUSTOM_HID_Setup+0x1f2>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800af1a:	683b      	ldr	r3, [r7, #0]
 800af1c:	785b      	ldrb	r3, [r3, #1]
 800af1e:	2b0b      	cmp	r3, #11
 800af20:	d87c      	bhi.n	800b01c <USBD_CUSTOM_HID_Setup+0x1d4>
 800af22:	a201      	add	r2, pc, #4	@ (adr r2, 800af28 <USBD_CUSTOM_HID_Setup+0xe0>)
 800af24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800af28:	0800af59 	.word	0x0800af59
 800af2c:	0800b01d 	.word	0x0800b01d
 800af30:	0800b01d 	.word	0x0800b01d
 800af34:	0800b01d 	.word	0x0800b01d
 800af38:	0800b01d 	.word	0x0800b01d
 800af3c:	0800b01d 	.word	0x0800b01d
 800af40:	0800af81 	.word	0x0800af81
 800af44:	0800b01d 	.word	0x0800b01d
 800af48:	0800b01d 	.word	0x0800b01d
 800af4c:	0800b01d 	.word	0x0800b01d
 800af50:	0800afcf 	.word	0x0800afcf
 800af54:	0800aff7 	.word	0x0800aff7
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800af5e:	2b03      	cmp	r3, #3
 800af60:	d107      	bne.n	800af72 <USBD_CUSTOM_HID_Setup+0x12a>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&status_info, 2U);
 800af62:	f107 030e 	add.w	r3, r7, #14
 800af66:	2202      	movs	r2, #2
 800af68:	4619      	mov	r1, r3
 800af6a:	6878      	ldr	r0, [r7, #4]
 800af6c:	f001 f954 	bl	800c218 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 800af70:	e05b      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 800af72:	6839      	ldr	r1, [r7, #0]
 800af74:	6878      	ldr	r0, [r7, #4]
 800af76:	f001 f8e4 	bl	800c142 <USBD_CtlError>
            ret = USBD_FAIL;
 800af7a:	2302      	movs	r3, #2
 800af7c:	75fb      	strb	r3, [r7, #23]
          break;
 800af7e:	e054      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_GET_DESCRIPTOR:
          if (req->wValue >> 8 == CUSTOM_HID_REPORT_DESC)
 800af80:	683b      	ldr	r3, [r7, #0]
 800af82:	885b      	ldrh	r3, [r3, #2]
 800af84:	0a1b      	lsrs	r3, r3, #8
 800af86:	b29b      	uxth	r3, r3
 800af88:	2b22      	cmp	r3, #34	@ 0x22
 800af8a:	d10b      	bne.n	800afa4 <USBD_CUSTOM_HID_Setup+0x15c>
          {
            len = MIN(USBD_CUSTOM_HID_REPORT_DESC_SIZE, req->wLength);
 800af8c:	683b      	ldr	r3, [r7, #0]
 800af8e:	88db      	ldrh	r3, [r3, #6]
 800af90:	2b23      	cmp	r3, #35	@ 0x23
 800af92:	bf28      	it	cs
 800af94:	2323      	movcs	r3, #35	@ 0x23
 800af96:	83fb      	strh	r3, [r7, #30]
            pbuf = ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->pReport;
 800af98:	687b      	ldr	r3, [r7, #4]
 800af9a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	61bb      	str	r3, [r7, #24]
 800afa2:	e00d      	b.n	800afc0 <USBD_CUSTOM_HID_Setup+0x178>
          }
          else
          {
            if (req->wValue >> 8 == CUSTOM_HID_DESCRIPTOR_TYPE)
 800afa4:	683b      	ldr	r3, [r7, #0]
 800afa6:	885b      	ldrh	r3, [r3, #2]
 800afa8:	0a1b      	lsrs	r3, r3, #8
 800afaa:	b29b      	uxth	r3, r3
 800afac:	2b21      	cmp	r3, #33	@ 0x21
 800afae:	d107      	bne.n	800afc0 <USBD_CUSTOM_HID_Setup+0x178>
            {
              pbuf = USBD_CUSTOM_HID_Desc;
 800afb0:	4b24      	ldr	r3, [pc, #144]	@ (800b044 <USBD_CUSTOM_HID_Setup+0x1fc>)
 800afb2:	61bb      	str	r3, [r7, #24]
              len = MIN(USB_CUSTOM_HID_DESC_SIZ, req->wLength);
 800afb4:	683b      	ldr	r3, [r7, #0]
 800afb6:	88db      	ldrh	r3, [r3, #6]
 800afb8:	2b09      	cmp	r3, #9
 800afba:	bf28      	it	cs
 800afbc:	2309      	movcs	r3, #9
 800afbe:	83fb      	strh	r3, [r7, #30]
            }
          }

          USBD_CtlSendData(pdev, pbuf, len);
 800afc0:	8bfb      	ldrh	r3, [r7, #30]
 800afc2:	461a      	mov	r2, r3
 800afc4:	69b9      	ldr	r1, [r7, #24]
 800afc6:	6878      	ldr	r0, [r7, #4]
 800afc8:	f001 f926 	bl	800c218 <USBD_CtlSendData>
          break;
 800afcc:	e02d      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_GET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800afce:	687b      	ldr	r3, [r7, #4]
 800afd0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800afd4:	2b03      	cmp	r3, #3
 800afd6:	d107      	bne.n	800afe8 <USBD_CUSTOM_HID_Setup+0x1a0>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->AltSetting, 1U);
 800afd8:	693b      	ldr	r3, [r7, #16]
 800afda:	3318      	adds	r3, #24
 800afdc:	2201      	movs	r2, #1
 800afde:	4619      	mov	r1, r3
 800afe0:	6878      	ldr	r0, [r7, #4]
 800afe2:	f001 f919 	bl	800c218 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 800afe6:	e020      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 800afe8:	6839      	ldr	r1, [r7, #0]
 800afea:	6878      	ldr	r0, [r7, #4]
 800afec:	f001 f8a9 	bl	800c142 <USBD_CtlError>
            ret = USBD_FAIL;
 800aff0:	2302      	movs	r3, #2
 800aff2:	75fb      	strb	r3, [r7, #23]
          break;
 800aff4:	e019      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_SET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800affc:	2b03      	cmp	r3, #3
 800affe:	d106      	bne.n	800b00e <USBD_CUSTOM_HID_Setup+0x1c6>
          {
            hhid->AltSetting = (uint8_t)(req->wValue);
 800b000:	683b      	ldr	r3, [r7, #0]
 800b002:	885b      	ldrh	r3, [r3, #2]
 800b004:	b2db      	uxtb	r3, r3
 800b006:	461a      	mov	r2, r3
 800b008:	693b      	ldr	r3, [r7, #16]
 800b00a:	619a      	str	r2, [r3, #24]
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 800b00c:	e00d      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 800b00e:	6839      	ldr	r1, [r7, #0]
 800b010:	6878      	ldr	r0, [r7, #4]
 800b012:	f001 f896 	bl	800c142 <USBD_CtlError>
            ret = USBD_FAIL;
 800b016:	2302      	movs	r3, #2
 800b018:	75fb      	strb	r3, [r7, #23]
          break;
 800b01a:	e006      	b.n	800b02a <USBD_CUSTOM_HID_Setup+0x1e2>

        default:
          USBD_CtlError(pdev, req);
 800b01c:	6839      	ldr	r1, [r7, #0]
 800b01e:	6878      	ldr	r0, [r7, #4]
 800b020:	f001 f88f 	bl	800c142 <USBD_CtlError>
          ret = USBD_FAIL;
 800b024:	2302      	movs	r3, #2
 800b026:	75fb      	strb	r3, [r7, #23]
          break;
 800b028:	bf00      	nop
      }
      break;
 800b02a:	e006      	b.n	800b03a <USBD_CUSTOM_HID_Setup+0x1f2>

    default:
      USBD_CtlError(pdev, req);
 800b02c:	6839      	ldr	r1, [r7, #0]
 800b02e:	6878      	ldr	r0, [r7, #4]
 800b030:	f001 f887 	bl	800c142 <USBD_CtlError>
      ret = USBD_FAIL;
 800b034:	2302      	movs	r3, #2
 800b036:	75fb      	strb	r3, [r7, #23]
      break;
 800b038:	bf00      	nop
  }
  return ret;
 800b03a:	7dfb      	ldrb	r3, [r7, #23]
}
 800b03c:	4618      	mov	r0, r3
 800b03e:	3720      	adds	r7, #32
 800b040:	46bd      	mov	sp, r7
 800b042:	bd80      	pop	{r7, pc}
 800b044:	200000c8 	.word	0x200000c8

0800b048 <USBD_CUSTOM_HID_SendReport>:
  * @retval status
  */
uint8_t USBD_CUSTOM_HID_SendReport(USBD_HandleTypeDef  *pdev,
                                   uint8_t *report,
                                   uint16_t len)
{
 800b048:	b580      	push	{r7, lr}
 800b04a:	b086      	sub	sp, #24
 800b04c:	af00      	add	r7, sp, #0
 800b04e:	60f8      	str	r0, [r7, #12]
 800b050:	60b9      	str	r1, [r7, #8]
 800b052:	4613      	mov	r3, r2
 800b054:	80fb      	strh	r3, [r7, #6]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 800b056:	68fb      	ldr	r3, [r7, #12]
 800b058:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b05c:	617b      	str	r3, [r7, #20]

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b05e:	68fb      	ldr	r3, [r7, #12]
 800b060:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b064:	2b03      	cmp	r3, #3
 800b066:	d111      	bne.n	800b08c <USBD_CUSTOM_HID_SendReport+0x44>
  {
    if (hhid->state == CUSTOM_HID_IDLE)
 800b068:	697b      	ldr	r3, [r7, #20]
 800b06a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b06e:	2b00      	cmp	r3, #0
 800b070:	d10a      	bne.n	800b088 <USBD_CUSTOM_HID_SendReport+0x40>
    {
      hhid->state = CUSTOM_HID_BUSY;
 800b072:	697b      	ldr	r3, [r7, #20]
 800b074:	2201      	movs	r2, #1
 800b076:	f883 2020 	strb.w	r2, [r3, #32]
      USBD_LL_Transmit(pdev, CUSTOM_HID_EPIN_ADDR, report, len);
 800b07a:	88fb      	ldrh	r3, [r7, #6]
 800b07c:	68ba      	ldr	r2, [r7, #8]
 800b07e:	2181      	movs	r1, #129	@ 0x81
 800b080:	68f8      	ldr	r0, [r7, #12]
 800b082:	f001 fce4 	bl	800ca4e <USBD_LL_Transmit>
 800b086:	e001      	b.n	800b08c <USBD_CUSTOM_HID_SendReport+0x44>
    }
    else
    {
      return USBD_BUSY;
 800b088:	2301      	movs	r3, #1
 800b08a:	e000      	b.n	800b08e <USBD_CUSTOM_HID_SendReport+0x46>
    }
  }
  return USBD_OK;
 800b08c:	2300      	movs	r3, #0
}
 800b08e:	4618      	mov	r0, r3
 800b090:	3718      	adds	r7, #24
 800b092:	46bd      	mov	sp, r7
 800b094:	bd80      	pop	{r7, pc}
	...

0800b098 <USBD_CUSTOM_HID_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetFSCfgDesc(uint16_t *length)
{
 800b098:	b480      	push	{r7}
 800b09a:	b083      	sub	sp, #12
 800b09c:	af00      	add	r7, sp, #0
 800b09e:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_CfgFSDesc);
 800b0a0:	687b      	ldr	r3, [r7, #4]
 800b0a2:	2229      	movs	r2, #41	@ 0x29
 800b0a4:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_CfgFSDesc;
 800b0a6:	4b03      	ldr	r3, [pc, #12]	@ (800b0b4 <USBD_CUSTOM_HID_GetFSCfgDesc+0x1c>)
}
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	370c      	adds	r7, #12
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b2:	4770      	bx	lr
 800b0b4:	20000044 	.word	0x20000044

0800b0b8 <USBD_CUSTOM_HID_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetHSCfgDesc(uint16_t *length)
{
 800b0b8:	b480      	push	{r7}
 800b0ba:	b083      	sub	sp, #12
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_CfgHSDesc);
 800b0c0:	687b      	ldr	r3, [r7, #4]
 800b0c2:	2229      	movs	r2, #41	@ 0x29
 800b0c4:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_CfgHSDesc;
 800b0c6:	4b03      	ldr	r3, [pc, #12]	@ (800b0d4 <USBD_CUSTOM_HID_GetHSCfgDesc+0x1c>)
}
 800b0c8:	4618      	mov	r0, r3
 800b0ca:	370c      	adds	r7, #12
 800b0cc:	46bd      	mov	sp, r7
 800b0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0d2:	4770      	bx	lr
 800b0d4:	20000070 	.word	0x20000070

0800b0d8 <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetOtherSpeedCfgDesc(uint16_t *length)
{
 800b0d8:	b480      	push	{r7}
 800b0da:	b083      	sub	sp, #12
 800b0dc:	af00      	add	r7, sp, #0
 800b0de:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_OtherSpeedCfgDesc);
 800b0e0:	687b      	ldr	r3, [r7, #4]
 800b0e2:	2229      	movs	r2, #41	@ 0x29
 800b0e4:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_OtherSpeedCfgDesc;
 800b0e6:	4b03      	ldr	r3, [pc, #12]	@ (800b0f4 <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc+0x1c>)
}
 800b0e8:	4618      	mov	r0, r3
 800b0ea:	370c      	adds	r7, #12
 800b0ec:	46bd      	mov	sp, r7
 800b0ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0f2:	4770      	bx	lr
 800b0f4:	2000009c 	.word	0x2000009c

0800b0f8 <USBD_CUSTOM_HID_DataIn>:
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DataIn(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum)
{
 800b0f8:	b480      	push	{r7}
 800b0fa:	b083      	sub	sp, #12
 800b0fc:	af00      	add	r7, sp, #0
 800b0fe:	6078      	str	r0, [r7, #4]
 800b100:	460b      	mov	r3, r1
 800b102:	70fb      	strb	r3, [r7, #3]
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData)->state = CUSTOM_HID_IDLE;
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b10a:	2200      	movs	r2, #0
 800b10c:	f883 2020 	strb.w	r2, [r3, #32]

  return USBD_OK;
 800b110:	2300      	movs	r3, #0
}
 800b112:	4618      	mov	r0, r3
 800b114:	370c      	adds	r7, #12
 800b116:	46bd      	mov	sp, r7
 800b118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11c:	4770      	bx	lr

0800b11e <USBD_CUSTOM_HID_DataOut>:
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DataOut(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum)
{
 800b11e:	b580      	push	{r7, lr}
 800b120:	b084      	sub	sp, #16
 800b122:	af00      	add	r7, sp, #0
 800b124:	6078      	str	r0, [r7, #4]
 800b126:	460b      	mov	r3, r1
 800b128:	70fb      	strb	r3, [r7, #3]

  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b130:	60fb      	str	r3, [r7, #12]

  ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->OutEvent(hhid->Report_buf[0],
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800b138:	68db      	ldr	r3, [r3, #12]
 800b13a:	68fa      	ldr	r2, [r7, #12]
 800b13c:	7810      	ldrb	r0, [r2, #0]
 800b13e:	68fa      	ldr	r2, [r7, #12]
 800b140:	7852      	ldrb	r2, [r2, #1]
 800b142:	4611      	mov	r1, r2
 800b144:	4798      	blx	r3
                                                            hhid->Report_buf[1]);

  USBD_LL_PrepareReceive(pdev, CUSTOM_HID_EPOUT_ADDR, hhid->Report_buf,
 800b146:	68fa      	ldr	r2, [r7, #12]
 800b148:	230d      	movs	r3, #13
 800b14a:	2101      	movs	r1, #1
 800b14c:	6878      	ldr	r0, [r7, #4]
 800b14e:	f001 fca1 	bl	800ca94 <USBD_LL_PrepareReceive>
                         USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);

  return USBD_OK;
 800b152:	2300      	movs	r3, #0
}
 800b154:	4618      	mov	r0, r3
 800b156:	3710      	adds	r7, #16
 800b158:	46bd      	mov	sp, r7
 800b15a:	bd80      	pop	{r7, pc}

0800b15c <USBD_CUSTOM_HID_EP0_RxReady>:
  *         Handles control request data.
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 800b15c:	b580      	push	{r7, lr}
 800b15e:	b084      	sub	sp, #16
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 800b164:	687b      	ldr	r3, [r7, #4]
 800b166:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b16a:	60fb      	str	r3, [r7, #12]

  if (hhid->IsReportAvailable == 1U)
 800b16c:	68fb      	ldr	r3, [r7, #12]
 800b16e:	69db      	ldr	r3, [r3, #28]
 800b170:	2b01      	cmp	r3, #1
 800b172:	d10c      	bne.n	800b18e <USBD_CUSTOM_HID_EP0_RxReady+0x32>
  {
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->OutEvent(hhid->Report_buf[0],
 800b174:	687b      	ldr	r3, [r7, #4]
 800b176:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800b17a:	68db      	ldr	r3, [r3, #12]
 800b17c:	68fa      	ldr	r2, [r7, #12]
 800b17e:	7810      	ldrb	r0, [r2, #0]
 800b180:	68fa      	ldr	r2, [r7, #12]
 800b182:	7852      	ldrb	r2, [r2, #1]
 800b184:	4611      	mov	r1, r2
 800b186:	4798      	blx	r3
                                                              hhid->Report_buf[1]);
    hhid->IsReportAvailable = 0U;
 800b188:	68fb      	ldr	r3, [r7, #12]
 800b18a:	2200      	movs	r2, #0
 800b18c:	61da      	str	r2, [r3, #28]
  }

  return USBD_OK;
 800b18e:	2300      	movs	r3, #0
}
 800b190:	4618      	mov	r0, r3
 800b192:	3710      	adds	r7, #16
 800b194:	46bd      	mov	sp, r7
 800b196:	bd80      	pop	{r7, pc}

0800b198 <USBD_CUSTOM_HID_GetDeviceQualifierDesc>:
*         return Device Qualifier descriptor
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
static uint8_t  *USBD_CUSTOM_HID_GetDeviceQualifierDesc(uint16_t *length)
{
 800b198:	b480      	push	{r7}
 800b19a:	b083      	sub	sp, #12
 800b19c:	af00      	add	r7, sp, #0
 800b19e:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_DeviceQualifierDesc);
 800b1a0:	687b      	ldr	r3, [r7, #4]
 800b1a2:	220a      	movs	r2, #10
 800b1a4:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_DeviceQualifierDesc;
 800b1a6:	4b03      	ldr	r3, [pc, #12]	@ (800b1b4 <USBD_CUSTOM_HID_GetDeviceQualifierDesc+0x1c>)
}
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	370c      	adds	r7, #12
 800b1ac:	46bd      	mov	sp, r7
 800b1ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b2:	4770      	bx	lr
 800b1b4:	200000d4 	.word	0x200000d4

0800b1b8 <USBD_CUSTOM_HID_RegisterInterface>:
  * @param  fops: CUSTOMHID Interface callback
  * @retval status
  */
uint8_t  USBD_CUSTOM_HID_RegisterInterface(USBD_HandleTypeDef   *pdev,
                                           USBD_CUSTOM_HID_ItfTypeDef *fops)
{
 800b1b8:	b480      	push	{r7}
 800b1ba:	b085      	sub	sp, #20
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	6039      	str	r1, [r7, #0]
  uint8_t  ret = USBD_FAIL;
 800b1c2:	2302      	movs	r3, #2
 800b1c4:	73fb      	strb	r3, [r7, #15]

  if (fops != NULL)
 800b1c6:	683b      	ldr	r3, [r7, #0]
 800b1c8:	2b00      	cmp	r3, #0
 800b1ca:	d005      	beq.n	800b1d8 <USBD_CUSTOM_HID_RegisterInterface+0x20>
  {
    pdev->pUserData = fops;
 800b1cc:	687b      	ldr	r3, [r7, #4]
 800b1ce:	683a      	ldr	r2, [r7, #0]
 800b1d0:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
    ret = USBD_OK;
 800b1d4:	2300      	movs	r3, #0
 800b1d6:	73fb      	strb	r3, [r7, #15]
  }

  return ret;
 800b1d8:	7bfb      	ldrb	r3, [r7, #15]
}
 800b1da:	4618      	mov	r0, r3
 800b1dc:	3714      	adds	r7, #20
 800b1de:	46bd      	mov	sp, r7
 800b1e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1e4:	4770      	bx	lr

0800b1e6 <USBD_Init>:
* @param  id: Low level core index
* @retval None
*/
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 800b1e6:	b580      	push	{r7, lr}
 800b1e8:	b084      	sub	sp, #16
 800b1ea:	af00      	add	r7, sp, #0
 800b1ec:	60f8      	str	r0, [r7, #12]
 800b1ee:	60b9      	str	r1, [r7, #8]
 800b1f0:	4613      	mov	r3, r2
 800b1f2:	71fb      	strb	r3, [r7, #7]
  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800b1f4:	68fb      	ldr	r3, [r7, #12]
 800b1f6:	2b00      	cmp	r3, #0
 800b1f8:	d101      	bne.n	800b1fe <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif
    return USBD_FAIL;
 800b1fa:	2302      	movs	r3, #2
 800b1fc:	e01a      	b.n	800b234 <USBD_Init+0x4e>
  }

  /* Unlink previous class*/
  if (pdev->pClass != NULL)
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b204:	2b00      	cmp	r3, #0
 800b206:	d003      	beq.n	800b210 <USBD_Init+0x2a>
  {
    pdev->pClass = NULL;
 800b208:	68fb      	ldr	r3, [r7, #12]
 800b20a:	2200      	movs	r2, #0
 800b20c:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800b210:	68bb      	ldr	r3, [r7, #8]
 800b212:	2b00      	cmp	r3, #0
 800b214:	d003      	beq.n	800b21e <USBD_Init+0x38>
  {
    pdev->pDesc = pdesc;
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	68ba      	ldr	r2, [r7, #8]
 800b21a:	f8c3 22b0 	str.w	r2, [r3, #688]	@ 0x2b0
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800b21e:	68fb      	ldr	r3, [r7, #12]
 800b220:	2201      	movs	r2, #1
 800b222:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->id = id;
 800b226:	68fb      	ldr	r3, [r7, #12]
 800b228:	79fa      	ldrb	r2, [r7, #7]
 800b22a:	701a      	strb	r2, [r3, #0]
  /* Initialize low level driver */
  USBD_LL_Init(pdev);
 800b22c:	68f8      	ldr	r0, [r7, #12]
 800b22e:	f001 fad5 	bl	800c7dc <USBD_LL_Init>

  return USBD_OK;
 800b232:	2300      	movs	r3, #0
}
 800b234:	4618      	mov	r0, r3
 800b236:	3710      	adds	r7, #16
 800b238:	46bd      	mov	sp, r7
 800b23a:	bd80      	pop	{r7, pc}

0800b23c <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800b23c:	b480      	push	{r7}
 800b23e:	b085      	sub	sp, #20
 800b240:	af00      	add	r7, sp, #0
 800b242:	6078      	str	r0, [r7, #4]
 800b244:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef status = USBD_OK;
 800b246:	2300      	movs	r3, #0
 800b248:	73fb      	strb	r3, [r7, #15]
  if (pclass != NULL)
 800b24a:	683b      	ldr	r3, [r7, #0]
 800b24c:	2b00      	cmp	r3, #0
 800b24e:	d006      	beq.n	800b25e <USBD_RegisterClass+0x22>
  {
    /* link the class to the USB Device handle */
    pdev->pClass = pclass;
 800b250:	687b      	ldr	r3, [r7, #4]
 800b252:	683a      	ldr	r2, [r7, #0]
 800b254:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
    status = USBD_OK;
 800b258:	2300      	movs	r3, #0
 800b25a:	73fb      	strb	r3, [r7, #15]
 800b25c:	e001      	b.n	800b262 <USBD_RegisterClass+0x26>
  else
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif
    status = USBD_FAIL;
 800b25e:	2302      	movs	r3, #2
 800b260:	73fb      	strb	r3, [r7, #15]
  }

  return status;
 800b262:	7bfb      	ldrb	r3, [r7, #15]
}
 800b264:	4618      	mov	r0, r3
 800b266:	3714      	adds	r7, #20
 800b268:	46bd      	mov	sp, r7
 800b26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b26e:	4770      	bx	lr

0800b270 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_Start(USBD_HandleTypeDef *pdev)
{
 800b270:	b580      	push	{r7, lr}
 800b272:	b082      	sub	sp, #8
 800b274:	af00      	add	r7, sp, #0
 800b276:	6078      	str	r0, [r7, #4]
  /* Start the low level driver  */
  USBD_LL_Start(pdev);
 800b278:	6878      	ldr	r0, [r7, #4]
 800b27a:	f001 faff 	bl	800c87c <USBD_LL_Start>

  return USBD_OK;
 800b27e:	2300      	movs	r3, #0
}
 800b280:	4618      	mov	r0, r3
 800b282:	3708      	adds	r7, #8
 800b284:	46bd      	mov	sp, r7
 800b286:	bd80      	pop	{r7, pc}

0800b288 <USBD_RunTestMode>:
*         Launch test mode process
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef  USBD_RunTestMode(USBD_HandleTypeDef  *pdev)
{
 800b288:	b480      	push	{r7}
 800b28a:	b083      	sub	sp, #12
 800b28c:	af00      	add	r7, sp, #0
 800b28e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 800b290:	2300      	movs	r3, #0
}
 800b292:	4618      	mov	r0, r3
 800b294:	370c      	adds	r7, #12
 800b296:	46bd      	mov	sp, r7
 800b298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b29c:	4770      	bx	lr

0800b29e <USBD_SetClassConfig>:
* @param  cfgidx: configuration index
* @retval status
*/

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 800b29e:	b580      	push	{r7, lr}
 800b2a0:	b084      	sub	sp, #16
 800b2a2:	af00      	add	r7, sp, #0
 800b2a4:	6078      	str	r0, [r7, #4]
 800b2a6:	460b      	mov	r3, r1
 800b2a8:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_FAIL;
 800b2aa:	2302      	movs	r3, #2
 800b2ac:	73fb      	strb	r3, [r7, #15]

  if (pdev->pClass != NULL)
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b2b4:	2b00      	cmp	r3, #0
 800b2b6:	d00c      	beq.n	800b2d2 <USBD_SetClassConfig+0x34>
  {
    /* Set configuration  and Start the Class*/
    if (pdev->pClass->Init(pdev, cfgidx) == 0U)
 800b2b8:	687b      	ldr	r3, [r7, #4]
 800b2ba:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b2be:	681b      	ldr	r3, [r3, #0]
 800b2c0:	78fa      	ldrb	r2, [r7, #3]
 800b2c2:	4611      	mov	r1, r2
 800b2c4:	6878      	ldr	r0, [r7, #4]
 800b2c6:	4798      	blx	r3
 800b2c8:	4603      	mov	r3, r0
 800b2ca:	2b00      	cmp	r3, #0
 800b2cc:	d101      	bne.n	800b2d2 <USBD_SetClassConfig+0x34>
    {
      ret = USBD_OK;
 800b2ce:	2300      	movs	r3, #0
 800b2d0:	73fb      	strb	r3, [r7, #15]
    }
  }

  return ret;
 800b2d2:	7bfb      	ldrb	r3, [r7, #15]
}
 800b2d4:	4618      	mov	r0, r3
 800b2d6:	3710      	adds	r7, #16
 800b2d8:	46bd      	mov	sp, r7
 800b2da:	bd80      	pop	{r7, pc}

0800b2dc <USBD_ClrClassConfig>:
* @param  pdev: device instance
* @param  cfgidx: configuration index
* @retval status: USBD_StatusTypeDef
*/
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 800b2dc:	b580      	push	{r7, lr}
 800b2de:	b082      	sub	sp, #8
 800b2e0:	af00      	add	r7, sp, #0
 800b2e2:	6078      	str	r0, [r7, #4]
 800b2e4:	460b      	mov	r3, r1
 800b2e6:	70fb      	strb	r3, [r7, #3]
  /* Clear configuration  and De-initialize the Class process*/
  pdev->pClass->DeInit(pdev, cfgidx);
 800b2e8:	687b      	ldr	r3, [r7, #4]
 800b2ea:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b2ee:	685b      	ldr	r3, [r3, #4]
 800b2f0:	78fa      	ldrb	r2, [r7, #3]
 800b2f2:	4611      	mov	r1, r2
 800b2f4:	6878      	ldr	r0, [r7, #4]
 800b2f6:	4798      	blx	r3

  return USBD_OK;
 800b2f8:	2300      	movs	r3, #0
}
 800b2fa:	4618      	mov	r0, r3
 800b2fc:	3708      	adds	r7, #8
 800b2fe:	46bd      	mov	sp, r7
 800b300:	bd80      	pop	{r7, pc}

0800b302 <USBD_LL_SetupStage>:
*         Handle the setup stage
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800b302:	b580      	push	{r7, lr}
 800b304:	b082      	sub	sp, #8
 800b306:	af00      	add	r7, sp, #0
 800b308:	6078      	str	r0, [r7, #4]
 800b30a:	6039      	str	r1, [r7, #0]
  USBD_ParseSetupRequest(&pdev->request, psetup);
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 800b312:	6839      	ldr	r1, [r7, #0]
 800b314:	4618      	mov	r0, r3
 800b316:	f000 feda 	bl	800c0ce <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	2201      	movs	r2, #1
 800b31e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 800b322:	687b      	ldr	r3, [r7, #4]
 800b324:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 800b328:	461a      	mov	r2, r3
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 800b330:	687b      	ldr	r3, [r7, #4]
 800b332:	f893 32a8 	ldrb.w	r3, [r3, #680]	@ 0x2a8
 800b336:	f003 031f 	and.w	r3, r3, #31
 800b33a:	2b02      	cmp	r3, #2
 800b33c:	d016      	beq.n	800b36c <USBD_LL_SetupStage+0x6a>
 800b33e:	2b02      	cmp	r3, #2
 800b340:	d81c      	bhi.n	800b37c <USBD_LL_SetupStage+0x7a>
 800b342:	2b00      	cmp	r3, #0
 800b344:	d002      	beq.n	800b34c <USBD_LL_SetupStage+0x4a>
 800b346:	2b01      	cmp	r3, #1
 800b348:	d008      	beq.n	800b35c <USBD_LL_SetupStage+0x5a>
 800b34a:	e017      	b.n	800b37c <USBD_LL_SetupStage+0x7a>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      USBD_StdDevReq(pdev, &pdev->request);
 800b34c:	687b      	ldr	r3, [r7, #4]
 800b34e:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 800b352:	4619      	mov	r1, r3
 800b354:	6878      	ldr	r0, [r7, #4]
 800b356:	f000 f9cd 	bl	800b6f4 <USBD_StdDevReq>
      break;
 800b35a:	e01a      	b.n	800b392 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_INTERFACE:
      USBD_StdItfReq(pdev, &pdev->request);
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 800b362:	4619      	mov	r1, r3
 800b364:	6878      	ldr	r0, [r7, #4]
 800b366:	f000 fa2f 	bl	800b7c8 <USBD_StdItfReq>
      break;
 800b36a:	e012      	b.n	800b392 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_ENDPOINT:
      USBD_StdEPReq(pdev, &pdev->request);
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 800b372:	4619      	mov	r1, r3
 800b374:	6878      	ldr	r0, [r7, #4]
 800b376:	f000 fa6f 	bl	800b858 <USBD_StdEPReq>
      break;
 800b37a:	e00a      	b.n	800b392 <USBD_LL_SetupStage+0x90>

    default:
      USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800b37c:	687b      	ldr	r3, [r7, #4]
 800b37e:	f893 32a8 	ldrb.w	r3, [r3, #680]	@ 0x2a8
 800b382:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800b386:	b2db      	uxtb	r3, r3
 800b388:	4619      	mov	r1, r3
 800b38a:	6878      	ldr	r0, [r7, #4]
 800b38c:	f001 fad6 	bl	800c93c <USBD_LL_StallEP>
      break;
 800b390:	bf00      	nop
  }

  return USBD_OK;
 800b392:	2300      	movs	r3, #0
}
 800b394:	4618      	mov	r0, r3
 800b396:	3708      	adds	r7, #8
 800b398:	46bd      	mov	sp, r7
 800b39a:	bd80      	pop	{r7, pc}

0800b39c <USBD_LL_DataOutStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800b39c:	b580      	push	{r7, lr}
 800b39e:	b086      	sub	sp, #24
 800b3a0:	af00      	add	r7, sp, #0
 800b3a2:	60f8      	str	r0, [r7, #12]
 800b3a4:	460b      	mov	r3, r1
 800b3a6:	607a      	str	r2, [r7, #4]
 800b3a8:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 800b3aa:	7afb      	ldrb	r3, [r7, #11]
 800b3ac:	2b00      	cmp	r3, #0
 800b3ae:	d14b      	bne.n	800b448 <USBD_LL_DataOutStage+0xac>
  {
    pep = &pdev->ep_out[0];
 800b3b0:	68fb      	ldr	r3, [r7, #12]
 800b3b2:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 800b3b6:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800b3b8:	68fb      	ldr	r3, [r7, #12]
 800b3ba:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800b3be:	2b03      	cmp	r3, #3
 800b3c0:	d134      	bne.n	800b42c <USBD_LL_DataOutStage+0x90>
    {
      if (pep->rem_length > pep->maxpacket)
 800b3c2:	697b      	ldr	r3, [r7, #20]
 800b3c4:	68da      	ldr	r2, [r3, #12]
 800b3c6:	697b      	ldr	r3, [r7, #20]
 800b3c8:	691b      	ldr	r3, [r3, #16]
 800b3ca:	429a      	cmp	r2, r3
 800b3cc:	d919      	bls.n	800b402 <USBD_LL_DataOutStage+0x66>
      {
        pep->rem_length -= pep->maxpacket;
 800b3ce:	697b      	ldr	r3, [r7, #20]
 800b3d0:	68da      	ldr	r2, [r3, #12]
 800b3d2:	697b      	ldr	r3, [r7, #20]
 800b3d4:	691b      	ldr	r3, [r3, #16]
 800b3d6:	1ad2      	subs	r2, r2, r3
 800b3d8:	697b      	ldr	r3, [r7, #20]
 800b3da:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueRx(pdev, pdata,
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 800b3dc:	697b      	ldr	r3, [r7, #20]
 800b3de:	68da      	ldr	r2, [r3, #12]
 800b3e0:	697b      	ldr	r3, [r7, #20]
 800b3e2:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 800b3e4:	429a      	cmp	r2, r3
 800b3e6:	d203      	bcs.n	800b3f0 <USBD_LL_DataOutStage+0x54>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 800b3e8:	697b      	ldr	r3, [r7, #20]
 800b3ea:	68db      	ldr	r3, [r3, #12]
        USBD_CtlContinueRx(pdev, pdata,
 800b3ec:	b29b      	uxth	r3, r3
 800b3ee:	e002      	b.n	800b3f6 <USBD_LL_DataOutStage+0x5a>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 800b3f0:	697b      	ldr	r3, [r7, #20]
 800b3f2:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 800b3f4:	b29b      	uxth	r3, r3
 800b3f6:	461a      	mov	r2, r3
 800b3f8:	6879      	ldr	r1, [r7, #4]
 800b3fa:	68f8      	ldr	r0, [r7, #12]
 800b3fc:	f000 ff58 	bl	800c2b0 <USBD_CtlContinueRx>
 800b400:	e038      	b.n	800b474 <USBD_LL_DataOutStage+0xd8>
      }
      else
      {
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 800b402:	68fb      	ldr	r3, [r7, #12]
 800b404:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b408:	691b      	ldr	r3, [r3, #16]
 800b40a:	2b00      	cmp	r3, #0
 800b40c:	d00a      	beq.n	800b424 <USBD_LL_DataOutStage+0x88>
            (pdev->dev_state == USBD_STATE_CONFIGURED))
 800b40e:	68fb      	ldr	r3, [r7, #12]
 800b410:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 800b414:	2b03      	cmp	r3, #3
 800b416:	d105      	bne.n	800b424 <USBD_LL_DataOutStage+0x88>
        {
          pdev->pClass->EP0_RxReady(pdev);
 800b418:	68fb      	ldr	r3, [r7, #12]
 800b41a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b41e:	691b      	ldr	r3, [r3, #16]
 800b420:	68f8      	ldr	r0, [r7, #12]
 800b422:	4798      	blx	r3
        }
        USBD_CtlSendStatus(pdev);
 800b424:	68f8      	ldr	r0, [r7, #12]
 800b426:	f000 ff55 	bl	800c2d4 <USBD_CtlSendStatus>
 800b42a:	e023      	b.n	800b474 <USBD_LL_DataOutStage+0xd8>
      }
    }
    else
    {
      if (pdev->ep0_state == USBD_EP0_STATUS_OUT)
 800b42c:	68fb      	ldr	r3, [r7, #12]
 800b42e:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800b432:	2b05      	cmp	r3, #5
 800b434:	d11e      	bne.n	800b474 <USBD_LL_DataOutStage+0xd8>
      {
        /*
         * STATUS PHASE completed, update ep0_state to idle
         */
        pdev->ep0_state = USBD_EP0_IDLE;
 800b436:	68fb      	ldr	r3, [r7, #12]
 800b438:	2200      	movs	r2, #0
 800b43a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
        USBD_LL_StallEP(pdev, 0U);
 800b43e:	2100      	movs	r1, #0
 800b440:	68f8      	ldr	r0, [r7, #12]
 800b442:	f001 fa7b 	bl	800c93c <USBD_LL_StallEP>
 800b446:	e015      	b.n	800b474 <USBD_LL_DataOutStage+0xd8>
      }
    }
  }
  else if ((pdev->pClass->DataOut != NULL) &&
 800b448:	68fb      	ldr	r3, [r7, #12]
 800b44a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b44e:	699b      	ldr	r3, [r3, #24]
 800b450:	2b00      	cmp	r3, #0
 800b452:	d00d      	beq.n	800b470 <USBD_LL_DataOutStage+0xd4>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 800b454:	68fb      	ldr	r3, [r7, #12]
 800b456:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
  else if ((pdev->pClass->DataOut != NULL) &&
 800b45a:	2b03      	cmp	r3, #3
 800b45c:	d108      	bne.n	800b470 <USBD_LL_DataOutStage+0xd4>
  {
    pdev->pClass->DataOut(pdev, epnum);
 800b45e:	68fb      	ldr	r3, [r7, #12]
 800b460:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b464:	699b      	ldr	r3, [r3, #24]
 800b466:	7afa      	ldrb	r2, [r7, #11]
 800b468:	4611      	mov	r1, r2
 800b46a:	68f8      	ldr	r0, [r7, #12]
 800b46c:	4798      	blx	r3
 800b46e:	e001      	b.n	800b474 <USBD_LL_DataOutStage+0xd8>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 800b470:	2302      	movs	r3, #2
 800b472:	e000      	b.n	800b476 <USBD_LL_DataOutStage+0xda>
  }

  return USBD_OK;
 800b474:	2300      	movs	r3, #0
}
 800b476:	4618      	mov	r0, r3
 800b478:	3718      	adds	r7, #24
 800b47a:	46bd      	mov	sp, r7
 800b47c:	bd80      	pop	{r7, pc}

0800b47e <USBD_LL_DataInStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800b47e:	b580      	push	{r7, lr}
 800b480:	b086      	sub	sp, #24
 800b482:	af00      	add	r7, sp, #0
 800b484:	60f8      	str	r0, [r7, #12]
 800b486:	460b      	mov	r3, r1
 800b488:	607a      	str	r2, [r7, #4]
 800b48a:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 800b48c:	7afb      	ldrb	r3, [r7, #11]
 800b48e:	2b00      	cmp	r3, #0
 800b490:	d17f      	bne.n	800b592 <USBD_LL_DataInStage+0x114>
  {
    pep = &pdev->ep_in[0];
 800b492:	68fb      	ldr	r3, [r7, #12]
 800b494:	3314      	adds	r3, #20
 800b496:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800b498:	68fb      	ldr	r3, [r7, #12]
 800b49a:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800b49e:	2b02      	cmp	r3, #2
 800b4a0:	d15c      	bne.n	800b55c <USBD_LL_DataInStage+0xde>
    {
      if (pep->rem_length > pep->maxpacket)
 800b4a2:	697b      	ldr	r3, [r7, #20]
 800b4a4:	68da      	ldr	r2, [r3, #12]
 800b4a6:	697b      	ldr	r3, [r7, #20]
 800b4a8:	691b      	ldr	r3, [r3, #16]
 800b4aa:	429a      	cmp	r2, r3
 800b4ac:	d915      	bls.n	800b4da <USBD_LL_DataInStage+0x5c>
      {
        pep->rem_length -= pep->maxpacket;
 800b4ae:	697b      	ldr	r3, [r7, #20]
 800b4b0:	68da      	ldr	r2, [r3, #12]
 800b4b2:	697b      	ldr	r3, [r7, #20]
 800b4b4:	691b      	ldr	r3, [r3, #16]
 800b4b6:	1ad2      	subs	r2, r2, r3
 800b4b8:	697b      	ldr	r3, [r7, #20]
 800b4ba:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueSendData(pdev, pdata, (uint16_t)pep->rem_length);
 800b4bc:	697b      	ldr	r3, [r7, #20]
 800b4be:	68db      	ldr	r3, [r3, #12]
 800b4c0:	b29b      	uxth	r3, r3
 800b4c2:	461a      	mov	r2, r3
 800b4c4:	6879      	ldr	r1, [r7, #4]
 800b4c6:	68f8      	ldr	r0, [r7, #12]
 800b4c8:	f000 fec2 	bl	800c250 <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800b4cc:	2300      	movs	r3, #0
 800b4ce:	2200      	movs	r2, #0
 800b4d0:	2100      	movs	r1, #0
 800b4d2:	68f8      	ldr	r0, [r7, #12]
 800b4d4:	f001 fade 	bl	800ca94 <USBD_LL_PrepareReceive>
 800b4d8:	e04e      	b.n	800b578 <USBD_LL_DataInStage+0xfa>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->total_length % pep->maxpacket == 0U) &&
 800b4da:	697b      	ldr	r3, [r7, #20]
 800b4dc:	689b      	ldr	r3, [r3, #8]
 800b4de:	697a      	ldr	r2, [r7, #20]
 800b4e0:	6912      	ldr	r2, [r2, #16]
 800b4e2:	fbb3 f1f2 	udiv	r1, r3, r2
 800b4e6:	fb01 f202 	mul.w	r2, r1, r2
 800b4ea:	1a9b      	subs	r3, r3, r2
 800b4ec:	2b00      	cmp	r3, #0
 800b4ee:	d11c      	bne.n	800b52a <USBD_LL_DataInStage+0xac>
            (pep->total_length >= pep->maxpacket) &&
 800b4f0:	697b      	ldr	r3, [r7, #20]
 800b4f2:	689a      	ldr	r2, [r3, #8]
 800b4f4:	697b      	ldr	r3, [r7, #20]
 800b4f6:	691b      	ldr	r3, [r3, #16]
        if ((pep->total_length % pep->maxpacket == 0U) &&
 800b4f8:	429a      	cmp	r2, r3
 800b4fa:	d316      	bcc.n	800b52a <USBD_LL_DataInStage+0xac>
            (pep->total_length < pdev->ep0_data_len))
 800b4fc:	697b      	ldr	r3, [r7, #20]
 800b4fe:	689a      	ldr	r2, [r3, #8]
 800b500:	68fb      	ldr	r3, [r7, #12]
 800b502:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
            (pep->total_length >= pep->maxpacket) &&
 800b506:	429a      	cmp	r2, r3
 800b508:	d20f      	bcs.n	800b52a <USBD_LL_DataInStage+0xac>
        {
          USBD_CtlContinueSendData(pdev, NULL, 0U);
 800b50a:	2200      	movs	r2, #0
 800b50c:	2100      	movs	r1, #0
 800b50e:	68f8      	ldr	r0, [r7, #12]
 800b510:	f000 fe9e 	bl	800c250 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800b514:	68fb      	ldr	r3, [r7, #12]
 800b516:	2200      	movs	r2, #0
 800b518:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

          /* Prepare endpoint for premature end of transfer */
          USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800b51c:	2300      	movs	r3, #0
 800b51e:	2200      	movs	r2, #0
 800b520:	2100      	movs	r1, #0
 800b522:	68f8      	ldr	r0, [r7, #12]
 800b524:	f001 fab6 	bl	800ca94 <USBD_LL_PrepareReceive>
 800b528:	e026      	b.n	800b578 <USBD_LL_DataInStage+0xfa>
        }
        else
        {
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 800b52a:	68fb      	ldr	r3, [r7, #12]
 800b52c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b530:	68db      	ldr	r3, [r3, #12]
 800b532:	2b00      	cmp	r3, #0
 800b534:	d00a      	beq.n	800b54c <USBD_LL_DataInStage+0xce>
              (pdev->dev_state == USBD_STATE_CONFIGURED))
 800b536:	68fb      	ldr	r3, [r7, #12]
 800b538:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 800b53c:	2b03      	cmp	r3, #3
 800b53e:	d105      	bne.n	800b54c <USBD_LL_DataInStage+0xce>
          {
            pdev->pClass->EP0_TxSent(pdev);
 800b540:	68fb      	ldr	r3, [r7, #12]
 800b542:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b546:	68db      	ldr	r3, [r3, #12]
 800b548:	68f8      	ldr	r0, [r7, #12]
 800b54a:	4798      	blx	r3
          }
          USBD_LL_StallEP(pdev, 0x80U);
 800b54c:	2180      	movs	r1, #128	@ 0x80
 800b54e:	68f8      	ldr	r0, [r7, #12]
 800b550:	f001 f9f4 	bl	800c93c <USBD_LL_StallEP>
          USBD_CtlReceiveStatus(pdev);
 800b554:	68f8      	ldr	r0, [r7, #12]
 800b556:	f000 fed0 	bl	800c2fa <USBD_CtlReceiveStatus>
 800b55a:	e00d      	b.n	800b578 <USBD_LL_DataInStage+0xfa>
        }
      }
    }
    else
    {
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 800b55c:	68fb      	ldr	r3, [r7, #12]
 800b55e:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800b562:	2b04      	cmp	r3, #4
 800b564:	d004      	beq.n	800b570 <USBD_LL_DataInStage+0xf2>
          (pdev->ep0_state == USBD_EP0_IDLE))
 800b566:	68fb      	ldr	r3, [r7, #12]
 800b568:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 800b56c:	2b00      	cmp	r3, #0
 800b56e:	d103      	bne.n	800b578 <USBD_LL_DataInStage+0xfa>
      {
        USBD_LL_StallEP(pdev, 0x80U);
 800b570:	2180      	movs	r1, #128	@ 0x80
 800b572:	68f8      	ldr	r0, [r7, #12]
 800b574:	f001 f9e2 	bl	800c93c <USBD_LL_StallEP>
      }
    }

    if (pdev->dev_test_mode == 1U)
 800b578:	68fb      	ldr	r3, [r7, #12]
 800b57a:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 800b57e:	2b01      	cmp	r3, #1
 800b580:	d11d      	bne.n	800b5be <USBD_LL_DataInStage+0x140>
    {
      USBD_RunTestMode(pdev);
 800b582:	68f8      	ldr	r0, [r7, #12]
 800b584:	f7ff fe80 	bl	800b288 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 800b588:	68fb      	ldr	r3, [r7, #12]
 800b58a:	2200      	movs	r2, #0
 800b58c:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 800b590:	e015      	b.n	800b5be <USBD_LL_DataInStage+0x140>
    }
  }
  else if ((pdev->pClass->DataIn != NULL) &&
 800b592:	68fb      	ldr	r3, [r7, #12]
 800b594:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b598:	695b      	ldr	r3, [r3, #20]
 800b59a:	2b00      	cmp	r3, #0
 800b59c:	d00d      	beq.n	800b5ba <USBD_LL_DataInStage+0x13c>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 800b59e:	68fb      	ldr	r3, [r7, #12]
 800b5a0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
  else if ((pdev->pClass->DataIn != NULL) &&
 800b5a4:	2b03      	cmp	r3, #3
 800b5a6:	d108      	bne.n	800b5ba <USBD_LL_DataInStage+0x13c>
  {
    pdev->pClass->DataIn(pdev, epnum);
 800b5a8:	68fb      	ldr	r3, [r7, #12]
 800b5aa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b5ae:	695b      	ldr	r3, [r3, #20]
 800b5b0:	7afa      	ldrb	r2, [r7, #11]
 800b5b2:	4611      	mov	r1, r2
 800b5b4:	68f8      	ldr	r0, [r7, #12]
 800b5b6:	4798      	blx	r3
 800b5b8:	e001      	b.n	800b5be <USBD_LL_DataInStage+0x140>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 800b5ba:	2302      	movs	r3, #2
 800b5bc:	e000      	b.n	800b5c0 <USBD_LL_DataInStage+0x142>
  }

  return USBD_OK;
 800b5be:	2300      	movs	r3, #0
}
 800b5c0:	4618      	mov	r0, r3
 800b5c2:	3718      	adds	r7, #24
 800b5c4:	46bd      	mov	sp, r7
 800b5c6:	bd80      	pop	{r7, pc}

0800b5c8 <USBD_LL_Reset>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800b5c8:	b580      	push	{r7, lr}
 800b5ca:	b082      	sub	sp, #8
 800b5cc:	af00      	add	r7, sp, #0
 800b5ce:	6078      	str	r0, [r7, #4]
  /* Open EP0 OUT */
  USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800b5d0:	2340      	movs	r3, #64	@ 0x40
 800b5d2:	2200      	movs	r2, #0
 800b5d4:	2100      	movs	r1, #0
 800b5d6:	6878      	ldr	r0, [r7, #4]
 800b5d8:	f001 f96b 	bl	800c8b2 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800b5dc:	687b      	ldr	r3, [r7, #4]
 800b5de:	2201      	movs	r2, #1
 800b5e0:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	2240      	movs	r2, #64	@ 0x40
 800b5e8:	f8c3 2164 	str.w	r2, [r3, #356]	@ 0x164

  /* Open EP0 IN */
  USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800b5ec:	2340      	movs	r3, #64	@ 0x40
 800b5ee:	2200      	movs	r2, #0
 800b5f0:	2180      	movs	r1, #128	@ 0x80
 800b5f2:	6878      	ldr	r0, [r7, #4]
 800b5f4:	f001 f95d 	bl	800c8b2 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800b5f8:	687b      	ldr	r3, [r7, #4]
 800b5fa:	2201      	movs	r2, #1
 800b5fc:	619a      	str	r2, [r3, #24]

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	2240      	movs	r2, #64	@ 0x40
 800b602:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	2201      	movs	r2, #1
 800b608:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	2200      	movs	r2, #0
 800b610:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->dev_config = 0U;
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	2200      	movs	r2, #0
 800b618:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	2200      	movs	r2, #0
 800b61e:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4

  if (pdev->pClassData)
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b628:	2b00      	cmp	r3, #0
 800b62a:	d009      	beq.n	800b640 <USBD_LL_Reset+0x78>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b632:	685b      	ldr	r3, [r3, #4]
 800b634:	687a      	ldr	r2, [r7, #4]
 800b636:	6852      	ldr	r2, [r2, #4]
 800b638:	b2d2      	uxtb	r2, r2
 800b63a:	4611      	mov	r1, r2
 800b63c:	6878      	ldr	r0, [r7, #4]
 800b63e:	4798      	blx	r3
  }

  return USBD_OK;
 800b640:	2300      	movs	r3, #0
}
 800b642:	4618      	mov	r0, r3
 800b644:	3708      	adds	r7, #8
 800b646:	46bd      	mov	sp, r7
 800b648:	bd80      	pop	{r7, pc}

0800b64a <USBD_LL_SetSpeed>:
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 800b64a:	b480      	push	{r7}
 800b64c:	b083      	sub	sp, #12
 800b64e:	af00      	add	r7, sp, #0
 800b650:	6078      	str	r0, [r7, #4]
 800b652:	460b      	mov	r3, r1
 800b654:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	78fa      	ldrb	r2, [r7, #3]
 800b65a:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 800b65c:	2300      	movs	r3, #0
}
 800b65e:	4618      	mov	r0, r3
 800b660:	370c      	adds	r7, #12
 800b662:	46bd      	mov	sp, r7
 800b664:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b668:	4770      	bx	lr

0800b66a <USBD_LL_Suspend>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 800b66a:	b480      	push	{r7}
 800b66c:	b083      	sub	sp, #12
 800b66e:	af00      	add	r7, sp, #0
 800b670:	6078      	str	r0, [r7, #4]
  pdev->dev_old_state =  pdev->dev_state;
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	f893 229c 	ldrb.w	r2, [r3, #668]	@ 0x29c
 800b678:	687b      	ldr	r3, [r7, #4]
 800b67a:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
  pdev->dev_state  = USBD_STATE_SUSPENDED;
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	2204      	movs	r2, #4
 800b682:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c

  return USBD_OK;
 800b686:	2300      	movs	r3, #0
}
 800b688:	4618      	mov	r0, r3
 800b68a:	370c      	adds	r7, #12
 800b68c:	46bd      	mov	sp, r7
 800b68e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b692:	4770      	bx	lr

0800b694 <USBD_LL_Resume>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 800b694:	b480      	push	{r7}
 800b696:	b083      	sub	sp, #12
 800b698:	af00      	add	r7, sp, #0
 800b69a:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b6a2:	2b04      	cmp	r3, #4
 800b6a4:	d105      	bne.n	800b6b2 <USBD_LL_Resume+0x1e>
  {
    pdev->dev_state = pdev->dev_old_state;
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	f893 229d 	ldrb.w	r2, [r3, #669]	@ 0x29d
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  }

  return USBD_OK;
 800b6b2:	2300      	movs	r3, #0
}
 800b6b4:	4618      	mov	r0, r3
 800b6b6:	370c      	adds	r7, #12
 800b6b8:	46bd      	mov	sp, r7
 800b6ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6be:	4770      	bx	lr

0800b6c0 <USBD_LL_SOF>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800b6c0:	b580      	push	{r7, lr}
 800b6c2:	b082      	sub	sp, #8
 800b6c4:	af00      	add	r7, sp, #0
 800b6c6:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b6c8:	687b      	ldr	r3, [r7, #4]
 800b6ca:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b6ce:	2b03      	cmp	r3, #3
 800b6d0:	d10b      	bne.n	800b6ea <USBD_LL_SOF+0x2a>
  {
    if (pdev->pClass->SOF != NULL)
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b6d8:	69db      	ldr	r3, [r3, #28]
 800b6da:	2b00      	cmp	r3, #0
 800b6dc:	d005      	beq.n	800b6ea <USBD_LL_SOF+0x2a>
    {
      pdev->pClass->SOF(pdev);
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b6e4:	69db      	ldr	r3, [r3, #28]
 800b6e6:	6878      	ldr	r0, [r7, #4]
 800b6e8:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800b6ea:	2300      	movs	r3, #0
}
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	3708      	adds	r7, #8
 800b6f0:	46bd      	mov	sp, r7
 800b6f2:	bd80      	pop	{r7, pc}

0800b6f4 <USBD_StdDevReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdDevReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef *req)
{
 800b6f4:	b580      	push	{r7, lr}
 800b6f6:	b084      	sub	sp, #16
 800b6f8:	af00      	add	r7, sp, #0
 800b6fa:	6078      	str	r0, [r7, #4]
 800b6fc:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800b6fe:	2300      	movs	r3, #0
 800b700:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800b702:	683b      	ldr	r3, [r7, #0]
 800b704:	781b      	ldrb	r3, [r3, #0]
 800b706:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800b70a:	2b40      	cmp	r3, #64	@ 0x40
 800b70c:	d005      	beq.n	800b71a <USBD_StdDevReq+0x26>
 800b70e:	2b40      	cmp	r3, #64	@ 0x40
 800b710:	d84f      	bhi.n	800b7b2 <USBD_StdDevReq+0xbe>
 800b712:	2b00      	cmp	r3, #0
 800b714:	d009      	beq.n	800b72a <USBD_StdDevReq+0x36>
 800b716:	2b20      	cmp	r3, #32
 800b718:	d14b      	bne.n	800b7b2 <USBD_StdDevReq+0xbe>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b720:	689b      	ldr	r3, [r3, #8]
 800b722:	6839      	ldr	r1, [r7, #0]
 800b724:	6878      	ldr	r0, [r7, #4]
 800b726:	4798      	blx	r3
      break;
 800b728:	e048      	b.n	800b7bc <USBD_StdDevReq+0xc8>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800b72a:	683b      	ldr	r3, [r7, #0]
 800b72c:	785b      	ldrb	r3, [r3, #1]
 800b72e:	2b09      	cmp	r3, #9
 800b730:	d839      	bhi.n	800b7a6 <USBD_StdDevReq+0xb2>
 800b732:	a201      	add	r2, pc, #4	@ (adr r2, 800b738 <USBD_StdDevReq+0x44>)
 800b734:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b738:	0800b789 	.word	0x0800b789
 800b73c:	0800b79d 	.word	0x0800b79d
 800b740:	0800b7a7 	.word	0x0800b7a7
 800b744:	0800b793 	.word	0x0800b793
 800b748:	0800b7a7 	.word	0x0800b7a7
 800b74c:	0800b76b 	.word	0x0800b76b
 800b750:	0800b761 	.word	0x0800b761
 800b754:	0800b7a7 	.word	0x0800b7a7
 800b758:	0800b77f 	.word	0x0800b77f
 800b75c:	0800b775 	.word	0x0800b775
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 800b760:	6839      	ldr	r1, [r7, #0]
 800b762:	6878      	ldr	r0, [r7, #4]
 800b764:	f000 f9dc 	bl	800bb20 <USBD_GetDescriptor>
          break;
 800b768:	e022      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 800b76a:	6839      	ldr	r1, [r7, #0]
 800b76c:	6878      	ldr	r0, [r7, #4]
 800b76e:	f000 fb3f 	bl	800bdf0 <USBD_SetAddress>
          break;
 800b772:	e01d      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_CONFIGURATION:
          USBD_SetConfig(pdev, req);
 800b774:	6839      	ldr	r1, [r7, #0]
 800b776:	6878      	ldr	r0, [r7, #4]
 800b778:	f000 fb7e 	bl	800be78 <USBD_SetConfig>
          break;
 800b77c:	e018      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 800b77e:	6839      	ldr	r1, [r7, #0]
 800b780:	6878      	ldr	r0, [r7, #4]
 800b782:	f000 fc07 	bl	800bf94 <USBD_GetConfig>
          break;
 800b786:	e013      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 800b788:	6839      	ldr	r1, [r7, #0]
 800b78a:	6878      	ldr	r0, [r7, #4]
 800b78c:	f000 fc37 	bl	800bffe <USBD_GetStatus>
          break;
 800b790:	e00e      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800b792:	6839      	ldr	r1, [r7, #0]
 800b794:	6878      	ldr	r0, [r7, #4]
 800b796:	f000 fc65 	bl	800c064 <USBD_SetFeature>
          break;
 800b79a:	e009      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 800b79c:	6839      	ldr	r1, [r7, #0]
 800b79e:	6878      	ldr	r0, [r7, #4]
 800b7a0:	f000 fc74 	bl	800c08c <USBD_ClrFeature>
          break;
 800b7a4:	e004      	b.n	800b7b0 <USBD_StdDevReq+0xbc>

        default:
          USBD_CtlError(pdev, req);
 800b7a6:	6839      	ldr	r1, [r7, #0]
 800b7a8:	6878      	ldr	r0, [r7, #4]
 800b7aa:	f000 fcca 	bl	800c142 <USBD_CtlError>
          break;
 800b7ae:	bf00      	nop
      }
      break;
 800b7b0:	e004      	b.n	800b7bc <USBD_StdDevReq+0xc8>

    default:
      USBD_CtlError(pdev, req);
 800b7b2:	6839      	ldr	r1, [r7, #0]
 800b7b4:	6878      	ldr	r0, [r7, #4]
 800b7b6:	f000 fcc4 	bl	800c142 <USBD_CtlError>
      break;
 800b7ba:	bf00      	nop
  }

  return ret;
 800b7bc:	7bfb      	ldrb	r3, [r7, #15]
}
 800b7be:	4618      	mov	r0, r3
 800b7c0:	3710      	adds	r7, #16
 800b7c2:	46bd      	mov	sp, r7
 800b7c4:	bd80      	pop	{r7, pc}
 800b7c6:	bf00      	nop

0800b7c8 <USBD_StdItfReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdItfReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef  *req)
{
 800b7c8:	b580      	push	{r7, lr}
 800b7ca:	b084      	sub	sp, #16
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	6078      	str	r0, [r7, #4]
 800b7d0:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800b7d2:	2300      	movs	r3, #0
 800b7d4:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800b7d6:	683b      	ldr	r3, [r7, #0]
 800b7d8:	781b      	ldrb	r3, [r3, #0]
 800b7da:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800b7de:	2b40      	cmp	r3, #64	@ 0x40
 800b7e0:	d005      	beq.n	800b7ee <USBD_StdItfReq+0x26>
 800b7e2:	2b40      	cmp	r3, #64	@ 0x40
 800b7e4:	d82e      	bhi.n	800b844 <USBD_StdItfReq+0x7c>
 800b7e6:	2b00      	cmp	r3, #0
 800b7e8:	d001      	beq.n	800b7ee <USBD_StdItfReq+0x26>
 800b7ea:	2b20      	cmp	r3, #32
 800b7ec:	d12a      	bne.n	800b844 <USBD_StdItfReq+0x7c>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 800b7ee:	687b      	ldr	r3, [r7, #4]
 800b7f0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b7f4:	3b01      	subs	r3, #1
 800b7f6:	2b02      	cmp	r3, #2
 800b7f8:	d81d      	bhi.n	800b836 <USBD_StdItfReq+0x6e>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800b7fa:	683b      	ldr	r3, [r7, #0]
 800b7fc:	889b      	ldrh	r3, [r3, #4]
 800b7fe:	b2db      	uxtb	r3, r3
 800b800:	2b01      	cmp	r3, #1
 800b802:	d813      	bhi.n	800b82c <USBD_StdItfReq+0x64>
          {
            ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b80a:	689b      	ldr	r3, [r3, #8]
 800b80c:	6839      	ldr	r1, [r7, #0]
 800b80e:	6878      	ldr	r0, [r7, #4]
 800b810:	4798      	blx	r3
 800b812:	4603      	mov	r3, r0
 800b814:	73fb      	strb	r3, [r7, #15]

            if ((req->wLength == 0U) && (ret == USBD_OK))
 800b816:	683b      	ldr	r3, [r7, #0]
 800b818:	88db      	ldrh	r3, [r3, #6]
 800b81a:	2b00      	cmp	r3, #0
 800b81c:	d110      	bne.n	800b840 <USBD_StdItfReq+0x78>
 800b81e:	7bfb      	ldrb	r3, [r7, #15]
 800b820:	2b00      	cmp	r3, #0
 800b822:	d10d      	bne.n	800b840 <USBD_StdItfReq+0x78>
            {
              USBD_CtlSendStatus(pdev);
 800b824:	6878      	ldr	r0, [r7, #4]
 800b826:	f000 fd55 	bl	800c2d4 <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 800b82a:	e009      	b.n	800b840 <USBD_StdItfReq+0x78>
            USBD_CtlError(pdev, req);
 800b82c:	6839      	ldr	r1, [r7, #0]
 800b82e:	6878      	ldr	r0, [r7, #4]
 800b830:	f000 fc87 	bl	800c142 <USBD_CtlError>
          break;
 800b834:	e004      	b.n	800b840 <USBD_StdItfReq+0x78>

        default:
          USBD_CtlError(pdev, req);
 800b836:	6839      	ldr	r1, [r7, #0]
 800b838:	6878      	ldr	r0, [r7, #4]
 800b83a:	f000 fc82 	bl	800c142 <USBD_CtlError>
          break;
 800b83e:	e000      	b.n	800b842 <USBD_StdItfReq+0x7a>
          break;
 800b840:	bf00      	nop
      }
      break;
 800b842:	e004      	b.n	800b84e <USBD_StdItfReq+0x86>

    default:
      USBD_CtlError(pdev, req);
 800b844:	6839      	ldr	r1, [r7, #0]
 800b846:	6878      	ldr	r0, [r7, #4]
 800b848:	f000 fc7b 	bl	800c142 <USBD_CtlError>
      break;
 800b84c:	bf00      	nop
  }

  return USBD_OK;
 800b84e:	2300      	movs	r3, #0
}
 800b850:	4618      	mov	r0, r3
 800b852:	3710      	adds	r7, #16
 800b854:	46bd      	mov	sp, r7
 800b856:	bd80      	pop	{r7, pc}

0800b858 <USBD_StdEPReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdEPReq(USBD_HandleTypeDef *pdev,
                                  USBD_SetupReqTypedef  *req)
{
 800b858:	b580      	push	{r7, lr}
 800b85a:	b084      	sub	sp, #16
 800b85c:	af00      	add	r7, sp, #0
 800b85e:	6078      	str	r0, [r7, #4]
 800b860:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t   ep_addr;
  USBD_StatusTypeDef ret = USBD_OK;
 800b862:	2300      	movs	r3, #0
 800b864:	73fb      	strb	r3, [r7, #15]
  ep_addr  = LOBYTE(req->wIndex);
 800b866:	683b      	ldr	r3, [r7, #0]
 800b868:	889b      	ldrh	r3, [r3, #4]
 800b86a:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800b86c:	683b      	ldr	r3, [r7, #0]
 800b86e:	781b      	ldrb	r3, [r3, #0]
 800b870:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800b874:	2b40      	cmp	r3, #64	@ 0x40
 800b876:	d007      	beq.n	800b888 <USBD_StdEPReq+0x30>
 800b878:	2b40      	cmp	r3, #64	@ 0x40
 800b87a:	f200 8146 	bhi.w	800bb0a <USBD_StdEPReq+0x2b2>
 800b87e:	2b00      	cmp	r3, #0
 800b880:	d00a      	beq.n	800b898 <USBD_StdEPReq+0x40>
 800b882:	2b20      	cmp	r3, #32
 800b884:	f040 8141 	bne.w	800bb0a <USBD_StdEPReq+0x2b2>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 800b888:	687b      	ldr	r3, [r7, #4]
 800b88a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b88e:	689b      	ldr	r3, [r3, #8]
 800b890:	6839      	ldr	r1, [r7, #0]
 800b892:	6878      	ldr	r0, [r7, #4]
 800b894:	4798      	blx	r3
      break;
 800b896:	e13d      	b.n	800bb14 <USBD_StdEPReq+0x2bc>

    case USB_REQ_TYPE_STANDARD:
      /* Check if it is a class request */
      if ((req->bmRequest & 0x60U) == 0x20U)
 800b898:	683b      	ldr	r3, [r7, #0]
 800b89a:	781b      	ldrb	r3, [r3, #0]
 800b89c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800b8a0:	2b20      	cmp	r3, #32
 800b8a2:	d10a      	bne.n	800b8ba <USBD_StdEPReq+0x62>
      {
        ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b8aa:	689b      	ldr	r3, [r3, #8]
 800b8ac:	6839      	ldr	r1, [r7, #0]
 800b8ae:	6878      	ldr	r0, [r7, #4]
 800b8b0:	4798      	blx	r3
 800b8b2:	4603      	mov	r3, r0
 800b8b4:	73fb      	strb	r3, [r7, #15]

        return ret;
 800b8b6:	7bfb      	ldrb	r3, [r7, #15]
 800b8b8:	e12d      	b.n	800bb16 <USBD_StdEPReq+0x2be>
      }

      switch (req->bRequest)
 800b8ba:	683b      	ldr	r3, [r7, #0]
 800b8bc:	785b      	ldrb	r3, [r3, #1]
 800b8be:	2b03      	cmp	r3, #3
 800b8c0:	d007      	beq.n	800b8d2 <USBD_StdEPReq+0x7a>
 800b8c2:	2b03      	cmp	r3, #3
 800b8c4:	f300 811b 	bgt.w	800bafe <USBD_StdEPReq+0x2a6>
 800b8c8:	2b00      	cmp	r3, #0
 800b8ca:	d072      	beq.n	800b9b2 <USBD_StdEPReq+0x15a>
 800b8cc:	2b01      	cmp	r3, #1
 800b8ce:	d03a      	beq.n	800b946 <USBD_StdEPReq+0xee>
 800b8d0:	e115      	b.n	800bafe <USBD_StdEPReq+0x2a6>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b8d8:	2b02      	cmp	r3, #2
 800b8da:	d002      	beq.n	800b8e2 <USBD_StdEPReq+0x8a>
 800b8dc:	2b03      	cmp	r3, #3
 800b8de:	d015      	beq.n	800b90c <USBD_StdEPReq+0xb4>
 800b8e0:	e02b      	b.n	800b93a <USBD_StdEPReq+0xe2>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b8e2:	7bbb      	ldrb	r3, [r7, #14]
 800b8e4:	2b00      	cmp	r3, #0
 800b8e6:	d00c      	beq.n	800b902 <USBD_StdEPReq+0xaa>
 800b8e8:	7bbb      	ldrb	r3, [r7, #14]
 800b8ea:	2b80      	cmp	r3, #128	@ 0x80
 800b8ec:	d009      	beq.n	800b902 <USBD_StdEPReq+0xaa>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 800b8ee:	7bbb      	ldrb	r3, [r7, #14]
 800b8f0:	4619      	mov	r1, r3
 800b8f2:	6878      	ldr	r0, [r7, #4]
 800b8f4:	f001 f822 	bl	800c93c <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 800b8f8:	2180      	movs	r1, #128	@ 0x80
 800b8fa:	6878      	ldr	r0, [r7, #4]
 800b8fc:	f001 f81e 	bl	800c93c <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800b900:	e020      	b.n	800b944 <USBD_StdEPReq+0xec>
                USBD_CtlError(pdev, req);
 800b902:	6839      	ldr	r1, [r7, #0]
 800b904:	6878      	ldr	r0, [r7, #4]
 800b906:	f000 fc1c 	bl	800c142 <USBD_CtlError>
              break;
 800b90a:	e01b      	b.n	800b944 <USBD_StdEPReq+0xec>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800b90c:	683b      	ldr	r3, [r7, #0]
 800b90e:	885b      	ldrh	r3, [r3, #2]
 800b910:	2b00      	cmp	r3, #0
 800b912:	d10e      	bne.n	800b932 <USBD_StdEPReq+0xda>
              {
                if ((ep_addr != 0x00U) &&
 800b914:	7bbb      	ldrb	r3, [r7, #14]
 800b916:	2b00      	cmp	r3, #0
 800b918:	d00b      	beq.n	800b932 <USBD_StdEPReq+0xda>
 800b91a:	7bbb      	ldrb	r3, [r7, #14]
 800b91c:	2b80      	cmp	r3, #128	@ 0x80
 800b91e:	d008      	beq.n	800b932 <USBD_StdEPReq+0xda>
                    (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800b920:	683b      	ldr	r3, [r7, #0]
 800b922:	88db      	ldrh	r3, [r3, #6]
 800b924:	2b00      	cmp	r3, #0
 800b926:	d104      	bne.n	800b932 <USBD_StdEPReq+0xda>
                {
                  USBD_LL_StallEP(pdev, ep_addr);
 800b928:	7bbb      	ldrb	r3, [r7, #14]
 800b92a:	4619      	mov	r1, r3
 800b92c:	6878      	ldr	r0, [r7, #4]
 800b92e:	f001 f805 	bl	800c93c <USBD_LL_StallEP>
                }
              }
              USBD_CtlSendStatus(pdev);
 800b932:	6878      	ldr	r0, [r7, #4]
 800b934:	f000 fcce 	bl	800c2d4 <USBD_CtlSendStatus>

              break;
 800b938:	e004      	b.n	800b944 <USBD_StdEPReq+0xec>

            default:
              USBD_CtlError(pdev, req);
 800b93a:	6839      	ldr	r1, [r7, #0]
 800b93c:	6878      	ldr	r0, [r7, #4]
 800b93e:	f000 fc00 	bl	800c142 <USBD_CtlError>
              break;
 800b942:	bf00      	nop
          }
          break;
 800b944:	e0e0      	b.n	800bb08 <USBD_StdEPReq+0x2b0>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b94c:	2b02      	cmp	r3, #2
 800b94e:	d002      	beq.n	800b956 <USBD_StdEPReq+0xfe>
 800b950:	2b03      	cmp	r3, #3
 800b952:	d015      	beq.n	800b980 <USBD_StdEPReq+0x128>
 800b954:	e026      	b.n	800b9a4 <USBD_StdEPReq+0x14c>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b956:	7bbb      	ldrb	r3, [r7, #14]
 800b958:	2b00      	cmp	r3, #0
 800b95a:	d00c      	beq.n	800b976 <USBD_StdEPReq+0x11e>
 800b95c:	7bbb      	ldrb	r3, [r7, #14]
 800b95e:	2b80      	cmp	r3, #128	@ 0x80
 800b960:	d009      	beq.n	800b976 <USBD_StdEPReq+0x11e>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 800b962:	7bbb      	ldrb	r3, [r7, #14]
 800b964:	4619      	mov	r1, r3
 800b966:	6878      	ldr	r0, [r7, #4]
 800b968:	f000 ffe8 	bl	800c93c <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 800b96c:	2180      	movs	r1, #128	@ 0x80
 800b96e:	6878      	ldr	r0, [r7, #4]
 800b970:	f000 ffe4 	bl	800c93c <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800b974:	e01c      	b.n	800b9b0 <USBD_StdEPReq+0x158>
                USBD_CtlError(pdev, req);
 800b976:	6839      	ldr	r1, [r7, #0]
 800b978:	6878      	ldr	r0, [r7, #4]
 800b97a:	f000 fbe2 	bl	800c142 <USBD_CtlError>
              break;
 800b97e:	e017      	b.n	800b9b0 <USBD_StdEPReq+0x158>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800b980:	683b      	ldr	r3, [r7, #0]
 800b982:	885b      	ldrh	r3, [r3, #2]
 800b984:	2b00      	cmp	r3, #0
 800b986:	d112      	bne.n	800b9ae <USBD_StdEPReq+0x156>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 800b988:	7bbb      	ldrb	r3, [r7, #14]
 800b98a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800b98e:	2b00      	cmp	r3, #0
 800b990:	d004      	beq.n	800b99c <USBD_StdEPReq+0x144>
                {
                  USBD_LL_ClearStallEP(pdev, ep_addr);
 800b992:	7bbb      	ldrb	r3, [r7, #14]
 800b994:	4619      	mov	r1, r3
 800b996:	6878      	ldr	r0, [r7, #4]
 800b998:	f000 ffef 	bl	800c97a <USBD_LL_ClearStallEP>
                }
                USBD_CtlSendStatus(pdev);
 800b99c:	6878      	ldr	r0, [r7, #4]
 800b99e:	f000 fc99 	bl	800c2d4 <USBD_CtlSendStatus>
              }
              break;
 800b9a2:	e004      	b.n	800b9ae <USBD_StdEPReq+0x156>

            default:
              USBD_CtlError(pdev, req);
 800b9a4:	6839      	ldr	r1, [r7, #0]
 800b9a6:	6878      	ldr	r0, [r7, #4]
 800b9a8:	f000 fbcb 	bl	800c142 <USBD_CtlError>
              break;
 800b9ac:	e000      	b.n	800b9b0 <USBD_StdEPReq+0x158>
              break;
 800b9ae:	bf00      	nop
          }
          break;
 800b9b0:	e0aa      	b.n	800bb08 <USBD_StdEPReq+0x2b0>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b9b8:	2b02      	cmp	r3, #2
 800b9ba:	d002      	beq.n	800b9c2 <USBD_StdEPReq+0x16a>
 800b9bc:	2b03      	cmp	r3, #3
 800b9be:	d032      	beq.n	800ba26 <USBD_StdEPReq+0x1ce>
 800b9c0:	e097      	b.n	800baf2 <USBD_StdEPReq+0x29a>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b9c2:	7bbb      	ldrb	r3, [r7, #14]
 800b9c4:	2b00      	cmp	r3, #0
 800b9c6:	d007      	beq.n	800b9d8 <USBD_StdEPReq+0x180>
 800b9c8:	7bbb      	ldrb	r3, [r7, #14]
 800b9ca:	2b80      	cmp	r3, #128	@ 0x80
 800b9cc:	d004      	beq.n	800b9d8 <USBD_StdEPReq+0x180>
              {
                USBD_CtlError(pdev, req);
 800b9ce:	6839      	ldr	r1, [r7, #0]
 800b9d0:	6878      	ldr	r0, [r7, #4]
 800b9d2:	f000 fbb6 	bl	800c142 <USBD_CtlError>
                break;
 800b9d6:	e091      	b.n	800bafc <USBD_StdEPReq+0x2a4>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b9d8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b9dc:	2b00      	cmp	r3, #0
 800b9de:	da0b      	bge.n	800b9f8 <USBD_StdEPReq+0x1a0>
 800b9e0:	7bbb      	ldrb	r3, [r7, #14]
 800b9e2:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b9e6:	4613      	mov	r3, r2
 800b9e8:	009b      	lsls	r3, r3, #2
 800b9ea:	4413      	add	r3, r2
 800b9ec:	009b      	lsls	r3, r3, #2
 800b9ee:	3310      	adds	r3, #16
 800b9f0:	687a      	ldr	r2, [r7, #4]
 800b9f2:	4413      	add	r3, r2
 800b9f4:	3304      	adds	r3, #4
 800b9f6:	e00b      	b.n	800ba10 <USBD_StdEPReq+0x1b8>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800b9f8:	7bbb      	ldrb	r3, [r7, #14]
 800b9fa:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b9fe:	4613      	mov	r3, r2
 800ba00:	009b      	lsls	r3, r3, #2
 800ba02:	4413      	add	r3, r2
 800ba04:	009b      	lsls	r3, r3, #2
 800ba06:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800ba0a:	687a      	ldr	r2, [r7, #4]
 800ba0c:	4413      	add	r3, r2
 800ba0e:	3304      	adds	r3, #4
 800ba10:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 800ba12:	68bb      	ldr	r3, [r7, #8]
 800ba14:	2200      	movs	r2, #0
 800ba16:	601a      	str	r2, [r3, #0]

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 800ba18:	68bb      	ldr	r3, [r7, #8]
 800ba1a:	2202      	movs	r2, #2
 800ba1c:	4619      	mov	r1, r3
 800ba1e:	6878      	ldr	r0, [r7, #4]
 800ba20:	f000 fbfa 	bl	800c218 <USBD_CtlSendData>
              break;
 800ba24:	e06a      	b.n	800bafc <USBD_StdEPReq+0x2a4>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 800ba26:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800ba2a:	2b00      	cmp	r3, #0
 800ba2c:	da11      	bge.n	800ba52 <USBD_StdEPReq+0x1fa>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800ba2e:	7bbb      	ldrb	r3, [r7, #14]
 800ba30:	f003 020f 	and.w	r2, r3, #15
 800ba34:	6879      	ldr	r1, [r7, #4]
 800ba36:	4613      	mov	r3, r2
 800ba38:	009b      	lsls	r3, r3, #2
 800ba3a:	4413      	add	r3, r2
 800ba3c:	009b      	lsls	r3, r3, #2
 800ba3e:	440b      	add	r3, r1
 800ba40:	3318      	adds	r3, #24
 800ba42:	681b      	ldr	r3, [r3, #0]
 800ba44:	2b00      	cmp	r3, #0
 800ba46:	d117      	bne.n	800ba78 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 800ba48:	6839      	ldr	r1, [r7, #0]
 800ba4a:	6878      	ldr	r0, [r7, #4]
 800ba4c:	f000 fb79 	bl	800c142 <USBD_CtlError>
                  break;
 800ba50:	e054      	b.n	800bafc <USBD_StdEPReq+0x2a4>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800ba52:	7bbb      	ldrb	r3, [r7, #14]
 800ba54:	f003 020f 	and.w	r2, r3, #15
 800ba58:	6879      	ldr	r1, [r7, #4]
 800ba5a:	4613      	mov	r3, r2
 800ba5c:	009b      	lsls	r3, r3, #2
 800ba5e:	4413      	add	r3, r2
 800ba60:	009b      	lsls	r3, r3, #2
 800ba62:	440b      	add	r3, r1
 800ba64:	f503 73ac 	add.w	r3, r3, #344	@ 0x158
 800ba68:	681b      	ldr	r3, [r3, #0]
 800ba6a:	2b00      	cmp	r3, #0
 800ba6c:	d104      	bne.n	800ba78 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 800ba6e:	6839      	ldr	r1, [r7, #0]
 800ba70:	6878      	ldr	r0, [r7, #4]
 800ba72:	f000 fb66 	bl	800c142 <USBD_CtlError>
                  break;
 800ba76:	e041      	b.n	800bafc <USBD_StdEPReq+0x2a4>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800ba78:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800ba7c:	2b00      	cmp	r3, #0
 800ba7e:	da0b      	bge.n	800ba98 <USBD_StdEPReq+0x240>
 800ba80:	7bbb      	ldrb	r3, [r7, #14]
 800ba82:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800ba86:	4613      	mov	r3, r2
 800ba88:	009b      	lsls	r3, r3, #2
 800ba8a:	4413      	add	r3, r2
 800ba8c:	009b      	lsls	r3, r3, #2
 800ba8e:	3310      	adds	r3, #16
 800ba90:	687a      	ldr	r2, [r7, #4]
 800ba92:	4413      	add	r3, r2
 800ba94:	3304      	adds	r3, #4
 800ba96:	e00b      	b.n	800bab0 <USBD_StdEPReq+0x258>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800ba98:	7bbb      	ldrb	r3, [r7, #14]
 800ba9a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800ba9e:	4613      	mov	r3, r2
 800baa0:	009b      	lsls	r3, r3, #2
 800baa2:	4413      	add	r3, r2
 800baa4:	009b      	lsls	r3, r3, #2
 800baa6:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800baaa:	687a      	ldr	r2, [r7, #4]
 800baac:	4413      	add	r3, r2
 800baae:	3304      	adds	r3, #4
 800bab0:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800bab2:	7bbb      	ldrb	r3, [r7, #14]
 800bab4:	2b00      	cmp	r3, #0
 800bab6:	d002      	beq.n	800babe <USBD_StdEPReq+0x266>
 800bab8:	7bbb      	ldrb	r3, [r7, #14]
 800baba:	2b80      	cmp	r3, #128	@ 0x80
 800babc:	d103      	bne.n	800bac6 <USBD_StdEPReq+0x26e>
              {
                pep->status = 0x0000U;
 800babe:	68bb      	ldr	r3, [r7, #8]
 800bac0:	2200      	movs	r2, #0
 800bac2:	601a      	str	r2, [r3, #0]
 800bac4:	e00e      	b.n	800bae4 <USBD_StdEPReq+0x28c>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr))
 800bac6:	7bbb      	ldrb	r3, [r7, #14]
 800bac8:	4619      	mov	r1, r3
 800baca:	6878      	ldr	r0, [r7, #4]
 800bacc:	f000 ff74 	bl	800c9b8 <USBD_LL_IsStallEP>
 800bad0:	4603      	mov	r3, r0
 800bad2:	2b00      	cmp	r3, #0
 800bad4:	d003      	beq.n	800bade <USBD_StdEPReq+0x286>
              {
                pep->status = 0x0001U;
 800bad6:	68bb      	ldr	r3, [r7, #8]
 800bad8:	2201      	movs	r2, #1
 800bada:	601a      	str	r2, [r3, #0]
 800badc:	e002      	b.n	800bae4 <USBD_StdEPReq+0x28c>
              }
              else
              {
                pep->status = 0x0000U;
 800bade:	68bb      	ldr	r3, [r7, #8]
 800bae0:	2200      	movs	r2, #0
 800bae2:	601a      	str	r2, [r3, #0]
              }

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 800bae4:	68bb      	ldr	r3, [r7, #8]
 800bae6:	2202      	movs	r2, #2
 800bae8:	4619      	mov	r1, r3
 800baea:	6878      	ldr	r0, [r7, #4]
 800baec:	f000 fb94 	bl	800c218 <USBD_CtlSendData>
              break;
 800baf0:	e004      	b.n	800bafc <USBD_StdEPReq+0x2a4>

            default:
              USBD_CtlError(pdev, req);
 800baf2:	6839      	ldr	r1, [r7, #0]
 800baf4:	6878      	ldr	r0, [r7, #4]
 800baf6:	f000 fb24 	bl	800c142 <USBD_CtlError>
              break;
 800bafa:	bf00      	nop
          }
          break;
 800bafc:	e004      	b.n	800bb08 <USBD_StdEPReq+0x2b0>

        default:
          USBD_CtlError(pdev, req);
 800bafe:	6839      	ldr	r1, [r7, #0]
 800bb00:	6878      	ldr	r0, [r7, #4]
 800bb02:	f000 fb1e 	bl	800c142 <USBD_CtlError>
          break;
 800bb06:	bf00      	nop
      }
      break;
 800bb08:	e004      	b.n	800bb14 <USBD_StdEPReq+0x2bc>

    default:
      USBD_CtlError(pdev, req);
 800bb0a:	6839      	ldr	r1, [r7, #0]
 800bb0c:	6878      	ldr	r0, [r7, #4]
 800bb0e:	f000 fb18 	bl	800c142 <USBD_CtlError>
      break;
 800bb12:	bf00      	nop
  }

  return ret;
 800bb14:	7bfb      	ldrb	r3, [r7, #15]
}
 800bb16:	4618      	mov	r0, r3
 800bb18:	3710      	adds	r7, #16
 800bb1a:	46bd      	mov	sp, r7
 800bb1c:	bd80      	pop	{r7, pc}
	...

0800bb20 <USBD_GetDescriptor>:
* @param  req: usb request
* @retval status
*/
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev,
                               USBD_SetupReqTypedef *req)
{
 800bb20:	b580      	push	{r7, lr}
 800bb22:	b084      	sub	sp, #16
 800bb24:	af00      	add	r7, sp, #0
 800bb26:	6078      	str	r0, [r7, #4]
 800bb28:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 800bb2a:	2300      	movs	r3, #0
 800bb2c:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 800bb2e:	2300      	movs	r3, #0
 800bb30:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 800bb32:	2300      	movs	r3, #0
 800bb34:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 800bb36:	683b      	ldr	r3, [r7, #0]
 800bb38:	885b      	ldrh	r3, [r3, #2]
 800bb3a:	0a1b      	lsrs	r3, r3, #8
 800bb3c:	b29b      	uxth	r3, r3
 800bb3e:	3b01      	subs	r3, #1
 800bb40:	2b06      	cmp	r3, #6
 800bb42:	f200 8128 	bhi.w	800bd96 <USBD_GetDescriptor+0x276>
 800bb46:	a201      	add	r2, pc, #4	@ (adr r2, 800bb4c <USBD_GetDescriptor+0x2c>)
 800bb48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bb4c:	0800bb69 	.word	0x0800bb69
 800bb50:	0800bb81 	.word	0x0800bb81
 800bb54:	0800bbc1 	.word	0x0800bbc1
 800bb58:	0800bd97 	.word	0x0800bd97
 800bb5c:	0800bd97 	.word	0x0800bd97
 800bb60:	0800bd37 	.word	0x0800bd37
 800bb64:	0800bd63 	.word	0x0800bd63
        err++;
      }
      break;
#endif
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800bb68:	687b      	ldr	r3, [r7, #4]
 800bb6a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bb6e:	681b      	ldr	r3, [r3, #0]
 800bb70:	687a      	ldr	r2, [r7, #4]
 800bb72:	7c12      	ldrb	r2, [r2, #16]
 800bb74:	f107 0108 	add.w	r1, r7, #8
 800bb78:	4610      	mov	r0, r2
 800bb7a:	4798      	blx	r3
 800bb7c:	60f8      	str	r0, [r7, #12]
      break;
 800bb7e:	e112      	b.n	800bda6 <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800bb80:	687b      	ldr	r3, [r7, #4]
 800bb82:	7c1b      	ldrb	r3, [r3, #16]
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	d10d      	bne.n	800bba4 <USBD_GetDescriptor+0x84>
      {
        pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 800bb88:	687b      	ldr	r3, [r7, #4]
 800bb8a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800bb8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bb90:	f107 0208 	add.w	r2, r7, #8
 800bb94:	4610      	mov	r0, r2
 800bb96:	4798      	blx	r3
 800bb98:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800bb9a:	68fb      	ldr	r3, [r7, #12]
 800bb9c:	3301      	adds	r3, #1
 800bb9e:	2202      	movs	r2, #2
 800bba0:	701a      	strb	r2, [r3, #0]
      else
      {
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 800bba2:	e100      	b.n	800bda6 <USBD_GetDescriptor+0x286>
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800bbaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbac:	f107 0208 	add.w	r2, r7, #8
 800bbb0:	4610      	mov	r0, r2
 800bbb2:	4798      	blx	r3
 800bbb4:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800bbb6:	68fb      	ldr	r3, [r7, #12]
 800bbb8:	3301      	adds	r3, #1
 800bbba:	2202      	movs	r2, #2
 800bbbc:	701a      	strb	r2, [r3, #0]
      break;
 800bbbe:	e0f2      	b.n	800bda6 <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 800bbc0:	683b      	ldr	r3, [r7, #0]
 800bbc2:	885b      	ldrh	r3, [r3, #2]
 800bbc4:	b2db      	uxtb	r3, r3
 800bbc6:	2b05      	cmp	r3, #5
 800bbc8:	f200 80ac 	bhi.w	800bd24 <USBD_GetDescriptor+0x204>
 800bbcc:	a201      	add	r2, pc, #4	@ (adr r2, 800bbd4 <USBD_GetDescriptor+0xb4>)
 800bbce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bbd2:	bf00      	nop
 800bbd4:	0800bbed 	.word	0x0800bbed
 800bbd8:	0800bc21 	.word	0x0800bc21
 800bbdc:	0800bc55 	.word	0x0800bc55
 800bbe0:	0800bc89 	.word	0x0800bc89
 800bbe4:	0800bcbd 	.word	0x0800bcbd
 800bbe8:	0800bcf1 	.word	0x0800bcf1
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800bbec:	687b      	ldr	r3, [r7, #4]
 800bbee:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bbf2:	685b      	ldr	r3, [r3, #4]
 800bbf4:	2b00      	cmp	r3, #0
 800bbf6:	d00b      	beq.n	800bc10 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bbfe:	685b      	ldr	r3, [r3, #4]
 800bc00:	687a      	ldr	r2, [r7, #4]
 800bc02:	7c12      	ldrb	r2, [r2, #16]
 800bc04:	f107 0108 	add.w	r1, r7, #8
 800bc08:	4610      	mov	r0, r2
 800bc0a:	4798      	blx	r3
 800bc0c:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bc0e:	e091      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bc10:	6839      	ldr	r1, [r7, #0]
 800bc12:	6878      	ldr	r0, [r7, #4]
 800bc14:	f000 fa95 	bl	800c142 <USBD_CtlError>
            err++;
 800bc18:	7afb      	ldrb	r3, [r7, #11]
 800bc1a:	3301      	adds	r3, #1
 800bc1c:	72fb      	strb	r3, [r7, #11]
          break;
 800bc1e:	e089      	b.n	800bd34 <USBD_GetDescriptor+0x214>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800bc20:	687b      	ldr	r3, [r7, #4]
 800bc22:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc26:	689b      	ldr	r3, [r3, #8]
 800bc28:	2b00      	cmp	r3, #0
 800bc2a:	d00b      	beq.n	800bc44 <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 800bc2c:	687b      	ldr	r3, [r7, #4]
 800bc2e:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc32:	689b      	ldr	r3, [r3, #8]
 800bc34:	687a      	ldr	r2, [r7, #4]
 800bc36:	7c12      	ldrb	r2, [r2, #16]
 800bc38:	f107 0108 	add.w	r1, r7, #8
 800bc3c:	4610      	mov	r0, r2
 800bc3e:	4798      	blx	r3
 800bc40:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bc42:	e077      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bc44:	6839      	ldr	r1, [r7, #0]
 800bc46:	6878      	ldr	r0, [r7, #4]
 800bc48:	f000 fa7b 	bl	800c142 <USBD_CtlError>
            err++;
 800bc4c:	7afb      	ldrb	r3, [r7, #11]
 800bc4e:	3301      	adds	r3, #1
 800bc50:	72fb      	strb	r3, [r7, #11]
          break;
 800bc52:	e06f      	b.n	800bd34 <USBD_GetDescriptor+0x214>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800bc54:	687b      	ldr	r3, [r7, #4]
 800bc56:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc5a:	68db      	ldr	r3, [r3, #12]
 800bc5c:	2b00      	cmp	r3, #0
 800bc5e:	d00b      	beq.n	800bc78 <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc66:	68db      	ldr	r3, [r3, #12]
 800bc68:	687a      	ldr	r2, [r7, #4]
 800bc6a:	7c12      	ldrb	r2, [r2, #16]
 800bc6c:	f107 0108 	add.w	r1, r7, #8
 800bc70:	4610      	mov	r0, r2
 800bc72:	4798      	blx	r3
 800bc74:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bc76:	e05d      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bc78:	6839      	ldr	r1, [r7, #0]
 800bc7a:	6878      	ldr	r0, [r7, #4]
 800bc7c:	f000 fa61 	bl	800c142 <USBD_CtlError>
            err++;
 800bc80:	7afb      	ldrb	r3, [r7, #11]
 800bc82:	3301      	adds	r3, #1
 800bc84:	72fb      	strb	r3, [r7, #11]
          break;
 800bc86:	e055      	b.n	800bd34 <USBD_GetDescriptor+0x214>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc8e:	691b      	ldr	r3, [r3, #16]
 800bc90:	2b00      	cmp	r3, #0
 800bc92:	d00b      	beq.n	800bcac <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bc9a:	691b      	ldr	r3, [r3, #16]
 800bc9c:	687a      	ldr	r2, [r7, #4]
 800bc9e:	7c12      	ldrb	r2, [r2, #16]
 800bca0:	f107 0108 	add.w	r1, r7, #8
 800bca4:	4610      	mov	r0, r2
 800bca6:	4798      	blx	r3
 800bca8:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bcaa:	e043      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bcac:	6839      	ldr	r1, [r7, #0]
 800bcae:	6878      	ldr	r0, [r7, #4]
 800bcb0:	f000 fa47 	bl	800c142 <USBD_CtlError>
            err++;
 800bcb4:	7afb      	ldrb	r3, [r7, #11]
 800bcb6:	3301      	adds	r3, #1
 800bcb8:	72fb      	strb	r3, [r7, #11]
          break;
 800bcba:	e03b      	b.n	800bd34 <USBD_GetDescriptor+0x214>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800bcbc:	687b      	ldr	r3, [r7, #4]
 800bcbe:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bcc2:	695b      	ldr	r3, [r3, #20]
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	d00b      	beq.n	800bce0 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bcce:	695b      	ldr	r3, [r3, #20]
 800bcd0:	687a      	ldr	r2, [r7, #4]
 800bcd2:	7c12      	ldrb	r2, [r2, #16]
 800bcd4:	f107 0108 	add.w	r1, r7, #8
 800bcd8:	4610      	mov	r0, r2
 800bcda:	4798      	blx	r3
 800bcdc:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bcde:	e029      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bce0:	6839      	ldr	r1, [r7, #0]
 800bce2:	6878      	ldr	r0, [r7, #4]
 800bce4:	f000 fa2d 	bl	800c142 <USBD_CtlError>
            err++;
 800bce8:	7afb      	ldrb	r3, [r7, #11]
 800bcea:	3301      	adds	r3, #1
 800bcec:	72fb      	strb	r3, [r7, #11]
          break;
 800bcee:	e021      	b.n	800bd34 <USBD_GetDescriptor+0x214>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bcf6:	699b      	ldr	r3, [r3, #24]
 800bcf8:	2b00      	cmp	r3, #0
 800bcfa:	d00b      	beq.n	800bd14 <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800bcfc:	687b      	ldr	r3, [r7, #4]
 800bcfe:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800bd02:	699b      	ldr	r3, [r3, #24]
 800bd04:	687a      	ldr	r2, [r7, #4]
 800bd06:	7c12      	ldrb	r2, [r2, #16]
 800bd08:	f107 0108 	add.w	r1, r7, #8
 800bd0c:	4610      	mov	r0, r2
 800bd0e:	4798      	blx	r3
 800bd10:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800bd12:	e00f      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800bd14:	6839      	ldr	r1, [r7, #0]
 800bd16:	6878      	ldr	r0, [r7, #4]
 800bd18:	f000 fa13 	bl	800c142 <USBD_CtlError>
            err++;
 800bd1c:	7afb      	ldrb	r3, [r7, #11]
 800bd1e:	3301      	adds	r3, #1
 800bd20:	72fb      	strb	r3, [r7, #11]
          break;
 800bd22:	e007      	b.n	800bd34 <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
#else
          USBD_CtlError(pdev, req);
 800bd24:	6839      	ldr	r1, [r7, #0]
 800bd26:	6878      	ldr	r0, [r7, #4]
 800bd28:	f000 fa0b 	bl	800c142 <USBD_CtlError>
          err++;
 800bd2c:	7afb      	ldrb	r3, [r7, #11]
 800bd2e:	3301      	adds	r3, #1
 800bd30:	72fb      	strb	r3, [r7, #11]
#endif
      }
      break;
 800bd32:	e038      	b.n	800bda6 <USBD_GetDescriptor+0x286>
 800bd34:	e037      	b.n	800bda6 <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800bd36:	687b      	ldr	r3, [r7, #4]
 800bd38:	7c1b      	ldrb	r3, [r3, #16]
 800bd3a:	2b00      	cmp	r3, #0
 800bd3c:	d109      	bne.n	800bd52 <USBD_GetDescriptor+0x232>
      {
        pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 800bd3e:	687b      	ldr	r3, [r7, #4]
 800bd40:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800bd44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bd46:	f107 0208 	add.w	r2, r7, #8
 800bd4a:	4610      	mov	r0, r2
 800bd4c:	4798      	blx	r3
 800bd4e:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800bd50:	e029      	b.n	800bda6 <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800bd52:	6839      	ldr	r1, [r7, #0]
 800bd54:	6878      	ldr	r0, [r7, #4]
 800bd56:	f000 f9f4 	bl	800c142 <USBD_CtlError>
        err++;
 800bd5a:	7afb      	ldrb	r3, [r7, #11]
 800bd5c:	3301      	adds	r3, #1
 800bd5e:	72fb      	strb	r3, [r7, #11]
      break;
 800bd60:	e021      	b.n	800bda6 <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800bd62:	687b      	ldr	r3, [r7, #4]
 800bd64:	7c1b      	ldrb	r3, [r3, #16]
 800bd66:	2b00      	cmp	r3, #0
 800bd68:	d10d      	bne.n	800bd86 <USBD_GetDescriptor+0x266>
      {
        pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800bd70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bd72:	f107 0208 	add.w	r2, r7, #8
 800bd76:	4610      	mov	r0, r2
 800bd78:	4798      	blx	r3
 800bd7a:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800bd7c:	68fb      	ldr	r3, [r7, #12]
 800bd7e:	3301      	adds	r3, #1
 800bd80:	2207      	movs	r2, #7
 800bd82:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800bd84:	e00f      	b.n	800bda6 <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800bd86:	6839      	ldr	r1, [r7, #0]
 800bd88:	6878      	ldr	r0, [r7, #4]
 800bd8a:	f000 f9da 	bl	800c142 <USBD_CtlError>
        err++;
 800bd8e:	7afb      	ldrb	r3, [r7, #11]
 800bd90:	3301      	adds	r3, #1
 800bd92:	72fb      	strb	r3, [r7, #11]
      break;
 800bd94:	e007      	b.n	800bda6 <USBD_GetDescriptor+0x286>

    default:
      USBD_CtlError(pdev, req);
 800bd96:	6839      	ldr	r1, [r7, #0]
 800bd98:	6878      	ldr	r0, [r7, #4]
 800bd9a:	f000 f9d2 	bl	800c142 <USBD_CtlError>
      err++;
 800bd9e:	7afb      	ldrb	r3, [r7, #11]
 800bda0:	3301      	adds	r3, #1
 800bda2:	72fb      	strb	r3, [r7, #11]
      break;
 800bda4:	bf00      	nop
  }

  if (err != 0U)
 800bda6:	7afb      	ldrb	r3, [r7, #11]
 800bda8:	2b00      	cmp	r3, #0
 800bdaa:	d11c      	bne.n	800bde6 <USBD_GetDescriptor+0x2c6>
  {
    return;
  }
  else
  {
    if ((len != 0U) && (req->wLength != 0U))
 800bdac:	893b      	ldrh	r3, [r7, #8]
 800bdae:	2b00      	cmp	r3, #0
 800bdb0:	d011      	beq.n	800bdd6 <USBD_GetDescriptor+0x2b6>
 800bdb2:	683b      	ldr	r3, [r7, #0]
 800bdb4:	88db      	ldrh	r3, [r3, #6]
 800bdb6:	2b00      	cmp	r3, #0
 800bdb8:	d00d      	beq.n	800bdd6 <USBD_GetDescriptor+0x2b6>
    {
      len = MIN(len, req->wLength);
 800bdba:	683b      	ldr	r3, [r7, #0]
 800bdbc:	88da      	ldrh	r2, [r3, #6]
 800bdbe:	893b      	ldrh	r3, [r7, #8]
 800bdc0:	4293      	cmp	r3, r2
 800bdc2:	bf28      	it	cs
 800bdc4:	4613      	movcs	r3, r2
 800bdc6:	b29b      	uxth	r3, r3
 800bdc8:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800bdca:	893b      	ldrh	r3, [r7, #8]
 800bdcc:	461a      	mov	r2, r3
 800bdce:	68f9      	ldr	r1, [r7, #12]
 800bdd0:	6878      	ldr	r0, [r7, #4]
 800bdd2:	f000 fa21 	bl	800c218 <USBD_CtlSendData>
    }

    if (req->wLength == 0U)
 800bdd6:	683b      	ldr	r3, [r7, #0]
 800bdd8:	88db      	ldrh	r3, [r3, #6]
 800bdda:	2b00      	cmp	r3, #0
 800bddc:	d104      	bne.n	800bde8 <USBD_GetDescriptor+0x2c8>
    {
      (void)USBD_CtlSendStatus(pdev);
 800bdde:	6878      	ldr	r0, [r7, #4]
 800bde0:	f000 fa78 	bl	800c2d4 <USBD_CtlSendStatus>
 800bde4:	e000      	b.n	800bde8 <USBD_GetDescriptor+0x2c8>
    return;
 800bde6:	bf00      	nop
    }
  }
}
 800bde8:	3710      	adds	r7, #16
 800bdea:	46bd      	mov	sp, r7
 800bdec:	bd80      	pop	{r7, pc}
 800bdee:	bf00      	nop

0800bdf0 <USBD_SetAddress>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetAddress(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 800bdf0:	b580      	push	{r7, lr}
 800bdf2:	b084      	sub	sp, #16
 800bdf4:	af00      	add	r7, sp, #0
 800bdf6:	6078      	str	r0, [r7, #4]
 800bdf8:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800bdfa:	683b      	ldr	r3, [r7, #0]
 800bdfc:	889b      	ldrh	r3, [r3, #4]
 800bdfe:	2b00      	cmp	r3, #0
 800be00:	d130      	bne.n	800be64 <USBD_SetAddress+0x74>
 800be02:	683b      	ldr	r3, [r7, #0]
 800be04:	88db      	ldrh	r3, [r3, #6]
 800be06:	2b00      	cmp	r3, #0
 800be08:	d12c      	bne.n	800be64 <USBD_SetAddress+0x74>
 800be0a:	683b      	ldr	r3, [r7, #0]
 800be0c:	885b      	ldrh	r3, [r3, #2]
 800be0e:	2b7f      	cmp	r3, #127	@ 0x7f
 800be10:	d828      	bhi.n	800be64 <USBD_SetAddress+0x74>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800be12:	683b      	ldr	r3, [r7, #0]
 800be14:	885b      	ldrh	r3, [r3, #2]
 800be16:	b2db      	uxtb	r3, r3
 800be18:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800be1c:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800be1e:	687b      	ldr	r3, [r7, #4]
 800be20:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800be24:	2b03      	cmp	r3, #3
 800be26:	d104      	bne.n	800be32 <USBD_SetAddress+0x42>
    {
      USBD_CtlError(pdev, req);
 800be28:	6839      	ldr	r1, [r7, #0]
 800be2a:	6878      	ldr	r0, [r7, #4]
 800be2c:	f000 f989 	bl	800c142 <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800be30:	e01d      	b.n	800be6e <USBD_SetAddress+0x7e>
    }
    else
    {
      pdev->dev_address = dev_addr;
 800be32:	687b      	ldr	r3, [r7, #4]
 800be34:	7bfa      	ldrb	r2, [r7, #15]
 800be36:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
      USBD_LL_SetUSBAddress(pdev, dev_addr);
 800be3a:	7bfb      	ldrb	r3, [r7, #15]
 800be3c:	4619      	mov	r1, r3
 800be3e:	6878      	ldr	r0, [r7, #4]
 800be40:	f000 fde6 	bl	800ca10 <USBD_LL_SetUSBAddress>
      USBD_CtlSendStatus(pdev);
 800be44:	6878      	ldr	r0, [r7, #4]
 800be46:	f000 fa45 	bl	800c2d4 <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 800be4a:	7bfb      	ldrb	r3, [r7, #15]
 800be4c:	2b00      	cmp	r3, #0
 800be4e:	d004      	beq.n	800be5a <USBD_SetAddress+0x6a>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800be50:	687b      	ldr	r3, [r7, #4]
 800be52:	2202      	movs	r2, #2
 800be54:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800be58:	e009      	b.n	800be6e <USBD_SetAddress+0x7e>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 800be5a:	687b      	ldr	r3, [r7, #4]
 800be5c:	2201      	movs	r2, #1
 800be5e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800be62:	e004      	b.n	800be6e <USBD_SetAddress+0x7e>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 800be64:	6839      	ldr	r1, [r7, #0]
 800be66:	6878      	ldr	r0, [r7, #4]
 800be68:	f000 f96b 	bl	800c142 <USBD_CtlError>
  }
}
 800be6c:	bf00      	nop
 800be6e:	bf00      	nop
 800be70:	3710      	adds	r7, #16
 800be72:	46bd      	mov	sp, r7
 800be74:	bd80      	pop	{r7, pc}
	...

0800be78 <USBD_SetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800be78:	b580      	push	{r7, lr}
 800be7a:	b082      	sub	sp, #8
 800be7c:	af00      	add	r7, sp, #0
 800be7e:	6078      	str	r0, [r7, #4]
 800be80:	6039      	str	r1, [r7, #0]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 800be82:	683b      	ldr	r3, [r7, #0]
 800be84:	885b      	ldrh	r3, [r3, #2]
 800be86:	b2da      	uxtb	r2, r3
 800be88:	4b41      	ldr	r3, [pc, #260]	@ (800bf90 <USBD_SetConfig+0x118>)
 800be8a:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800be8c:	4b40      	ldr	r3, [pc, #256]	@ (800bf90 <USBD_SetConfig+0x118>)
 800be8e:	781b      	ldrb	r3, [r3, #0]
 800be90:	2b01      	cmp	r3, #1
 800be92:	d904      	bls.n	800be9e <USBD_SetConfig+0x26>
  {
    USBD_CtlError(pdev, req);
 800be94:	6839      	ldr	r1, [r7, #0]
 800be96:	6878      	ldr	r0, [r7, #4]
 800be98:	f000 f953 	bl	800c142 <USBD_CtlError>
 800be9c:	e075      	b.n	800bf8a <USBD_SetConfig+0x112>
  }
  else
  {
    switch (pdev->dev_state)
 800be9e:	687b      	ldr	r3, [r7, #4]
 800bea0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800bea4:	2b02      	cmp	r3, #2
 800bea6:	d002      	beq.n	800beae <USBD_SetConfig+0x36>
 800bea8:	2b03      	cmp	r3, #3
 800beaa:	d023      	beq.n	800bef4 <USBD_SetConfig+0x7c>
 800beac:	e062      	b.n	800bf74 <USBD_SetConfig+0xfc>
    {
      case USBD_STATE_ADDRESSED:
        if (cfgidx)
 800beae:	4b38      	ldr	r3, [pc, #224]	@ (800bf90 <USBD_SetConfig+0x118>)
 800beb0:	781b      	ldrb	r3, [r3, #0]
 800beb2:	2b00      	cmp	r3, #0
 800beb4:	d01a      	beq.n	800beec <USBD_SetConfig+0x74>
        {
          pdev->dev_config = cfgidx;
 800beb6:	4b36      	ldr	r3, [pc, #216]	@ (800bf90 <USBD_SetConfig+0x118>)
 800beb8:	781b      	ldrb	r3, [r3, #0]
 800beba:	461a      	mov	r2, r3
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	605a      	str	r2, [r3, #4]
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800bec0:	687b      	ldr	r3, [r7, #4]
 800bec2:	2203      	movs	r2, #3
 800bec4:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 800bec8:	4b31      	ldr	r3, [pc, #196]	@ (800bf90 <USBD_SetConfig+0x118>)
 800beca:	781b      	ldrb	r3, [r3, #0]
 800becc:	4619      	mov	r1, r3
 800bece:	6878      	ldr	r0, [r7, #4]
 800bed0:	f7ff f9e5 	bl	800b29e <USBD_SetClassConfig>
 800bed4:	4603      	mov	r3, r0
 800bed6:	2b02      	cmp	r3, #2
 800bed8:	d104      	bne.n	800bee4 <USBD_SetConfig+0x6c>
          {
            USBD_CtlError(pdev, req);
 800beda:	6839      	ldr	r1, [r7, #0]
 800bedc:	6878      	ldr	r0, [r7, #4]
 800bede:	f000 f930 	bl	800c142 <USBD_CtlError>
            return;
 800bee2:	e052      	b.n	800bf8a <USBD_SetConfig+0x112>
          }
          USBD_CtlSendStatus(pdev);
 800bee4:	6878      	ldr	r0, [r7, #4]
 800bee6:	f000 f9f5 	bl	800c2d4 <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 800beea:	e04e      	b.n	800bf8a <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 800beec:	6878      	ldr	r0, [r7, #4]
 800beee:	f000 f9f1 	bl	800c2d4 <USBD_CtlSendStatus>
        break;
 800bef2:	e04a      	b.n	800bf8a <USBD_SetConfig+0x112>

      case USBD_STATE_CONFIGURED:
        if (cfgidx == 0U)
 800bef4:	4b26      	ldr	r3, [pc, #152]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bef6:	781b      	ldrb	r3, [r3, #0]
 800bef8:	2b00      	cmp	r3, #0
 800befa:	d112      	bne.n	800bf22 <USBD_SetConfig+0xaa>
        {
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800befc:	687b      	ldr	r3, [r7, #4]
 800befe:	2202      	movs	r2, #2
 800bf00:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
          pdev->dev_config = cfgidx;
 800bf04:	4b22      	ldr	r3, [pc, #136]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf06:	781b      	ldrb	r3, [r3, #0]
 800bf08:	461a      	mov	r2, r3
 800bf0a:	687b      	ldr	r3, [r7, #4]
 800bf0c:	605a      	str	r2, [r3, #4]
          USBD_ClrClassConfig(pdev, cfgidx);
 800bf0e:	4b20      	ldr	r3, [pc, #128]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf10:	781b      	ldrb	r3, [r3, #0]
 800bf12:	4619      	mov	r1, r3
 800bf14:	6878      	ldr	r0, [r7, #4]
 800bf16:	f7ff f9e1 	bl	800b2dc <USBD_ClrClassConfig>
          USBD_CtlSendStatus(pdev);
 800bf1a:	6878      	ldr	r0, [r7, #4]
 800bf1c:	f000 f9da 	bl	800c2d4 <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 800bf20:	e033      	b.n	800bf8a <USBD_SetConfig+0x112>
        else if (cfgidx != pdev->dev_config)
 800bf22:	4b1b      	ldr	r3, [pc, #108]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf24:	781b      	ldrb	r3, [r3, #0]
 800bf26:	461a      	mov	r2, r3
 800bf28:	687b      	ldr	r3, [r7, #4]
 800bf2a:	685b      	ldr	r3, [r3, #4]
 800bf2c:	429a      	cmp	r2, r3
 800bf2e:	d01d      	beq.n	800bf6c <USBD_SetConfig+0xf4>
          USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800bf30:	687b      	ldr	r3, [r7, #4]
 800bf32:	685b      	ldr	r3, [r3, #4]
 800bf34:	b2db      	uxtb	r3, r3
 800bf36:	4619      	mov	r1, r3
 800bf38:	6878      	ldr	r0, [r7, #4]
 800bf3a:	f7ff f9cf 	bl	800b2dc <USBD_ClrClassConfig>
          pdev->dev_config = cfgidx;
 800bf3e:	4b14      	ldr	r3, [pc, #80]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf40:	781b      	ldrb	r3, [r3, #0]
 800bf42:	461a      	mov	r2, r3
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	605a      	str	r2, [r3, #4]
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 800bf48:	4b11      	ldr	r3, [pc, #68]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf4a:	781b      	ldrb	r3, [r3, #0]
 800bf4c:	4619      	mov	r1, r3
 800bf4e:	6878      	ldr	r0, [r7, #4]
 800bf50:	f7ff f9a5 	bl	800b29e <USBD_SetClassConfig>
 800bf54:	4603      	mov	r3, r0
 800bf56:	2b02      	cmp	r3, #2
 800bf58:	d104      	bne.n	800bf64 <USBD_SetConfig+0xec>
            USBD_CtlError(pdev, req);
 800bf5a:	6839      	ldr	r1, [r7, #0]
 800bf5c:	6878      	ldr	r0, [r7, #4]
 800bf5e:	f000 f8f0 	bl	800c142 <USBD_CtlError>
            return;
 800bf62:	e012      	b.n	800bf8a <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 800bf64:	6878      	ldr	r0, [r7, #4]
 800bf66:	f000 f9b5 	bl	800c2d4 <USBD_CtlSendStatus>
        break;
 800bf6a:	e00e      	b.n	800bf8a <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 800bf6c:	6878      	ldr	r0, [r7, #4]
 800bf6e:	f000 f9b1 	bl	800c2d4 <USBD_CtlSendStatus>
        break;
 800bf72:	e00a      	b.n	800bf8a <USBD_SetConfig+0x112>

      default:
        USBD_CtlError(pdev, req);
 800bf74:	6839      	ldr	r1, [r7, #0]
 800bf76:	6878      	ldr	r0, [r7, #4]
 800bf78:	f000 f8e3 	bl	800c142 <USBD_CtlError>
        USBD_ClrClassConfig(pdev, cfgidx);
 800bf7c:	4b04      	ldr	r3, [pc, #16]	@ (800bf90 <USBD_SetConfig+0x118>)
 800bf7e:	781b      	ldrb	r3, [r3, #0]
 800bf80:	4619      	mov	r1, r3
 800bf82:	6878      	ldr	r0, [r7, #4]
 800bf84:	f7ff f9aa 	bl	800b2dc <USBD_ClrClassConfig>
        break;
 800bf88:	bf00      	nop
    }
  }
}
 800bf8a:	3708      	adds	r7, #8
 800bf8c:	46bd      	mov	sp, r7
 800bf8e:	bd80      	pop	{r7, pc}
 800bf90:	200007c8 	.word	0x200007c8

0800bf94 <USBD_GetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800bf94:	b580      	push	{r7, lr}
 800bf96:	b082      	sub	sp, #8
 800bf98:	af00      	add	r7, sp, #0
 800bf9a:	6078      	str	r0, [r7, #4]
 800bf9c:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 800bf9e:	683b      	ldr	r3, [r7, #0]
 800bfa0:	88db      	ldrh	r3, [r3, #6]
 800bfa2:	2b01      	cmp	r3, #1
 800bfa4:	d004      	beq.n	800bfb0 <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 800bfa6:	6839      	ldr	r1, [r7, #0]
 800bfa8:	6878      	ldr	r0, [r7, #4]
 800bfaa:	f000 f8ca 	bl	800c142 <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 800bfae:	e022      	b.n	800bff6 <USBD_GetConfig+0x62>
    switch (pdev->dev_state)
 800bfb0:	687b      	ldr	r3, [r7, #4]
 800bfb2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800bfb6:	2b02      	cmp	r3, #2
 800bfb8:	dc02      	bgt.n	800bfc0 <USBD_GetConfig+0x2c>
 800bfba:	2b00      	cmp	r3, #0
 800bfbc:	dc03      	bgt.n	800bfc6 <USBD_GetConfig+0x32>
 800bfbe:	e015      	b.n	800bfec <USBD_GetConfig+0x58>
 800bfc0:	2b03      	cmp	r3, #3
 800bfc2:	d00b      	beq.n	800bfdc <USBD_GetConfig+0x48>
 800bfc4:	e012      	b.n	800bfec <USBD_GetConfig+0x58>
        pdev->dev_default_config = 0U;
 800bfc6:	687b      	ldr	r3, [r7, #4]
 800bfc8:	2200      	movs	r2, #0
 800bfca:	609a      	str	r2, [r3, #8]
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_default_config, 1U);
 800bfcc:	687b      	ldr	r3, [r7, #4]
 800bfce:	3308      	adds	r3, #8
 800bfd0:	2201      	movs	r2, #1
 800bfd2:	4619      	mov	r1, r3
 800bfd4:	6878      	ldr	r0, [r7, #4]
 800bfd6:	f000 f91f 	bl	800c218 <USBD_CtlSendData>
        break;
 800bfda:	e00c      	b.n	800bff6 <USBD_GetConfig+0x62>
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config, 1U);
 800bfdc:	687b      	ldr	r3, [r7, #4]
 800bfde:	3304      	adds	r3, #4
 800bfe0:	2201      	movs	r2, #1
 800bfe2:	4619      	mov	r1, r3
 800bfe4:	6878      	ldr	r0, [r7, #4]
 800bfe6:	f000 f917 	bl	800c218 <USBD_CtlSendData>
        break;
 800bfea:	e004      	b.n	800bff6 <USBD_GetConfig+0x62>
        USBD_CtlError(pdev, req);
 800bfec:	6839      	ldr	r1, [r7, #0]
 800bfee:	6878      	ldr	r0, [r7, #4]
 800bff0:	f000 f8a7 	bl	800c142 <USBD_CtlError>
        break;
 800bff4:	bf00      	nop
}
 800bff6:	bf00      	nop
 800bff8:	3708      	adds	r7, #8
 800bffa:	46bd      	mov	sp, r7
 800bffc:	bd80      	pop	{r7, pc}

0800bffe <USBD_GetStatus>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800bffe:	b580      	push	{r7, lr}
 800c000:	b082      	sub	sp, #8
 800c002:	af00      	add	r7, sp, #0
 800c004:	6078      	str	r0, [r7, #4]
 800c006:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800c008:	687b      	ldr	r3, [r7, #4]
 800c00a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800c00e:	3b01      	subs	r3, #1
 800c010:	2b02      	cmp	r3, #2
 800c012:	d81e      	bhi.n	800c052 <USBD_GetStatus+0x54>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 800c014:	683b      	ldr	r3, [r7, #0]
 800c016:	88db      	ldrh	r3, [r3, #6]
 800c018:	2b02      	cmp	r3, #2
 800c01a:	d004      	beq.n	800c026 <USBD_GetStatus+0x28>
      {
        USBD_CtlError(pdev, req);
 800c01c:	6839      	ldr	r1, [r7, #0]
 800c01e:	6878      	ldr	r0, [r7, #4]
 800c020:	f000 f88f 	bl	800c142 <USBD_CtlError>
        break;
 800c024:	e01a      	b.n	800c05c <USBD_GetStatus+0x5e>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	2201      	movs	r2, #1
 800c02a:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif

      if (pdev->dev_remote_wakeup)
 800c02c:	687b      	ldr	r3, [r7, #4]
 800c02e:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 800c032:	2b00      	cmp	r3, #0
 800c034:	d005      	beq.n	800c042 <USBD_GetStatus+0x44>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	68db      	ldr	r3, [r3, #12]
 800c03a:	f043 0202 	orr.w	r2, r3, #2
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	60da      	str	r2, [r3, #12]
      }

      USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config_status, 2U);
 800c042:	687b      	ldr	r3, [r7, #4]
 800c044:	330c      	adds	r3, #12
 800c046:	2202      	movs	r2, #2
 800c048:	4619      	mov	r1, r3
 800c04a:	6878      	ldr	r0, [r7, #4]
 800c04c:	f000 f8e4 	bl	800c218 <USBD_CtlSendData>
      break;
 800c050:	e004      	b.n	800c05c <USBD_GetStatus+0x5e>

    default:
      USBD_CtlError(pdev, req);
 800c052:	6839      	ldr	r1, [r7, #0]
 800c054:	6878      	ldr	r0, [r7, #4]
 800c056:	f000 f874 	bl	800c142 <USBD_CtlError>
      break;
 800c05a:	bf00      	nop
  }
}
 800c05c:	bf00      	nop
 800c05e:	3708      	adds	r7, #8
 800c060:	46bd      	mov	sp, r7
 800c062:	bd80      	pop	{r7, pc}

0800c064 <USBD_SetFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 800c064:	b580      	push	{r7, lr}
 800c066:	b082      	sub	sp, #8
 800c068:	af00      	add	r7, sp, #0
 800c06a:	6078      	str	r0, [r7, #4]
 800c06c:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800c06e:	683b      	ldr	r3, [r7, #0]
 800c070:	885b      	ldrh	r3, [r3, #2]
 800c072:	2b01      	cmp	r3, #1
 800c074:	d106      	bne.n	800c084 <USBD_SetFeature+0x20>
  {
    pdev->dev_remote_wakeup = 1U;
 800c076:	687b      	ldr	r3, [r7, #4]
 800c078:	2201      	movs	r2, #1
 800c07a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
    USBD_CtlSendStatus(pdev);
 800c07e:	6878      	ldr	r0, [r7, #4]
 800c080:	f000 f928 	bl	800c2d4 <USBD_CtlSendStatus>
  }
}
 800c084:	bf00      	nop
 800c086:	3708      	adds	r7, #8
 800c088:	46bd      	mov	sp, r7
 800c08a:	bd80      	pop	{r7, pc}

0800c08c <USBD_ClrFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 800c08c:	b580      	push	{r7, lr}
 800c08e:	b082      	sub	sp, #8
 800c090:	af00      	add	r7, sp, #0
 800c092:	6078      	str	r0, [r7, #4]
 800c094:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800c09c:	3b01      	subs	r3, #1
 800c09e:	2b02      	cmp	r3, #2
 800c0a0:	d80b      	bhi.n	800c0ba <USBD_ClrFeature+0x2e>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800c0a2:	683b      	ldr	r3, [r7, #0]
 800c0a4:	885b      	ldrh	r3, [r3, #2]
 800c0a6:	2b01      	cmp	r3, #1
 800c0a8:	d10c      	bne.n	800c0c4 <USBD_ClrFeature+0x38>
      {
        pdev->dev_remote_wakeup = 0U;
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	2200      	movs	r2, #0
 800c0ae:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
        USBD_CtlSendStatus(pdev);
 800c0b2:	6878      	ldr	r0, [r7, #4]
 800c0b4:	f000 f90e 	bl	800c2d4 <USBD_CtlSendStatus>
      }
      break;
 800c0b8:	e004      	b.n	800c0c4 <USBD_ClrFeature+0x38>

    default:
      USBD_CtlError(pdev, req);
 800c0ba:	6839      	ldr	r1, [r7, #0]
 800c0bc:	6878      	ldr	r0, [r7, #4]
 800c0be:	f000 f840 	bl	800c142 <USBD_CtlError>
      break;
 800c0c2:	e000      	b.n	800c0c6 <USBD_ClrFeature+0x3a>
      break;
 800c0c4:	bf00      	nop
  }
}
 800c0c6:	bf00      	nop
 800c0c8:	3708      	adds	r7, #8
 800c0ca:	46bd      	mov	sp, r7
 800c0cc:	bd80      	pop	{r7, pc}

0800c0ce <USBD_ParseSetupRequest>:
* @param  req: usb request
* @retval None
*/

void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 800c0ce:	b480      	push	{r7}
 800c0d0:	b083      	sub	sp, #12
 800c0d2:	af00      	add	r7, sp, #0
 800c0d4:	6078      	str	r0, [r7, #4]
 800c0d6:	6039      	str	r1, [r7, #0]
  req->bmRequest = *(uint8_t *)(pdata);
 800c0d8:	683b      	ldr	r3, [r7, #0]
 800c0da:	781a      	ldrb	r2, [r3, #0]
 800c0dc:	687b      	ldr	r3, [r7, #4]
 800c0de:	701a      	strb	r2, [r3, #0]
  req->bRequest = *(uint8_t *)(pdata + 1U);
 800c0e0:	683b      	ldr	r3, [r7, #0]
 800c0e2:	785a      	ldrb	r2, [r3, #1]
 800c0e4:	687b      	ldr	r3, [r7, #4]
 800c0e6:	705a      	strb	r2, [r3, #1]
  req->wValue = SWAPBYTE(pdata + 2U);
 800c0e8:	683b      	ldr	r3, [r7, #0]
 800c0ea:	3302      	adds	r3, #2
 800c0ec:	781b      	ldrb	r3, [r3, #0]
 800c0ee:	461a      	mov	r2, r3
 800c0f0:	683b      	ldr	r3, [r7, #0]
 800c0f2:	3303      	adds	r3, #3
 800c0f4:	781b      	ldrb	r3, [r3, #0]
 800c0f6:	021b      	lsls	r3, r3, #8
 800c0f8:	b29b      	uxth	r3, r3
 800c0fa:	4413      	add	r3, r2
 800c0fc:	b29a      	uxth	r2, r3
 800c0fe:	687b      	ldr	r3, [r7, #4]
 800c100:	805a      	strh	r2, [r3, #2]
  req->wIndex = SWAPBYTE(pdata + 4U);
 800c102:	683b      	ldr	r3, [r7, #0]
 800c104:	3304      	adds	r3, #4
 800c106:	781b      	ldrb	r3, [r3, #0]
 800c108:	461a      	mov	r2, r3
 800c10a:	683b      	ldr	r3, [r7, #0]
 800c10c:	3305      	adds	r3, #5
 800c10e:	781b      	ldrb	r3, [r3, #0]
 800c110:	021b      	lsls	r3, r3, #8
 800c112:	b29b      	uxth	r3, r3
 800c114:	4413      	add	r3, r2
 800c116:	b29a      	uxth	r2, r3
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	809a      	strh	r2, [r3, #4]
  req->wLength = SWAPBYTE(pdata + 6U);
 800c11c:	683b      	ldr	r3, [r7, #0]
 800c11e:	3306      	adds	r3, #6
 800c120:	781b      	ldrb	r3, [r3, #0]
 800c122:	461a      	mov	r2, r3
 800c124:	683b      	ldr	r3, [r7, #0]
 800c126:	3307      	adds	r3, #7
 800c128:	781b      	ldrb	r3, [r3, #0]
 800c12a:	021b      	lsls	r3, r3, #8
 800c12c:	b29b      	uxth	r3, r3
 800c12e:	4413      	add	r3, r2
 800c130:	b29a      	uxth	r2, r3
 800c132:	687b      	ldr	r3, [r7, #4]
 800c134:	80da      	strh	r2, [r3, #6]

}
 800c136:	bf00      	nop
 800c138:	370c      	adds	r7, #12
 800c13a:	46bd      	mov	sp, r7
 800c13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c140:	4770      	bx	lr

0800c142 <USBD_CtlError>:
* @retval None
*/

void USBD_CtlError(USBD_HandleTypeDef *pdev,
                   USBD_SetupReqTypedef *req)
{
 800c142:	b580      	push	{r7, lr}
 800c144:	b082      	sub	sp, #8
 800c146:	af00      	add	r7, sp, #0
 800c148:	6078      	str	r0, [r7, #4]
 800c14a:	6039      	str	r1, [r7, #0]
  USBD_LL_StallEP(pdev, 0x80U);
 800c14c:	2180      	movs	r1, #128	@ 0x80
 800c14e:	6878      	ldr	r0, [r7, #4]
 800c150:	f000 fbf4 	bl	800c93c <USBD_LL_StallEP>
  USBD_LL_StallEP(pdev, 0U);
 800c154:	2100      	movs	r1, #0
 800c156:	6878      	ldr	r0, [r7, #4]
 800c158:	f000 fbf0 	bl	800c93c <USBD_LL_StallEP>
}
 800c15c:	bf00      	nop
 800c15e:	3708      	adds	r7, #8
 800c160:	46bd      	mov	sp, r7
 800c162:	bd80      	pop	{r7, pc}

0800c164 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800c164:	b580      	push	{r7, lr}
 800c166:	b086      	sub	sp, #24
 800c168:	af00      	add	r7, sp, #0
 800c16a:	60f8      	str	r0, [r7, #12]
 800c16c:	60b9      	str	r1, [r7, #8]
 800c16e:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 800c170:	2300      	movs	r3, #0
 800c172:	75fb      	strb	r3, [r7, #23]

  if (desc != NULL)
 800c174:	68fb      	ldr	r3, [r7, #12]
 800c176:	2b00      	cmp	r3, #0
 800c178:	d032      	beq.n	800c1e0 <USBD_GetString+0x7c>
  {
    *len = (uint16_t)USBD_GetLen(desc) * 2U + 2U;
 800c17a:	68f8      	ldr	r0, [r7, #12]
 800c17c:	f000 f834 	bl	800c1e8 <USBD_GetLen>
 800c180:	4603      	mov	r3, r0
 800c182:	3301      	adds	r3, #1
 800c184:	b29b      	uxth	r3, r3
 800c186:	005b      	lsls	r3, r3, #1
 800c188:	b29a      	uxth	r2, r3
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	801a      	strh	r2, [r3, #0]
    unicode[idx++] = *(uint8_t *)(void *)len;
 800c18e:	7dfb      	ldrb	r3, [r7, #23]
 800c190:	1c5a      	adds	r2, r3, #1
 800c192:	75fa      	strb	r2, [r7, #23]
 800c194:	461a      	mov	r2, r3
 800c196:	68bb      	ldr	r3, [r7, #8]
 800c198:	4413      	add	r3, r2
 800c19a:	687a      	ldr	r2, [r7, #4]
 800c19c:	7812      	ldrb	r2, [r2, #0]
 800c19e:	701a      	strb	r2, [r3, #0]
    unicode[idx++] = USB_DESC_TYPE_STRING;
 800c1a0:	7dfb      	ldrb	r3, [r7, #23]
 800c1a2:	1c5a      	adds	r2, r3, #1
 800c1a4:	75fa      	strb	r2, [r7, #23]
 800c1a6:	461a      	mov	r2, r3
 800c1a8:	68bb      	ldr	r3, [r7, #8]
 800c1aa:	4413      	add	r3, r2
 800c1ac:	2203      	movs	r2, #3
 800c1ae:	701a      	strb	r2, [r3, #0]

    while (*desc != '\0')
 800c1b0:	e012      	b.n	800c1d8 <USBD_GetString+0x74>
    {
      unicode[idx++] = *desc++;
 800c1b2:	68fb      	ldr	r3, [r7, #12]
 800c1b4:	1c5a      	adds	r2, r3, #1
 800c1b6:	60fa      	str	r2, [r7, #12]
 800c1b8:	7dfa      	ldrb	r2, [r7, #23]
 800c1ba:	1c51      	adds	r1, r2, #1
 800c1bc:	75f9      	strb	r1, [r7, #23]
 800c1be:	4611      	mov	r1, r2
 800c1c0:	68ba      	ldr	r2, [r7, #8]
 800c1c2:	440a      	add	r2, r1
 800c1c4:	781b      	ldrb	r3, [r3, #0]
 800c1c6:	7013      	strb	r3, [r2, #0]
      unicode[idx++] =  0U;
 800c1c8:	7dfb      	ldrb	r3, [r7, #23]
 800c1ca:	1c5a      	adds	r2, r3, #1
 800c1cc:	75fa      	strb	r2, [r7, #23]
 800c1ce:	461a      	mov	r2, r3
 800c1d0:	68bb      	ldr	r3, [r7, #8]
 800c1d2:	4413      	add	r3, r2
 800c1d4:	2200      	movs	r2, #0
 800c1d6:	701a      	strb	r2, [r3, #0]
    while (*desc != '\0')
 800c1d8:	68fb      	ldr	r3, [r7, #12]
 800c1da:	781b      	ldrb	r3, [r3, #0]
 800c1dc:	2b00      	cmp	r3, #0
 800c1de:	d1e8      	bne.n	800c1b2 <USBD_GetString+0x4e>
    }
  }
}
 800c1e0:	bf00      	nop
 800c1e2:	3718      	adds	r7, #24
 800c1e4:	46bd      	mov	sp, r7
 800c1e6:	bd80      	pop	{r7, pc}

0800c1e8 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 800c1e8:	b480      	push	{r7}
 800c1ea:	b085      	sub	sp, #20
 800c1ec:	af00      	add	r7, sp, #0
 800c1ee:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 800c1f0:	2300      	movs	r3, #0
 800c1f2:	73fb      	strb	r3, [r7, #15]

  while (*buf != '\0')
 800c1f4:	e005      	b.n	800c202 <USBD_GetLen+0x1a>
  {
    len++;
 800c1f6:	7bfb      	ldrb	r3, [r7, #15]
 800c1f8:	3301      	adds	r3, #1
 800c1fa:	73fb      	strb	r3, [r7, #15]
    buf++;
 800c1fc:	687b      	ldr	r3, [r7, #4]
 800c1fe:	3301      	adds	r3, #1
 800c200:	607b      	str	r3, [r7, #4]
  while (*buf != '\0')
 800c202:	687b      	ldr	r3, [r7, #4]
 800c204:	781b      	ldrb	r3, [r3, #0]
 800c206:	2b00      	cmp	r3, #0
 800c208:	d1f5      	bne.n	800c1f6 <USBD_GetLen+0xe>
  }

  return len;
 800c20a:	7bfb      	ldrb	r3, [r7, #15]
}
 800c20c:	4618      	mov	r0, r3
 800c20e:	3714      	adds	r7, #20
 800c210:	46bd      	mov	sp, r7
 800c212:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c216:	4770      	bx	lr

0800c218 <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint16_t len)
{
 800c218:	b580      	push	{r7, lr}
 800c21a:	b084      	sub	sp, #16
 800c21c:	af00      	add	r7, sp, #0
 800c21e:	60f8      	str	r0, [r7, #12]
 800c220:	60b9      	str	r1, [r7, #8]
 800c222:	4613      	mov	r3, r2
 800c224:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800c226:	68fb      	ldr	r3, [r7, #12]
 800c228:	2202      	movs	r2, #2
 800c22a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 800c22e:	88fa      	ldrh	r2, [r7, #6]
 800c230:	68fb      	ldr	r3, [r7, #12]
 800c232:	61da      	str	r2, [r3, #28]
  pdev->ep_in[0].rem_length   = len;
 800c234:	88fa      	ldrh	r2, [r7, #6]
 800c236:	68fb      	ldr	r3, [r7, #12]
 800c238:	621a      	str	r2, [r3, #32]

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800c23a:	88fb      	ldrh	r3, [r7, #6]
 800c23c:	68ba      	ldr	r2, [r7, #8]
 800c23e:	2100      	movs	r1, #0
 800c240:	68f8      	ldr	r0, [r7, #12]
 800c242:	f000 fc04 	bl	800ca4e <USBD_LL_Transmit>

  return USBD_OK;
 800c246:	2300      	movs	r3, #0
}
 800c248:	4618      	mov	r0, r3
 800c24a:	3710      	adds	r7, #16
 800c24c:	46bd      	mov	sp, r7
 800c24e:	bd80      	pop	{r7, pc}

0800c250 <USBD_CtlContinueSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint16_t len)
{
 800c250:	b580      	push	{r7, lr}
 800c252:	b084      	sub	sp, #16
 800c254:	af00      	add	r7, sp, #0
 800c256:	60f8      	str	r0, [r7, #12]
 800c258:	60b9      	str	r1, [r7, #8]
 800c25a:	4613      	mov	r3, r2
 800c25c:	80fb      	strh	r3, [r7, #6]
  /* Start the next transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800c25e:	88fb      	ldrh	r3, [r7, #6]
 800c260:	68ba      	ldr	r2, [r7, #8]
 800c262:	2100      	movs	r1, #0
 800c264:	68f8      	ldr	r0, [r7, #12]
 800c266:	f000 fbf2 	bl	800ca4e <USBD_LL_Transmit>

  return USBD_OK;
 800c26a:	2300      	movs	r3, #0
}
 800c26c:	4618      	mov	r0, r3
 800c26e:	3710      	adds	r7, #16
 800c270:	46bd      	mov	sp, r7
 800c272:	bd80      	pop	{r7, pc}

0800c274 <USBD_CtlPrepareRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint16_t len)
{
 800c274:	b580      	push	{r7, lr}
 800c276:	b084      	sub	sp, #16
 800c278:	af00      	add	r7, sp, #0
 800c27a:	60f8      	str	r0, [r7, #12]
 800c27c:	60b9      	str	r1, [r7, #8]
 800c27e:	4613      	mov	r3, r2
 800c280:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 800c282:	68fb      	ldr	r3, [r7, #12]
 800c284:	2203      	movs	r2, #3
 800c286:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->ep_out[0].total_length = len;
 800c28a:	88fa      	ldrh	r2, [r7, #6]
 800c28c:	68fb      	ldr	r3, [r7, #12]
 800c28e:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
  pdev->ep_out[0].rem_length   = len;
 800c292:	88fa      	ldrh	r2, [r7, #6]
 800c294:	68fb      	ldr	r3, [r7, #12]
 800c296:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800c29a:	88fb      	ldrh	r3, [r7, #6]
 800c29c:	68ba      	ldr	r2, [r7, #8]
 800c29e:	2100      	movs	r1, #0
 800c2a0:	68f8      	ldr	r0, [r7, #12]
 800c2a2:	f000 fbf7 	bl	800ca94 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800c2a6:	2300      	movs	r3, #0
}
 800c2a8:	4618      	mov	r0, r3
 800c2aa:	3710      	adds	r7, #16
 800c2ac:	46bd      	mov	sp, r7
 800c2ae:	bd80      	pop	{r7, pc}

0800c2b0 <USBD_CtlContinueRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint16_t len)
{
 800c2b0:	b580      	push	{r7, lr}
 800c2b2:	b084      	sub	sp, #16
 800c2b4:	af00      	add	r7, sp, #0
 800c2b6:	60f8      	str	r0, [r7, #12]
 800c2b8:	60b9      	str	r1, [r7, #8]
 800c2ba:	4613      	mov	r3, r2
 800c2bc:	80fb      	strh	r3, [r7, #6]
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800c2be:	88fb      	ldrh	r3, [r7, #6]
 800c2c0:	68ba      	ldr	r2, [r7, #8]
 800c2c2:	2100      	movs	r1, #0
 800c2c4:	68f8      	ldr	r0, [r7, #12]
 800c2c6:	f000 fbe5 	bl	800ca94 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800c2ca:	2300      	movs	r3, #0
}
 800c2cc:	4618      	mov	r0, r3
 800c2ce:	3710      	adds	r7, #16
 800c2d0:	46bd      	mov	sp, r7
 800c2d2:	bd80      	pop	{r7, pc}

0800c2d4 <USBD_CtlSendStatus>:
*         send zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800c2d4:	b580      	push	{r7, lr}
 800c2d6:	b082      	sub	sp, #8
 800c2d8:	af00      	add	r7, sp, #0
 800c2da:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	2204      	movs	r2, #4
 800c2e0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800c2e4:	2300      	movs	r3, #0
 800c2e6:	2200      	movs	r2, #0
 800c2e8:	2100      	movs	r1, #0
 800c2ea:	6878      	ldr	r0, [r7, #4]
 800c2ec:	f000 fbaf 	bl	800ca4e <USBD_LL_Transmit>

  return USBD_OK;
 800c2f0:	2300      	movs	r3, #0
}
 800c2f2:	4618      	mov	r0, r3
 800c2f4:	3708      	adds	r7, #8
 800c2f6:	46bd      	mov	sp, r7
 800c2f8:	bd80      	pop	{r7, pc}

0800c2fa <USBD_CtlReceiveStatus>:
*         receive zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800c2fa:	b580      	push	{r7, lr}
 800c2fc:	b082      	sub	sp, #8
 800c2fe:	af00      	add	r7, sp, #0
 800c300:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800c302:	687b      	ldr	r3, [r7, #4]
 800c304:	2205      	movs	r2, #5
 800c306:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800c30a:	2300      	movs	r3, #0
 800c30c:	2200      	movs	r2, #0
 800c30e:	2100      	movs	r1, #0
 800c310:	6878      	ldr	r0, [r7, #4]
 800c312:	f000 fbbf 	bl	800ca94 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800c316:	2300      	movs	r3, #0
}
 800c318:	4618      	mov	r0, r3
 800c31a:	3708      	adds	r7, #8
 800c31c:	46bd      	mov	sp, r7
 800c31e:	bd80      	pop	{r7, pc}

0800c320 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800c320:	b580      	push	{r7, lr}
 800c322:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 800c324:	2200      	movs	r2, #0
 800c326:	4912      	ldr	r1, [pc, #72]	@ (800c370 <MX_USB_DEVICE_Init+0x50>)
 800c328:	4812      	ldr	r0, [pc, #72]	@ (800c374 <MX_USB_DEVICE_Init+0x54>)
 800c32a:	f7fe ff5c 	bl	800b1e6 <USBD_Init>
 800c32e:	4603      	mov	r3, r0
 800c330:	2b00      	cmp	r3, #0
 800c332:	d001      	beq.n	800c338 <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
 800c334:	f7f5 fc0c 	bl	8001b50 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CUSTOM_HID) != USBD_OK)
 800c338:	490f      	ldr	r1, [pc, #60]	@ (800c378 <MX_USB_DEVICE_Init+0x58>)
 800c33a:	480e      	ldr	r0, [pc, #56]	@ (800c374 <MX_USB_DEVICE_Init+0x54>)
 800c33c:	f7fe ff7e 	bl	800b23c <USBD_RegisterClass>
 800c340:	4603      	mov	r3, r0
 800c342:	2b00      	cmp	r3, #0
 800c344:	d001      	beq.n	800c34a <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
 800c346:	f7f5 fc03 	bl	8001b50 <Error_Handler>
  }
  if (USBD_CUSTOM_HID_RegisterInterface(&hUsbDeviceFS, &USBD_CustomHID_fops_FS) != USBD_OK)
 800c34a:	490c      	ldr	r1, [pc, #48]	@ (800c37c <MX_USB_DEVICE_Init+0x5c>)
 800c34c:	4809      	ldr	r0, [pc, #36]	@ (800c374 <MX_USB_DEVICE_Init+0x54>)
 800c34e:	f7fe ff33 	bl	800b1b8 <USBD_CUSTOM_HID_RegisterInterface>
 800c352:	4603      	mov	r3, r0
 800c354:	2b00      	cmp	r3, #0
 800c356:	d001      	beq.n	800c35c <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
 800c358:	f7f5 fbfa 	bl	8001b50 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 800c35c:	4805      	ldr	r0, [pc, #20]	@ (800c374 <MX_USB_DEVICE_Init+0x54>)
 800c35e:	f7fe ff87 	bl	800b270 <USBD_Start>
 800c362:	4603      	mov	r3, r0
 800c364:	2b00      	cmp	r3, #0
 800c366:	d001      	beq.n	800c36c <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
 800c368:	f7f5 fbf2 	bl	8001b50 <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 800c36c:	bf00      	nop
 800c36e:	bd80      	pop	{r7, pc}
 800c370:	20000114 	.word	0x20000114
 800c374:	200007cc 	.word	0x200007cc
 800c378:	2000000c 	.word	0x2000000c
 800c37c:	20000104 	.word	0x20000104

0800c380 <CUSTOM_HID_Init_FS>:
/**
  * @brief  Initializes the CUSTOM HID media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_Init_FS(void)
{
 800c380:	b480      	push	{r7}
 800c382:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
 800c384:	2300      	movs	r3, #0
  /* USER CODE END 4 */
}
 800c386:	4618      	mov	r0, r3
 800c388:	46bd      	mov	sp, r7
 800c38a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c38e:	4770      	bx	lr

0800c390 <CUSTOM_HID_DeInit_FS>:
/**
  * @brief  DeInitializes the CUSTOM HID media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_DeInit_FS(void)
{
 800c390:	b480      	push	{r7}
 800c392:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 5 */
  return (USBD_OK);
 800c394:	2300      	movs	r3, #0
  /* USER CODE END 5 */
}
 800c396:	4618      	mov	r0, r3
 800c398:	46bd      	mov	sp, r7
 800c39a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c39e:	4770      	bx	lr

0800c3a0 <CUSTOM_HID_OutEvent_FS>:
  * @param  event_idx: Event index
  * @param  state: Event state
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_OutEvent_FS(uint8_t *state)
{
 800c3a0:	b4f0      	push	{r4, r5, r6, r7}
 800c3a2:	b082      	sub	sp, #8
 800c3a4:	af00      	add	r7, sp, #0
 800c3a6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 6 */

	memcpy(report_buffer, state, 64);
 800c3a8:	4a0e      	ldr	r2, [pc, #56]	@ (800c3e4 <CUSTOM_HID_OutEvent_FS+0x44>)
 800c3aa:	687b      	ldr	r3, [r7, #4]
 800c3ac:	4610      	mov	r0, r2
 800c3ae:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800c3b2:	4602      	mov	r2, r0
 800c3b4:	4619      	mov	r1, r3
 800c3b6:	f8d1 c000 	ldr.w	ip, [r1]
 800c3ba:	684e      	ldr	r6, [r1, #4]
 800c3bc:	688d      	ldr	r5, [r1, #8]
 800c3be:	68c9      	ldr	r1, [r1, #12]
 800c3c0:	f8c2 c000 	str.w	ip, [r2]
 800c3c4:	6056      	str	r6, [r2, #4]
 800c3c6:	6095      	str	r5, [r2, #8]
 800c3c8:	60d1      	str	r1, [r2, #12]
 800c3ca:	3310      	adds	r3, #16
 800c3cc:	3010      	adds	r0, #16
 800c3ce:	42a3      	cmp	r3, r4
 800c3d0:	d1ef      	bne.n	800c3b2 <CUSTOM_HID_OutEvent_FS+0x12>

	flag_rx = 1;
 800c3d2:	4b05      	ldr	r3, [pc, #20]	@ (800c3e8 <CUSTOM_HID_OutEvent_FS+0x48>)
 800c3d4:	2201      	movs	r2, #1
 800c3d6:	701a      	strb	r2, [r3, #0]

	return (USBD_OK);
 800c3d8:	2300      	movs	r3, #0
  /* USER CODE END 6 */
}
 800c3da:	4618      	mov	r0, r3
 800c3dc:	3708      	adds	r7, #8
 800c3de:	46bd      	mov	sp, r7
 800c3e0:	bcf0      	pop	{r4, r5, r6, r7}
 800c3e2:	4770      	bx	lr
 800c3e4:	2000038c 	.word	0x2000038c
 800c3e8:	200003cd 	.word	0x200003cd

0800c3ec <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c3ec:	b480      	push	{r7}
 800c3ee:	b083      	sub	sp, #12
 800c3f0:	af00      	add	r7, sp, #0
 800c3f2:	4603      	mov	r3, r0
 800c3f4:	6039      	str	r1, [r7, #0]
 800c3f6:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 800c3f8:	683b      	ldr	r3, [r7, #0]
 800c3fa:	2212      	movs	r2, #18
 800c3fc:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
 800c3fe:	4b03      	ldr	r3, [pc, #12]	@ (800c40c <USBD_FS_DeviceDescriptor+0x20>)
}
 800c400:	4618      	mov	r0, r3
 800c402:	370c      	adds	r7, #12
 800c404:	46bd      	mov	sp, r7
 800c406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c40a:	4770      	bx	lr
 800c40c:	20000130 	.word	0x20000130

0800c410 <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c410:	b480      	push	{r7}
 800c412:	b083      	sub	sp, #12
 800c414:	af00      	add	r7, sp, #0
 800c416:	4603      	mov	r3, r0
 800c418:	6039      	str	r1, [r7, #0]
 800c41a:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 800c41c:	683b      	ldr	r3, [r7, #0]
 800c41e:	2204      	movs	r2, #4
 800c420:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
 800c422:	4b03      	ldr	r3, [pc, #12]	@ (800c430 <USBD_FS_LangIDStrDescriptor+0x20>)
}
 800c424:	4618      	mov	r0, r3
 800c426:	370c      	adds	r7, #12
 800c428:	46bd      	mov	sp, r7
 800c42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c42e:	4770      	bx	lr
 800c430:	20000144 	.word	0x20000144

0800c434 <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c434:	b580      	push	{r7, lr}
 800c436:	b082      	sub	sp, #8
 800c438:	af00      	add	r7, sp, #0
 800c43a:	4603      	mov	r3, r0
 800c43c:	6039      	str	r1, [r7, #0]
 800c43e:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 800c440:	79fb      	ldrb	r3, [r7, #7]
 800c442:	2b00      	cmp	r3, #0
 800c444:	d105      	bne.n	800c452 <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800c446:	683a      	ldr	r2, [r7, #0]
 800c448:	4907      	ldr	r1, [pc, #28]	@ (800c468 <USBD_FS_ProductStrDescriptor+0x34>)
 800c44a:	4808      	ldr	r0, [pc, #32]	@ (800c46c <USBD_FS_ProductStrDescriptor+0x38>)
 800c44c:	f7ff fe8a 	bl	800c164 <USBD_GetString>
 800c450:	e004      	b.n	800c45c <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800c452:	683a      	ldr	r2, [r7, #0]
 800c454:	4904      	ldr	r1, [pc, #16]	@ (800c468 <USBD_FS_ProductStrDescriptor+0x34>)
 800c456:	4805      	ldr	r0, [pc, #20]	@ (800c46c <USBD_FS_ProductStrDescriptor+0x38>)
 800c458:	f7ff fe84 	bl	800c164 <USBD_GetString>
  }
  return USBD_StrDesc;
 800c45c:	4b02      	ldr	r3, [pc, #8]	@ (800c468 <USBD_FS_ProductStrDescriptor+0x34>)
}
 800c45e:	4618      	mov	r0, r3
 800c460:	3708      	adds	r7, #8
 800c462:	46bd      	mov	sp, r7
 800c464:	bd80      	pop	{r7, pc}
 800c466:	bf00      	nop
 800c468:	20000a90 	.word	0x20000a90
 800c46c:	0800f558 	.word	0x0800f558

0800c470 <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c470:	b580      	push	{r7, lr}
 800c472:	b082      	sub	sp, #8
 800c474:	af00      	add	r7, sp, #0
 800c476:	4603      	mov	r3, r0
 800c478:	6039      	str	r1, [r7, #0]
 800c47a:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800c47c:	683a      	ldr	r2, [r7, #0]
 800c47e:	4904      	ldr	r1, [pc, #16]	@ (800c490 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800c480:	4804      	ldr	r0, [pc, #16]	@ (800c494 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800c482:	f7ff fe6f 	bl	800c164 <USBD_GetString>
  return USBD_StrDesc;
 800c486:	4b02      	ldr	r3, [pc, #8]	@ (800c490 <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
 800c488:	4618      	mov	r0, r3
 800c48a:	3708      	adds	r7, #8
 800c48c:	46bd      	mov	sp, r7
 800c48e:	bd80      	pop	{r7, pc}
 800c490:	20000a90 	.word	0x20000a90
 800c494:	0800f578 	.word	0x0800f578

0800c498 <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c498:	b580      	push	{r7, lr}
 800c49a:	b082      	sub	sp, #8
 800c49c:	af00      	add	r7, sp, #0
 800c49e:	4603      	mov	r3, r0
 800c4a0:	6039      	str	r1, [r7, #0]
 800c4a2:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
 800c4a4:	683b      	ldr	r3, [r7, #0]
 800c4a6:	221a      	movs	r2, #26
 800c4a8:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
 800c4aa:	f000 f843 	bl	800c534 <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */

  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
 800c4ae:	4b02      	ldr	r3, [pc, #8]	@ (800c4b8 <USBD_FS_SerialStrDescriptor+0x20>)
}
 800c4b0:	4618      	mov	r0, r3
 800c4b2:	3708      	adds	r7, #8
 800c4b4:	46bd      	mov	sp, r7
 800c4b6:	bd80      	pop	{r7, pc}
 800c4b8:	20000148 	.word	0x20000148

0800c4bc <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c4bc:	b580      	push	{r7, lr}
 800c4be:	b082      	sub	sp, #8
 800c4c0:	af00      	add	r7, sp, #0
 800c4c2:	4603      	mov	r3, r0
 800c4c4:	6039      	str	r1, [r7, #0]
 800c4c6:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
 800c4c8:	79fb      	ldrb	r3, [r7, #7]
 800c4ca:	2b00      	cmp	r3, #0
 800c4cc:	d105      	bne.n	800c4da <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 800c4ce:	683a      	ldr	r2, [r7, #0]
 800c4d0:	4907      	ldr	r1, [pc, #28]	@ (800c4f0 <USBD_FS_ConfigStrDescriptor+0x34>)
 800c4d2:	4808      	ldr	r0, [pc, #32]	@ (800c4f4 <USBD_FS_ConfigStrDescriptor+0x38>)
 800c4d4:	f7ff fe46 	bl	800c164 <USBD_GetString>
 800c4d8:	e004      	b.n	800c4e4 <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 800c4da:	683a      	ldr	r2, [r7, #0]
 800c4dc:	4904      	ldr	r1, [pc, #16]	@ (800c4f0 <USBD_FS_ConfigStrDescriptor+0x34>)
 800c4de:	4805      	ldr	r0, [pc, #20]	@ (800c4f4 <USBD_FS_ConfigStrDescriptor+0x38>)
 800c4e0:	f7ff fe40 	bl	800c164 <USBD_GetString>
  }
  return USBD_StrDesc;
 800c4e4:	4b02      	ldr	r3, [pc, #8]	@ (800c4f0 <USBD_FS_ConfigStrDescriptor+0x34>)
}
 800c4e6:	4618      	mov	r0, r3
 800c4e8:	3708      	adds	r7, #8
 800c4ea:	46bd      	mov	sp, r7
 800c4ec:	bd80      	pop	{r7, pc}
 800c4ee:	bf00      	nop
 800c4f0:	20000a90 	.word	0x20000a90
 800c4f4:	0800f58c 	.word	0x0800f58c

0800c4f8 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b082      	sub	sp, #8
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	4603      	mov	r3, r0
 800c500:	6039      	str	r1, [r7, #0]
 800c502:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 800c504:	79fb      	ldrb	r3, [r7, #7]
 800c506:	2b00      	cmp	r3, #0
 800c508:	d105      	bne.n	800c516 <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 800c50a:	683a      	ldr	r2, [r7, #0]
 800c50c:	4907      	ldr	r1, [pc, #28]	@ (800c52c <USBD_FS_InterfaceStrDescriptor+0x34>)
 800c50e:	4808      	ldr	r0, [pc, #32]	@ (800c530 <USBD_FS_InterfaceStrDescriptor+0x38>)
 800c510:	f7ff fe28 	bl	800c164 <USBD_GetString>
 800c514:	e004      	b.n	800c520 <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 800c516:	683a      	ldr	r2, [r7, #0]
 800c518:	4904      	ldr	r1, [pc, #16]	@ (800c52c <USBD_FS_InterfaceStrDescriptor+0x34>)
 800c51a:	4805      	ldr	r0, [pc, #20]	@ (800c530 <USBD_FS_InterfaceStrDescriptor+0x38>)
 800c51c:	f7ff fe22 	bl	800c164 <USBD_GetString>
  }
  return USBD_StrDesc;
 800c520:	4b02      	ldr	r3, [pc, #8]	@ (800c52c <USBD_FS_InterfaceStrDescriptor+0x34>)
}
 800c522:	4618      	mov	r0, r3
 800c524:	3708      	adds	r7, #8
 800c526:	46bd      	mov	sp, r7
 800c528:	bd80      	pop	{r7, pc}
 800c52a:	bf00      	nop
 800c52c:	20000a90 	.word	0x20000a90
 800c530:	0800f5a0 	.word	0x0800f5a0

0800c534 <Get_SerialNum>:
  * @brief  Create the serial number string descriptor
  * @param  None
  * @retval None
  */
static void Get_SerialNum(void)
{
 800c534:	b580      	push	{r7, lr}
 800c536:	b084      	sub	sp, #16
 800c538:	af00      	add	r7, sp, #0
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 800c53a:	4b0f      	ldr	r3, [pc, #60]	@ (800c578 <Get_SerialNum+0x44>)
 800c53c:	681b      	ldr	r3, [r3, #0]
 800c53e:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 800c540:	4b0e      	ldr	r3, [pc, #56]	@ (800c57c <Get_SerialNum+0x48>)
 800c542:	681b      	ldr	r3, [r3, #0]
 800c544:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 800c546:	4b0e      	ldr	r3, [pc, #56]	@ (800c580 <Get_SerialNum+0x4c>)
 800c548:	681b      	ldr	r3, [r3, #0]
 800c54a:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
 800c54c:	68fa      	ldr	r2, [r7, #12]
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	4413      	add	r3, r2
 800c552:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
 800c554:	68fb      	ldr	r3, [r7, #12]
 800c556:	2b00      	cmp	r3, #0
 800c558:	d009      	beq.n	800c56e <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 800c55a:	2208      	movs	r2, #8
 800c55c:	4909      	ldr	r1, [pc, #36]	@ (800c584 <Get_SerialNum+0x50>)
 800c55e:	68f8      	ldr	r0, [r7, #12]
 800c560:	f000 f814 	bl	800c58c <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 800c564:	2204      	movs	r2, #4
 800c566:	4908      	ldr	r1, [pc, #32]	@ (800c588 <Get_SerialNum+0x54>)
 800c568:	68b8      	ldr	r0, [r7, #8]
 800c56a:	f000 f80f 	bl	800c58c <IntToUnicode>
  }
}
 800c56e:	bf00      	nop
 800c570:	3710      	adds	r7, #16
 800c572:	46bd      	mov	sp, r7
 800c574:	bd80      	pop	{r7, pc}
 800c576:	bf00      	nop
 800c578:	1ffff7ac 	.word	0x1ffff7ac
 800c57c:	1ffff7b0 	.word	0x1ffff7b0
 800c580:	1ffff7b4 	.word	0x1ffff7b4
 800c584:	2000014a 	.word	0x2000014a
 800c588:	2000015a 	.word	0x2000015a

0800c58c <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 800c58c:	b480      	push	{r7}
 800c58e:	b087      	sub	sp, #28
 800c590:	af00      	add	r7, sp, #0
 800c592:	60f8      	str	r0, [r7, #12]
 800c594:	60b9      	str	r1, [r7, #8]
 800c596:	4613      	mov	r3, r2
 800c598:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
 800c59a:	2300      	movs	r3, #0
 800c59c:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
 800c59e:	2300      	movs	r3, #0
 800c5a0:	75fb      	strb	r3, [r7, #23]
 800c5a2:	e027      	b.n	800c5f4 <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
 800c5a4:	68fb      	ldr	r3, [r7, #12]
 800c5a6:	0f1b      	lsrs	r3, r3, #28
 800c5a8:	2b09      	cmp	r3, #9
 800c5aa:	d80b      	bhi.n	800c5c4 <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
 800c5ac:	68fb      	ldr	r3, [r7, #12]
 800c5ae:	0f1b      	lsrs	r3, r3, #28
 800c5b0:	b2da      	uxtb	r2, r3
 800c5b2:	7dfb      	ldrb	r3, [r7, #23]
 800c5b4:	005b      	lsls	r3, r3, #1
 800c5b6:	4619      	mov	r1, r3
 800c5b8:	68bb      	ldr	r3, [r7, #8]
 800c5ba:	440b      	add	r3, r1
 800c5bc:	3230      	adds	r2, #48	@ 0x30
 800c5be:	b2d2      	uxtb	r2, r2
 800c5c0:	701a      	strb	r2, [r3, #0]
 800c5c2:	e00a      	b.n	800c5da <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 800c5c4:	68fb      	ldr	r3, [r7, #12]
 800c5c6:	0f1b      	lsrs	r3, r3, #28
 800c5c8:	b2da      	uxtb	r2, r3
 800c5ca:	7dfb      	ldrb	r3, [r7, #23]
 800c5cc:	005b      	lsls	r3, r3, #1
 800c5ce:	4619      	mov	r1, r3
 800c5d0:	68bb      	ldr	r3, [r7, #8]
 800c5d2:	440b      	add	r3, r1
 800c5d4:	3237      	adds	r2, #55	@ 0x37
 800c5d6:	b2d2      	uxtb	r2, r2
 800c5d8:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
 800c5da:	68fb      	ldr	r3, [r7, #12]
 800c5dc:	011b      	lsls	r3, r3, #4
 800c5de:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
 800c5e0:	7dfb      	ldrb	r3, [r7, #23]
 800c5e2:	005b      	lsls	r3, r3, #1
 800c5e4:	3301      	adds	r3, #1
 800c5e6:	68ba      	ldr	r2, [r7, #8]
 800c5e8:	4413      	add	r3, r2
 800c5ea:	2200      	movs	r2, #0
 800c5ec:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
 800c5ee:	7dfb      	ldrb	r3, [r7, #23]
 800c5f0:	3301      	adds	r3, #1
 800c5f2:	75fb      	strb	r3, [r7, #23]
 800c5f4:	7dfa      	ldrb	r2, [r7, #23]
 800c5f6:	79fb      	ldrb	r3, [r7, #7]
 800c5f8:	429a      	cmp	r2, r3
 800c5fa:	d3d3      	bcc.n	800c5a4 <IntToUnicode+0x18>
  }
}
 800c5fc:	bf00      	nop
 800c5fe:	bf00      	nop
 800c600:	371c      	adds	r7, #28
 800c602:	46bd      	mov	sp, r7
 800c604:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c608:	4770      	bx	lr
	...

0800c60c <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 800c60c:	b580      	push	{r7, lr}
 800c60e:	b08a      	sub	sp, #40	@ 0x28
 800c610:	af00      	add	r7, sp, #0
 800c612:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800c614:	f107 0314 	add.w	r3, r7, #20
 800c618:	2200      	movs	r2, #0
 800c61a:	601a      	str	r2, [r3, #0]
 800c61c:	605a      	str	r2, [r3, #4]
 800c61e:	609a      	str	r2, [r3, #8]
 800c620:	60da      	str	r2, [r3, #12]
 800c622:	611a      	str	r2, [r3, #16]
  if(pcdHandle->Instance==USB)
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	681b      	ldr	r3, [r3, #0]
 800c628:	4a1c      	ldr	r2, [pc, #112]	@ (800c69c <HAL_PCD_MspInit+0x90>)
 800c62a:	4293      	cmp	r3, r2
 800c62c:	d131      	bne.n	800c692 <HAL_PCD_MspInit+0x86>
  {
  /* USER CODE BEGIN USB_MspInit 0 */

  /* USER CODE END USB_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800c62e:	4b1c      	ldr	r3, [pc, #112]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c630:	695b      	ldr	r3, [r3, #20]
 800c632:	4a1b      	ldr	r2, [pc, #108]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c634:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c638:	6153      	str	r3, [r2, #20]
 800c63a:	4b19      	ldr	r3, [pc, #100]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c63c:	695b      	ldr	r3, [r3, #20]
 800c63e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800c642:	613b      	str	r3, [r7, #16]
 800c644:	693b      	ldr	r3, [r7, #16]
    /**USB GPIO Configuration
    PA11     ------> USB_DM
    PA12     ------> USB_DP
    */
    GPIO_InitStruct.Pin = DM_Pin|DP_Pin;
 800c646:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 800c64a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c64c:	2302      	movs	r3, #2
 800c64e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c650:	2300      	movs	r3, #0
 800c652:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800c654:	2303      	movs	r3, #3
 800c656:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_USB;
 800c658:	230e      	movs	r3, #14
 800c65a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800c65c:	f107 0314 	add.w	r3, r7, #20
 800c660:	4619      	mov	r1, r3
 800c662:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800c666:	f7f6 fa27 	bl	8002ab8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_CLK_ENABLE();
 800c66a:	4b0d      	ldr	r3, [pc, #52]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c66c:	69db      	ldr	r3, [r3, #28]
 800c66e:	4a0c      	ldr	r2, [pc, #48]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c670:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800c674:	61d3      	str	r3, [r2, #28]
 800c676:	4b0a      	ldr	r3, [pc, #40]	@ (800c6a0 <HAL_PCD_MspInit+0x94>)
 800c678:	69db      	ldr	r3, [r3, #28]
 800c67a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800c67e:	60fb      	str	r3, [r7, #12]
 800c680:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(USB_LP_CAN_RX0_IRQn, 0, 0);
 800c682:	2200      	movs	r2, #0
 800c684:	2100      	movs	r1, #0
 800c686:	2014      	movs	r0, #20
 800c688:	f7f6 f9df 	bl	8002a4a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_CAN_RX0_IRQn);
 800c68c:	2014      	movs	r0, #20
 800c68e:	f7f6 f9f8 	bl	8002a82 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 800c692:	bf00      	nop
 800c694:	3728      	adds	r7, #40	@ 0x28
 800c696:	46bd      	mov	sp, r7
 800c698:	bd80      	pop	{r7, pc}
 800c69a:	bf00      	nop
 800c69c:	40005c00 	.word	0x40005c00
 800c6a0:	40021000 	.word	0x40021000

0800c6a4 <HAL_PCD_SetupStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c6a4:	b580      	push	{r7, lr}
 800c6a6:	b082      	sub	sp, #8
 800c6a8:	af00      	add	r7, sp, #0
 800c6aa:	6078      	str	r0, [r7, #4]
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800c6ac:	687b      	ldr	r3, [r7, #4]
 800c6ae:	f8d3 22d0 	ldr.w	r2, [r3, #720]	@ 0x2d0
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	f503 7326 	add.w	r3, r3, #664	@ 0x298
 800c6b8:	4619      	mov	r1, r3
 800c6ba:	4610      	mov	r0, r2
 800c6bc:	f7fe fe21 	bl	800b302 <USBD_LL_SetupStage>
}
 800c6c0:	bf00      	nop
 800c6c2:	3708      	adds	r7, #8
 800c6c4:	46bd      	mov	sp, r7
 800c6c6:	bd80      	pop	{r7, pc}

0800c6c8 <HAL_PCD_DataOutStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c6c8:	b580      	push	{r7, lr}
 800c6ca:	b082      	sub	sp, #8
 800c6cc:	af00      	add	r7, sp, #0
 800c6ce:	6078      	str	r0, [r7, #4]
 800c6d0:	460b      	mov	r3, r1
 800c6d2:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800c6d4:	687b      	ldr	r3, [r7, #4]
 800c6d6:	f8d3 02d0 	ldr.w	r0, [r3, #720]	@ 0x2d0
 800c6da:	78fa      	ldrb	r2, [r7, #3]
 800c6dc:	6879      	ldr	r1, [r7, #4]
 800c6de:	4613      	mov	r3, r2
 800c6e0:	009b      	lsls	r3, r3, #2
 800c6e2:	4413      	add	r3, r2
 800c6e4:	00db      	lsls	r3, r3, #3
 800c6e6:	440b      	add	r3, r1
 800c6e8:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800c6ec:	681a      	ldr	r2, [r3, #0]
 800c6ee:	78fb      	ldrb	r3, [r7, #3]
 800c6f0:	4619      	mov	r1, r3
 800c6f2:	f7fe fe53 	bl	800b39c <USBD_LL_DataOutStage>
}
 800c6f6:	bf00      	nop
 800c6f8:	3708      	adds	r7, #8
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	bd80      	pop	{r7, pc}

0800c6fe <HAL_PCD_DataInStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c6fe:	b580      	push	{r7, lr}
 800c700:	b082      	sub	sp, #8
 800c702:	af00      	add	r7, sp, #0
 800c704:	6078      	str	r0, [r7, #4]
 800c706:	460b      	mov	r3, r1
 800c708:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800c70a:	687b      	ldr	r3, [r7, #4]
 800c70c:	f8d3 02d0 	ldr.w	r0, [r3, #720]	@ 0x2d0
 800c710:	78fa      	ldrb	r2, [r7, #3]
 800c712:	6879      	ldr	r1, [r7, #4]
 800c714:	4613      	mov	r3, r2
 800c716:	009b      	lsls	r3, r3, #2
 800c718:	4413      	add	r3, r2
 800c71a:	00db      	lsls	r3, r3, #3
 800c71c:	440b      	add	r3, r1
 800c71e:	3324      	adds	r3, #36	@ 0x24
 800c720:	681a      	ldr	r2, [r3, #0]
 800c722:	78fb      	ldrb	r3, [r7, #3]
 800c724:	4619      	mov	r1, r3
 800c726:	f7fe feaa 	bl	800b47e <USBD_LL_DataInStage>
}
 800c72a:	bf00      	nop
 800c72c:	3708      	adds	r7, #8
 800c72e:	46bd      	mov	sp, r7
 800c730:	bd80      	pop	{r7, pc}

0800c732 <HAL_PCD_SOFCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c732:	b580      	push	{r7, lr}
 800c734:	b082      	sub	sp, #8
 800c736:	af00      	add	r7, sp, #0
 800c738:	6078      	str	r0, [r7, #4]
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800c73a:	687b      	ldr	r3, [r7, #4]
 800c73c:	f8d3 32d0 	ldr.w	r3, [r3, #720]	@ 0x2d0
 800c740:	4618      	mov	r0, r3
 800c742:	f7fe ffbd 	bl	800b6c0 <USBD_LL_SOF>
}
 800c746:	bf00      	nop
 800c748:	3708      	adds	r7, #8
 800c74a:	46bd      	mov	sp, r7
 800c74c:	bd80      	pop	{r7, pc}

0800c74e <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c74e:	b580      	push	{r7, lr}
 800c750:	b084      	sub	sp, #16
 800c752:	af00      	add	r7, sp, #0
 800c754:	6078      	str	r0, [r7, #4]
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 800c756:	2301      	movs	r3, #1
 800c758:	73fb      	strb	r3, [r7, #15]

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800c75a:	687b      	ldr	r3, [r7, #4]
 800c75c:	795b      	ldrb	r3, [r3, #5]
 800c75e:	2b02      	cmp	r3, #2
 800c760:	d001      	beq.n	800c766 <HAL_PCD_ResetCallback+0x18>
  {
    Error_Handler();
 800c762:	f7f5 f9f5 	bl	8001b50 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800c766:	687b      	ldr	r3, [r7, #4]
 800c768:	f8d3 32d0 	ldr.w	r3, [r3, #720]	@ 0x2d0
 800c76c:	7bfa      	ldrb	r2, [r7, #15]
 800c76e:	4611      	mov	r1, r2
 800c770:	4618      	mov	r0, r3
 800c772:	f7fe ff6a 	bl	800b64a <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800c776:	687b      	ldr	r3, [r7, #4]
 800c778:	f8d3 32d0 	ldr.w	r3, [r3, #720]	@ 0x2d0
 800c77c:	4618      	mov	r0, r3
 800c77e:	f7fe ff23 	bl	800b5c8 <USBD_LL_Reset>
}
 800c782:	bf00      	nop
 800c784:	3710      	adds	r7, #16
 800c786:	46bd      	mov	sp, r7
 800c788:	bd80      	pop	{r7, pc}
	...

0800c78c <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c78c:	b580      	push	{r7, lr}
 800c78e:	b082      	sub	sp, #8
 800c790:	af00      	add	r7, sp, #0
 800c792:	6078      	str	r0, [r7, #4]
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800c794:	687b      	ldr	r3, [r7, #4]
 800c796:	f8d3 32d0 	ldr.w	r3, [r3, #720]	@ 0x2d0
 800c79a:	4618      	mov	r0, r3
 800c79c:	f7fe ff65 	bl	800b66a <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800c7a0:	687b      	ldr	r3, [r7, #4]
 800c7a2:	7a5b      	ldrb	r3, [r3, #9]
 800c7a4:	2b00      	cmp	r3, #0
 800c7a6:	d005      	beq.n	800c7b4 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800c7a8:	4b04      	ldr	r3, [pc, #16]	@ (800c7bc <HAL_PCD_SuspendCallback+0x30>)
 800c7aa:	691b      	ldr	r3, [r3, #16]
 800c7ac:	4a03      	ldr	r2, [pc, #12]	@ (800c7bc <HAL_PCD_SuspendCallback+0x30>)
 800c7ae:	f043 0306 	orr.w	r3, r3, #6
 800c7b2:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 800c7b4:	bf00      	nop
 800c7b6:	3708      	adds	r7, #8
 800c7b8:	46bd      	mov	sp, r7
 800c7ba:	bd80      	pop	{r7, pc}
 800c7bc:	e000ed00 	.word	0xe000ed00

0800c7c0 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800c7c0:	b580      	push	{r7, lr}
 800c7c2:	b082      	sub	sp, #8
 800c7c4:	af00      	add	r7, sp, #0
 800c7c6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800c7c8:	687b      	ldr	r3, [r7, #4]
 800c7ca:	f8d3 32d0 	ldr.w	r3, [r3, #720]	@ 0x2d0
 800c7ce:	4618      	mov	r0, r3
 800c7d0:	f7fe ff60 	bl	800b694 <USBD_LL_Resume>
}
 800c7d4:	bf00      	nop
 800c7d6:	3708      	adds	r7, #8
 800c7d8:	46bd      	mov	sp, r7
 800c7da:	bd80      	pop	{r7, pc}

0800c7dc <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 800c7dc:	b580      	push	{r7, lr}
 800c7de:	b082      	sub	sp, #8
 800c7e0:	af00      	add	r7, sp, #0
 800c7e2:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  /* Link the driver to the stack. */
  hpcd_USB_FS.pData = pdev;
 800c7e4:	4a23      	ldr	r2, [pc, #140]	@ (800c874 <USBD_LL_Init+0x98>)
 800c7e6:	687b      	ldr	r3, [r7, #4]
 800c7e8:	f8c2 32d0 	str.w	r3, [r2, #720]	@ 0x2d0
  pdev->pData = &hpcd_USB_FS;
 800c7ec:	687b      	ldr	r3, [r7, #4]
 800c7ee:	4a21      	ldr	r2, [pc, #132]	@ (800c874 <USBD_LL_Init+0x98>)
 800c7f0:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0

  hpcd_USB_FS.Instance = USB;
 800c7f4:	4b1f      	ldr	r3, [pc, #124]	@ (800c874 <USBD_LL_Init+0x98>)
 800c7f6:	4a20      	ldr	r2, [pc, #128]	@ (800c878 <USBD_LL_Init+0x9c>)
 800c7f8:	601a      	str	r2, [r3, #0]
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800c7fa:	4b1e      	ldr	r3, [pc, #120]	@ (800c874 <USBD_LL_Init+0x98>)
 800c7fc:	2208      	movs	r2, #8
 800c7fe:	711a      	strb	r2, [r3, #4]
  hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 800c800:	4b1c      	ldr	r3, [pc, #112]	@ (800c874 <USBD_LL_Init+0x98>)
 800c802:	2202      	movs	r2, #2
 800c804:	715a      	strb	r2, [r3, #5]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800c806:	4b1b      	ldr	r3, [pc, #108]	@ (800c874 <USBD_LL_Init+0x98>)
 800c808:	2202      	movs	r2, #2
 800c80a:	71da      	strb	r2, [r3, #7]
  hpcd_USB_FS.Init.low_power_enable = DISABLE;
 800c80c:	4b19      	ldr	r3, [pc, #100]	@ (800c874 <USBD_LL_Init+0x98>)
 800c80e:	2200      	movs	r2, #0
 800c810:	725a      	strb	r2, [r3, #9]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800c812:	4b18      	ldr	r3, [pc, #96]	@ (800c874 <USBD_LL_Init+0x98>)
 800c814:	2200      	movs	r2, #0
 800c816:	72da      	strb	r2, [r3, #11]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800c818:	4816      	ldr	r0, [pc, #88]	@ (800c874 <USBD_LL_Init+0x98>)
 800c81a:	f7f7 f8de 	bl	80039da <HAL_PCD_Init>
 800c81e:	4603      	mov	r3, r0
 800c820:	2b00      	cmp	r3, #0
 800c822:	d001      	beq.n	800c828 <USBD_LL_Init+0x4c>
  {
    Error_Handler( );
 800c824:	f7f5 f994 	bl	8001b50 <Error_Handler>
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  /* USER CODE BEGIN EndPoint_Configuration */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 800c828:	687b      	ldr	r3, [r7, #4]
 800c82a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800c82e:	2318      	movs	r3, #24
 800c830:	2200      	movs	r2, #0
 800c832:	2100      	movs	r1, #0
 800c834:	f7f8 fd3f 	bl	80052b6 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800c83e:	2358      	movs	r3, #88	@ 0x58
 800c840:	2200      	movs	r2, #0
 800c842:	2180      	movs	r1, #128	@ 0x80
 800c844:	f7f8 fd37 	bl	80052b6 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration */
  /* USER CODE BEGIN EndPoint_Configuration_CUSTOM_HID */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , CUSTOM_HID_EPIN_ADDR , PCD_SNG_BUF, 0x98);
 800c848:	687b      	ldr	r3, [r7, #4]
 800c84a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800c84e:	2398      	movs	r3, #152	@ 0x98
 800c850:	2200      	movs	r2, #0
 800c852:	2181      	movs	r1, #129	@ 0x81
 800c854:	f7f8 fd2f 	bl	80052b6 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , CUSTOM_HID_EPOUT_ADDR , PCD_SNG_BUF, 0xD8);
 800c858:	687b      	ldr	r3, [r7, #4]
 800c85a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800c85e:	23d8      	movs	r3, #216	@ 0xd8
 800c860:	2200      	movs	r2, #0
 800c862:	2101      	movs	r1, #1
 800c864:	f7f8 fd27 	bl	80052b6 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration_CUSTOM_HID */
  return USBD_OK;
 800c868:	2300      	movs	r3, #0
}
 800c86a:	4618      	mov	r0, r3
 800c86c:	3708      	adds	r7, #8
 800c86e:	46bd      	mov	sp, r7
 800c870:	bd80      	pop	{r7, pc}
 800c872:	bf00      	nop
 800c874:	20000c90 	.word	0x20000c90
 800c878:	40005c00 	.word	0x40005c00

0800c87c <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 800c87c:	b580      	push	{r7, lr}
 800c87e:	b084      	sub	sp, #16
 800c880:	af00      	add	r7, sp, #0
 800c882:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c884:	2300      	movs	r3, #0
 800c886:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c888:	2300      	movs	r3, #0
 800c88a:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_Start(pdev->pData);
 800c88c:	687b      	ldr	r3, [r7, #4]
 800c88e:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800c892:	4618      	mov	r0, r3
 800c894:	f7f7 f968 	bl	8003b68 <HAL_PCD_Start>
 800c898:	4603      	mov	r3, r0
 800c89a:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c89c:	7bfb      	ldrb	r3, [r7, #15]
 800c89e:	4618      	mov	r0, r3
 800c8a0:	f000 f940 	bl	800cb24 <USBD_Get_USB_Status>
 800c8a4:	4603      	mov	r3, r0
 800c8a6:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c8a8:	7bbb      	ldrb	r3, [r7, #14]
}
 800c8aa:	4618      	mov	r0, r3
 800c8ac:	3710      	adds	r7, #16
 800c8ae:	46bd      	mov	sp, r7
 800c8b0:	bd80      	pop	{r7, pc}

0800c8b2 <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
 800c8b2:	b580      	push	{r7, lr}
 800c8b4:	b084      	sub	sp, #16
 800c8b6:	af00      	add	r7, sp, #0
 800c8b8:	6078      	str	r0, [r7, #4]
 800c8ba:	4608      	mov	r0, r1
 800c8bc:	4611      	mov	r1, r2
 800c8be:	461a      	mov	r2, r3
 800c8c0:	4603      	mov	r3, r0
 800c8c2:	70fb      	strb	r3, [r7, #3]
 800c8c4:	460b      	mov	r3, r1
 800c8c6:	70bb      	strb	r3, [r7, #2]
 800c8c8:	4613      	mov	r3, r2
 800c8ca:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c8cc:	2300      	movs	r3, #0
 800c8ce:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c8d0:	2300      	movs	r3, #0
 800c8d2:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800c8d4:	687b      	ldr	r3, [r7, #4]
 800c8d6:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800c8da:	78bb      	ldrb	r3, [r7, #2]
 800c8dc:	883a      	ldrh	r2, [r7, #0]
 800c8de:	78f9      	ldrb	r1, [r7, #3]
 800c8e0:	f7f7 fa60 	bl	8003da4 <HAL_PCD_EP_Open>
 800c8e4:	4603      	mov	r3, r0
 800c8e6:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c8e8:	7bfb      	ldrb	r3, [r7, #15]
 800c8ea:	4618      	mov	r0, r3
 800c8ec:	f000 f91a 	bl	800cb24 <USBD_Get_USB_Status>
 800c8f0:	4603      	mov	r3, r0
 800c8f2:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c8f4:	7bbb      	ldrb	r3, [r7, #14]
}
 800c8f6:	4618      	mov	r0, r3
 800c8f8:	3710      	adds	r7, #16
 800c8fa:	46bd      	mov	sp, r7
 800c8fc:	bd80      	pop	{r7, pc}

0800c8fe <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c8fe:	b580      	push	{r7, lr}
 800c900:	b084      	sub	sp, #16
 800c902:	af00      	add	r7, sp, #0
 800c904:	6078      	str	r0, [r7, #4]
 800c906:	460b      	mov	r3, r1
 800c908:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c90a:	2300      	movs	r3, #0
 800c90c:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c90e:	2300      	movs	r3, #0
 800c910:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800c912:	687b      	ldr	r3, [r7, #4]
 800c914:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800c918:	78fa      	ldrb	r2, [r7, #3]
 800c91a:	4611      	mov	r1, r2
 800c91c:	4618      	mov	r0, r3
 800c91e:	f7f7 fa9e 	bl	8003e5e <HAL_PCD_EP_Close>
 800c922:	4603      	mov	r3, r0
 800c924:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c926:	7bfb      	ldrb	r3, [r7, #15]
 800c928:	4618      	mov	r0, r3
 800c92a:	f000 f8fb 	bl	800cb24 <USBD_Get_USB_Status>
 800c92e:	4603      	mov	r3, r0
 800c930:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c932:	7bbb      	ldrb	r3, [r7, #14]
}
 800c934:	4618      	mov	r0, r3
 800c936:	3710      	adds	r7, #16
 800c938:	46bd      	mov	sp, r7
 800c93a:	bd80      	pop	{r7, pc}

0800c93c <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c93c:	b580      	push	{r7, lr}
 800c93e:	b084      	sub	sp, #16
 800c940:	af00      	add	r7, sp, #0
 800c942:	6078      	str	r0, [r7, #4]
 800c944:	460b      	mov	r3, r1
 800c946:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c948:	2300      	movs	r3, #0
 800c94a:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c94c:	2300      	movs	r3, #0
 800c94e:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 800c950:	687b      	ldr	r3, [r7, #4]
 800c952:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800c956:	78fa      	ldrb	r2, [r7, #3]
 800c958:	4611      	mov	r1, r2
 800c95a:	4618      	mov	r0, r3
 800c95c:	f7f7 fb2f 	bl	8003fbe <HAL_PCD_EP_SetStall>
 800c960:	4603      	mov	r3, r0
 800c962:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c964:	7bfb      	ldrb	r3, [r7, #15]
 800c966:	4618      	mov	r0, r3
 800c968:	f000 f8dc 	bl	800cb24 <USBD_Get_USB_Status>
 800c96c:	4603      	mov	r3, r0
 800c96e:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c970:	7bbb      	ldrb	r3, [r7, #14]
}
 800c972:	4618      	mov	r0, r3
 800c974:	3710      	adds	r7, #16
 800c976:	46bd      	mov	sp, r7
 800c978:	bd80      	pop	{r7, pc}

0800c97a <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c97a:	b580      	push	{r7, lr}
 800c97c:	b084      	sub	sp, #16
 800c97e:	af00      	add	r7, sp, #0
 800c980:	6078      	str	r0, [r7, #4]
 800c982:	460b      	mov	r3, r1
 800c984:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800c986:	2300      	movs	r3, #0
 800c988:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800c98a:	2300      	movs	r3, #0
 800c98c:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800c98e:	687b      	ldr	r3, [r7, #4]
 800c990:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800c994:	78fa      	ldrb	r2, [r7, #3]
 800c996:	4611      	mov	r1, r2
 800c998:	4618      	mov	r0, r3
 800c99a:	f7f7 fb62 	bl	8004062 <HAL_PCD_EP_ClrStall>
 800c99e:	4603      	mov	r3, r0
 800c9a0:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800c9a2:	7bfb      	ldrb	r3, [r7, #15]
 800c9a4:	4618      	mov	r0, r3
 800c9a6:	f000 f8bd 	bl	800cb24 <USBD_Get_USB_Status>
 800c9aa:	4603      	mov	r3, r0
 800c9ac:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800c9ae:	7bbb      	ldrb	r3, [r7, #14]
}
 800c9b0:	4618      	mov	r0, r3
 800c9b2:	3710      	adds	r7, #16
 800c9b4:	46bd      	mov	sp, r7
 800c9b6:	bd80      	pop	{r7, pc}

0800c9b8 <USBD_LL_IsStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Stall (1: Yes, 0: No)
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 800c9b8:	b480      	push	{r7}
 800c9ba:	b085      	sub	sp, #20
 800c9bc:	af00      	add	r7, sp, #0
 800c9be:	6078      	str	r0, [r7, #4]
 800c9c0:	460b      	mov	r3, r1
 800c9c2:	70fb      	strb	r3, [r7, #3]
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800c9c4:	687b      	ldr	r3, [r7, #4]
 800c9c6:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800c9ca:	60fb      	str	r3, [r7, #12]

  if((ep_addr & 0x80) == 0x80)
 800c9cc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	da0b      	bge.n	800c9ec <USBD_LL_IsStallEP+0x34>
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800c9d4:	78fb      	ldrb	r3, [r7, #3]
 800c9d6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800c9da:	68f9      	ldr	r1, [r7, #12]
 800c9dc:	4613      	mov	r3, r2
 800c9de:	009b      	lsls	r3, r3, #2
 800c9e0:	4413      	add	r3, r2
 800c9e2:	00db      	lsls	r3, r3, #3
 800c9e4:	440b      	add	r3, r1
 800c9e6:	3312      	adds	r3, #18
 800c9e8:	781b      	ldrb	r3, [r3, #0]
 800c9ea:	e00b      	b.n	800ca04 <USBD_LL_IsStallEP+0x4c>
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800c9ec:	78fb      	ldrb	r3, [r7, #3]
 800c9ee:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800c9f2:	68f9      	ldr	r1, [r7, #12]
 800c9f4:	4613      	mov	r3, r2
 800c9f6:	009b      	lsls	r3, r3, #2
 800c9f8:	4413      	add	r3, r2
 800c9fa:	00db      	lsls	r3, r3, #3
 800c9fc:	440b      	add	r3, r1
 800c9fe:	f503 73a9 	add.w	r3, r3, #338	@ 0x152
 800ca02:	781b      	ldrb	r3, [r3, #0]
  }
}
 800ca04:	4618      	mov	r0, r3
 800ca06:	3714      	adds	r7, #20
 800ca08:	46bd      	mov	sp, r7
 800ca0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca0e:	4770      	bx	lr

0800ca10 <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  dev_addr: Device address
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
 800ca10:	b580      	push	{r7, lr}
 800ca12:	b084      	sub	sp, #16
 800ca14:	af00      	add	r7, sp, #0
 800ca16:	6078      	str	r0, [r7, #4]
 800ca18:	460b      	mov	r3, r1
 800ca1a:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800ca1c:	2300      	movs	r3, #0
 800ca1e:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800ca20:	2300      	movs	r3, #0
 800ca22:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800ca2a:	78fa      	ldrb	r2, [r7, #3]
 800ca2c:	4611      	mov	r1, r2
 800ca2e:	4618      	mov	r0, r3
 800ca30:	f7f7 f994 	bl	8003d5c <HAL_PCD_SetAddress>
 800ca34:	4603      	mov	r3, r0
 800ca36:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800ca38:	7bfb      	ldrb	r3, [r7, #15]
 800ca3a:	4618      	mov	r0, r3
 800ca3c:	f000 f872 	bl	800cb24 <USBD_Get_USB_Status>
 800ca40:	4603      	mov	r3, r0
 800ca42:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800ca44:	7bbb      	ldrb	r3, [r7, #14]
}
 800ca46:	4618      	mov	r0, r3
 800ca48:	3710      	adds	r7, #16
 800ca4a:	46bd      	mov	sp, r7
 800ca4c:	bd80      	pop	{r7, pc}

0800ca4e <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 800ca4e:	b580      	push	{r7, lr}
 800ca50:	b086      	sub	sp, #24
 800ca52:	af00      	add	r7, sp, #0
 800ca54:	60f8      	str	r0, [r7, #12]
 800ca56:	607a      	str	r2, [r7, #4]
 800ca58:	461a      	mov	r2, r3
 800ca5a:	460b      	mov	r3, r1
 800ca5c:	72fb      	strb	r3, [r7, #11]
 800ca5e:	4613      	mov	r3, r2
 800ca60:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800ca62:	2300      	movs	r3, #0
 800ca64:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800ca66:	2300      	movs	r3, #0
 800ca68:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800ca6a:	68fb      	ldr	r3, [r7, #12]
 800ca6c:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800ca70:	893b      	ldrh	r3, [r7, #8]
 800ca72:	7af9      	ldrb	r1, [r7, #11]
 800ca74:	687a      	ldr	r2, [r7, #4]
 800ca76:	f7f7 fa6b 	bl	8003f50 <HAL_PCD_EP_Transmit>
 800ca7a:	4603      	mov	r3, r0
 800ca7c:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800ca7e:	7dfb      	ldrb	r3, [r7, #23]
 800ca80:	4618      	mov	r0, r3
 800ca82:	f000 f84f 	bl	800cb24 <USBD_Get_USB_Status>
 800ca86:	4603      	mov	r3, r0
 800ca88:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 800ca8a:	7dbb      	ldrb	r3, [r7, #22]
}
 800ca8c:	4618      	mov	r0, r3
 800ca8e:	3718      	adds	r7, #24
 800ca90:	46bd      	mov	sp, r7
 800ca92:	bd80      	pop	{r7, pc}

0800ca94 <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 800ca94:	b580      	push	{r7, lr}
 800ca96:	b086      	sub	sp, #24
 800ca98:	af00      	add	r7, sp, #0
 800ca9a:	60f8      	str	r0, [r7, #12]
 800ca9c:	607a      	str	r2, [r7, #4]
 800ca9e:	461a      	mov	r2, r3
 800caa0:	460b      	mov	r3, r1
 800caa2:	72fb      	strb	r3, [r7, #11]
 800caa4:	4613      	mov	r3, r2
 800caa6:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800caa8:	2300      	movs	r3, #0
 800caaa:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800caac:	2300      	movs	r3, #0
 800caae:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800cab0:	68fb      	ldr	r3, [r7, #12]
 800cab2:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800cab6:	893b      	ldrh	r3, [r7, #8]
 800cab8:	7af9      	ldrb	r1, [r7, #11]
 800caba:	687a      	ldr	r2, [r7, #4]
 800cabc:	f7f7 fa17 	bl	8003eee <HAL_PCD_EP_Receive>
 800cac0:	4603      	mov	r3, r0
 800cac2:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800cac4:	7dfb      	ldrb	r3, [r7, #23]
 800cac6:	4618      	mov	r0, r3
 800cac8:	f000 f82c 	bl	800cb24 <USBD_Get_USB_Status>
 800cacc:	4603      	mov	r3, r0
 800cace:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 800cad0:	7dbb      	ldrb	r3, [r7, #22]
}
 800cad2:	4618      	mov	r0, r3
 800cad4:	3718      	adds	r7, #24
 800cad6:	46bd      	mov	sp, r7
 800cad8:	bd80      	pop	{r7, pc}
	...

0800cadc <USBD_static_malloc>:
  * @brief  Static single allocation.
  * @param  size: Size of allocated memory
  * @retval None
  */
void *USBD_static_malloc(uint32_t size)
{
 800cadc:	b480      	push	{r7}
 800cade:	b083      	sub	sp, #12
 800cae0:	af00      	add	r7, sp, #0
 800cae2:	6078      	str	r0, [r7, #4]
  static uint32_t mem[(sizeof(USBD_CUSTOM_HID_HandleTypeDef)/4+1)];/* On 32-bit boundary */
  return mem;
 800cae4:	4b03      	ldr	r3, [pc, #12]	@ (800caf4 <USBD_static_malloc+0x18>)
}
 800cae6:	4618      	mov	r0, r3
 800cae8:	370c      	adds	r7, #12
 800caea:	46bd      	mov	sp, r7
 800caec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caf0:	4770      	bx	lr
 800caf2:	bf00      	nop
 800caf4:	20000f64 	.word	0x20000f64

0800caf8 <USBD_static_free>:
  * @brief  Dummy memory free
  * @param  p: Pointer to allocated  memory address
  * @retval None
  */
void USBD_static_free(void *p)
{
 800caf8:	b480      	push	{r7}
 800cafa:	b083      	sub	sp, #12
 800cafc:	af00      	add	r7, sp, #0
 800cafe:	6078      	str	r0, [r7, #4]

}
 800cb00:	bf00      	nop
 800cb02:	370c      	adds	r7, #12
 800cb04:	46bd      	mov	sp, r7
 800cb06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb0a:	4770      	bx	lr

0800cb0c <HAL_PCDEx_SetConnectionState>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
void PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#else
void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800cb0c:	b480      	push	{r7}
 800cb0e:	b083      	sub	sp, #12
 800cb10:	af00      	add	r7, sp, #0
 800cb12:	6078      	str	r0, [r7, #4]
 800cb14:	460b      	mov	r3, r1
 800cb16:	70fb      	strb	r3, [r7, #3]
  {
    /* Configure High connection state. */

  }
  /* USER CODE END 6 */
}
 800cb18:	bf00      	nop
 800cb1a:	370c      	adds	r7, #12
 800cb1c:	46bd      	mov	sp, r7
 800cb1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb22:	4770      	bx	lr

0800cb24 <USBD_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 800cb24:	b480      	push	{r7}
 800cb26:	b085      	sub	sp, #20
 800cb28:	af00      	add	r7, sp, #0
 800cb2a:	4603      	mov	r3, r0
 800cb2c:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800cb2e:	2300      	movs	r3, #0
 800cb30:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 800cb32:	79fb      	ldrb	r3, [r7, #7]
 800cb34:	2b03      	cmp	r3, #3
 800cb36:	d817      	bhi.n	800cb68 <USBD_Get_USB_Status+0x44>
 800cb38:	a201      	add	r2, pc, #4	@ (adr r2, 800cb40 <USBD_Get_USB_Status+0x1c>)
 800cb3a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cb3e:	bf00      	nop
 800cb40:	0800cb51 	.word	0x0800cb51
 800cb44:	0800cb57 	.word	0x0800cb57
 800cb48:	0800cb5d 	.word	0x0800cb5d
 800cb4c:	0800cb63 	.word	0x0800cb63
  {
    case HAL_OK :
      usb_status = USBD_OK;
 800cb50:	2300      	movs	r3, #0
 800cb52:	73fb      	strb	r3, [r7, #15]
    break;
 800cb54:	e00b      	b.n	800cb6e <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 800cb56:	2302      	movs	r3, #2
 800cb58:	73fb      	strb	r3, [r7, #15]
    break;
 800cb5a:	e008      	b.n	800cb6e <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
 800cb5c:	2301      	movs	r3, #1
 800cb5e:	73fb      	strb	r3, [r7, #15]
    break;
 800cb60:	e005      	b.n	800cb6e <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
 800cb62:	2302      	movs	r3, #2
 800cb64:	73fb      	strb	r3, [r7, #15]
    break;
 800cb66:	e002      	b.n	800cb6e <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
 800cb68:	2302      	movs	r3, #2
 800cb6a:	73fb      	strb	r3, [r7, #15]
    break;
 800cb6c:	bf00      	nop
  }
  return usb_status;
 800cb6e:	7bfb      	ldrb	r3, [r7, #15]
}
 800cb70:	4618      	mov	r0, r3
 800cb72:	3714      	adds	r7, #20
 800cb74:	46bd      	mov	sp, r7
 800cb76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb7a:	4770      	bx	lr

0800cb7c <__cvt>:
 800cb7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cb80:	ec57 6b10 	vmov	r6, r7, d0
 800cb84:	2f00      	cmp	r7, #0
 800cb86:	460c      	mov	r4, r1
 800cb88:	4619      	mov	r1, r3
 800cb8a:	463b      	mov	r3, r7
 800cb8c:	bfbb      	ittet	lt
 800cb8e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800cb92:	461f      	movlt	r7, r3
 800cb94:	2300      	movge	r3, #0
 800cb96:	232d      	movlt	r3, #45	@ 0x2d
 800cb98:	700b      	strb	r3, [r1, #0]
 800cb9a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cb9c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800cba0:	4691      	mov	r9, r2
 800cba2:	f023 0820 	bic.w	r8, r3, #32
 800cba6:	bfbc      	itt	lt
 800cba8:	4632      	movlt	r2, r6
 800cbaa:	4616      	movlt	r6, r2
 800cbac:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800cbb0:	d005      	beq.n	800cbbe <__cvt+0x42>
 800cbb2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800cbb6:	d100      	bne.n	800cbba <__cvt+0x3e>
 800cbb8:	3401      	adds	r4, #1
 800cbba:	2102      	movs	r1, #2
 800cbbc:	e000      	b.n	800cbc0 <__cvt+0x44>
 800cbbe:	2103      	movs	r1, #3
 800cbc0:	ab03      	add	r3, sp, #12
 800cbc2:	9301      	str	r3, [sp, #4]
 800cbc4:	ab02      	add	r3, sp, #8
 800cbc6:	9300      	str	r3, [sp, #0]
 800cbc8:	ec47 6b10 	vmov	d0, r6, r7
 800cbcc:	4653      	mov	r3, sl
 800cbce:	4622      	mov	r2, r4
 800cbd0:	f000 ff3a 	bl	800da48 <_dtoa_r>
 800cbd4:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800cbd8:	4605      	mov	r5, r0
 800cbda:	d119      	bne.n	800cc10 <__cvt+0x94>
 800cbdc:	f019 0f01 	tst.w	r9, #1
 800cbe0:	d00e      	beq.n	800cc00 <__cvt+0x84>
 800cbe2:	eb00 0904 	add.w	r9, r0, r4
 800cbe6:	2200      	movs	r2, #0
 800cbe8:	2300      	movs	r3, #0
 800cbea:	4630      	mov	r0, r6
 800cbec:	4639      	mov	r1, r7
 800cbee:	f7f3 ff6b 	bl	8000ac8 <__aeabi_dcmpeq>
 800cbf2:	b108      	cbz	r0, 800cbf8 <__cvt+0x7c>
 800cbf4:	f8cd 900c 	str.w	r9, [sp, #12]
 800cbf8:	2230      	movs	r2, #48	@ 0x30
 800cbfa:	9b03      	ldr	r3, [sp, #12]
 800cbfc:	454b      	cmp	r3, r9
 800cbfe:	d31e      	bcc.n	800cc3e <__cvt+0xc2>
 800cc00:	9b03      	ldr	r3, [sp, #12]
 800cc02:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800cc04:	1b5b      	subs	r3, r3, r5
 800cc06:	4628      	mov	r0, r5
 800cc08:	6013      	str	r3, [r2, #0]
 800cc0a:	b004      	add	sp, #16
 800cc0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cc10:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800cc14:	eb00 0904 	add.w	r9, r0, r4
 800cc18:	d1e5      	bne.n	800cbe6 <__cvt+0x6a>
 800cc1a:	7803      	ldrb	r3, [r0, #0]
 800cc1c:	2b30      	cmp	r3, #48	@ 0x30
 800cc1e:	d10a      	bne.n	800cc36 <__cvt+0xba>
 800cc20:	2200      	movs	r2, #0
 800cc22:	2300      	movs	r3, #0
 800cc24:	4630      	mov	r0, r6
 800cc26:	4639      	mov	r1, r7
 800cc28:	f7f3 ff4e 	bl	8000ac8 <__aeabi_dcmpeq>
 800cc2c:	b918      	cbnz	r0, 800cc36 <__cvt+0xba>
 800cc2e:	f1c4 0401 	rsb	r4, r4, #1
 800cc32:	f8ca 4000 	str.w	r4, [sl]
 800cc36:	f8da 3000 	ldr.w	r3, [sl]
 800cc3a:	4499      	add	r9, r3
 800cc3c:	e7d3      	b.n	800cbe6 <__cvt+0x6a>
 800cc3e:	1c59      	adds	r1, r3, #1
 800cc40:	9103      	str	r1, [sp, #12]
 800cc42:	701a      	strb	r2, [r3, #0]
 800cc44:	e7d9      	b.n	800cbfa <__cvt+0x7e>

0800cc46 <__exponent>:
 800cc46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cc48:	2900      	cmp	r1, #0
 800cc4a:	bfba      	itte	lt
 800cc4c:	4249      	neglt	r1, r1
 800cc4e:	232d      	movlt	r3, #45	@ 0x2d
 800cc50:	232b      	movge	r3, #43	@ 0x2b
 800cc52:	2909      	cmp	r1, #9
 800cc54:	7002      	strb	r2, [r0, #0]
 800cc56:	7043      	strb	r3, [r0, #1]
 800cc58:	dd29      	ble.n	800ccae <__exponent+0x68>
 800cc5a:	f10d 0307 	add.w	r3, sp, #7
 800cc5e:	461d      	mov	r5, r3
 800cc60:	270a      	movs	r7, #10
 800cc62:	461a      	mov	r2, r3
 800cc64:	fbb1 f6f7 	udiv	r6, r1, r7
 800cc68:	fb07 1416 	mls	r4, r7, r6, r1
 800cc6c:	3430      	adds	r4, #48	@ 0x30
 800cc6e:	f802 4c01 	strb.w	r4, [r2, #-1]
 800cc72:	460c      	mov	r4, r1
 800cc74:	2c63      	cmp	r4, #99	@ 0x63
 800cc76:	f103 33ff 	add.w	r3, r3, #4294967295
 800cc7a:	4631      	mov	r1, r6
 800cc7c:	dcf1      	bgt.n	800cc62 <__exponent+0x1c>
 800cc7e:	3130      	adds	r1, #48	@ 0x30
 800cc80:	1e94      	subs	r4, r2, #2
 800cc82:	f803 1c01 	strb.w	r1, [r3, #-1]
 800cc86:	1c41      	adds	r1, r0, #1
 800cc88:	4623      	mov	r3, r4
 800cc8a:	42ab      	cmp	r3, r5
 800cc8c:	d30a      	bcc.n	800cca4 <__exponent+0x5e>
 800cc8e:	f10d 0309 	add.w	r3, sp, #9
 800cc92:	1a9b      	subs	r3, r3, r2
 800cc94:	42ac      	cmp	r4, r5
 800cc96:	bf88      	it	hi
 800cc98:	2300      	movhi	r3, #0
 800cc9a:	3302      	adds	r3, #2
 800cc9c:	4403      	add	r3, r0
 800cc9e:	1a18      	subs	r0, r3, r0
 800cca0:	b003      	add	sp, #12
 800cca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cca4:	f813 6b01 	ldrb.w	r6, [r3], #1
 800cca8:	f801 6f01 	strb.w	r6, [r1, #1]!
 800ccac:	e7ed      	b.n	800cc8a <__exponent+0x44>
 800ccae:	2330      	movs	r3, #48	@ 0x30
 800ccb0:	3130      	adds	r1, #48	@ 0x30
 800ccb2:	7083      	strb	r3, [r0, #2]
 800ccb4:	70c1      	strb	r1, [r0, #3]
 800ccb6:	1d03      	adds	r3, r0, #4
 800ccb8:	e7f1      	b.n	800cc9e <__exponent+0x58>
	...

0800ccbc <_printf_float>:
 800ccbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccc0:	b08d      	sub	sp, #52	@ 0x34
 800ccc2:	460c      	mov	r4, r1
 800ccc4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800ccc8:	4616      	mov	r6, r2
 800ccca:	461f      	mov	r7, r3
 800cccc:	4605      	mov	r5, r0
 800ccce:	f000 fdad 	bl	800d82c <_localeconv_r>
 800ccd2:	6803      	ldr	r3, [r0, #0]
 800ccd4:	9304      	str	r3, [sp, #16]
 800ccd6:	4618      	mov	r0, r3
 800ccd8:	f7f3 faca 	bl	8000270 <strlen>
 800ccdc:	2300      	movs	r3, #0
 800ccde:	930a      	str	r3, [sp, #40]	@ 0x28
 800cce0:	f8d8 3000 	ldr.w	r3, [r8]
 800cce4:	9005      	str	r0, [sp, #20]
 800cce6:	3307      	adds	r3, #7
 800cce8:	f023 0307 	bic.w	r3, r3, #7
 800ccec:	f103 0208 	add.w	r2, r3, #8
 800ccf0:	f894 a018 	ldrb.w	sl, [r4, #24]
 800ccf4:	f8d4 b000 	ldr.w	fp, [r4]
 800ccf8:	f8c8 2000 	str.w	r2, [r8]
 800ccfc:	e9d3 8900 	ldrd	r8, r9, [r3]
 800cd00:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800cd04:	9307      	str	r3, [sp, #28]
 800cd06:	f8cd 8018 	str.w	r8, [sp, #24]
 800cd0a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800cd0e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800cd12:	4b9c      	ldr	r3, [pc, #624]	@ (800cf84 <_printf_float+0x2c8>)
 800cd14:	f04f 32ff 	mov.w	r2, #4294967295
 800cd18:	f7f3 ff08 	bl	8000b2c <__aeabi_dcmpun>
 800cd1c:	bb70      	cbnz	r0, 800cd7c <_printf_float+0xc0>
 800cd1e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800cd22:	4b98      	ldr	r3, [pc, #608]	@ (800cf84 <_printf_float+0x2c8>)
 800cd24:	f04f 32ff 	mov.w	r2, #4294967295
 800cd28:	f7f3 fee2 	bl	8000af0 <__aeabi_dcmple>
 800cd2c:	bb30      	cbnz	r0, 800cd7c <_printf_float+0xc0>
 800cd2e:	2200      	movs	r2, #0
 800cd30:	2300      	movs	r3, #0
 800cd32:	4640      	mov	r0, r8
 800cd34:	4649      	mov	r1, r9
 800cd36:	f7f3 fed1 	bl	8000adc <__aeabi_dcmplt>
 800cd3a:	b110      	cbz	r0, 800cd42 <_printf_float+0x86>
 800cd3c:	232d      	movs	r3, #45	@ 0x2d
 800cd3e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800cd42:	4a91      	ldr	r2, [pc, #580]	@ (800cf88 <_printf_float+0x2cc>)
 800cd44:	4b91      	ldr	r3, [pc, #580]	@ (800cf8c <_printf_float+0x2d0>)
 800cd46:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800cd4a:	bf94      	ite	ls
 800cd4c:	4690      	movls	r8, r2
 800cd4e:	4698      	movhi	r8, r3
 800cd50:	2303      	movs	r3, #3
 800cd52:	6123      	str	r3, [r4, #16]
 800cd54:	f02b 0304 	bic.w	r3, fp, #4
 800cd58:	6023      	str	r3, [r4, #0]
 800cd5a:	f04f 0900 	mov.w	r9, #0
 800cd5e:	9700      	str	r7, [sp, #0]
 800cd60:	4633      	mov	r3, r6
 800cd62:	aa0b      	add	r2, sp, #44	@ 0x2c
 800cd64:	4621      	mov	r1, r4
 800cd66:	4628      	mov	r0, r5
 800cd68:	f000 f9d2 	bl	800d110 <_printf_common>
 800cd6c:	3001      	adds	r0, #1
 800cd6e:	f040 808d 	bne.w	800ce8c <_printf_float+0x1d0>
 800cd72:	f04f 30ff 	mov.w	r0, #4294967295
 800cd76:	b00d      	add	sp, #52	@ 0x34
 800cd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd7c:	4642      	mov	r2, r8
 800cd7e:	464b      	mov	r3, r9
 800cd80:	4640      	mov	r0, r8
 800cd82:	4649      	mov	r1, r9
 800cd84:	f7f3 fed2 	bl	8000b2c <__aeabi_dcmpun>
 800cd88:	b140      	cbz	r0, 800cd9c <_printf_float+0xe0>
 800cd8a:	464b      	mov	r3, r9
 800cd8c:	2b00      	cmp	r3, #0
 800cd8e:	bfbc      	itt	lt
 800cd90:	232d      	movlt	r3, #45	@ 0x2d
 800cd92:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800cd96:	4a7e      	ldr	r2, [pc, #504]	@ (800cf90 <_printf_float+0x2d4>)
 800cd98:	4b7e      	ldr	r3, [pc, #504]	@ (800cf94 <_printf_float+0x2d8>)
 800cd9a:	e7d4      	b.n	800cd46 <_printf_float+0x8a>
 800cd9c:	6863      	ldr	r3, [r4, #4]
 800cd9e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800cda2:	9206      	str	r2, [sp, #24]
 800cda4:	1c5a      	adds	r2, r3, #1
 800cda6:	d13b      	bne.n	800ce20 <_printf_float+0x164>
 800cda8:	2306      	movs	r3, #6
 800cdaa:	6063      	str	r3, [r4, #4]
 800cdac:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800cdb0:	2300      	movs	r3, #0
 800cdb2:	6022      	str	r2, [r4, #0]
 800cdb4:	9303      	str	r3, [sp, #12]
 800cdb6:	ab0a      	add	r3, sp, #40	@ 0x28
 800cdb8:	e9cd a301 	strd	sl, r3, [sp, #4]
 800cdbc:	ab09      	add	r3, sp, #36	@ 0x24
 800cdbe:	9300      	str	r3, [sp, #0]
 800cdc0:	6861      	ldr	r1, [r4, #4]
 800cdc2:	ec49 8b10 	vmov	d0, r8, r9
 800cdc6:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800cdca:	4628      	mov	r0, r5
 800cdcc:	f7ff fed6 	bl	800cb7c <__cvt>
 800cdd0:	9b06      	ldr	r3, [sp, #24]
 800cdd2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800cdd4:	2b47      	cmp	r3, #71	@ 0x47
 800cdd6:	4680      	mov	r8, r0
 800cdd8:	d129      	bne.n	800ce2e <_printf_float+0x172>
 800cdda:	1cc8      	adds	r0, r1, #3
 800cddc:	db02      	blt.n	800cde4 <_printf_float+0x128>
 800cdde:	6863      	ldr	r3, [r4, #4]
 800cde0:	4299      	cmp	r1, r3
 800cde2:	dd41      	ble.n	800ce68 <_printf_float+0x1ac>
 800cde4:	f1aa 0a02 	sub.w	sl, sl, #2
 800cde8:	fa5f fa8a 	uxtb.w	sl, sl
 800cdec:	3901      	subs	r1, #1
 800cdee:	4652      	mov	r2, sl
 800cdf0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800cdf4:	9109      	str	r1, [sp, #36]	@ 0x24
 800cdf6:	f7ff ff26 	bl	800cc46 <__exponent>
 800cdfa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800cdfc:	1813      	adds	r3, r2, r0
 800cdfe:	2a01      	cmp	r2, #1
 800ce00:	4681      	mov	r9, r0
 800ce02:	6123      	str	r3, [r4, #16]
 800ce04:	dc02      	bgt.n	800ce0c <_printf_float+0x150>
 800ce06:	6822      	ldr	r2, [r4, #0]
 800ce08:	07d2      	lsls	r2, r2, #31
 800ce0a:	d501      	bpl.n	800ce10 <_printf_float+0x154>
 800ce0c:	3301      	adds	r3, #1
 800ce0e:	6123      	str	r3, [r4, #16]
 800ce10:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800ce14:	2b00      	cmp	r3, #0
 800ce16:	d0a2      	beq.n	800cd5e <_printf_float+0xa2>
 800ce18:	232d      	movs	r3, #45	@ 0x2d
 800ce1a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800ce1e:	e79e      	b.n	800cd5e <_printf_float+0xa2>
 800ce20:	9a06      	ldr	r2, [sp, #24]
 800ce22:	2a47      	cmp	r2, #71	@ 0x47
 800ce24:	d1c2      	bne.n	800cdac <_printf_float+0xf0>
 800ce26:	2b00      	cmp	r3, #0
 800ce28:	d1c0      	bne.n	800cdac <_printf_float+0xf0>
 800ce2a:	2301      	movs	r3, #1
 800ce2c:	e7bd      	b.n	800cdaa <_printf_float+0xee>
 800ce2e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800ce32:	d9db      	bls.n	800cdec <_printf_float+0x130>
 800ce34:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800ce38:	d118      	bne.n	800ce6c <_printf_float+0x1b0>
 800ce3a:	2900      	cmp	r1, #0
 800ce3c:	6863      	ldr	r3, [r4, #4]
 800ce3e:	dd0b      	ble.n	800ce58 <_printf_float+0x19c>
 800ce40:	6121      	str	r1, [r4, #16]
 800ce42:	b913      	cbnz	r3, 800ce4a <_printf_float+0x18e>
 800ce44:	6822      	ldr	r2, [r4, #0]
 800ce46:	07d0      	lsls	r0, r2, #31
 800ce48:	d502      	bpl.n	800ce50 <_printf_float+0x194>
 800ce4a:	3301      	adds	r3, #1
 800ce4c:	440b      	add	r3, r1
 800ce4e:	6123      	str	r3, [r4, #16]
 800ce50:	65a1      	str	r1, [r4, #88]	@ 0x58
 800ce52:	f04f 0900 	mov.w	r9, #0
 800ce56:	e7db      	b.n	800ce10 <_printf_float+0x154>
 800ce58:	b913      	cbnz	r3, 800ce60 <_printf_float+0x1a4>
 800ce5a:	6822      	ldr	r2, [r4, #0]
 800ce5c:	07d2      	lsls	r2, r2, #31
 800ce5e:	d501      	bpl.n	800ce64 <_printf_float+0x1a8>
 800ce60:	3302      	adds	r3, #2
 800ce62:	e7f4      	b.n	800ce4e <_printf_float+0x192>
 800ce64:	2301      	movs	r3, #1
 800ce66:	e7f2      	b.n	800ce4e <_printf_float+0x192>
 800ce68:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800ce6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ce6e:	4299      	cmp	r1, r3
 800ce70:	db05      	blt.n	800ce7e <_printf_float+0x1c2>
 800ce72:	6823      	ldr	r3, [r4, #0]
 800ce74:	6121      	str	r1, [r4, #16]
 800ce76:	07d8      	lsls	r0, r3, #31
 800ce78:	d5ea      	bpl.n	800ce50 <_printf_float+0x194>
 800ce7a:	1c4b      	adds	r3, r1, #1
 800ce7c:	e7e7      	b.n	800ce4e <_printf_float+0x192>
 800ce7e:	2900      	cmp	r1, #0
 800ce80:	bfd4      	ite	le
 800ce82:	f1c1 0202 	rsble	r2, r1, #2
 800ce86:	2201      	movgt	r2, #1
 800ce88:	4413      	add	r3, r2
 800ce8a:	e7e0      	b.n	800ce4e <_printf_float+0x192>
 800ce8c:	6823      	ldr	r3, [r4, #0]
 800ce8e:	055a      	lsls	r2, r3, #21
 800ce90:	d407      	bmi.n	800cea2 <_printf_float+0x1e6>
 800ce92:	6923      	ldr	r3, [r4, #16]
 800ce94:	4642      	mov	r2, r8
 800ce96:	4631      	mov	r1, r6
 800ce98:	4628      	mov	r0, r5
 800ce9a:	47b8      	blx	r7
 800ce9c:	3001      	adds	r0, #1
 800ce9e:	d12b      	bne.n	800cef8 <_printf_float+0x23c>
 800cea0:	e767      	b.n	800cd72 <_printf_float+0xb6>
 800cea2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800cea6:	f240 80dd 	bls.w	800d064 <_printf_float+0x3a8>
 800ceaa:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800ceae:	2200      	movs	r2, #0
 800ceb0:	2300      	movs	r3, #0
 800ceb2:	f7f3 fe09 	bl	8000ac8 <__aeabi_dcmpeq>
 800ceb6:	2800      	cmp	r0, #0
 800ceb8:	d033      	beq.n	800cf22 <_printf_float+0x266>
 800ceba:	4a37      	ldr	r2, [pc, #220]	@ (800cf98 <_printf_float+0x2dc>)
 800cebc:	2301      	movs	r3, #1
 800cebe:	4631      	mov	r1, r6
 800cec0:	4628      	mov	r0, r5
 800cec2:	47b8      	blx	r7
 800cec4:	3001      	adds	r0, #1
 800cec6:	f43f af54 	beq.w	800cd72 <_printf_float+0xb6>
 800ceca:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800cece:	4543      	cmp	r3, r8
 800ced0:	db02      	blt.n	800ced8 <_printf_float+0x21c>
 800ced2:	6823      	ldr	r3, [r4, #0]
 800ced4:	07d8      	lsls	r0, r3, #31
 800ced6:	d50f      	bpl.n	800cef8 <_printf_float+0x23c>
 800ced8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cedc:	4631      	mov	r1, r6
 800cede:	4628      	mov	r0, r5
 800cee0:	47b8      	blx	r7
 800cee2:	3001      	adds	r0, #1
 800cee4:	f43f af45 	beq.w	800cd72 <_printf_float+0xb6>
 800cee8:	f04f 0900 	mov.w	r9, #0
 800ceec:	f108 38ff 	add.w	r8, r8, #4294967295
 800cef0:	f104 0a1a 	add.w	sl, r4, #26
 800cef4:	45c8      	cmp	r8, r9
 800cef6:	dc09      	bgt.n	800cf0c <_printf_float+0x250>
 800cef8:	6823      	ldr	r3, [r4, #0]
 800cefa:	079b      	lsls	r3, r3, #30
 800cefc:	f100 8103 	bmi.w	800d106 <_printf_float+0x44a>
 800cf00:	68e0      	ldr	r0, [r4, #12]
 800cf02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800cf04:	4298      	cmp	r0, r3
 800cf06:	bfb8      	it	lt
 800cf08:	4618      	movlt	r0, r3
 800cf0a:	e734      	b.n	800cd76 <_printf_float+0xba>
 800cf0c:	2301      	movs	r3, #1
 800cf0e:	4652      	mov	r2, sl
 800cf10:	4631      	mov	r1, r6
 800cf12:	4628      	mov	r0, r5
 800cf14:	47b8      	blx	r7
 800cf16:	3001      	adds	r0, #1
 800cf18:	f43f af2b 	beq.w	800cd72 <_printf_float+0xb6>
 800cf1c:	f109 0901 	add.w	r9, r9, #1
 800cf20:	e7e8      	b.n	800cef4 <_printf_float+0x238>
 800cf22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	dc39      	bgt.n	800cf9c <_printf_float+0x2e0>
 800cf28:	4a1b      	ldr	r2, [pc, #108]	@ (800cf98 <_printf_float+0x2dc>)
 800cf2a:	2301      	movs	r3, #1
 800cf2c:	4631      	mov	r1, r6
 800cf2e:	4628      	mov	r0, r5
 800cf30:	47b8      	blx	r7
 800cf32:	3001      	adds	r0, #1
 800cf34:	f43f af1d 	beq.w	800cd72 <_printf_float+0xb6>
 800cf38:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800cf3c:	ea59 0303 	orrs.w	r3, r9, r3
 800cf40:	d102      	bne.n	800cf48 <_printf_float+0x28c>
 800cf42:	6823      	ldr	r3, [r4, #0]
 800cf44:	07d9      	lsls	r1, r3, #31
 800cf46:	d5d7      	bpl.n	800cef8 <_printf_float+0x23c>
 800cf48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cf4c:	4631      	mov	r1, r6
 800cf4e:	4628      	mov	r0, r5
 800cf50:	47b8      	blx	r7
 800cf52:	3001      	adds	r0, #1
 800cf54:	f43f af0d 	beq.w	800cd72 <_printf_float+0xb6>
 800cf58:	f04f 0a00 	mov.w	sl, #0
 800cf5c:	f104 0b1a 	add.w	fp, r4, #26
 800cf60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cf62:	425b      	negs	r3, r3
 800cf64:	4553      	cmp	r3, sl
 800cf66:	dc01      	bgt.n	800cf6c <_printf_float+0x2b0>
 800cf68:	464b      	mov	r3, r9
 800cf6a:	e793      	b.n	800ce94 <_printf_float+0x1d8>
 800cf6c:	2301      	movs	r3, #1
 800cf6e:	465a      	mov	r2, fp
 800cf70:	4631      	mov	r1, r6
 800cf72:	4628      	mov	r0, r5
 800cf74:	47b8      	blx	r7
 800cf76:	3001      	adds	r0, #1
 800cf78:	f43f aefb 	beq.w	800cd72 <_printf_float+0xb6>
 800cf7c:	f10a 0a01 	add.w	sl, sl, #1
 800cf80:	e7ee      	b.n	800cf60 <_printf_float+0x2a4>
 800cf82:	bf00      	nop
 800cf84:	7fefffff 	.word	0x7fefffff
 800cf88:	0800f5f0 	.word	0x0800f5f0
 800cf8c:	0800f5f4 	.word	0x0800f5f4
 800cf90:	0800f5f8 	.word	0x0800f5f8
 800cf94:	0800f5fc 	.word	0x0800f5fc
 800cf98:	0800f600 	.word	0x0800f600
 800cf9c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800cf9e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800cfa2:	4553      	cmp	r3, sl
 800cfa4:	bfa8      	it	ge
 800cfa6:	4653      	movge	r3, sl
 800cfa8:	2b00      	cmp	r3, #0
 800cfaa:	4699      	mov	r9, r3
 800cfac:	dc36      	bgt.n	800d01c <_printf_float+0x360>
 800cfae:	f04f 0b00 	mov.w	fp, #0
 800cfb2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800cfb6:	f104 021a 	add.w	r2, r4, #26
 800cfba:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800cfbc:	9306      	str	r3, [sp, #24]
 800cfbe:	eba3 0309 	sub.w	r3, r3, r9
 800cfc2:	455b      	cmp	r3, fp
 800cfc4:	dc31      	bgt.n	800d02a <_printf_float+0x36e>
 800cfc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cfc8:	459a      	cmp	sl, r3
 800cfca:	dc3a      	bgt.n	800d042 <_printf_float+0x386>
 800cfcc:	6823      	ldr	r3, [r4, #0]
 800cfce:	07da      	lsls	r2, r3, #31
 800cfd0:	d437      	bmi.n	800d042 <_printf_float+0x386>
 800cfd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cfd4:	ebaa 0903 	sub.w	r9, sl, r3
 800cfd8:	9b06      	ldr	r3, [sp, #24]
 800cfda:	ebaa 0303 	sub.w	r3, sl, r3
 800cfde:	4599      	cmp	r9, r3
 800cfe0:	bfa8      	it	ge
 800cfe2:	4699      	movge	r9, r3
 800cfe4:	f1b9 0f00 	cmp.w	r9, #0
 800cfe8:	dc33      	bgt.n	800d052 <_printf_float+0x396>
 800cfea:	f04f 0800 	mov.w	r8, #0
 800cfee:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800cff2:	f104 0b1a 	add.w	fp, r4, #26
 800cff6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cff8:	ebaa 0303 	sub.w	r3, sl, r3
 800cffc:	eba3 0309 	sub.w	r3, r3, r9
 800d000:	4543      	cmp	r3, r8
 800d002:	f77f af79 	ble.w	800cef8 <_printf_float+0x23c>
 800d006:	2301      	movs	r3, #1
 800d008:	465a      	mov	r2, fp
 800d00a:	4631      	mov	r1, r6
 800d00c:	4628      	mov	r0, r5
 800d00e:	47b8      	blx	r7
 800d010:	3001      	adds	r0, #1
 800d012:	f43f aeae 	beq.w	800cd72 <_printf_float+0xb6>
 800d016:	f108 0801 	add.w	r8, r8, #1
 800d01a:	e7ec      	b.n	800cff6 <_printf_float+0x33a>
 800d01c:	4642      	mov	r2, r8
 800d01e:	4631      	mov	r1, r6
 800d020:	4628      	mov	r0, r5
 800d022:	47b8      	blx	r7
 800d024:	3001      	adds	r0, #1
 800d026:	d1c2      	bne.n	800cfae <_printf_float+0x2f2>
 800d028:	e6a3      	b.n	800cd72 <_printf_float+0xb6>
 800d02a:	2301      	movs	r3, #1
 800d02c:	4631      	mov	r1, r6
 800d02e:	4628      	mov	r0, r5
 800d030:	9206      	str	r2, [sp, #24]
 800d032:	47b8      	blx	r7
 800d034:	3001      	adds	r0, #1
 800d036:	f43f ae9c 	beq.w	800cd72 <_printf_float+0xb6>
 800d03a:	9a06      	ldr	r2, [sp, #24]
 800d03c:	f10b 0b01 	add.w	fp, fp, #1
 800d040:	e7bb      	b.n	800cfba <_printf_float+0x2fe>
 800d042:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d046:	4631      	mov	r1, r6
 800d048:	4628      	mov	r0, r5
 800d04a:	47b8      	blx	r7
 800d04c:	3001      	adds	r0, #1
 800d04e:	d1c0      	bne.n	800cfd2 <_printf_float+0x316>
 800d050:	e68f      	b.n	800cd72 <_printf_float+0xb6>
 800d052:	9a06      	ldr	r2, [sp, #24]
 800d054:	464b      	mov	r3, r9
 800d056:	4442      	add	r2, r8
 800d058:	4631      	mov	r1, r6
 800d05a:	4628      	mov	r0, r5
 800d05c:	47b8      	blx	r7
 800d05e:	3001      	adds	r0, #1
 800d060:	d1c3      	bne.n	800cfea <_printf_float+0x32e>
 800d062:	e686      	b.n	800cd72 <_printf_float+0xb6>
 800d064:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800d068:	f1ba 0f01 	cmp.w	sl, #1
 800d06c:	dc01      	bgt.n	800d072 <_printf_float+0x3b6>
 800d06e:	07db      	lsls	r3, r3, #31
 800d070:	d536      	bpl.n	800d0e0 <_printf_float+0x424>
 800d072:	2301      	movs	r3, #1
 800d074:	4642      	mov	r2, r8
 800d076:	4631      	mov	r1, r6
 800d078:	4628      	mov	r0, r5
 800d07a:	47b8      	blx	r7
 800d07c:	3001      	adds	r0, #1
 800d07e:	f43f ae78 	beq.w	800cd72 <_printf_float+0xb6>
 800d082:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d086:	4631      	mov	r1, r6
 800d088:	4628      	mov	r0, r5
 800d08a:	47b8      	blx	r7
 800d08c:	3001      	adds	r0, #1
 800d08e:	f43f ae70 	beq.w	800cd72 <_printf_float+0xb6>
 800d092:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800d096:	2200      	movs	r2, #0
 800d098:	2300      	movs	r3, #0
 800d09a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d09e:	f7f3 fd13 	bl	8000ac8 <__aeabi_dcmpeq>
 800d0a2:	b9c0      	cbnz	r0, 800d0d6 <_printf_float+0x41a>
 800d0a4:	4653      	mov	r3, sl
 800d0a6:	f108 0201 	add.w	r2, r8, #1
 800d0aa:	4631      	mov	r1, r6
 800d0ac:	4628      	mov	r0, r5
 800d0ae:	47b8      	blx	r7
 800d0b0:	3001      	adds	r0, #1
 800d0b2:	d10c      	bne.n	800d0ce <_printf_float+0x412>
 800d0b4:	e65d      	b.n	800cd72 <_printf_float+0xb6>
 800d0b6:	2301      	movs	r3, #1
 800d0b8:	465a      	mov	r2, fp
 800d0ba:	4631      	mov	r1, r6
 800d0bc:	4628      	mov	r0, r5
 800d0be:	47b8      	blx	r7
 800d0c0:	3001      	adds	r0, #1
 800d0c2:	f43f ae56 	beq.w	800cd72 <_printf_float+0xb6>
 800d0c6:	f108 0801 	add.w	r8, r8, #1
 800d0ca:	45d0      	cmp	r8, sl
 800d0cc:	dbf3      	blt.n	800d0b6 <_printf_float+0x3fa>
 800d0ce:	464b      	mov	r3, r9
 800d0d0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800d0d4:	e6df      	b.n	800ce96 <_printf_float+0x1da>
 800d0d6:	f04f 0800 	mov.w	r8, #0
 800d0da:	f104 0b1a 	add.w	fp, r4, #26
 800d0de:	e7f4      	b.n	800d0ca <_printf_float+0x40e>
 800d0e0:	2301      	movs	r3, #1
 800d0e2:	4642      	mov	r2, r8
 800d0e4:	e7e1      	b.n	800d0aa <_printf_float+0x3ee>
 800d0e6:	2301      	movs	r3, #1
 800d0e8:	464a      	mov	r2, r9
 800d0ea:	4631      	mov	r1, r6
 800d0ec:	4628      	mov	r0, r5
 800d0ee:	47b8      	blx	r7
 800d0f0:	3001      	adds	r0, #1
 800d0f2:	f43f ae3e 	beq.w	800cd72 <_printf_float+0xb6>
 800d0f6:	f108 0801 	add.w	r8, r8, #1
 800d0fa:	68e3      	ldr	r3, [r4, #12]
 800d0fc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d0fe:	1a5b      	subs	r3, r3, r1
 800d100:	4543      	cmp	r3, r8
 800d102:	dcf0      	bgt.n	800d0e6 <_printf_float+0x42a>
 800d104:	e6fc      	b.n	800cf00 <_printf_float+0x244>
 800d106:	f04f 0800 	mov.w	r8, #0
 800d10a:	f104 0919 	add.w	r9, r4, #25
 800d10e:	e7f4      	b.n	800d0fa <_printf_float+0x43e>

0800d110 <_printf_common>:
 800d110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d114:	4616      	mov	r6, r2
 800d116:	4698      	mov	r8, r3
 800d118:	688a      	ldr	r2, [r1, #8]
 800d11a:	690b      	ldr	r3, [r1, #16]
 800d11c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d120:	4293      	cmp	r3, r2
 800d122:	bfb8      	it	lt
 800d124:	4613      	movlt	r3, r2
 800d126:	6033      	str	r3, [r6, #0]
 800d128:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800d12c:	4607      	mov	r7, r0
 800d12e:	460c      	mov	r4, r1
 800d130:	b10a      	cbz	r2, 800d136 <_printf_common+0x26>
 800d132:	3301      	adds	r3, #1
 800d134:	6033      	str	r3, [r6, #0]
 800d136:	6823      	ldr	r3, [r4, #0]
 800d138:	0699      	lsls	r1, r3, #26
 800d13a:	bf42      	ittt	mi
 800d13c:	6833      	ldrmi	r3, [r6, #0]
 800d13e:	3302      	addmi	r3, #2
 800d140:	6033      	strmi	r3, [r6, #0]
 800d142:	6825      	ldr	r5, [r4, #0]
 800d144:	f015 0506 	ands.w	r5, r5, #6
 800d148:	d106      	bne.n	800d158 <_printf_common+0x48>
 800d14a:	f104 0a19 	add.w	sl, r4, #25
 800d14e:	68e3      	ldr	r3, [r4, #12]
 800d150:	6832      	ldr	r2, [r6, #0]
 800d152:	1a9b      	subs	r3, r3, r2
 800d154:	42ab      	cmp	r3, r5
 800d156:	dc26      	bgt.n	800d1a6 <_printf_common+0x96>
 800d158:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800d15c:	6822      	ldr	r2, [r4, #0]
 800d15e:	3b00      	subs	r3, #0
 800d160:	bf18      	it	ne
 800d162:	2301      	movne	r3, #1
 800d164:	0692      	lsls	r2, r2, #26
 800d166:	d42b      	bmi.n	800d1c0 <_printf_common+0xb0>
 800d168:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800d16c:	4641      	mov	r1, r8
 800d16e:	4638      	mov	r0, r7
 800d170:	47c8      	blx	r9
 800d172:	3001      	adds	r0, #1
 800d174:	d01e      	beq.n	800d1b4 <_printf_common+0xa4>
 800d176:	6823      	ldr	r3, [r4, #0]
 800d178:	6922      	ldr	r2, [r4, #16]
 800d17a:	f003 0306 	and.w	r3, r3, #6
 800d17e:	2b04      	cmp	r3, #4
 800d180:	bf02      	ittt	eq
 800d182:	68e5      	ldreq	r5, [r4, #12]
 800d184:	6833      	ldreq	r3, [r6, #0]
 800d186:	1aed      	subeq	r5, r5, r3
 800d188:	68a3      	ldr	r3, [r4, #8]
 800d18a:	bf0c      	ite	eq
 800d18c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d190:	2500      	movne	r5, #0
 800d192:	4293      	cmp	r3, r2
 800d194:	bfc4      	itt	gt
 800d196:	1a9b      	subgt	r3, r3, r2
 800d198:	18ed      	addgt	r5, r5, r3
 800d19a:	2600      	movs	r6, #0
 800d19c:	341a      	adds	r4, #26
 800d19e:	42b5      	cmp	r5, r6
 800d1a0:	d11a      	bne.n	800d1d8 <_printf_common+0xc8>
 800d1a2:	2000      	movs	r0, #0
 800d1a4:	e008      	b.n	800d1b8 <_printf_common+0xa8>
 800d1a6:	2301      	movs	r3, #1
 800d1a8:	4652      	mov	r2, sl
 800d1aa:	4641      	mov	r1, r8
 800d1ac:	4638      	mov	r0, r7
 800d1ae:	47c8      	blx	r9
 800d1b0:	3001      	adds	r0, #1
 800d1b2:	d103      	bne.n	800d1bc <_printf_common+0xac>
 800d1b4:	f04f 30ff 	mov.w	r0, #4294967295
 800d1b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d1bc:	3501      	adds	r5, #1
 800d1be:	e7c6      	b.n	800d14e <_printf_common+0x3e>
 800d1c0:	18e1      	adds	r1, r4, r3
 800d1c2:	1c5a      	adds	r2, r3, #1
 800d1c4:	2030      	movs	r0, #48	@ 0x30
 800d1c6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800d1ca:	4422      	add	r2, r4
 800d1cc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800d1d0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800d1d4:	3302      	adds	r3, #2
 800d1d6:	e7c7      	b.n	800d168 <_printf_common+0x58>
 800d1d8:	2301      	movs	r3, #1
 800d1da:	4622      	mov	r2, r4
 800d1dc:	4641      	mov	r1, r8
 800d1de:	4638      	mov	r0, r7
 800d1e0:	47c8      	blx	r9
 800d1e2:	3001      	adds	r0, #1
 800d1e4:	d0e6      	beq.n	800d1b4 <_printf_common+0xa4>
 800d1e6:	3601      	adds	r6, #1
 800d1e8:	e7d9      	b.n	800d19e <_printf_common+0x8e>
	...

0800d1ec <_printf_i>:
 800d1ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d1f0:	7e0f      	ldrb	r7, [r1, #24]
 800d1f2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800d1f4:	2f78      	cmp	r7, #120	@ 0x78
 800d1f6:	4691      	mov	r9, r2
 800d1f8:	4680      	mov	r8, r0
 800d1fa:	460c      	mov	r4, r1
 800d1fc:	469a      	mov	sl, r3
 800d1fe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800d202:	d807      	bhi.n	800d214 <_printf_i+0x28>
 800d204:	2f62      	cmp	r7, #98	@ 0x62
 800d206:	d80a      	bhi.n	800d21e <_printf_i+0x32>
 800d208:	2f00      	cmp	r7, #0
 800d20a:	f000 80d2 	beq.w	800d3b2 <_printf_i+0x1c6>
 800d20e:	2f58      	cmp	r7, #88	@ 0x58
 800d210:	f000 80b9 	beq.w	800d386 <_printf_i+0x19a>
 800d214:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800d218:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800d21c:	e03a      	b.n	800d294 <_printf_i+0xa8>
 800d21e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800d222:	2b15      	cmp	r3, #21
 800d224:	d8f6      	bhi.n	800d214 <_printf_i+0x28>
 800d226:	a101      	add	r1, pc, #4	@ (adr r1, 800d22c <_printf_i+0x40>)
 800d228:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d22c:	0800d285 	.word	0x0800d285
 800d230:	0800d299 	.word	0x0800d299
 800d234:	0800d215 	.word	0x0800d215
 800d238:	0800d215 	.word	0x0800d215
 800d23c:	0800d215 	.word	0x0800d215
 800d240:	0800d215 	.word	0x0800d215
 800d244:	0800d299 	.word	0x0800d299
 800d248:	0800d215 	.word	0x0800d215
 800d24c:	0800d215 	.word	0x0800d215
 800d250:	0800d215 	.word	0x0800d215
 800d254:	0800d215 	.word	0x0800d215
 800d258:	0800d399 	.word	0x0800d399
 800d25c:	0800d2c3 	.word	0x0800d2c3
 800d260:	0800d353 	.word	0x0800d353
 800d264:	0800d215 	.word	0x0800d215
 800d268:	0800d215 	.word	0x0800d215
 800d26c:	0800d3bb 	.word	0x0800d3bb
 800d270:	0800d215 	.word	0x0800d215
 800d274:	0800d2c3 	.word	0x0800d2c3
 800d278:	0800d215 	.word	0x0800d215
 800d27c:	0800d215 	.word	0x0800d215
 800d280:	0800d35b 	.word	0x0800d35b
 800d284:	6833      	ldr	r3, [r6, #0]
 800d286:	1d1a      	adds	r2, r3, #4
 800d288:	681b      	ldr	r3, [r3, #0]
 800d28a:	6032      	str	r2, [r6, #0]
 800d28c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800d290:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800d294:	2301      	movs	r3, #1
 800d296:	e09d      	b.n	800d3d4 <_printf_i+0x1e8>
 800d298:	6833      	ldr	r3, [r6, #0]
 800d29a:	6820      	ldr	r0, [r4, #0]
 800d29c:	1d19      	adds	r1, r3, #4
 800d29e:	6031      	str	r1, [r6, #0]
 800d2a0:	0606      	lsls	r6, r0, #24
 800d2a2:	d501      	bpl.n	800d2a8 <_printf_i+0xbc>
 800d2a4:	681d      	ldr	r5, [r3, #0]
 800d2a6:	e003      	b.n	800d2b0 <_printf_i+0xc4>
 800d2a8:	0645      	lsls	r5, r0, #25
 800d2aa:	d5fb      	bpl.n	800d2a4 <_printf_i+0xb8>
 800d2ac:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d2b0:	2d00      	cmp	r5, #0
 800d2b2:	da03      	bge.n	800d2bc <_printf_i+0xd0>
 800d2b4:	232d      	movs	r3, #45	@ 0x2d
 800d2b6:	426d      	negs	r5, r5
 800d2b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800d2bc:	4859      	ldr	r0, [pc, #356]	@ (800d424 <_printf_i+0x238>)
 800d2be:	230a      	movs	r3, #10
 800d2c0:	e011      	b.n	800d2e6 <_printf_i+0xfa>
 800d2c2:	6821      	ldr	r1, [r4, #0]
 800d2c4:	6833      	ldr	r3, [r6, #0]
 800d2c6:	0608      	lsls	r0, r1, #24
 800d2c8:	f853 5b04 	ldr.w	r5, [r3], #4
 800d2cc:	d402      	bmi.n	800d2d4 <_printf_i+0xe8>
 800d2ce:	0649      	lsls	r1, r1, #25
 800d2d0:	bf48      	it	mi
 800d2d2:	b2ad      	uxthmi	r5, r5
 800d2d4:	2f6f      	cmp	r7, #111	@ 0x6f
 800d2d6:	4853      	ldr	r0, [pc, #332]	@ (800d424 <_printf_i+0x238>)
 800d2d8:	6033      	str	r3, [r6, #0]
 800d2da:	bf14      	ite	ne
 800d2dc:	230a      	movne	r3, #10
 800d2de:	2308      	moveq	r3, #8
 800d2e0:	2100      	movs	r1, #0
 800d2e2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800d2e6:	6866      	ldr	r6, [r4, #4]
 800d2e8:	60a6      	str	r6, [r4, #8]
 800d2ea:	2e00      	cmp	r6, #0
 800d2ec:	bfa2      	ittt	ge
 800d2ee:	6821      	ldrge	r1, [r4, #0]
 800d2f0:	f021 0104 	bicge.w	r1, r1, #4
 800d2f4:	6021      	strge	r1, [r4, #0]
 800d2f6:	b90d      	cbnz	r5, 800d2fc <_printf_i+0x110>
 800d2f8:	2e00      	cmp	r6, #0
 800d2fa:	d04b      	beq.n	800d394 <_printf_i+0x1a8>
 800d2fc:	4616      	mov	r6, r2
 800d2fe:	fbb5 f1f3 	udiv	r1, r5, r3
 800d302:	fb03 5711 	mls	r7, r3, r1, r5
 800d306:	5dc7      	ldrb	r7, [r0, r7]
 800d308:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800d30c:	462f      	mov	r7, r5
 800d30e:	42bb      	cmp	r3, r7
 800d310:	460d      	mov	r5, r1
 800d312:	d9f4      	bls.n	800d2fe <_printf_i+0x112>
 800d314:	2b08      	cmp	r3, #8
 800d316:	d10b      	bne.n	800d330 <_printf_i+0x144>
 800d318:	6823      	ldr	r3, [r4, #0]
 800d31a:	07df      	lsls	r7, r3, #31
 800d31c:	d508      	bpl.n	800d330 <_printf_i+0x144>
 800d31e:	6923      	ldr	r3, [r4, #16]
 800d320:	6861      	ldr	r1, [r4, #4]
 800d322:	4299      	cmp	r1, r3
 800d324:	bfde      	ittt	le
 800d326:	2330      	movle	r3, #48	@ 0x30
 800d328:	f806 3c01 	strble.w	r3, [r6, #-1]
 800d32c:	f106 36ff 	addle.w	r6, r6, #4294967295
 800d330:	1b92      	subs	r2, r2, r6
 800d332:	6122      	str	r2, [r4, #16]
 800d334:	f8cd a000 	str.w	sl, [sp]
 800d338:	464b      	mov	r3, r9
 800d33a:	aa03      	add	r2, sp, #12
 800d33c:	4621      	mov	r1, r4
 800d33e:	4640      	mov	r0, r8
 800d340:	f7ff fee6 	bl	800d110 <_printf_common>
 800d344:	3001      	adds	r0, #1
 800d346:	d14a      	bne.n	800d3de <_printf_i+0x1f2>
 800d348:	f04f 30ff 	mov.w	r0, #4294967295
 800d34c:	b004      	add	sp, #16
 800d34e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d352:	6823      	ldr	r3, [r4, #0]
 800d354:	f043 0320 	orr.w	r3, r3, #32
 800d358:	6023      	str	r3, [r4, #0]
 800d35a:	4833      	ldr	r0, [pc, #204]	@ (800d428 <_printf_i+0x23c>)
 800d35c:	2778      	movs	r7, #120	@ 0x78
 800d35e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800d362:	6823      	ldr	r3, [r4, #0]
 800d364:	6831      	ldr	r1, [r6, #0]
 800d366:	061f      	lsls	r7, r3, #24
 800d368:	f851 5b04 	ldr.w	r5, [r1], #4
 800d36c:	d402      	bmi.n	800d374 <_printf_i+0x188>
 800d36e:	065f      	lsls	r7, r3, #25
 800d370:	bf48      	it	mi
 800d372:	b2ad      	uxthmi	r5, r5
 800d374:	6031      	str	r1, [r6, #0]
 800d376:	07d9      	lsls	r1, r3, #31
 800d378:	bf44      	itt	mi
 800d37a:	f043 0320 	orrmi.w	r3, r3, #32
 800d37e:	6023      	strmi	r3, [r4, #0]
 800d380:	b11d      	cbz	r5, 800d38a <_printf_i+0x19e>
 800d382:	2310      	movs	r3, #16
 800d384:	e7ac      	b.n	800d2e0 <_printf_i+0xf4>
 800d386:	4827      	ldr	r0, [pc, #156]	@ (800d424 <_printf_i+0x238>)
 800d388:	e7e9      	b.n	800d35e <_printf_i+0x172>
 800d38a:	6823      	ldr	r3, [r4, #0]
 800d38c:	f023 0320 	bic.w	r3, r3, #32
 800d390:	6023      	str	r3, [r4, #0]
 800d392:	e7f6      	b.n	800d382 <_printf_i+0x196>
 800d394:	4616      	mov	r6, r2
 800d396:	e7bd      	b.n	800d314 <_printf_i+0x128>
 800d398:	6833      	ldr	r3, [r6, #0]
 800d39a:	6825      	ldr	r5, [r4, #0]
 800d39c:	6961      	ldr	r1, [r4, #20]
 800d39e:	1d18      	adds	r0, r3, #4
 800d3a0:	6030      	str	r0, [r6, #0]
 800d3a2:	062e      	lsls	r6, r5, #24
 800d3a4:	681b      	ldr	r3, [r3, #0]
 800d3a6:	d501      	bpl.n	800d3ac <_printf_i+0x1c0>
 800d3a8:	6019      	str	r1, [r3, #0]
 800d3aa:	e002      	b.n	800d3b2 <_printf_i+0x1c6>
 800d3ac:	0668      	lsls	r0, r5, #25
 800d3ae:	d5fb      	bpl.n	800d3a8 <_printf_i+0x1bc>
 800d3b0:	8019      	strh	r1, [r3, #0]
 800d3b2:	2300      	movs	r3, #0
 800d3b4:	6123      	str	r3, [r4, #16]
 800d3b6:	4616      	mov	r6, r2
 800d3b8:	e7bc      	b.n	800d334 <_printf_i+0x148>
 800d3ba:	6833      	ldr	r3, [r6, #0]
 800d3bc:	1d1a      	adds	r2, r3, #4
 800d3be:	6032      	str	r2, [r6, #0]
 800d3c0:	681e      	ldr	r6, [r3, #0]
 800d3c2:	6862      	ldr	r2, [r4, #4]
 800d3c4:	2100      	movs	r1, #0
 800d3c6:	4630      	mov	r0, r6
 800d3c8:	f7f2 ff02 	bl	80001d0 <memchr>
 800d3cc:	b108      	cbz	r0, 800d3d2 <_printf_i+0x1e6>
 800d3ce:	1b80      	subs	r0, r0, r6
 800d3d0:	6060      	str	r0, [r4, #4]
 800d3d2:	6863      	ldr	r3, [r4, #4]
 800d3d4:	6123      	str	r3, [r4, #16]
 800d3d6:	2300      	movs	r3, #0
 800d3d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800d3dc:	e7aa      	b.n	800d334 <_printf_i+0x148>
 800d3de:	6923      	ldr	r3, [r4, #16]
 800d3e0:	4632      	mov	r2, r6
 800d3e2:	4649      	mov	r1, r9
 800d3e4:	4640      	mov	r0, r8
 800d3e6:	47d0      	blx	sl
 800d3e8:	3001      	adds	r0, #1
 800d3ea:	d0ad      	beq.n	800d348 <_printf_i+0x15c>
 800d3ec:	6823      	ldr	r3, [r4, #0]
 800d3ee:	079b      	lsls	r3, r3, #30
 800d3f0:	d413      	bmi.n	800d41a <_printf_i+0x22e>
 800d3f2:	68e0      	ldr	r0, [r4, #12]
 800d3f4:	9b03      	ldr	r3, [sp, #12]
 800d3f6:	4298      	cmp	r0, r3
 800d3f8:	bfb8      	it	lt
 800d3fa:	4618      	movlt	r0, r3
 800d3fc:	e7a6      	b.n	800d34c <_printf_i+0x160>
 800d3fe:	2301      	movs	r3, #1
 800d400:	4632      	mov	r2, r6
 800d402:	4649      	mov	r1, r9
 800d404:	4640      	mov	r0, r8
 800d406:	47d0      	blx	sl
 800d408:	3001      	adds	r0, #1
 800d40a:	d09d      	beq.n	800d348 <_printf_i+0x15c>
 800d40c:	3501      	adds	r5, #1
 800d40e:	68e3      	ldr	r3, [r4, #12]
 800d410:	9903      	ldr	r1, [sp, #12]
 800d412:	1a5b      	subs	r3, r3, r1
 800d414:	42ab      	cmp	r3, r5
 800d416:	dcf2      	bgt.n	800d3fe <_printf_i+0x212>
 800d418:	e7eb      	b.n	800d3f2 <_printf_i+0x206>
 800d41a:	2500      	movs	r5, #0
 800d41c:	f104 0619 	add.w	r6, r4, #25
 800d420:	e7f5      	b.n	800d40e <_printf_i+0x222>
 800d422:	bf00      	nop
 800d424:	0800f602 	.word	0x0800f602
 800d428:	0800f613 	.word	0x0800f613

0800d42c <std>:
 800d42c:	2300      	movs	r3, #0
 800d42e:	b510      	push	{r4, lr}
 800d430:	4604      	mov	r4, r0
 800d432:	e9c0 3300 	strd	r3, r3, [r0]
 800d436:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d43a:	6083      	str	r3, [r0, #8]
 800d43c:	8181      	strh	r1, [r0, #12]
 800d43e:	6643      	str	r3, [r0, #100]	@ 0x64
 800d440:	81c2      	strh	r2, [r0, #14]
 800d442:	6183      	str	r3, [r0, #24]
 800d444:	4619      	mov	r1, r3
 800d446:	2208      	movs	r2, #8
 800d448:	305c      	adds	r0, #92	@ 0x5c
 800d44a:	f000 f9e7 	bl	800d81c <memset>
 800d44e:	4b0d      	ldr	r3, [pc, #52]	@ (800d484 <std+0x58>)
 800d450:	6263      	str	r3, [r4, #36]	@ 0x24
 800d452:	4b0d      	ldr	r3, [pc, #52]	@ (800d488 <std+0x5c>)
 800d454:	62a3      	str	r3, [r4, #40]	@ 0x28
 800d456:	4b0d      	ldr	r3, [pc, #52]	@ (800d48c <std+0x60>)
 800d458:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800d45a:	4b0d      	ldr	r3, [pc, #52]	@ (800d490 <std+0x64>)
 800d45c:	6323      	str	r3, [r4, #48]	@ 0x30
 800d45e:	4b0d      	ldr	r3, [pc, #52]	@ (800d494 <std+0x68>)
 800d460:	6224      	str	r4, [r4, #32]
 800d462:	429c      	cmp	r4, r3
 800d464:	d006      	beq.n	800d474 <std+0x48>
 800d466:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800d46a:	4294      	cmp	r4, r2
 800d46c:	d002      	beq.n	800d474 <std+0x48>
 800d46e:	33d0      	adds	r3, #208	@ 0xd0
 800d470:	429c      	cmp	r4, r3
 800d472:	d105      	bne.n	800d480 <std+0x54>
 800d474:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800d478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d47c:	f000 ba4a 	b.w	800d914 <__retarget_lock_init_recursive>
 800d480:	bd10      	pop	{r4, pc}
 800d482:	bf00      	nop
 800d484:	0800d66d 	.word	0x0800d66d
 800d488:	0800d68f 	.word	0x0800d68f
 800d48c:	0800d6c7 	.word	0x0800d6c7
 800d490:	0800d6eb 	.word	0x0800d6eb
 800d494:	20000f8c 	.word	0x20000f8c

0800d498 <stdio_exit_handler>:
 800d498:	4a02      	ldr	r2, [pc, #8]	@ (800d4a4 <stdio_exit_handler+0xc>)
 800d49a:	4903      	ldr	r1, [pc, #12]	@ (800d4a8 <stdio_exit_handler+0x10>)
 800d49c:	4803      	ldr	r0, [pc, #12]	@ (800d4ac <stdio_exit_handler+0x14>)
 800d49e:	f000 b869 	b.w	800d574 <_fwalk_sglue>
 800d4a2:	bf00      	nop
 800d4a4:	20000164 	.word	0x20000164
 800d4a8:	0800f261 	.word	0x0800f261
 800d4ac:	20000174 	.word	0x20000174

0800d4b0 <cleanup_stdio>:
 800d4b0:	6841      	ldr	r1, [r0, #4]
 800d4b2:	4b0c      	ldr	r3, [pc, #48]	@ (800d4e4 <cleanup_stdio+0x34>)
 800d4b4:	4299      	cmp	r1, r3
 800d4b6:	b510      	push	{r4, lr}
 800d4b8:	4604      	mov	r4, r0
 800d4ba:	d001      	beq.n	800d4c0 <cleanup_stdio+0x10>
 800d4bc:	f001 fed0 	bl	800f260 <_fflush_r>
 800d4c0:	68a1      	ldr	r1, [r4, #8]
 800d4c2:	4b09      	ldr	r3, [pc, #36]	@ (800d4e8 <cleanup_stdio+0x38>)
 800d4c4:	4299      	cmp	r1, r3
 800d4c6:	d002      	beq.n	800d4ce <cleanup_stdio+0x1e>
 800d4c8:	4620      	mov	r0, r4
 800d4ca:	f001 fec9 	bl	800f260 <_fflush_r>
 800d4ce:	68e1      	ldr	r1, [r4, #12]
 800d4d0:	4b06      	ldr	r3, [pc, #24]	@ (800d4ec <cleanup_stdio+0x3c>)
 800d4d2:	4299      	cmp	r1, r3
 800d4d4:	d004      	beq.n	800d4e0 <cleanup_stdio+0x30>
 800d4d6:	4620      	mov	r0, r4
 800d4d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d4dc:	f001 bec0 	b.w	800f260 <_fflush_r>
 800d4e0:	bd10      	pop	{r4, pc}
 800d4e2:	bf00      	nop
 800d4e4:	20000f8c 	.word	0x20000f8c
 800d4e8:	20000ff4 	.word	0x20000ff4
 800d4ec:	2000105c 	.word	0x2000105c

0800d4f0 <global_stdio_init.part.0>:
 800d4f0:	b510      	push	{r4, lr}
 800d4f2:	4b0b      	ldr	r3, [pc, #44]	@ (800d520 <global_stdio_init.part.0+0x30>)
 800d4f4:	4c0b      	ldr	r4, [pc, #44]	@ (800d524 <global_stdio_init.part.0+0x34>)
 800d4f6:	4a0c      	ldr	r2, [pc, #48]	@ (800d528 <global_stdio_init.part.0+0x38>)
 800d4f8:	601a      	str	r2, [r3, #0]
 800d4fa:	4620      	mov	r0, r4
 800d4fc:	2200      	movs	r2, #0
 800d4fe:	2104      	movs	r1, #4
 800d500:	f7ff ff94 	bl	800d42c <std>
 800d504:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800d508:	2201      	movs	r2, #1
 800d50a:	2109      	movs	r1, #9
 800d50c:	f7ff ff8e 	bl	800d42c <std>
 800d510:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800d514:	2202      	movs	r2, #2
 800d516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d51a:	2112      	movs	r1, #18
 800d51c:	f7ff bf86 	b.w	800d42c <std>
 800d520:	200010c4 	.word	0x200010c4
 800d524:	20000f8c 	.word	0x20000f8c
 800d528:	0800d499 	.word	0x0800d499

0800d52c <__sfp_lock_acquire>:
 800d52c:	4801      	ldr	r0, [pc, #4]	@ (800d534 <__sfp_lock_acquire+0x8>)
 800d52e:	f000 b9f2 	b.w	800d916 <__retarget_lock_acquire_recursive>
 800d532:	bf00      	nop
 800d534:	200010cd 	.word	0x200010cd

0800d538 <__sfp_lock_release>:
 800d538:	4801      	ldr	r0, [pc, #4]	@ (800d540 <__sfp_lock_release+0x8>)
 800d53a:	f000 b9ed 	b.w	800d918 <__retarget_lock_release_recursive>
 800d53e:	bf00      	nop
 800d540:	200010cd 	.word	0x200010cd

0800d544 <__sinit>:
 800d544:	b510      	push	{r4, lr}
 800d546:	4604      	mov	r4, r0
 800d548:	f7ff fff0 	bl	800d52c <__sfp_lock_acquire>
 800d54c:	6a23      	ldr	r3, [r4, #32]
 800d54e:	b11b      	cbz	r3, 800d558 <__sinit+0x14>
 800d550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d554:	f7ff bff0 	b.w	800d538 <__sfp_lock_release>
 800d558:	4b04      	ldr	r3, [pc, #16]	@ (800d56c <__sinit+0x28>)
 800d55a:	6223      	str	r3, [r4, #32]
 800d55c:	4b04      	ldr	r3, [pc, #16]	@ (800d570 <__sinit+0x2c>)
 800d55e:	681b      	ldr	r3, [r3, #0]
 800d560:	2b00      	cmp	r3, #0
 800d562:	d1f5      	bne.n	800d550 <__sinit+0xc>
 800d564:	f7ff ffc4 	bl	800d4f0 <global_stdio_init.part.0>
 800d568:	e7f2      	b.n	800d550 <__sinit+0xc>
 800d56a:	bf00      	nop
 800d56c:	0800d4b1 	.word	0x0800d4b1
 800d570:	200010c4 	.word	0x200010c4

0800d574 <_fwalk_sglue>:
 800d574:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d578:	4607      	mov	r7, r0
 800d57a:	4688      	mov	r8, r1
 800d57c:	4614      	mov	r4, r2
 800d57e:	2600      	movs	r6, #0
 800d580:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800d584:	f1b9 0901 	subs.w	r9, r9, #1
 800d588:	d505      	bpl.n	800d596 <_fwalk_sglue+0x22>
 800d58a:	6824      	ldr	r4, [r4, #0]
 800d58c:	2c00      	cmp	r4, #0
 800d58e:	d1f7      	bne.n	800d580 <_fwalk_sglue+0xc>
 800d590:	4630      	mov	r0, r6
 800d592:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d596:	89ab      	ldrh	r3, [r5, #12]
 800d598:	2b01      	cmp	r3, #1
 800d59a:	d907      	bls.n	800d5ac <_fwalk_sglue+0x38>
 800d59c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800d5a0:	3301      	adds	r3, #1
 800d5a2:	d003      	beq.n	800d5ac <_fwalk_sglue+0x38>
 800d5a4:	4629      	mov	r1, r5
 800d5a6:	4638      	mov	r0, r7
 800d5a8:	47c0      	blx	r8
 800d5aa:	4306      	orrs	r6, r0
 800d5ac:	3568      	adds	r5, #104	@ 0x68
 800d5ae:	e7e9      	b.n	800d584 <_fwalk_sglue+0x10>

0800d5b0 <_puts_r>:
 800d5b0:	6a03      	ldr	r3, [r0, #32]
 800d5b2:	b570      	push	{r4, r5, r6, lr}
 800d5b4:	6884      	ldr	r4, [r0, #8]
 800d5b6:	4605      	mov	r5, r0
 800d5b8:	460e      	mov	r6, r1
 800d5ba:	b90b      	cbnz	r3, 800d5c0 <_puts_r+0x10>
 800d5bc:	f7ff ffc2 	bl	800d544 <__sinit>
 800d5c0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800d5c2:	07db      	lsls	r3, r3, #31
 800d5c4:	d405      	bmi.n	800d5d2 <_puts_r+0x22>
 800d5c6:	89a3      	ldrh	r3, [r4, #12]
 800d5c8:	0598      	lsls	r0, r3, #22
 800d5ca:	d402      	bmi.n	800d5d2 <_puts_r+0x22>
 800d5cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d5ce:	f000 f9a2 	bl	800d916 <__retarget_lock_acquire_recursive>
 800d5d2:	89a3      	ldrh	r3, [r4, #12]
 800d5d4:	0719      	lsls	r1, r3, #28
 800d5d6:	d502      	bpl.n	800d5de <_puts_r+0x2e>
 800d5d8:	6923      	ldr	r3, [r4, #16]
 800d5da:	2b00      	cmp	r3, #0
 800d5dc:	d135      	bne.n	800d64a <_puts_r+0x9a>
 800d5de:	4621      	mov	r1, r4
 800d5e0:	4628      	mov	r0, r5
 800d5e2:	f000 f8c5 	bl	800d770 <__swsetup_r>
 800d5e6:	b380      	cbz	r0, 800d64a <_puts_r+0x9a>
 800d5e8:	f04f 35ff 	mov.w	r5, #4294967295
 800d5ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800d5ee:	07da      	lsls	r2, r3, #31
 800d5f0:	d405      	bmi.n	800d5fe <_puts_r+0x4e>
 800d5f2:	89a3      	ldrh	r3, [r4, #12]
 800d5f4:	059b      	lsls	r3, r3, #22
 800d5f6:	d402      	bmi.n	800d5fe <_puts_r+0x4e>
 800d5f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d5fa:	f000 f98d 	bl	800d918 <__retarget_lock_release_recursive>
 800d5fe:	4628      	mov	r0, r5
 800d600:	bd70      	pop	{r4, r5, r6, pc}
 800d602:	2b00      	cmp	r3, #0
 800d604:	da04      	bge.n	800d610 <_puts_r+0x60>
 800d606:	69a2      	ldr	r2, [r4, #24]
 800d608:	429a      	cmp	r2, r3
 800d60a:	dc17      	bgt.n	800d63c <_puts_r+0x8c>
 800d60c:	290a      	cmp	r1, #10
 800d60e:	d015      	beq.n	800d63c <_puts_r+0x8c>
 800d610:	6823      	ldr	r3, [r4, #0]
 800d612:	1c5a      	adds	r2, r3, #1
 800d614:	6022      	str	r2, [r4, #0]
 800d616:	7019      	strb	r1, [r3, #0]
 800d618:	68a3      	ldr	r3, [r4, #8]
 800d61a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800d61e:	3b01      	subs	r3, #1
 800d620:	60a3      	str	r3, [r4, #8]
 800d622:	2900      	cmp	r1, #0
 800d624:	d1ed      	bne.n	800d602 <_puts_r+0x52>
 800d626:	2b00      	cmp	r3, #0
 800d628:	da11      	bge.n	800d64e <_puts_r+0x9e>
 800d62a:	4622      	mov	r2, r4
 800d62c:	210a      	movs	r1, #10
 800d62e:	4628      	mov	r0, r5
 800d630:	f000 f85f 	bl	800d6f2 <__swbuf_r>
 800d634:	3001      	adds	r0, #1
 800d636:	d0d7      	beq.n	800d5e8 <_puts_r+0x38>
 800d638:	250a      	movs	r5, #10
 800d63a:	e7d7      	b.n	800d5ec <_puts_r+0x3c>
 800d63c:	4622      	mov	r2, r4
 800d63e:	4628      	mov	r0, r5
 800d640:	f000 f857 	bl	800d6f2 <__swbuf_r>
 800d644:	3001      	adds	r0, #1
 800d646:	d1e7      	bne.n	800d618 <_puts_r+0x68>
 800d648:	e7ce      	b.n	800d5e8 <_puts_r+0x38>
 800d64a:	3e01      	subs	r6, #1
 800d64c:	e7e4      	b.n	800d618 <_puts_r+0x68>
 800d64e:	6823      	ldr	r3, [r4, #0]
 800d650:	1c5a      	adds	r2, r3, #1
 800d652:	6022      	str	r2, [r4, #0]
 800d654:	220a      	movs	r2, #10
 800d656:	701a      	strb	r2, [r3, #0]
 800d658:	e7ee      	b.n	800d638 <_puts_r+0x88>
	...

0800d65c <puts>:
 800d65c:	4b02      	ldr	r3, [pc, #8]	@ (800d668 <puts+0xc>)
 800d65e:	4601      	mov	r1, r0
 800d660:	6818      	ldr	r0, [r3, #0]
 800d662:	f7ff bfa5 	b.w	800d5b0 <_puts_r>
 800d666:	bf00      	nop
 800d668:	20000170 	.word	0x20000170

0800d66c <__sread>:
 800d66c:	b510      	push	{r4, lr}
 800d66e:	460c      	mov	r4, r1
 800d670:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d674:	f000 f900 	bl	800d878 <_read_r>
 800d678:	2800      	cmp	r0, #0
 800d67a:	bfab      	itete	ge
 800d67c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800d67e:	89a3      	ldrhlt	r3, [r4, #12]
 800d680:	181b      	addge	r3, r3, r0
 800d682:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800d686:	bfac      	ite	ge
 800d688:	6563      	strge	r3, [r4, #84]	@ 0x54
 800d68a:	81a3      	strhlt	r3, [r4, #12]
 800d68c:	bd10      	pop	{r4, pc}

0800d68e <__swrite>:
 800d68e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d692:	461f      	mov	r7, r3
 800d694:	898b      	ldrh	r3, [r1, #12]
 800d696:	05db      	lsls	r3, r3, #23
 800d698:	4605      	mov	r5, r0
 800d69a:	460c      	mov	r4, r1
 800d69c:	4616      	mov	r6, r2
 800d69e:	d505      	bpl.n	800d6ac <__swrite+0x1e>
 800d6a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d6a4:	2302      	movs	r3, #2
 800d6a6:	2200      	movs	r2, #0
 800d6a8:	f000 f8d4 	bl	800d854 <_lseek_r>
 800d6ac:	89a3      	ldrh	r3, [r4, #12]
 800d6ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d6b2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800d6b6:	81a3      	strh	r3, [r4, #12]
 800d6b8:	4632      	mov	r2, r6
 800d6ba:	463b      	mov	r3, r7
 800d6bc:	4628      	mov	r0, r5
 800d6be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d6c2:	f000 b8eb 	b.w	800d89c <_write_r>

0800d6c6 <__sseek>:
 800d6c6:	b510      	push	{r4, lr}
 800d6c8:	460c      	mov	r4, r1
 800d6ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d6ce:	f000 f8c1 	bl	800d854 <_lseek_r>
 800d6d2:	1c43      	adds	r3, r0, #1
 800d6d4:	89a3      	ldrh	r3, [r4, #12]
 800d6d6:	bf15      	itete	ne
 800d6d8:	6560      	strne	r0, [r4, #84]	@ 0x54
 800d6da:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800d6de:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800d6e2:	81a3      	strheq	r3, [r4, #12]
 800d6e4:	bf18      	it	ne
 800d6e6:	81a3      	strhne	r3, [r4, #12]
 800d6e8:	bd10      	pop	{r4, pc}

0800d6ea <__sclose>:
 800d6ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d6ee:	f000 b8a1 	b.w	800d834 <_close_r>

0800d6f2 <__swbuf_r>:
 800d6f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6f4:	460e      	mov	r6, r1
 800d6f6:	4614      	mov	r4, r2
 800d6f8:	4605      	mov	r5, r0
 800d6fa:	b118      	cbz	r0, 800d704 <__swbuf_r+0x12>
 800d6fc:	6a03      	ldr	r3, [r0, #32]
 800d6fe:	b90b      	cbnz	r3, 800d704 <__swbuf_r+0x12>
 800d700:	f7ff ff20 	bl	800d544 <__sinit>
 800d704:	69a3      	ldr	r3, [r4, #24]
 800d706:	60a3      	str	r3, [r4, #8]
 800d708:	89a3      	ldrh	r3, [r4, #12]
 800d70a:	071a      	lsls	r2, r3, #28
 800d70c:	d501      	bpl.n	800d712 <__swbuf_r+0x20>
 800d70e:	6923      	ldr	r3, [r4, #16]
 800d710:	b943      	cbnz	r3, 800d724 <__swbuf_r+0x32>
 800d712:	4621      	mov	r1, r4
 800d714:	4628      	mov	r0, r5
 800d716:	f000 f82b 	bl	800d770 <__swsetup_r>
 800d71a:	b118      	cbz	r0, 800d724 <__swbuf_r+0x32>
 800d71c:	f04f 37ff 	mov.w	r7, #4294967295
 800d720:	4638      	mov	r0, r7
 800d722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d724:	6823      	ldr	r3, [r4, #0]
 800d726:	6922      	ldr	r2, [r4, #16]
 800d728:	1a98      	subs	r0, r3, r2
 800d72a:	6963      	ldr	r3, [r4, #20]
 800d72c:	b2f6      	uxtb	r6, r6
 800d72e:	4283      	cmp	r3, r0
 800d730:	4637      	mov	r7, r6
 800d732:	dc05      	bgt.n	800d740 <__swbuf_r+0x4e>
 800d734:	4621      	mov	r1, r4
 800d736:	4628      	mov	r0, r5
 800d738:	f001 fd92 	bl	800f260 <_fflush_r>
 800d73c:	2800      	cmp	r0, #0
 800d73e:	d1ed      	bne.n	800d71c <__swbuf_r+0x2a>
 800d740:	68a3      	ldr	r3, [r4, #8]
 800d742:	3b01      	subs	r3, #1
 800d744:	60a3      	str	r3, [r4, #8]
 800d746:	6823      	ldr	r3, [r4, #0]
 800d748:	1c5a      	adds	r2, r3, #1
 800d74a:	6022      	str	r2, [r4, #0]
 800d74c:	701e      	strb	r6, [r3, #0]
 800d74e:	6962      	ldr	r2, [r4, #20]
 800d750:	1c43      	adds	r3, r0, #1
 800d752:	429a      	cmp	r2, r3
 800d754:	d004      	beq.n	800d760 <__swbuf_r+0x6e>
 800d756:	89a3      	ldrh	r3, [r4, #12]
 800d758:	07db      	lsls	r3, r3, #31
 800d75a:	d5e1      	bpl.n	800d720 <__swbuf_r+0x2e>
 800d75c:	2e0a      	cmp	r6, #10
 800d75e:	d1df      	bne.n	800d720 <__swbuf_r+0x2e>
 800d760:	4621      	mov	r1, r4
 800d762:	4628      	mov	r0, r5
 800d764:	f001 fd7c 	bl	800f260 <_fflush_r>
 800d768:	2800      	cmp	r0, #0
 800d76a:	d0d9      	beq.n	800d720 <__swbuf_r+0x2e>
 800d76c:	e7d6      	b.n	800d71c <__swbuf_r+0x2a>
	...

0800d770 <__swsetup_r>:
 800d770:	b538      	push	{r3, r4, r5, lr}
 800d772:	4b29      	ldr	r3, [pc, #164]	@ (800d818 <__swsetup_r+0xa8>)
 800d774:	4605      	mov	r5, r0
 800d776:	6818      	ldr	r0, [r3, #0]
 800d778:	460c      	mov	r4, r1
 800d77a:	b118      	cbz	r0, 800d784 <__swsetup_r+0x14>
 800d77c:	6a03      	ldr	r3, [r0, #32]
 800d77e:	b90b      	cbnz	r3, 800d784 <__swsetup_r+0x14>
 800d780:	f7ff fee0 	bl	800d544 <__sinit>
 800d784:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d788:	0719      	lsls	r1, r3, #28
 800d78a:	d422      	bmi.n	800d7d2 <__swsetup_r+0x62>
 800d78c:	06da      	lsls	r2, r3, #27
 800d78e:	d407      	bmi.n	800d7a0 <__swsetup_r+0x30>
 800d790:	2209      	movs	r2, #9
 800d792:	602a      	str	r2, [r5, #0]
 800d794:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d798:	81a3      	strh	r3, [r4, #12]
 800d79a:	f04f 30ff 	mov.w	r0, #4294967295
 800d79e:	e033      	b.n	800d808 <__swsetup_r+0x98>
 800d7a0:	0758      	lsls	r0, r3, #29
 800d7a2:	d512      	bpl.n	800d7ca <__swsetup_r+0x5a>
 800d7a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800d7a6:	b141      	cbz	r1, 800d7ba <__swsetup_r+0x4a>
 800d7a8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800d7ac:	4299      	cmp	r1, r3
 800d7ae:	d002      	beq.n	800d7b6 <__swsetup_r+0x46>
 800d7b0:	4628      	mov	r0, r5
 800d7b2:	f000 ff0d 	bl	800e5d0 <_free_r>
 800d7b6:	2300      	movs	r3, #0
 800d7b8:	6363      	str	r3, [r4, #52]	@ 0x34
 800d7ba:	89a3      	ldrh	r3, [r4, #12]
 800d7bc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800d7c0:	81a3      	strh	r3, [r4, #12]
 800d7c2:	2300      	movs	r3, #0
 800d7c4:	6063      	str	r3, [r4, #4]
 800d7c6:	6923      	ldr	r3, [r4, #16]
 800d7c8:	6023      	str	r3, [r4, #0]
 800d7ca:	89a3      	ldrh	r3, [r4, #12]
 800d7cc:	f043 0308 	orr.w	r3, r3, #8
 800d7d0:	81a3      	strh	r3, [r4, #12]
 800d7d2:	6923      	ldr	r3, [r4, #16]
 800d7d4:	b94b      	cbnz	r3, 800d7ea <__swsetup_r+0x7a>
 800d7d6:	89a3      	ldrh	r3, [r4, #12]
 800d7d8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800d7dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d7e0:	d003      	beq.n	800d7ea <__swsetup_r+0x7a>
 800d7e2:	4621      	mov	r1, r4
 800d7e4:	4628      	mov	r0, r5
 800d7e6:	f001 fd89 	bl	800f2fc <__smakebuf_r>
 800d7ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d7ee:	f013 0201 	ands.w	r2, r3, #1
 800d7f2:	d00a      	beq.n	800d80a <__swsetup_r+0x9a>
 800d7f4:	2200      	movs	r2, #0
 800d7f6:	60a2      	str	r2, [r4, #8]
 800d7f8:	6962      	ldr	r2, [r4, #20]
 800d7fa:	4252      	negs	r2, r2
 800d7fc:	61a2      	str	r2, [r4, #24]
 800d7fe:	6922      	ldr	r2, [r4, #16]
 800d800:	b942      	cbnz	r2, 800d814 <__swsetup_r+0xa4>
 800d802:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800d806:	d1c5      	bne.n	800d794 <__swsetup_r+0x24>
 800d808:	bd38      	pop	{r3, r4, r5, pc}
 800d80a:	0799      	lsls	r1, r3, #30
 800d80c:	bf58      	it	pl
 800d80e:	6962      	ldrpl	r2, [r4, #20]
 800d810:	60a2      	str	r2, [r4, #8]
 800d812:	e7f4      	b.n	800d7fe <__swsetup_r+0x8e>
 800d814:	2000      	movs	r0, #0
 800d816:	e7f7      	b.n	800d808 <__swsetup_r+0x98>
 800d818:	20000170 	.word	0x20000170

0800d81c <memset>:
 800d81c:	4402      	add	r2, r0
 800d81e:	4603      	mov	r3, r0
 800d820:	4293      	cmp	r3, r2
 800d822:	d100      	bne.n	800d826 <memset+0xa>
 800d824:	4770      	bx	lr
 800d826:	f803 1b01 	strb.w	r1, [r3], #1
 800d82a:	e7f9      	b.n	800d820 <memset+0x4>

0800d82c <_localeconv_r>:
 800d82c:	4800      	ldr	r0, [pc, #0]	@ (800d830 <_localeconv_r+0x4>)
 800d82e:	4770      	bx	lr
 800d830:	200002b0 	.word	0x200002b0

0800d834 <_close_r>:
 800d834:	b538      	push	{r3, r4, r5, lr}
 800d836:	4d06      	ldr	r5, [pc, #24]	@ (800d850 <_close_r+0x1c>)
 800d838:	2300      	movs	r3, #0
 800d83a:	4604      	mov	r4, r0
 800d83c:	4608      	mov	r0, r1
 800d83e:	602b      	str	r3, [r5, #0]
 800d840:	f7f4 fc0e 	bl	8002060 <_close>
 800d844:	1c43      	adds	r3, r0, #1
 800d846:	d102      	bne.n	800d84e <_close_r+0x1a>
 800d848:	682b      	ldr	r3, [r5, #0]
 800d84a:	b103      	cbz	r3, 800d84e <_close_r+0x1a>
 800d84c:	6023      	str	r3, [r4, #0]
 800d84e:	bd38      	pop	{r3, r4, r5, pc}
 800d850:	200010c8 	.word	0x200010c8

0800d854 <_lseek_r>:
 800d854:	b538      	push	{r3, r4, r5, lr}
 800d856:	4d07      	ldr	r5, [pc, #28]	@ (800d874 <_lseek_r+0x20>)
 800d858:	4604      	mov	r4, r0
 800d85a:	4608      	mov	r0, r1
 800d85c:	4611      	mov	r1, r2
 800d85e:	2200      	movs	r2, #0
 800d860:	602a      	str	r2, [r5, #0]
 800d862:	461a      	mov	r2, r3
 800d864:	f7f4 fc23 	bl	80020ae <_lseek>
 800d868:	1c43      	adds	r3, r0, #1
 800d86a:	d102      	bne.n	800d872 <_lseek_r+0x1e>
 800d86c:	682b      	ldr	r3, [r5, #0]
 800d86e:	b103      	cbz	r3, 800d872 <_lseek_r+0x1e>
 800d870:	6023      	str	r3, [r4, #0]
 800d872:	bd38      	pop	{r3, r4, r5, pc}
 800d874:	200010c8 	.word	0x200010c8

0800d878 <_read_r>:
 800d878:	b538      	push	{r3, r4, r5, lr}
 800d87a:	4d07      	ldr	r5, [pc, #28]	@ (800d898 <_read_r+0x20>)
 800d87c:	4604      	mov	r4, r0
 800d87e:	4608      	mov	r0, r1
 800d880:	4611      	mov	r1, r2
 800d882:	2200      	movs	r2, #0
 800d884:	602a      	str	r2, [r5, #0]
 800d886:	461a      	mov	r2, r3
 800d888:	f7f4 fbb1 	bl	8001fee <_read>
 800d88c:	1c43      	adds	r3, r0, #1
 800d88e:	d102      	bne.n	800d896 <_read_r+0x1e>
 800d890:	682b      	ldr	r3, [r5, #0]
 800d892:	b103      	cbz	r3, 800d896 <_read_r+0x1e>
 800d894:	6023      	str	r3, [r4, #0]
 800d896:	bd38      	pop	{r3, r4, r5, pc}
 800d898:	200010c8 	.word	0x200010c8

0800d89c <_write_r>:
 800d89c:	b538      	push	{r3, r4, r5, lr}
 800d89e:	4d07      	ldr	r5, [pc, #28]	@ (800d8bc <_write_r+0x20>)
 800d8a0:	4604      	mov	r4, r0
 800d8a2:	4608      	mov	r0, r1
 800d8a4:	4611      	mov	r1, r2
 800d8a6:	2200      	movs	r2, #0
 800d8a8:	602a      	str	r2, [r5, #0]
 800d8aa:	461a      	mov	r2, r3
 800d8ac:	f7f4 fbbc 	bl	8002028 <_write>
 800d8b0:	1c43      	adds	r3, r0, #1
 800d8b2:	d102      	bne.n	800d8ba <_write_r+0x1e>
 800d8b4:	682b      	ldr	r3, [r5, #0]
 800d8b6:	b103      	cbz	r3, 800d8ba <_write_r+0x1e>
 800d8b8:	6023      	str	r3, [r4, #0]
 800d8ba:	bd38      	pop	{r3, r4, r5, pc}
 800d8bc:	200010c8 	.word	0x200010c8

0800d8c0 <__errno>:
 800d8c0:	4b01      	ldr	r3, [pc, #4]	@ (800d8c8 <__errno+0x8>)
 800d8c2:	6818      	ldr	r0, [r3, #0]
 800d8c4:	4770      	bx	lr
 800d8c6:	bf00      	nop
 800d8c8:	20000170 	.word	0x20000170

0800d8cc <__libc_init_array>:
 800d8cc:	b570      	push	{r4, r5, r6, lr}
 800d8ce:	4d0d      	ldr	r5, [pc, #52]	@ (800d904 <__libc_init_array+0x38>)
 800d8d0:	4c0d      	ldr	r4, [pc, #52]	@ (800d908 <__libc_init_array+0x3c>)
 800d8d2:	1b64      	subs	r4, r4, r5
 800d8d4:	10a4      	asrs	r4, r4, #2
 800d8d6:	2600      	movs	r6, #0
 800d8d8:	42a6      	cmp	r6, r4
 800d8da:	d109      	bne.n	800d8f0 <__libc_init_array+0x24>
 800d8dc:	4d0b      	ldr	r5, [pc, #44]	@ (800d90c <__libc_init_array+0x40>)
 800d8de:	4c0c      	ldr	r4, [pc, #48]	@ (800d910 <__libc_init_array+0x44>)
 800d8e0:	f001 fe2a 	bl	800f538 <_init>
 800d8e4:	1b64      	subs	r4, r4, r5
 800d8e6:	10a4      	asrs	r4, r4, #2
 800d8e8:	2600      	movs	r6, #0
 800d8ea:	42a6      	cmp	r6, r4
 800d8ec:	d105      	bne.n	800d8fa <__libc_init_array+0x2e>
 800d8ee:	bd70      	pop	{r4, r5, r6, pc}
 800d8f0:	f855 3b04 	ldr.w	r3, [r5], #4
 800d8f4:	4798      	blx	r3
 800d8f6:	3601      	adds	r6, #1
 800d8f8:	e7ee      	b.n	800d8d8 <__libc_init_array+0xc>
 800d8fa:	f855 3b04 	ldr.w	r3, [r5], #4
 800d8fe:	4798      	blx	r3
 800d900:	3601      	adds	r6, #1
 800d902:	e7f2      	b.n	800d8ea <__libc_init_array+0x1e>
 800d904:	0800f968 	.word	0x0800f968
 800d908:	0800f968 	.word	0x0800f968
 800d90c:	0800f968 	.word	0x0800f968
 800d910:	0800f96c 	.word	0x0800f96c

0800d914 <__retarget_lock_init_recursive>:
 800d914:	4770      	bx	lr

0800d916 <__retarget_lock_acquire_recursive>:
 800d916:	4770      	bx	lr

0800d918 <__retarget_lock_release_recursive>:
 800d918:	4770      	bx	lr

0800d91a <memcpy>:
 800d91a:	440a      	add	r2, r1
 800d91c:	4291      	cmp	r1, r2
 800d91e:	f100 33ff 	add.w	r3, r0, #4294967295
 800d922:	d100      	bne.n	800d926 <memcpy+0xc>
 800d924:	4770      	bx	lr
 800d926:	b510      	push	{r4, lr}
 800d928:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d92c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d930:	4291      	cmp	r1, r2
 800d932:	d1f9      	bne.n	800d928 <memcpy+0xe>
 800d934:	bd10      	pop	{r4, pc}

0800d936 <quorem>:
 800d936:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d93a:	6903      	ldr	r3, [r0, #16]
 800d93c:	690c      	ldr	r4, [r1, #16]
 800d93e:	42a3      	cmp	r3, r4
 800d940:	4607      	mov	r7, r0
 800d942:	db7e      	blt.n	800da42 <quorem+0x10c>
 800d944:	3c01      	subs	r4, #1
 800d946:	f101 0814 	add.w	r8, r1, #20
 800d94a:	00a3      	lsls	r3, r4, #2
 800d94c:	f100 0514 	add.w	r5, r0, #20
 800d950:	9300      	str	r3, [sp, #0]
 800d952:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d956:	9301      	str	r3, [sp, #4]
 800d958:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800d95c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d960:	3301      	adds	r3, #1
 800d962:	429a      	cmp	r2, r3
 800d964:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800d968:	fbb2 f6f3 	udiv	r6, r2, r3
 800d96c:	d32e      	bcc.n	800d9cc <quorem+0x96>
 800d96e:	f04f 0a00 	mov.w	sl, #0
 800d972:	46c4      	mov	ip, r8
 800d974:	46ae      	mov	lr, r5
 800d976:	46d3      	mov	fp, sl
 800d978:	f85c 3b04 	ldr.w	r3, [ip], #4
 800d97c:	b298      	uxth	r0, r3
 800d97e:	fb06 a000 	mla	r0, r6, r0, sl
 800d982:	0c02      	lsrs	r2, r0, #16
 800d984:	0c1b      	lsrs	r3, r3, #16
 800d986:	fb06 2303 	mla	r3, r6, r3, r2
 800d98a:	f8de 2000 	ldr.w	r2, [lr]
 800d98e:	b280      	uxth	r0, r0
 800d990:	b292      	uxth	r2, r2
 800d992:	1a12      	subs	r2, r2, r0
 800d994:	445a      	add	r2, fp
 800d996:	f8de 0000 	ldr.w	r0, [lr]
 800d99a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800d99e:	b29b      	uxth	r3, r3
 800d9a0:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800d9a4:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800d9a8:	b292      	uxth	r2, r2
 800d9aa:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800d9ae:	45e1      	cmp	r9, ip
 800d9b0:	f84e 2b04 	str.w	r2, [lr], #4
 800d9b4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800d9b8:	d2de      	bcs.n	800d978 <quorem+0x42>
 800d9ba:	9b00      	ldr	r3, [sp, #0]
 800d9bc:	58eb      	ldr	r3, [r5, r3]
 800d9be:	b92b      	cbnz	r3, 800d9cc <quorem+0x96>
 800d9c0:	9b01      	ldr	r3, [sp, #4]
 800d9c2:	3b04      	subs	r3, #4
 800d9c4:	429d      	cmp	r5, r3
 800d9c6:	461a      	mov	r2, r3
 800d9c8:	d32f      	bcc.n	800da2a <quorem+0xf4>
 800d9ca:	613c      	str	r4, [r7, #16]
 800d9cc:	4638      	mov	r0, r7
 800d9ce:	f001 f979 	bl	800ecc4 <__mcmp>
 800d9d2:	2800      	cmp	r0, #0
 800d9d4:	db25      	blt.n	800da22 <quorem+0xec>
 800d9d6:	4629      	mov	r1, r5
 800d9d8:	2000      	movs	r0, #0
 800d9da:	f858 2b04 	ldr.w	r2, [r8], #4
 800d9de:	f8d1 c000 	ldr.w	ip, [r1]
 800d9e2:	fa1f fe82 	uxth.w	lr, r2
 800d9e6:	fa1f f38c 	uxth.w	r3, ip
 800d9ea:	eba3 030e 	sub.w	r3, r3, lr
 800d9ee:	4403      	add	r3, r0
 800d9f0:	0c12      	lsrs	r2, r2, #16
 800d9f2:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800d9f6:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800d9fa:	b29b      	uxth	r3, r3
 800d9fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800da00:	45c1      	cmp	r9, r8
 800da02:	f841 3b04 	str.w	r3, [r1], #4
 800da06:	ea4f 4022 	mov.w	r0, r2, asr #16
 800da0a:	d2e6      	bcs.n	800d9da <quorem+0xa4>
 800da0c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800da10:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800da14:	b922      	cbnz	r2, 800da20 <quorem+0xea>
 800da16:	3b04      	subs	r3, #4
 800da18:	429d      	cmp	r5, r3
 800da1a:	461a      	mov	r2, r3
 800da1c:	d30b      	bcc.n	800da36 <quorem+0x100>
 800da1e:	613c      	str	r4, [r7, #16]
 800da20:	3601      	adds	r6, #1
 800da22:	4630      	mov	r0, r6
 800da24:	b003      	add	sp, #12
 800da26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da2a:	6812      	ldr	r2, [r2, #0]
 800da2c:	3b04      	subs	r3, #4
 800da2e:	2a00      	cmp	r2, #0
 800da30:	d1cb      	bne.n	800d9ca <quorem+0x94>
 800da32:	3c01      	subs	r4, #1
 800da34:	e7c6      	b.n	800d9c4 <quorem+0x8e>
 800da36:	6812      	ldr	r2, [r2, #0]
 800da38:	3b04      	subs	r3, #4
 800da3a:	2a00      	cmp	r2, #0
 800da3c:	d1ef      	bne.n	800da1e <quorem+0xe8>
 800da3e:	3c01      	subs	r4, #1
 800da40:	e7ea      	b.n	800da18 <quorem+0xe2>
 800da42:	2000      	movs	r0, #0
 800da44:	e7ee      	b.n	800da24 <quorem+0xee>
	...

0800da48 <_dtoa_r>:
 800da48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da4c:	69c7      	ldr	r7, [r0, #28]
 800da4e:	b099      	sub	sp, #100	@ 0x64
 800da50:	ed8d 0b02 	vstr	d0, [sp, #8]
 800da54:	ec55 4b10 	vmov	r4, r5, d0
 800da58:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800da5a:	9109      	str	r1, [sp, #36]	@ 0x24
 800da5c:	4683      	mov	fp, r0
 800da5e:	920e      	str	r2, [sp, #56]	@ 0x38
 800da60:	9313      	str	r3, [sp, #76]	@ 0x4c
 800da62:	b97f      	cbnz	r7, 800da84 <_dtoa_r+0x3c>
 800da64:	2010      	movs	r0, #16
 800da66:	f000 fdfd 	bl	800e664 <malloc>
 800da6a:	4602      	mov	r2, r0
 800da6c:	f8cb 001c 	str.w	r0, [fp, #28]
 800da70:	b920      	cbnz	r0, 800da7c <_dtoa_r+0x34>
 800da72:	4ba7      	ldr	r3, [pc, #668]	@ (800dd10 <_dtoa_r+0x2c8>)
 800da74:	21ef      	movs	r1, #239	@ 0xef
 800da76:	48a7      	ldr	r0, [pc, #668]	@ (800dd14 <_dtoa_r+0x2cc>)
 800da78:	f001 fcae 	bl	800f3d8 <__assert_func>
 800da7c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800da80:	6007      	str	r7, [r0, #0]
 800da82:	60c7      	str	r7, [r0, #12]
 800da84:	f8db 301c 	ldr.w	r3, [fp, #28]
 800da88:	6819      	ldr	r1, [r3, #0]
 800da8a:	b159      	cbz	r1, 800daa4 <_dtoa_r+0x5c>
 800da8c:	685a      	ldr	r2, [r3, #4]
 800da8e:	604a      	str	r2, [r1, #4]
 800da90:	2301      	movs	r3, #1
 800da92:	4093      	lsls	r3, r2
 800da94:	608b      	str	r3, [r1, #8]
 800da96:	4658      	mov	r0, fp
 800da98:	f000 feda 	bl	800e850 <_Bfree>
 800da9c:	f8db 301c 	ldr.w	r3, [fp, #28]
 800daa0:	2200      	movs	r2, #0
 800daa2:	601a      	str	r2, [r3, #0]
 800daa4:	1e2b      	subs	r3, r5, #0
 800daa6:	bfb9      	ittee	lt
 800daa8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800daac:	9303      	strlt	r3, [sp, #12]
 800daae:	2300      	movge	r3, #0
 800dab0:	6033      	strge	r3, [r6, #0]
 800dab2:	9f03      	ldr	r7, [sp, #12]
 800dab4:	4b98      	ldr	r3, [pc, #608]	@ (800dd18 <_dtoa_r+0x2d0>)
 800dab6:	bfbc      	itt	lt
 800dab8:	2201      	movlt	r2, #1
 800daba:	6032      	strlt	r2, [r6, #0]
 800dabc:	43bb      	bics	r3, r7
 800dabe:	d112      	bne.n	800dae6 <_dtoa_r+0x9e>
 800dac0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800dac2:	f242 730f 	movw	r3, #9999	@ 0x270f
 800dac6:	6013      	str	r3, [r2, #0]
 800dac8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800dacc:	4323      	orrs	r3, r4
 800dace:	f000 854d 	beq.w	800e56c <_dtoa_r+0xb24>
 800dad2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800dad4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800dd2c <_dtoa_r+0x2e4>
 800dad8:	2b00      	cmp	r3, #0
 800dada:	f000 854f 	beq.w	800e57c <_dtoa_r+0xb34>
 800dade:	f10a 0303 	add.w	r3, sl, #3
 800dae2:	f000 bd49 	b.w	800e578 <_dtoa_r+0xb30>
 800dae6:	ed9d 7b02 	vldr	d7, [sp, #8]
 800daea:	2200      	movs	r2, #0
 800daec:	ec51 0b17 	vmov	r0, r1, d7
 800daf0:	2300      	movs	r3, #0
 800daf2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 800daf6:	f7f2 ffe7 	bl	8000ac8 <__aeabi_dcmpeq>
 800dafa:	4680      	mov	r8, r0
 800dafc:	b158      	cbz	r0, 800db16 <_dtoa_r+0xce>
 800dafe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800db00:	2301      	movs	r3, #1
 800db02:	6013      	str	r3, [r2, #0]
 800db04:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800db06:	b113      	cbz	r3, 800db0e <_dtoa_r+0xc6>
 800db08:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800db0a:	4b84      	ldr	r3, [pc, #528]	@ (800dd1c <_dtoa_r+0x2d4>)
 800db0c:	6013      	str	r3, [r2, #0]
 800db0e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 800dd30 <_dtoa_r+0x2e8>
 800db12:	f000 bd33 	b.w	800e57c <_dtoa_r+0xb34>
 800db16:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800db1a:	aa16      	add	r2, sp, #88	@ 0x58
 800db1c:	a917      	add	r1, sp, #92	@ 0x5c
 800db1e:	4658      	mov	r0, fp
 800db20:	f001 f980 	bl	800ee24 <__d2b>
 800db24:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800db28:	4681      	mov	r9, r0
 800db2a:	2e00      	cmp	r6, #0
 800db2c:	d077      	beq.n	800dc1e <_dtoa_r+0x1d6>
 800db2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800db30:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800db34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800db38:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800db3c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800db40:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800db44:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800db48:	4619      	mov	r1, r3
 800db4a:	2200      	movs	r2, #0
 800db4c:	4b74      	ldr	r3, [pc, #464]	@ (800dd20 <_dtoa_r+0x2d8>)
 800db4e:	f7f2 fb9b 	bl	8000288 <__aeabi_dsub>
 800db52:	a369      	add	r3, pc, #420	@ (adr r3, 800dcf8 <_dtoa_r+0x2b0>)
 800db54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800db58:	f7f2 fd4e 	bl	80005f8 <__aeabi_dmul>
 800db5c:	a368      	add	r3, pc, #416	@ (adr r3, 800dd00 <_dtoa_r+0x2b8>)
 800db5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800db62:	f7f2 fb93 	bl	800028c <__adddf3>
 800db66:	4604      	mov	r4, r0
 800db68:	4630      	mov	r0, r6
 800db6a:	460d      	mov	r5, r1
 800db6c:	f7f2 fcda 	bl	8000524 <__aeabi_i2d>
 800db70:	a365      	add	r3, pc, #404	@ (adr r3, 800dd08 <_dtoa_r+0x2c0>)
 800db72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800db76:	f7f2 fd3f 	bl	80005f8 <__aeabi_dmul>
 800db7a:	4602      	mov	r2, r0
 800db7c:	460b      	mov	r3, r1
 800db7e:	4620      	mov	r0, r4
 800db80:	4629      	mov	r1, r5
 800db82:	f7f2 fb83 	bl	800028c <__adddf3>
 800db86:	4604      	mov	r4, r0
 800db88:	460d      	mov	r5, r1
 800db8a:	f7f2 ffe5 	bl	8000b58 <__aeabi_d2iz>
 800db8e:	2200      	movs	r2, #0
 800db90:	4607      	mov	r7, r0
 800db92:	2300      	movs	r3, #0
 800db94:	4620      	mov	r0, r4
 800db96:	4629      	mov	r1, r5
 800db98:	f7f2 ffa0 	bl	8000adc <__aeabi_dcmplt>
 800db9c:	b140      	cbz	r0, 800dbb0 <_dtoa_r+0x168>
 800db9e:	4638      	mov	r0, r7
 800dba0:	f7f2 fcc0 	bl	8000524 <__aeabi_i2d>
 800dba4:	4622      	mov	r2, r4
 800dba6:	462b      	mov	r3, r5
 800dba8:	f7f2 ff8e 	bl	8000ac8 <__aeabi_dcmpeq>
 800dbac:	b900      	cbnz	r0, 800dbb0 <_dtoa_r+0x168>
 800dbae:	3f01      	subs	r7, #1
 800dbb0:	2f16      	cmp	r7, #22
 800dbb2:	d851      	bhi.n	800dc58 <_dtoa_r+0x210>
 800dbb4:	4b5b      	ldr	r3, [pc, #364]	@ (800dd24 <_dtoa_r+0x2dc>)
 800dbb6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800dbba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dbbe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800dbc2:	f7f2 ff8b 	bl	8000adc <__aeabi_dcmplt>
 800dbc6:	2800      	cmp	r0, #0
 800dbc8:	d048      	beq.n	800dc5c <_dtoa_r+0x214>
 800dbca:	3f01      	subs	r7, #1
 800dbcc:	2300      	movs	r3, #0
 800dbce:	9312      	str	r3, [sp, #72]	@ 0x48
 800dbd0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800dbd2:	1b9b      	subs	r3, r3, r6
 800dbd4:	1e5a      	subs	r2, r3, #1
 800dbd6:	bf44      	itt	mi
 800dbd8:	f1c3 0801 	rsbmi	r8, r3, #1
 800dbdc:	2300      	movmi	r3, #0
 800dbde:	9208      	str	r2, [sp, #32]
 800dbe0:	bf54      	ite	pl
 800dbe2:	f04f 0800 	movpl.w	r8, #0
 800dbe6:	9308      	strmi	r3, [sp, #32]
 800dbe8:	2f00      	cmp	r7, #0
 800dbea:	db39      	blt.n	800dc60 <_dtoa_r+0x218>
 800dbec:	9b08      	ldr	r3, [sp, #32]
 800dbee:	970f      	str	r7, [sp, #60]	@ 0x3c
 800dbf0:	443b      	add	r3, r7
 800dbf2:	9308      	str	r3, [sp, #32]
 800dbf4:	2300      	movs	r3, #0
 800dbf6:	930a      	str	r3, [sp, #40]	@ 0x28
 800dbf8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dbfa:	2b09      	cmp	r3, #9
 800dbfc:	d864      	bhi.n	800dcc8 <_dtoa_r+0x280>
 800dbfe:	2b05      	cmp	r3, #5
 800dc00:	bfc4      	itt	gt
 800dc02:	3b04      	subgt	r3, #4
 800dc04:	9309      	strgt	r3, [sp, #36]	@ 0x24
 800dc06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dc08:	f1a3 0302 	sub.w	r3, r3, #2
 800dc0c:	bfcc      	ite	gt
 800dc0e:	2400      	movgt	r4, #0
 800dc10:	2401      	movle	r4, #1
 800dc12:	2b03      	cmp	r3, #3
 800dc14:	d863      	bhi.n	800dcde <_dtoa_r+0x296>
 800dc16:	e8df f003 	tbb	[pc, r3]
 800dc1a:	372a      	.short	0x372a
 800dc1c:	5535      	.short	0x5535
 800dc1e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800dc22:	441e      	add	r6, r3
 800dc24:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800dc28:	2b20      	cmp	r3, #32
 800dc2a:	bfc1      	itttt	gt
 800dc2c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800dc30:	409f      	lslgt	r7, r3
 800dc32:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800dc36:	fa24 f303 	lsrgt.w	r3, r4, r3
 800dc3a:	bfd6      	itet	le
 800dc3c:	f1c3 0320 	rsble	r3, r3, #32
 800dc40:	ea47 0003 	orrgt.w	r0, r7, r3
 800dc44:	fa04 f003 	lslle.w	r0, r4, r3
 800dc48:	f7f2 fc5c 	bl	8000504 <__aeabi_ui2d>
 800dc4c:	2201      	movs	r2, #1
 800dc4e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800dc52:	3e01      	subs	r6, #1
 800dc54:	9214      	str	r2, [sp, #80]	@ 0x50
 800dc56:	e777      	b.n	800db48 <_dtoa_r+0x100>
 800dc58:	2301      	movs	r3, #1
 800dc5a:	e7b8      	b.n	800dbce <_dtoa_r+0x186>
 800dc5c:	9012      	str	r0, [sp, #72]	@ 0x48
 800dc5e:	e7b7      	b.n	800dbd0 <_dtoa_r+0x188>
 800dc60:	427b      	negs	r3, r7
 800dc62:	930a      	str	r3, [sp, #40]	@ 0x28
 800dc64:	2300      	movs	r3, #0
 800dc66:	eba8 0807 	sub.w	r8, r8, r7
 800dc6a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800dc6c:	e7c4      	b.n	800dbf8 <_dtoa_r+0x1b0>
 800dc6e:	2300      	movs	r3, #0
 800dc70:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dc72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800dc74:	2b00      	cmp	r3, #0
 800dc76:	dc35      	bgt.n	800dce4 <_dtoa_r+0x29c>
 800dc78:	2301      	movs	r3, #1
 800dc7a:	9300      	str	r3, [sp, #0]
 800dc7c:	9307      	str	r3, [sp, #28]
 800dc7e:	461a      	mov	r2, r3
 800dc80:	920e      	str	r2, [sp, #56]	@ 0x38
 800dc82:	e00b      	b.n	800dc9c <_dtoa_r+0x254>
 800dc84:	2301      	movs	r3, #1
 800dc86:	e7f3      	b.n	800dc70 <_dtoa_r+0x228>
 800dc88:	2300      	movs	r3, #0
 800dc8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dc8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800dc8e:	18fb      	adds	r3, r7, r3
 800dc90:	9300      	str	r3, [sp, #0]
 800dc92:	3301      	adds	r3, #1
 800dc94:	2b01      	cmp	r3, #1
 800dc96:	9307      	str	r3, [sp, #28]
 800dc98:	bfb8      	it	lt
 800dc9a:	2301      	movlt	r3, #1
 800dc9c:	f8db 001c 	ldr.w	r0, [fp, #28]
 800dca0:	2100      	movs	r1, #0
 800dca2:	2204      	movs	r2, #4
 800dca4:	f102 0514 	add.w	r5, r2, #20
 800dca8:	429d      	cmp	r5, r3
 800dcaa:	d91f      	bls.n	800dcec <_dtoa_r+0x2a4>
 800dcac:	6041      	str	r1, [r0, #4]
 800dcae:	4658      	mov	r0, fp
 800dcb0:	f000 fd8e 	bl	800e7d0 <_Balloc>
 800dcb4:	4682      	mov	sl, r0
 800dcb6:	2800      	cmp	r0, #0
 800dcb8:	d13c      	bne.n	800dd34 <_dtoa_r+0x2ec>
 800dcba:	4b1b      	ldr	r3, [pc, #108]	@ (800dd28 <_dtoa_r+0x2e0>)
 800dcbc:	4602      	mov	r2, r0
 800dcbe:	f240 11af 	movw	r1, #431	@ 0x1af
 800dcc2:	e6d8      	b.n	800da76 <_dtoa_r+0x2e>
 800dcc4:	2301      	movs	r3, #1
 800dcc6:	e7e0      	b.n	800dc8a <_dtoa_r+0x242>
 800dcc8:	2401      	movs	r4, #1
 800dcca:	2300      	movs	r3, #0
 800dccc:	9309      	str	r3, [sp, #36]	@ 0x24
 800dcce:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dcd0:	f04f 33ff 	mov.w	r3, #4294967295
 800dcd4:	9300      	str	r3, [sp, #0]
 800dcd6:	9307      	str	r3, [sp, #28]
 800dcd8:	2200      	movs	r2, #0
 800dcda:	2312      	movs	r3, #18
 800dcdc:	e7d0      	b.n	800dc80 <_dtoa_r+0x238>
 800dcde:	2301      	movs	r3, #1
 800dce0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dce2:	e7f5      	b.n	800dcd0 <_dtoa_r+0x288>
 800dce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800dce6:	9300      	str	r3, [sp, #0]
 800dce8:	9307      	str	r3, [sp, #28]
 800dcea:	e7d7      	b.n	800dc9c <_dtoa_r+0x254>
 800dcec:	3101      	adds	r1, #1
 800dcee:	0052      	lsls	r2, r2, #1
 800dcf0:	e7d8      	b.n	800dca4 <_dtoa_r+0x25c>
 800dcf2:	bf00      	nop
 800dcf4:	f3af 8000 	nop.w
 800dcf8:	636f4361 	.word	0x636f4361
 800dcfc:	3fd287a7 	.word	0x3fd287a7
 800dd00:	8b60c8b3 	.word	0x8b60c8b3
 800dd04:	3fc68a28 	.word	0x3fc68a28
 800dd08:	509f79fb 	.word	0x509f79fb
 800dd0c:	3fd34413 	.word	0x3fd34413
 800dd10:	0800f631 	.word	0x0800f631
 800dd14:	0800f648 	.word	0x0800f648
 800dd18:	7ff00000 	.word	0x7ff00000
 800dd1c:	0800f601 	.word	0x0800f601
 800dd20:	3ff80000 	.word	0x3ff80000
 800dd24:	0800f740 	.word	0x0800f740
 800dd28:	0800f6a0 	.word	0x0800f6a0
 800dd2c:	0800f62d 	.word	0x0800f62d
 800dd30:	0800f600 	.word	0x0800f600
 800dd34:	f8db 301c 	ldr.w	r3, [fp, #28]
 800dd38:	6018      	str	r0, [r3, #0]
 800dd3a:	9b07      	ldr	r3, [sp, #28]
 800dd3c:	2b0e      	cmp	r3, #14
 800dd3e:	f200 80a4 	bhi.w	800de8a <_dtoa_r+0x442>
 800dd42:	2c00      	cmp	r4, #0
 800dd44:	f000 80a1 	beq.w	800de8a <_dtoa_r+0x442>
 800dd48:	2f00      	cmp	r7, #0
 800dd4a:	dd33      	ble.n	800ddb4 <_dtoa_r+0x36c>
 800dd4c:	4bad      	ldr	r3, [pc, #692]	@ (800e004 <_dtoa_r+0x5bc>)
 800dd4e:	f007 020f 	and.w	r2, r7, #15
 800dd52:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800dd56:	ed93 7b00 	vldr	d7, [r3]
 800dd5a:	05f8      	lsls	r0, r7, #23
 800dd5c:	ed8d 7b04 	vstr	d7, [sp, #16]
 800dd60:	ea4f 1427 	mov.w	r4, r7, asr #4
 800dd64:	d516      	bpl.n	800dd94 <_dtoa_r+0x34c>
 800dd66:	4ba8      	ldr	r3, [pc, #672]	@ (800e008 <_dtoa_r+0x5c0>)
 800dd68:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800dd6c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800dd70:	f7f2 fd6c 	bl	800084c <__aeabi_ddiv>
 800dd74:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800dd78:	f004 040f 	and.w	r4, r4, #15
 800dd7c:	2603      	movs	r6, #3
 800dd7e:	4da2      	ldr	r5, [pc, #648]	@ (800e008 <_dtoa_r+0x5c0>)
 800dd80:	b954      	cbnz	r4, 800dd98 <_dtoa_r+0x350>
 800dd82:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800dd86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800dd8a:	f7f2 fd5f 	bl	800084c <__aeabi_ddiv>
 800dd8e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800dd92:	e028      	b.n	800dde6 <_dtoa_r+0x39e>
 800dd94:	2602      	movs	r6, #2
 800dd96:	e7f2      	b.n	800dd7e <_dtoa_r+0x336>
 800dd98:	07e1      	lsls	r1, r4, #31
 800dd9a:	d508      	bpl.n	800ddae <_dtoa_r+0x366>
 800dd9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800dda0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dda4:	f7f2 fc28 	bl	80005f8 <__aeabi_dmul>
 800dda8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800ddac:	3601      	adds	r6, #1
 800ddae:	1064      	asrs	r4, r4, #1
 800ddb0:	3508      	adds	r5, #8
 800ddb2:	e7e5      	b.n	800dd80 <_dtoa_r+0x338>
 800ddb4:	f000 80d2 	beq.w	800df5c <_dtoa_r+0x514>
 800ddb8:	427c      	negs	r4, r7
 800ddba:	4b92      	ldr	r3, [pc, #584]	@ (800e004 <_dtoa_r+0x5bc>)
 800ddbc:	4d92      	ldr	r5, [pc, #584]	@ (800e008 <_dtoa_r+0x5c0>)
 800ddbe:	f004 020f 	and.w	r2, r4, #15
 800ddc2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ddc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ddca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800ddce:	f7f2 fc13 	bl	80005f8 <__aeabi_dmul>
 800ddd2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ddd6:	1124      	asrs	r4, r4, #4
 800ddd8:	2300      	movs	r3, #0
 800ddda:	2602      	movs	r6, #2
 800dddc:	2c00      	cmp	r4, #0
 800ddde:	f040 80b2 	bne.w	800df46 <_dtoa_r+0x4fe>
 800dde2:	2b00      	cmp	r3, #0
 800dde4:	d1d3      	bne.n	800dd8e <_dtoa_r+0x346>
 800dde6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800dde8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800ddec:	2b00      	cmp	r3, #0
 800ddee:	f000 80b7 	beq.w	800df60 <_dtoa_r+0x518>
 800ddf2:	4b86      	ldr	r3, [pc, #536]	@ (800e00c <_dtoa_r+0x5c4>)
 800ddf4:	2200      	movs	r2, #0
 800ddf6:	4620      	mov	r0, r4
 800ddf8:	4629      	mov	r1, r5
 800ddfa:	f7f2 fe6f 	bl	8000adc <__aeabi_dcmplt>
 800ddfe:	2800      	cmp	r0, #0
 800de00:	f000 80ae 	beq.w	800df60 <_dtoa_r+0x518>
 800de04:	9b07      	ldr	r3, [sp, #28]
 800de06:	2b00      	cmp	r3, #0
 800de08:	f000 80aa 	beq.w	800df60 <_dtoa_r+0x518>
 800de0c:	9b00      	ldr	r3, [sp, #0]
 800de0e:	2b00      	cmp	r3, #0
 800de10:	dd37      	ble.n	800de82 <_dtoa_r+0x43a>
 800de12:	1e7b      	subs	r3, r7, #1
 800de14:	9304      	str	r3, [sp, #16]
 800de16:	4620      	mov	r0, r4
 800de18:	4b7d      	ldr	r3, [pc, #500]	@ (800e010 <_dtoa_r+0x5c8>)
 800de1a:	2200      	movs	r2, #0
 800de1c:	4629      	mov	r1, r5
 800de1e:	f7f2 fbeb 	bl	80005f8 <__aeabi_dmul>
 800de22:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800de26:	9c00      	ldr	r4, [sp, #0]
 800de28:	3601      	adds	r6, #1
 800de2a:	4630      	mov	r0, r6
 800de2c:	f7f2 fb7a 	bl	8000524 <__aeabi_i2d>
 800de30:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800de34:	f7f2 fbe0 	bl	80005f8 <__aeabi_dmul>
 800de38:	4b76      	ldr	r3, [pc, #472]	@ (800e014 <_dtoa_r+0x5cc>)
 800de3a:	2200      	movs	r2, #0
 800de3c:	f7f2 fa26 	bl	800028c <__adddf3>
 800de40:	4605      	mov	r5, r0
 800de42:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800de46:	2c00      	cmp	r4, #0
 800de48:	f040 808d 	bne.w	800df66 <_dtoa_r+0x51e>
 800de4c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800de50:	4b71      	ldr	r3, [pc, #452]	@ (800e018 <_dtoa_r+0x5d0>)
 800de52:	2200      	movs	r2, #0
 800de54:	f7f2 fa18 	bl	8000288 <__aeabi_dsub>
 800de58:	4602      	mov	r2, r0
 800de5a:	460b      	mov	r3, r1
 800de5c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800de60:	462a      	mov	r2, r5
 800de62:	4633      	mov	r3, r6
 800de64:	f7f2 fe58 	bl	8000b18 <__aeabi_dcmpgt>
 800de68:	2800      	cmp	r0, #0
 800de6a:	f040 828b 	bne.w	800e384 <_dtoa_r+0x93c>
 800de6e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800de72:	462a      	mov	r2, r5
 800de74:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800de78:	f7f2 fe30 	bl	8000adc <__aeabi_dcmplt>
 800de7c:	2800      	cmp	r0, #0
 800de7e:	f040 8128 	bne.w	800e0d2 <_dtoa_r+0x68a>
 800de82:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800de86:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800de8a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800de8c:	2b00      	cmp	r3, #0
 800de8e:	f2c0 815a 	blt.w	800e146 <_dtoa_r+0x6fe>
 800de92:	2f0e      	cmp	r7, #14
 800de94:	f300 8157 	bgt.w	800e146 <_dtoa_r+0x6fe>
 800de98:	4b5a      	ldr	r3, [pc, #360]	@ (800e004 <_dtoa_r+0x5bc>)
 800de9a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800de9e:	ed93 7b00 	vldr	d7, [r3]
 800dea2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800dea4:	2b00      	cmp	r3, #0
 800dea6:	ed8d 7b00 	vstr	d7, [sp]
 800deaa:	da03      	bge.n	800deb4 <_dtoa_r+0x46c>
 800deac:	9b07      	ldr	r3, [sp, #28]
 800deae:	2b00      	cmp	r3, #0
 800deb0:	f340 8101 	ble.w	800e0b6 <_dtoa_r+0x66e>
 800deb4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800deb8:	4656      	mov	r6, sl
 800deba:	e9dd 2300 	ldrd	r2, r3, [sp]
 800debe:	4620      	mov	r0, r4
 800dec0:	4629      	mov	r1, r5
 800dec2:	f7f2 fcc3 	bl	800084c <__aeabi_ddiv>
 800dec6:	f7f2 fe47 	bl	8000b58 <__aeabi_d2iz>
 800deca:	4680      	mov	r8, r0
 800decc:	f7f2 fb2a 	bl	8000524 <__aeabi_i2d>
 800ded0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ded4:	f7f2 fb90 	bl	80005f8 <__aeabi_dmul>
 800ded8:	4602      	mov	r2, r0
 800deda:	460b      	mov	r3, r1
 800dedc:	4620      	mov	r0, r4
 800dede:	4629      	mov	r1, r5
 800dee0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800dee4:	f7f2 f9d0 	bl	8000288 <__aeabi_dsub>
 800dee8:	f806 4b01 	strb.w	r4, [r6], #1
 800deec:	9d07      	ldr	r5, [sp, #28]
 800deee:	eba6 040a 	sub.w	r4, r6, sl
 800def2:	42a5      	cmp	r5, r4
 800def4:	4602      	mov	r2, r0
 800def6:	460b      	mov	r3, r1
 800def8:	f040 8117 	bne.w	800e12a <_dtoa_r+0x6e2>
 800defc:	f7f2 f9c6 	bl	800028c <__adddf3>
 800df00:	e9dd 2300 	ldrd	r2, r3, [sp]
 800df04:	4604      	mov	r4, r0
 800df06:	460d      	mov	r5, r1
 800df08:	f7f2 fe06 	bl	8000b18 <__aeabi_dcmpgt>
 800df0c:	2800      	cmp	r0, #0
 800df0e:	f040 80f9 	bne.w	800e104 <_dtoa_r+0x6bc>
 800df12:	e9dd 2300 	ldrd	r2, r3, [sp]
 800df16:	4620      	mov	r0, r4
 800df18:	4629      	mov	r1, r5
 800df1a:	f7f2 fdd5 	bl	8000ac8 <__aeabi_dcmpeq>
 800df1e:	b118      	cbz	r0, 800df28 <_dtoa_r+0x4e0>
 800df20:	f018 0f01 	tst.w	r8, #1
 800df24:	f040 80ee 	bne.w	800e104 <_dtoa_r+0x6bc>
 800df28:	4649      	mov	r1, r9
 800df2a:	4658      	mov	r0, fp
 800df2c:	f000 fc90 	bl	800e850 <_Bfree>
 800df30:	2300      	movs	r3, #0
 800df32:	7033      	strb	r3, [r6, #0]
 800df34:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800df36:	3701      	adds	r7, #1
 800df38:	601f      	str	r7, [r3, #0]
 800df3a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800df3c:	2b00      	cmp	r3, #0
 800df3e:	f000 831d 	beq.w	800e57c <_dtoa_r+0xb34>
 800df42:	601e      	str	r6, [r3, #0]
 800df44:	e31a      	b.n	800e57c <_dtoa_r+0xb34>
 800df46:	07e2      	lsls	r2, r4, #31
 800df48:	d505      	bpl.n	800df56 <_dtoa_r+0x50e>
 800df4a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800df4e:	f7f2 fb53 	bl	80005f8 <__aeabi_dmul>
 800df52:	3601      	adds	r6, #1
 800df54:	2301      	movs	r3, #1
 800df56:	1064      	asrs	r4, r4, #1
 800df58:	3508      	adds	r5, #8
 800df5a:	e73f      	b.n	800dddc <_dtoa_r+0x394>
 800df5c:	2602      	movs	r6, #2
 800df5e:	e742      	b.n	800dde6 <_dtoa_r+0x39e>
 800df60:	9c07      	ldr	r4, [sp, #28]
 800df62:	9704      	str	r7, [sp, #16]
 800df64:	e761      	b.n	800de2a <_dtoa_r+0x3e2>
 800df66:	4b27      	ldr	r3, [pc, #156]	@ (800e004 <_dtoa_r+0x5bc>)
 800df68:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800df6a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800df6e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800df72:	4454      	add	r4, sl
 800df74:	2900      	cmp	r1, #0
 800df76:	d053      	beq.n	800e020 <_dtoa_r+0x5d8>
 800df78:	4928      	ldr	r1, [pc, #160]	@ (800e01c <_dtoa_r+0x5d4>)
 800df7a:	2000      	movs	r0, #0
 800df7c:	f7f2 fc66 	bl	800084c <__aeabi_ddiv>
 800df80:	4633      	mov	r3, r6
 800df82:	462a      	mov	r2, r5
 800df84:	f7f2 f980 	bl	8000288 <__aeabi_dsub>
 800df88:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800df8c:	4656      	mov	r6, sl
 800df8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800df92:	f7f2 fde1 	bl	8000b58 <__aeabi_d2iz>
 800df96:	4605      	mov	r5, r0
 800df98:	f7f2 fac4 	bl	8000524 <__aeabi_i2d>
 800df9c:	4602      	mov	r2, r0
 800df9e:	460b      	mov	r3, r1
 800dfa0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800dfa4:	f7f2 f970 	bl	8000288 <__aeabi_dsub>
 800dfa8:	3530      	adds	r5, #48	@ 0x30
 800dfaa:	4602      	mov	r2, r0
 800dfac:	460b      	mov	r3, r1
 800dfae:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800dfb2:	f806 5b01 	strb.w	r5, [r6], #1
 800dfb6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800dfba:	f7f2 fd8f 	bl	8000adc <__aeabi_dcmplt>
 800dfbe:	2800      	cmp	r0, #0
 800dfc0:	d171      	bne.n	800e0a6 <_dtoa_r+0x65e>
 800dfc2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800dfc6:	4911      	ldr	r1, [pc, #68]	@ (800e00c <_dtoa_r+0x5c4>)
 800dfc8:	2000      	movs	r0, #0
 800dfca:	f7f2 f95d 	bl	8000288 <__aeabi_dsub>
 800dfce:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800dfd2:	f7f2 fd83 	bl	8000adc <__aeabi_dcmplt>
 800dfd6:	2800      	cmp	r0, #0
 800dfd8:	f040 8095 	bne.w	800e106 <_dtoa_r+0x6be>
 800dfdc:	42a6      	cmp	r6, r4
 800dfde:	f43f af50 	beq.w	800de82 <_dtoa_r+0x43a>
 800dfe2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800dfe6:	4b0a      	ldr	r3, [pc, #40]	@ (800e010 <_dtoa_r+0x5c8>)
 800dfe8:	2200      	movs	r2, #0
 800dfea:	f7f2 fb05 	bl	80005f8 <__aeabi_dmul>
 800dfee:	4b08      	ldr	r3, [pc, #32]	@ (800e010 <_dtoa_r+0x5c8>)
 800dff0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800dff4:	2200      	movs	r2, #0
 800dff6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800dffa:	f7f2 fafd 	bl	80005f8 <__aeabi_dmul>
 800dffe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e002:	e7c4      	b.n	800df8e <_dtoa_r+0x546>
 800e004:	0800f740 	.word	0x0800f740
 800e008:	0800f718 	.word	0x0800f718
 800e00c:	3ff00000 	.word	0x3ff00000
 800e010:	40240000 	.word	0x40240000
 800e014:	401c0000 	.word	0x401c0000
 800e018:	40140000 	.word	0x40140000
 800e01c:	3fe00000 	.word	0x3fe00000
 800e020:	4631      	mov	r1, r6
 800e022:	4628      	mov	r0, r5
 800e024:	f7f2 fae8 	bl	80005f8 <__aeabi_dmul>
 800e028:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800e02c:	9415      	str	r4, [sp, #84]	@ 0x54
 800e02e:	4656      	mov	r6, sl
 800e030:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800e034:	f7f2 fd90 	bl	8000b58 <__aeabi_d2iz>
 800e038:	4605      	mov	r5, r0
 800e03a:	f7f2 fa73 	bl	8000524 <__aeabi_i2d>
 800e03e:	4602      	mov	r2, r0
 800e040:	460b      	mov	r3, r1
 800e042:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800e046:	f7f2 f91f 	bl	8000288 <__aeabi_dsub>
 800e04a:	3530      	adds	r5, #48	@ 0x30
 800e04c:	f806 5b01 	strb.w	r5, [r6], #1
 800e050:	4602      	mov	r2, r0
 800e052:	460b      	mov	r3, r1
 800e054:	42a6      	cmp	r6, r4
 800e056:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800e05a:	f04f 0200 	mov.w	r2, #0
 800e05e:	d124      	bne.n	800e0aa <_dtoa_r+0x662>
 800e060:	4bac      	ldr	r3, [pc, #688]	@ (800e314 <_dtoa_r+0x8cc>)
 800e062:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800e066:	f7f2 f911 	bl	800028c <__adddf3>
 800e06a:	4602      	mov	r2, r0
 800e06c:	460b      	mov	r3, r1
 800e06e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800e072:	f7f2 fd51 	bl	8000b18 <__aeabi_dcmpgt>
 800e076:	2800      	cmp	r0, #0
 800e078:	d145      	bne.n	800e106 <_dtoa_r+0x6be>
 800e07a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800e07e:	49a5      	ldr	r1, [pc, #660]	@ (800e314 <_dtoa_r+0x8cc>)
 800e080:	2000      	movs	r0, #0
 800e082:	f7f2 f901 	bl	8000288 <__aeabi_dsub>
 800e086:	4602      	mov	r2, r0
 800e088:	460b      	mov	r3, r1
 800e08a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800e08e:	f7f2 fd25 	bl	8000adc <__aeabi_dcmplt>
 800e092:	2800      	cmp	r0, #0
 800e094:	f43f aef5 	beq.w	800de82 <_dtoa_r+0x43a>
 800e098:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800e09a:	1e73      	subs	r3, r6, #1
 800e09c:	9315      	str	r3, [sp, #84]	@ 0x54
 800e09e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800e0a2:	2b30      	cmp	r3, #48	@ 0x30
 800e0a4:	d0f8      	beq.n	800e098 <_dtoa_r+0x650>
 800e0a6:	9f04      	ldr	r7, [sp, #16]
 800e0a8:	e73e      	b.n	800df28 <_dtoa_r+0x4e0>
 800e0aa:	4b9b      	ldr	r3, [pc, #620]	@ (800e318 <_dtoa_r+0x8d0>)
 800e0ac:	f7f2 faa4 	bl	80005f8 <__aeabi_dmul>
 800e0b0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e0b4:	e7bc      	b.n	800e030 <_dtoa_r+0x5e8>
 800e0b6:	d10c      	bne.n	800e0d2 <_dtoa_r+0x68a>
 800e0b8:	4b98      	ldr	r3, [pc, #608]	@ (800e31c <_dtoa_r+0x8d4>)
 800e0ba:	2200      	movs	r2, #0
 800e0bc:	e9dd 0100 	ldrd	r0, r1, [sp]
 800e0c0:	f7f2 fa9a 	bl	80005f8 <__aeabi_dmul>
 800e0c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800e0c8:	f7f2 fd1c 	bl	8000b04 <__aeabi_dcmpge>
 800e0cc:	2800      	cmp	r0, #0
 800e0ce:	f000 8157 	beq.w	800e380 <_dtoa_r+0x938>
 800e0d2:	2400      	movs	r4, #0
 800e0d4:	4625      	mov	r5, r4
 800e0d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e0d8:	43db      	mvns	r3, r3
 800e0da:	9304      	str	r3, [sp, #16]
 800e0dc:	4656      	mov	r6, sl
 800e0de:	2700      	movs	r7, #0
 800e0e0:	4621      	mov	r1, r4
 800e0e2:	4658      	mov	r0, fp
 800e0e4:	f000 fbb4 	bl	800e850 <_Bfree>
 800e0e8:	2d00      	cmp	r5, #0
 800e0ea:	d0dc      	beq.n	800e0a6 <_dtoa_r+0x65e>
 800e0ec:	b12f      	cbz	r7, 800e0fa <_dtoa_r+0x6b2>
 800e0ee:	42af      	cmp	r7, r5
 800e0f0:	d003      	beq.n	800e0fa <_dtoa_r+0x6b2>
 800e0f2:	4639      	mov	r1, r7
 800e0f4:	4658      	mov	r0, fp
 800e0f6:	f000 fbab 	bl	800e850 <_Bfree>
 800e0fa:	4629      	mov	r1, r5
 800e0fc:	4658      	mov	r0, fp
 800e0fe:	f000 fba7 	bl	800e850 <_Bfree>
 800e102:	e7d0      	b.n	800e0a6 <_dtoa_r+0x65e>
 800e104:	9704      	str	r7, [sp, #16]
 800e106:	4633      	mov	r3, r6
 800e108:	461e      	mov	r6, r3
 800e10a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e10e:	2a39      	cmp	r2, #57	@ 0x39
 800e110:	d107      	bne.n	800e122 <_dtoa_r+0x6da>
 800e112:	459a      	cmp	sl, r3
 800e114:	d1f8      	bne.n	800e108 <_dtoa_r+0x6c0>
 800e116:	9a04      	ldr	r2, [sp, #16]
 800e118:	3201      	adds	r2, #1
 800e11a:	9204      	str	r2, [sp, #16]
 800e11c:	2230      	movs	r2, #48	@ 0x30
 800e11e:	f88a 2000 	strb.w	r2, [sl]
 800e122:	781a      	ldrb	r2, [r3, #0]
 800e124:	3201      	adds	r2, #1
 800e126:	701a      	strb	r2, [r3, #0]
 800e128:	e7bd      	b.n	800e0a6 <_dtoa_r+0x65e>
 800e12a:	4b7b      	ldr	r3, [pc, #492]	@ (800e318 <_dtoa_r+0x8d0>)
 800e12c:	2200      	movs	r2, #0
 800e12e:	f7f2 fa63 	bl	80005f8 <__aeabi_dmul>
 800e132:	2200      	movs	r2, #0
 800e134:	2300      	movs	r3, #0
 800e136:	4604      	mov	r4, r0
 800e138:	460d      	mov	r5, r1
 800e13a:	f7f2 fcc5 	bl	8000ac8 <__aeabi_dcmpeq>
 800e13e:	2800      	cmp	r0, #0
 800e140:	f43f aebb 	beq.w	800deba <_dtoa_r+0x472>
 800e144:	e6f0      	b.n	800df28 <_dtoa_r+0x4e0>
 800e146:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e148:	2a00      	cmp	r2, #0
 800e14a:	f000 80db 	beq.w	800e304 <_dtoa_r+0x8bc>
 800e14e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e150:	2a01      	cmp	r2, #1
 800e152:	f300 80bf 	bgt.w	800e2d4 <_dtoa_r+0x88c>
 800e156:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800e158:	2a00      	cmp	r2, #0
 800e15a:	f000 80b7 	beq.w	800e2cc <_dtoa_r+0x884>
 800e15e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800e162:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e164:	4646      	mov	r6, r8
 800e166:	9a08      	ldr	r2, [sp, #32]
 800e168:	2101      	movs	r1, #1
 800e16a:	441a      	add	r2, r3
 800e16c:	4658      	mov	r0, fp
 800e16e:	4498      	add	r8, r3
 800e170:	9208      	str	r2, [sp, #32]
 800e172:	f000 fc21 	bl	800e9b8 <__i2b>
 800e176:	4605      	mov	r5, r0
 800e178:	b15e      	cbz	r6, 800e192 <_dtoa_r+0x74a>
 800e17a:	9b08      	ldr	r3, [sp, #32]
 800e17c:	2b00      	cmp	r3, #0
 800e17e:	dd08      	ble.n	800e192 <_dtoa_r+0x74a>
 800e180:	42b3      	cmp	r3, r6
 800e182:	9a08      	ldr	r2, [sp, #32]
 800e184:	bfa8      	it	ge
 800e186:	4633      	movge	r3, r6
 800e188:	eba8 0803 	sub.w	r8, r8, r3
 800e18c:	1af6      	subs	r6, r6, r3
 800e18e:	1ad3      	subs	r3, r2, r3
 800e190:	9308      	str	r3, [sp, #32]
 800e192:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e194:	b1f3      	cbz	r3, 800e1d4 <_dtoa_r+0x78c>
 800e196:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e198:	2b00      	cmp	r3, #0
 800e19a:	f000 80b7 	beq.w	800e30c <_dtoa_r+0x8c4>
 800e19e:	b18c      	cbz	r4, 800e1c4 <_dtoa_r+0x77c>
 800e1a0:	4629      	mov	r1, r5
 800e1a2:	4622      	mov	r2, r4
 800e1a4:	4658      	mov	r0, fp
 800e1a6:	f000 fcc7 	bl	800eb38 <__pow5mult>
 800e1aa:	464a      	mov	r2, r9
 800e1ac:	4601      	mov	r1, r0
 800e1ae:	4605      	mov	r5, r0
 800e1b0:	4658      	mov	r0, fp
 800e1b2:	f000 fc17 	bl	800e9e4 <__multiply>
 800e1b6:	4649      	mov	r1, r9
 800e1b8:	9004      	str	r0, [sp, #16]
 800e1ba:	4658      	mov	r0, fp
 800e1bc:	f000 fb48 	bl	800e850 <_Bfree>
 800e1c0:	9b04      	ldr	r3, [sp, #16]
 800e1c2:	4699      	mov	r9, r3
 800e1c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e1c6:	1b1a      	subs	r2, r3, r4
 800e1c8:	d004      	beq.n	800e1d4 <_dtoa_r+0x78c>
 800e1ca:	4649      	mov	r1, r9
 800e1cc:	4658      	mov	r0, fp
 800e1ce:	f000 fcb3 	bl	800eb38 <__pow5mult>
 800e1d2:	4681      	mov	r9, r0
 800e1d4:	2101      	movs	r1, #1
 800e1d6:	4658      	mov	r0, fp
 800e1d8:	f000 fbee 	bl	800e9b8 <__i2b>
 800e1dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e1de:	4604      	mov	r4, r0
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	f000 81cf 	beq.w	800e584 <_dtoa_r+0xb3c>
 800e1e6:	461a      	mov	r2, r3
 800e1e8:	4601      	mov	r1, r0
 800e1ea:	4658      	mov	r0, fp
 800e1ec:	f000 fca4 	bl	800eb38 <__pow5mult>
 800e1f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e1f2:	2b01      	cmp	r3, #1
 800e1f4:	4604      	mov	r4, r0
 800e1f6:	f300 8095 	bgt.w	800e324 <_dtoa_r+0x8dc>
 800e1fa:	9b02      	ldr	r3, [sp, #8]
 800e1fc:	2b00      	cmp	r3, #0
 800e1fe:	f040 8087 	bne.w	800e310 <_dtoa_r+0x8c8>
 800e202:	9b03      	ldr	r3, [sp, #12]
 800e204:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800e208:	2b00      	cmp	r3, #0
 800e20a:	f040 8089 	bne.w	800e320 <_dtoa_r+0x8d8>
 800e20e:	9b03      	ldr	r3, [sp, #12]
 800e210:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800e214:	0d1b      	lsrs	r3, r3, #20
 800e216:	051b      	lsls	r3, r3, #20
 800e218:	b12b      	cbz	r3, 800e226 <_dtoa_r+0x7de>
 800e21a:	9b08      	ldr	r3, [sp, #32]
 800e21c:	3301      	adds	r3, #1
 800e21e:	9308      	str	r3, [sp, #32]
 800e220:	f108 0801 	add.w	r8, r8, #1
 800e224:	2301      	movs	r3, #1
 800e226:	930a      	str	r3, [sp, #40]	@ 0x28
 800e228:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e22a:	2b00      	cmp	r3, #0
 800e22c:	f000 81b0 	beq.w	800e590 <_dtoa_r+0xb48>
 800e230:	6923      	ldr	r3, [r4, #16]
 800e232:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e236:	6918      	ldr	r0, [r3, #16]
 800e238:	f000 fb72 	bl	800e920 <__hi0bits>
 800e23c:	f1c0 0020 	rsb	r0, r0, #32
 800e240:	9b08      	ldr	r3, [sp, #32]
 800e242:	4418      	add	r0, r3
 800e244:	f010 001f 	ands.w	r0, r0, #31
 800e248:	d077      	beq.n	800e33a <_dtoa_r+0x8f2>
 800e24a:	f1c0 0320 	rsb	r3, r0, #32
 800e24e:	2b04      	cmp	r3, #4
 800e250:	dd6b      	ble.n	800e32a <_dtoa_r+0x8e2>
 800e252:	9b08      	ldr	r3, [sp, #32]
 800e254:	f1c0 001c 	rsb	r0, r0, #28
 800e258:	4403      	add	r3, r0
 800e25a:	4480      	add	r8, r0
 800e25c:	4406      	add	r6, r0
 800e25e:	9308      	str	r3, [sp, #32]
 800e260:	f1b8 0f00 	cmp.w	r8, #0
 800e264:	dd05      	ble.n	800e272 <_dtoa_r+0x82a>
 800e266:	4649      	mov	r1, r9
 800e268:	4642      	mov	r2, r8
 800e26a:	4658      	mov	r0, fp
 800e26c:	f000 fcbe 	bl	800ebec <__lshift>
 800e270:	4681      	mov	r9, r0
 800e272:	9b08      	ldr	r3, [sp, #32]
 800e274:	2b00      	cmp	r3, #0
 800e276:	dd05      	ble.n	800e284 <_dtoa_r+0x83c>
 800e278:	4621      	mov	r1, r4
 800e27a:	461a      	mov	r2, r3
 800e27c:	4658      	mov	r0, fp
 800e27e:	f000 fcb5 	bl	800ebec <__lshift>
 800e282:	4604      	mov	r4, r0
 800e284:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e286:	2b00      	cmp	r3, #0
 800e288:	d059      	beq.n	800e33e <_dtoa_r+0x8f6>
 800e28a:	4621      	mov	r1, r4
 800e28c:	4648      	mov	r0, r9
 800e28e:	f000 fd19 	bl	800ecc4 <__mcmp>
 800e292:	2800      	cmp	r0, #0
 800e294:	da53      	bge.n	800e33e <_dtoa_r+0x8f6>
 800e296:	1e7b      	subs	r3, r7, #1
 800e298:	9304      	str	r3, [sp, #16]
 800e29a:	4649      	mov	r1, r9
 800e29c:	2300      	movs	r3, #0
 800e29e:	220a      	movs	r2, #10
 800e2a0:	4658      	mov	r0, fp
 800e2a2:	f000 faf7 	bl	800e894 <__multadd>
 800e2a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e2a8:	4681      	mov	r9, r0
 800e2aa:	2b00      	cmp	r3, #0
 800e2ac:	f000 8172 	beq.w	800e594 <_dtoa_r+0xb4c>
 800e2b0:	2300      	movs	r3, #0
 800e2b2:	4629      	mov	r1, r5
 800e2b4:	220a      	movs	r2, #10
 800e2b6:	4658      	mov	r0, fp
 800e2b8:	f000 faec 	bl	800e894 <__multadd>
 800e2bc:	9b00      	ldr	r3, [sp, #0]
 800e2be:	2b00      	cmp	r3, #0
 800e2c0:	4605      	mov	r5, r0
 800e2c2:	dc67      	bgt.n	800e394 <_dtoa_r+0x94c>
 800e2c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e2c6:	2b02      	cmp	r3, #2
 800e2c8:	dc41      	bgt.n	800e34e <_dtoa_r+0x906>
 800e2ca:	e063      	b.n	800e394 <_dtoa_r+0x94c>
 800e2cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800e2ce:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800e2d2:	e746      	b.n	800e162 <_dtoa_r+0x71a>
 800e2d4:	9b07      	ldr	r3, [sp, #28]
 800e2d6:	1e5c      	subs	r4, r3, #1
 800e2d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e2da:	42a3      	cmp	r3, r4
 800e2dc:	bfbf      	itttt	lt
 800e2de:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800e2e0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800e2e2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800e2e4:	1ae3      	sublt	r3, r4, r3
 800e2e6:	bfb4      	ite	lt
 800e2e8:	18d2      	addlt	r2, r2, r3
 800e2ea:	1b1c      	subge	r4, r3, r4
 800e2ec:	9b07      	ldr	r3, [sp, #28]
 800e2ee:	bfbc      	itt	lt
 800e2f0:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 800e2f2:	2400      	movlt	r4, #0
 800e2f4:	2b00      	cmp	r3, #0
 800e2f6:	bfb5      	itete	lt
 800e2f8:	eba8 0603 	sublt.w	r6, r8, r3
 800e2fc:	9b07      	ldrge	r3, [sp, #28]
 800e2fe:	2300      	movlt	r3, #0
 800e300:	4646      	movge	r6, r8
 800e302:	e730      	b.n	800e166 <_dtoa_r+0x71e>
 800e304:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e306:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800e308:	4646      	mov	r6, r8
 800e30a:	e735      	b.n	800e178 <_dtoa_r+0x730>
 800e30c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e30e:	e75c      	b.n	800e1ca <_dtoa_r+0x782>
 800e310:	2300      	movs	r3, #0
 800e312:	e788      	b.n	800e226 <_dtoa_r+0x7de>
 800e314:	3fe00000 	.word	0x3fe00000
 800e318:	40240000 	.word	0x40240000
 800e31c:	40140000 	.word	0x40140000
 800e320:	9b02      	ldr	r3, [sp, #8]
 800e322:	e780      	b.n	800e226 <_dtoa_r+0x7de>
 800e324:	2300      	movs	r3, #0
 800e326:	930a      	str	r3, [sp, #40]	@ 0x28
 800e328:	e782      	b.n	800e230 <_dtoa_r+0x7e8>
 800e32a:	d099      	beq.n	800e260 <_dtoa_r+0x818>
 800e32c:	9a08      	ldr	r2, [sp, #32]
 800e32e:	331c      	adds	r3, #28
 800e330:	441a      	add	r2, r3
 800e332:	4498      	add	r8, r3
 800e334:	441e      	add	r6, r3
 800e336:	9208      	str	r2, [sp, #32]
 800e338:	e792      	b.n	800e260 <_dtoa_r+0x818>
 800e33a:	4603      	mov	r3, r0
 800e33c:	e7f6      	b.n	800e32c <_dtoa_r+0x8e4>
 800e33e:	9b07      	ldr	r3, [sp, #28]
 800e340:	9704      	str	r7, [sp, #16]
 800e342:	2b00      	cmp	r3, #0
 800e344:	dc20      	bgt.n	800e388 <_dtoa_r+0x940>
 800e346:	9300      	str	r3, [sp, #0]
 800e348:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e34a:	2b02      	cmp	r3, #2
 800e34c:	dd1e      	ble.n	800e38c <_dtoa_r+0x944>
 800e34e:	9b00      	ldr	r3, [sp, #0]
 800e350:	2b00      	cmp	r3, #0
 800e352:	f47f aec0 	bne.w	800e0d6 <_dtoa_r+0x68e>
 800e356:	4621      	mov	r1, r4
 800e358:	2205      	movs	r2, #5
 800e35a:	4658      	mov	r0, fp
 800e35c:	f000 fa9a 	bl	800e894 <__multadd>
 800e360:	4601      	mov	r1, r0
 800e362:	4604      	mov	r4, r0
 800e364:	4648      	mov	r0, r9
 800e366:	f000 fcad 	bl	800ecc4 <__mcmp>
 800e36a:	2800      	cmp	r0, #0
 800e36c:	f77f aeb3 	ble.w	800e0d6 <_dtoa_r+0x68e>
 800e370:	4656      	mov	r6, sl
 800e372:	2331      	movs	r3, #49	@ 0x31
 800e374:	f806 3b01 	strb.w	r3, [r6], #1
 800e378:	9b04      	ldr	r3, [sp, #16]
 800e37a:	3301      	adds	r3, #1
 800e37c:	9304      	str	r3, [sp, #16]
 800e37e:	e6ae      	b.n	800e0de <_dtoa_r+0x696>
 800e380:	9c07      	ldr	r4, [sp, #28]
 800e382:	9704      	str	r7, [sp, #16]
 800e384:	4625      	mov	r5, r4
 800e386:	e7f3      	b.n	800e370 <_dtoa_r+0x928>
 800e388:	9b07      	ldr	r3, [sp, #28]
 800e38a:	9300      	str	r3, [sp, #0]
 800e38c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e38e:	2b00      	cmp	r3, #0
 800e390:	f000 8104 	beq.w	800e59c <_dtoa_r+0xb54>
 800e394:	2e00      	cmp	r6, #0
 800e396:	dd05      	ble.n	800e3a4 <_dtoa_r+0x95c>
 800e398:	4629      	mov	r1, r5
 800e39a:	4632      	mov	r2, r6
 800e39c:	4658      	mov	r0, fp
 800e39e:	f000 fc25 	bl	800ebec <__lshift>
 800e3a2:	4605      	mov	r5, r0
 800e3a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e3a6:	2b00      	cmp	r3, #0
 800e3a8:	d05a      	beq.n	800e460 <_dtoa_r+0xa18>
 800e3aa:	6869      	ldr	r1, [r5, #4]
 800e3ac:	4658      	mov	r0, fp
 800e3ae:	f000 fa0f 	bl	800e7d0 <_Balloc>
 800e3b2:	4606      	mov	r6, r0
 800e3b4:	b928      	cbnz	r0, 800e3c2 <_dtoa_r+0x97a>
 800e3b6:	4b84      	ldr	r3, [pc, #528]	@ (800e5c8 <_dtoa_r+0xb80>)
 800e3b8:	4602      	mov	r2, r0
 800e3ba:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800e3be:	f7ff bb5a 	b.w	800da76 <_dtoa_r+0x2e>
 800e3c2:	692a      	ldr	r2, [r5, #16]
 800e3c4:	3202      	adds	r2, #2
 800e3c6:	0092      	lsls	r2, r2, #2
 800e3c8:	f105 010c 	add.w	r1, r5, #12
 800e3cc:	300c      	adds	r0, #12
 800e3ce:	f7ff faa4 	bl	800d91a <memcpy>
 800e3d2:	2201      	movs	r2, #1
 800e3d4:	4631      	mov	r1, r6
 800e3d6:	4658      	mov	r0, fp
 800e3d8:	f000 fc08 	bl	800ebec <__lshift>
 800e3dc:	f10a 0301 	add.w	r3, sl, #1
 800e3e0:	9307      	str	r3, [sp, #28]
 800e3e2:	9b00      	ldr	r3, [sp, #0]
 800e3e4:	4453      	add	r3, sl
 800e3e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e3e8:	9b02      	ldr	r3, [sp, #8]
 800e3ea:	f003 0301 	and.w	r3, r3, #1
 800e3ee:	462f      	mov	r7, r5
 800e3f0:	930a      	str	r3, [sp, #40]	@ 0x28
 800e3f2:	4605      	mov	r5, r0
 800e3f4:	9b07      	ldr	r3, [sp, #28]
 800e3f6:	4621      	mov	r1, r4
 800e3f8:	3b01      	subs	r3, #1
 800e3fa:	4648      	mov	r0, r9
 800e3fc:	9300      	str	r3, [sp, #0]
 800e3fe:	f7ff fa9a 	bl	800d936 <quorem>
 800e402:	4639      	mov	r1, r7
 800e404:	9002      	str	r0, [sp, #8]
 800e406:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800e40a:	4648      	mov	r0, r9
 800e40c:	f000 fc5a 	bl	800ecc4 <__mcmp>
 800e410:	462a      	mov	r2, r5
 800e412:	9008      	str	r0, [sp, #32]
 800e414:	4621      	mov	r1, r4
 800e416:	4658      	mov	r0, fp
 800e418:	f000 fc70 	bl	800ecfc <__mdiff>
 800e41c:	68c2      	ldr	r2, [r0, #12]
 800e41e:	4606      	mov	r6, r0
 800e420:	bb02      	cbnz	r2, 800e464 <_dtoa_r+0xa1c>
 800e422:	4601      	mov	r1, r0
 800e424:	4648      	mov	r0, r9
 800e426:	f000 fc4d 	bl	800ecc4 <__mcmp>
 800e42a:	4602      	mov	r2, r0
 800e42c:	4631      	mov	r1, r6
 800e42e:	4658      	mov	r0, fp
 800e430:	920e      	str	r2, [sp, #56]	@ 0x38
 800e432:	f000 fa0d 	bl	800e850 <_Bfree>
 800e436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e438:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e43a:	9e07      	ldr	r6, [sp, #28]
 800e43c:	ea43 0102 	orr.w	r1, r3, r2
 800e440:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e442:	4319      	orrs	r1, r3
 800e444:	d110      	bne.n	800e468 <_dtoa_r+0xa20>
 800e446:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800e44a:	d029      	beq.n	800e4a0 <_dtoa_r+0xa58>
 800e44c:	9b08      	ldr	r3, [sp, #32]
 800e44e:	2b00      	cmp	r3, #0
 800e450:	dd02      	ble.n	800e458 <_dtoa_r+0xa10>
 800e452:	9b02      	ldr	r3, [sp, #8]
 800e454:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800e458:	9b00      	ldr	r3, [sp, #0]
 800e45a:	f883 8000 	strb.w	r8, [r3]
 800e45e:	e63f      	b.n	800e0e0 <_dtoa_r+0x698>
 800e460:	4628      	mov	r0, r5
 800e462:	e7bb      	b.n	800e3dc <_dtoa_r+0x994>
 800e464:	2201      	movs	r2, #1
 800e466:	e7e1      	b.n	800e42c <_dtoa_r+0x9e4>
 800e468:	9b08      	ldr	r3, [sp, #32]
 800e46a:	2b00      	cmp	r3, #0
 800e46c:	db04      	blt.n	800e478 <_dtoa_r+0xa30>
 800e46e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800e470:	430b      	orrs	r3, r1
 800e472:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e474:	430b      	orrs	r3, r1
 800e476:	d120      	bne.n	800e4ba <_dtoa_r+0xa72>
 800e478:	2a00      	cmp	r2, #0
 800e47a:	dded      	ble.n	800e458 <_dtoa_r+0xa10>
 800e47c:	4649      	mov	r1, r9
 800e47e:	2201      	movs	r2, #1
 800e480:	4658      	mov	r0, fp
 800e482:	f000 fbb3 	bl	800ebec <__lshift>
 800e486:	4621      	mov	r1, r4
 800e488:	4681      	mov	r9, r0
 800e48a:	f000 fc1b 	bl	800ecc4 <__mcmp>
 800e48e:	2800      	cmp	r0, #0
 800e490:	dc03      	bgt.n	800e49a <_dtoa_r+0xa52>
 800e492:	d1e1      	bne.n	800e458 <_dtoa_r+0xa10>
 800e494:	f018 0f01 	tst.w	r8, #1
 800e498:	d0de      	beq.n	800e458 <_dtoa_r+0xa10>
 800e49a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800e49e:	d1d8      	bne.n	800e452 <_dtoa_r+0xa0a>
 800e4a0:	9a00      	ldr	r2, [sp, #0]
 800e4a2:	2339      	movs	r3, #57	@ 0x39
 800e4a4:	7013      	strb	r3, [r2, #0]
 800e4a6:	4633      	mov	r3, r6
 800e4a8:	461e      	mov	r6, r3
 800e4aa:	3b01      	subs	r3, #1
 800e4ac:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800e4b0:	2a39      	cmp	r2, #57	@ 0x39
 800e4b2:	d052      	beq.n	800e55a <_dtoa_r+0xb12>
 800e4b4:	3201      	adds	r2, #1
 800e4b6:	701a      	strb	r2, [r3, #0]
 800e4b8:	e612      	b.n	800e0e0 <_dtoa_r+0x698>
 800e4ba:	2a00      	cmp	r2, #0
 800e4bc:	dd07      	ble.n	800e4ce <_dtoa_r+0xa86>
 800e4be:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800e4c2:	d0ed      	beq.n	800e4a0 <_dtoa_r+0xa58>
 800e4c4:	9a00      	ldr	r2, [sp, #0]
 800e4c6:	f108 0301 	add.w	r3, r8, #1
 800e4ca:	7013      	strb	r3, [r2, #0]
 800e4cc:	e608      	b.n	800e0e0 <_dtoa_r+0x698>
 800e4ce:	9b07      	ldr	r3, [sp, #28]
 800e4d0:	9a07      	ldr	r2, [sp, #28]
 800e4d2:	f803 8c01 	strb.w	r8, [r3, #-1]
 800e4d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e4d8:	4293      	cmp	r3, r2
 800e4da:	d028      	beq.n	800e52e <_dtoa_r+0xae6>
 800e4dc:	4649      	mov	r1, r9
 800e4de:	2300      	movs	r3, #0
 800e4e0:	220a      	movs	r2, #10
 800e4e2:	4658      	mov	r0, fp
 800e4e4:	f000 f9d6 	bl	800e894 <__multadd>
 800e4e8:	42af      	cmp	r7, r5
 800e4ea:	4681      	mov	r9, r0
 800e4ec:	f04f 0300 	mov.w	r3, #0
 800e4f0:	f04f 020a 	mov.w	r2, #10
 800e4f4:	4639      	mov	r1, r7
 800e4f6:	4658      	mov	r0, fp
 800e4f8:	d107      	bne.n	800e50a <_dtoa_r+0xac2>
 800e4fa:	f000 f9cb 	bl	800e894 <__multadd>
 800e4fe:	4607      	mov	r7, r0
 800e500:	4605      	mov	r5, r0
 800e502:	9b07      	ldr	r3, [sp, #28]
 800e504:	3301      	adds	r3, #1
 800e506:	9307      	str	r3, [sp, #28]
 800e508:	e774      	b.n	800e3f4 <_dtoa_r+0x9ac>
 800e50a:	f000 f9c3 	bl	800e894 <__multadd>
 800e50e:	4629      	mov	r1, r5
 800e510:	4607      	mov	r7, r0
 800e512:	2300      	movs	r3, #0
 800e514:	220a      	movs	r2, #10
 800e516:	4658      	mov	r0, fp
 800e518:	f000 f9bc 	bl	800e894 <__multadd>
 800e51c:	4605      	mov	r5, r0
 800e51e:	e7f0      	b.n	800e502 <_dtoa_r+0xaba>
 800e520:	9b00      	ldr	r3, [sp, #0]
 800e522:	2b00      	cmp	r3, #0
 800e524:	bfcc      	ite	gt
 800e526:	461e      	movgt	r6, r3
 800e528:	2601      	movle	r6, #1
 800e52a:	4456      	add	r6, sl
 800e52c:	2700      	movs	r7, #0
 800e52e:	4649      	mov	r1, r9
 800e530:	2201      	movs	r2, #1
 800e532:	4658      	mov	r0, fp
 800e534:	f000 fb5a 	bl	800ebec <__lshift>
 800e538:	4621      	mov	r1, r4
 800e53a:	4681      	mov	r9, r0
 800e53c:	f000 fbc2 	bl	800ecc4 <__mcmp>
 800e540:	2800      	cmp	r0, #0
 800e542:	dcb0      	bgt.n	800e4a6 <_dtoa_r+0xa5e>
 800e544:	d102      	bne.n	800e54c <_dtoa_r+0xb04>
 800e546:	f018 0f01 	tst.w	r8, #1
 800e54a:	d1ac      	bne.n	800e4a6 <_dtoa_r+0xa5e>
 800e54c:	4633      	mov	r3, r6
 800e54e:	461e      	mov	r6, r3
 800e550:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e554:	2a30      	cmp	r2, #48	@ 0x30
 800e556:	d0fa      	beq.n	800e54e <_dtoa_r+0xb06>
 800e558:	e5c2      	b.n	800e0e0 <_dtoa_r+0x698>
 800e55a:	459a      	cmp	sl, r3
 800e55c:	d1a4      	bne.n	800e4a8 <_dtoa_r+0xa60>
 800e55e:	9b04      	ldr	r3, [sp, #16]
 800e560:	3301      	adds	r3, #1
 800e562:	9304      	str	r3, [sp, #16]
 800e564:	2331      	movs	r3, #49	@ 0x31
 800e566:	f88a 3000 	strb.w	r3, [sl]
 800e56a:	e5b9      	b.n	800e0e0 <_dtoa_r+0x698>
 800e56c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800e56e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800e5cc <_dtoa_r+0xb84>
 800e572:	b11b      	cbz	r3, 800e57c <_dtoa_r+0xb34>
 800e574:	f10a 0308 	add.w	r3, sl, #8
 800e578:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800e57a:	6013      	str	r3, [r2, #0]
 800e57c:	4650      	mov	r0, sl
 800e57e:	b019      	add	sp, #100	@ 0x64
 800e580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e584:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e586:	2b01      	cmp	r3, #1
 800e588:	f77f ae37 	ble.w	800e1fa <_dtoa_r+0x7b2>
 800e58c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e58e:	930a      	str	r3, [sp, #40]	@ 0x28
 800e590:	2001      	movs	r0, #1
 800e592:	e655      	b.n	800e240 <_dtoa_r+0x7f8>
 800e594:	9b00      	ldr	r3, [sp, #0]
 800e596:	2b00      	cmp	r3, #0
 800e598:	f77f aed6 	ble.w	800e348 <_dtoa_r+0x900>
 800e59c:	4656      	mov	r6, sl
 800e59e:	4621      	mov	r1, r4
 800e5a0:	4648      	mov	r0, r9
 800e5a2:	f7ff f9c8 	bl	800d936 <quorem>
 800e5a6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800e5aa:	f806 8b01 	strb.w	r8, [r6], #1
 800e5ae:	9b00      	ldr	r3, [sp, #0]
 800e5b0:	eba6 020a 	sub.w	r2, r6, sl
 800e5b4:	4293      	cmp	r3, r2
 800e5b6:	ddb3      	ble.n	800e520 <_dtoa_r+0xad8>
 800e5b8:	4649      	mov	r1, r9
 800e5ba:	2300      	movs	r3, #0
 800e5bc:	220a      	movs	r2, #10
 800e5be:	4658      	mov	r0, fp
 800e5c0:	f000 f968 	bl	800e894 <__multadd>
 800e5c4:	4681      	mov	r9, r0
 800e5c6:	e7ea      	b.n	800e59e <_dtoa_r+0xb56>
 800e5c8:	0800f6a0 	.word	0x0800f6a0
 800e5cc:	0800f624 	.word	0x0800f624

0800e5d0 <_free_r>:
 800e5d0:	b538      	push	{r3, r4, r5, lr}
 800e5d2:	4605      	mov	r5, r0
 800e5d4:	2900      	cmp	r1, #0
 800e5d6:	d041      	beq.n	800e65c <_free_r+0x8c>
 800e5d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e5dc:	1f0c      	subs	r4, r1, #4
 800e5de:	2b00      	cmp	r3, #0
 800e5e0:	bfb8      	it	lt
 800e5e2:	18e4      	addlt	r4, r4, r3
 800e5e4:	f000 f8e8 	bl	800e7b8 <__malloc_lock>
 800e5e8:	4a1d      	ldr	r2, [pc, #116]	@ (800e660 <_free_r+0x90>)
 800e5ea:	6813      	ldr	r3, [r2, #0]
 800e5ec:	b933      	cbnz	r3, 800e5fc <_free_r+0x2c>
 800e5ee:	6063      	str	r3, [r4, #4]
 800e5f0:	6014      	str	r4, [r2, #0]
 800e5f2:	4628      	mov	r0, r5
 800e5f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e5f8:	f000 b8e4 	b.w	800e7c4 <__malloc_unlock>
 800e5fc:	42a3      	cmp	r3, r4
 800e5fe:	d908      	bls.n	800e612 <_free_r+0x42>
 800e600:	6820      	ldr	r0, [r4, #0]
 800e602:	1821      	adds	r1, r4, r0
 800e604:	428b      	cmp	r3, r1
 800e606:	bf01      	itttt	eq
 800e608:	6819      	ldreq	r1, [r3, #0]
 800e60a:	685b      	ldreq	r3, [r3, #4]
 800e60c:	1809      	addeq	r1, r1, r0
 800e60e:	6021      	streq	r1, [r4, #0]
 800e610:	e7ed      	b.n	800e5ee <_free_r+0x1e>
 800e612:	461a      	mov	r2, r3
 800e614:	685b      	ldr	r3, [r3, #4]
 800e616:	b10b      	cbz	r3, 800e61c <_free_r+0x4c>
 800e618:	42a3      	cmp	r3, r4
 800e61a:	d9fa      	bls.n	800e612 <_free_r+0x42>
 800e61c:	6811      	ldr	r1, [r2, #0]
 800e61e:	1850      	adds	r0, r2, r1
 800e620:	42a0      	cmp	r0, r4
 800e622:	d10b      	bne.n	800e63c <_free_r+0x6c>
 800e624:	6820      	ldr	r0, [r4, #0]
 800e626:	4401      	add	r1, r0
 800e628:	1850      	adds	r0, r2, r1
 800e62a:	4283      	cmp	r3, r0
 800e62c:	6011      	str	r1, [r2, #0]
 800e62e:	d1e0      	bne.n	800e5f2 <_free_r+0x22>
 800e630:	6818      	ldr	r0, [r3, #0]
 800e632:	685b      	ldr	r3, [r3, #4]
 800e634:	6053      	str	r3, [r2, #4]
 800e636:	4408      	add	r0, r1
 800e638:	6010      	str	r0, [r2, #0]
 800e63a:	e7da      	b.n	800e5f2 <_free_r+0x22>
 800e63c:	d902      	bls.n	800e644 <_free_r+0x74>
 800e63e:	230c      	movs	r3, #12
 800e640:	602b      	str	r3, [r5, #0]
 800e642:	e7d6      	b.n	800e5f2 <_free_r+0x22>
 800e644:	6820      	ldr	r0, [r4, #0]
 800e646:	1821      	adds	r1, r4, r0
 800e648:	428b      	cmp	r3, r1
 800e64a:	bf04      	itt	eq
 800e64c:	6819      	ldreq	r1, [r3, #0]
 800e64e:	685b      	ldreq	r3, [r3, #4]
 800e650:	6063      	str	r3, [r4, #4]
 800e652:	bf04      	itt	eq
 800e654:	1809      	addeq	r1, r1, r0
 800e656:	6021      	streq	r1, [r4, #0]
 800e658:	6054      	str	r4, [r2, #4]
 800e65a:	e7ca      	b.n	800e5f2 <_free_r+0x22>
 800e65c:	bd38      	pop	{r3, r4, r5, pc}
 800e65e:	bf00      	nop
 800e660:	200010d4 	.word	0x200010d4

0800e664 <malloc>:
 800e664:	4b02      	ldr	r3, [pc, #8]	@ (800e670 <malloc+0xc>)
 800e666:	4601      	mov	r1, r0
 800e668:	6818      	ldr	r0, [r3, #0]
 800e66a:	f000 b825 	b.w	800e6b8 <_malloc_r>
 800e66e:	bf00      	nop
 800e670:	20000170 	.word	0x20000170

0800e674 <sbrk_aligned>:
 800e674:	b570      	push	{r4, r5, r6, lr}
 800e676:	4e0f      	ldr	r6, [pc, #60]	@ (800e6b4 <sbrk_aligned+0x40>)
 800e678:	460c      	mov	r4, r1
 800e67a:	6831      	ldr	r1, [r6, #0]
 800e67c:	4605      	mov	r5, r0
 800e67e:	b911      	cbnz	r1, 800e686 <sbrk_aligned+0x12>
 800e680:	f000 fe9a 	bl	800f3b8 <_sbrk_r>
 800e684:	6030      	str	r0, [r6, #0]
 800e686:	4621      	mov	r1, r4
 800e688:	4628      	mov	r0, r5
 800e68a:	f000 fe95 	bl	800f3b8 <_sbrk_r>
 800e68e:	1c43      	adds	r3, r0, #1
 800e690:	d103      	bne.n	800e69a <sbrk_aligned+0x26>
 800e692:	f04f 34ff 	mov.w	r4, #4294967295
 800e696:	4620      	mov	r0, r4
 800e698:	bd70      	pop	{r4, r5, r6, pc}
 800e69a:	1cc4      	adds	r4, r0, #3
 800e69c:	f024 0403 	bic.w	r4, r4, #3
 800e6a0:	42a0      	cmp	r0, r4
 800e6a2:	d0f8      	beq.n	800e696 <sbrk_aligned+0x22>
 800e6a4:	1a21      	subs	r1, r4, r0
 800e6a6:	4628      	mov	r0, r5
 800e6a8:	f000 fe86 	bl	800f3b8 <_sbrk_r>
 800e6ac:	3001      	adds	r0, #1
 800e6ae:	d1f2      	bne.n	800e696 <sbrk_aligned+0x22>
 800e6b0:	e7ef      	b.n	800e692 <sbrk_aligned+0x1e>
 800e6b2:	bf00      	nop
 800e6b4:	200010d0 	.word	0x200010d0

0800e6b8 <_malloc_r>:
 800e6b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e6bc:	1ccd      	adds	r5, r1, #3
 800e6be:	f025 0503 	bic.w	r5, r5, #3
 800e6c2:	3508      	adds	r5, #8
 800e6c4:	2d0c      	cmp	r5, #12
 800e6c6:	bf38      	it	cc
 800e6c8:	250c      	movcc	r5, #12
 800e6ca:	2d00      	cmp	r5, #0
 800e6cc:	4606      	mov	r6, r0
 800e6ce:	db01      	blt.n	800e6d4 <_malloc_r+0x1c>
 800e6d0:	42a9      	cmp	r1, r5
 800e6d2:	d904      	bls.n	800e6de <_malloc_r+0x26>
 800e6d4:	230c      	movs	r3, #12
 800e6d6:	6033      	str	r3, [r6, #0]
 800e6d8:	2000      	movs	r0, #0
 800e6da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e6de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800e7b4 <_malloc_r+0xfc>
 800e6e2:	f000 f869 	bl	800e7b8 <__malloc_lock>
 800e6e6:	f8d8 3000 	ldr.w	r3, [r8]
 800e6ea:	461c      	mov	r4, r3
 800e6ec:	bb44      	cbnz	r4, 800e740 <_malloc_r+0x88>
 800e6ee:	4629      	mov	r1, r5
 800e6f0:	4630      	mov	r0, r6
 800e6f2:	f7ff ffbf 	bl	800e674 <sbrk_aligned>
 800e6f6:	1c43      	adds	r3, r0, #1
 800e6f8:	4604      	mov	r4, r0
 800e6fa:	d158      	bne.n	800e7ae <_malloc_r+0xf6>
 800e6fc:	f8d8 4000 	ldr.w	r4, [r8]
 800e700:	4627      	mov	r7, r4
 800e702:	2f00      	cmp	r7, #0
 800e704:	d143      	bne.n	800e78e <_malloc_r+0xd6>
 800e706:	2c00      	cmp	r4, #0
 800e708:	d04b      	beq.n	800e7a2 <_malloc_r+0xea>
 800e70a:	6823      	ldr	r3, [r4, #0]
 800e70c:	4639      	mov	r1, r7
 800e70e:	4630      	mov	r0, r6
 800e710:	eb04 0903 	add.w	r9, r4, r3
 800e714:	f000 fe50 	bl	800f3b8 <_sbrk_r>
 800e718:	4581      	cmp	r9, r0
 800e71a:	d142      	bne.n	800e7a2 <_malloc_r+0xea>
 800e71c:	6821      	ldr	r1, [r4, #0]
 800e71e:	1a6d      	subs	r5, r5, r1
 800e720:	4629      	mov	r1, r5
 800e722:	4630      	mov	r0, r6
 800e724:	f7ff ffa6 	bl	800e674 <sbrk_aligned>
 800e728:	3001      	adds	r0, #1
 800e72a:	d03a      	beq.n	800e7a2 <_malloc_r+0xea>
 800e72c:	6823      	ldr	r3, [r4, #0]
 800e72e:	442b      	add	r3, r5
 800e730:	6023      	str	r3, [r4, #0]
 800e732:	f8d8 3000 	ldr.w	r3, [r8]
 800e736:	685a      	ldr	r2, [r3, #4]
 800e738:	bb62      	cbnz	r2, 800e794 <_malloc_r+0xdc>
 800e73a:	f8c8 7000 	str.w	r7, [r8]
 800e73e:	e00f      	b.n	800e760 <_malloc_r+0xa8>
 800e740:	6822      	ldr	r2, [r4, #0]
 800e742:	1b52      	subs	r2, r2, r5
 800e744:	d420      	bmi.n	800e788 <_malloc_r+0xd0>
 800e746:	2a0b      	cmp	r2, #11
 800e748:	d917      	bls.n	800e77a <_malloc_r+0xc2>
 800e74a:	1961      	adds	r1, r4, r5
 800e74c:	42a3      	cmp	r3, r4
 800e74e:	6025      	str	r5, [r4, #0]
 800e750:	bf18      	it	ne
 800e752:	6059      	strne	r1, [r3, #4]
 800e754:	6863      	ldr	r3, [r4, #4]
 800e756:	bf08      	it	eq
 800e758:	f8c8 1000 	streq.w	r1, [r8]
 800e75c:	5162      	str	r2, [r4, r5]
 800e75e:	604b      	str	r3, [r1, #4]
 800e760:	4630      	mov	r0, r6
 800e762:	f000 f82f 	bl	800e7c4 <__malloc_unlock>
 800e766:	f104 000b 	add.w	r0, r4, #11
 800e76a:	1d23      	adds	r3, r4, #4
 800e76c:	f020 0007 	bic.w	r0, r0, #7
 800e770:	1ac2      	subs	r2, r0, r3
 800e772:	bf1c      	itt	ne
 800e774:	1a1b      	subne	r3, r3, r0
 800e776:	50a3      	strne	r3, [r4, r2]
 800e778:	e7af      	b.n	800e6da <_malloc_r+0x22>
 800e77a:	6862      	ldr	r2, [r4, #4]
 800e77c:	42a3      	cmp	r3, r4
 800e77e:	bf0c      	ite	eq
 800e780:	f8c8 2000 	streq.w	r2, [r8]
 800e784:	605a      	strne	r2, [r3, #4]
 800e786:	e7eb      	b.n	800e760 <_malloc_r+0xa8>
 800e788:	4623      	mov	r3, r4
 800e78a:	6864      	ldr	r4, [r4, #4]
 800e78c:	e7ae      	b.n	800e6ec <_malloc_r+0x34>
 800e78e:	463c      	mov	r4, r7
 800e790:	687f      	ldr	r7, [r7, #4]
 800e792:	e7b6      	b.n	800e702 <_malloc_r+0x4a>
 800e794:	461a      	mov	r2, r3
 800e796:	685b      	ldr	r3, [r3, #4]
 800e798:	42a3      	cmp	r3, r4
 800e79a:	d1fb      	bne.n	800e794 <_malloc_r+0xdc>
 800e79c:	2300      	movs	r3, #0
 800e79e:	6053      	str	r3, [r2, #4]
 800e7a0:	e7de      	b.n	800e760 <_malloc_r+0xa8>
 800e7a2:	230c      	movs	r3, #12
 800e7a4:	6033      	str	r3, [r6, #0]
 800e7a6:	4630      	mov	r0, r6
 800e7a8:	f000 f80c 	bl	800e7c4 <__malloc_unlock>
 800e7ac:	e794      	b.n	800e6d8 <_malloc_r+0x20>
 800e7ae:	6005      	str	r5, [r0, #0]
 800e7b0:	e7d6      	b.n	800e760 <_malloc_r+0xa8>
 800e7b2:	bf00      	nop
 800e7b4:	200010d4 	.word	0x200010d4

0800e7b8 <__malloc_lock>:
 800e7b8:	4801      	ldr	r0, [pc, #4]	@ (800e7c0 <__malloc_lock+0x8>)
 800e7ba:	f7ff b8ac 	b.w	800d916 <__retarget_lock_acquire_recursive>
 800e7be:	bf00      	nop
 800e7c0:	200010cc 	.word	0x200010cc

0800e7c4 <__malloc_unlock>:
 800e7c4:	4801      	ldr	r0, [pc, #4]	@ (800e7cc <__malloc_unlock+0x8>)
 800e7c6:	f7ff b8a7 	b.w	800d918 <__retarget_lock_release_recursive>
 800e7ca:	bf00      	nop
 800e7cc:	200010cc 	.word	0x200010cc

0800e7d0 <_Balloc>:
 800e7d0:	b570      	push	{r4, r5, r6, lr}
 800e7d2:	69c6      	ldr	r6, [r0, #28]
 800e7d4:	4604      	mov	r4, r0
 800e7d6:	460d      	mov	r5, r1
 800e7d8:	b976      	cbnz	r6, 800e7f8 <_Balloc+0x28>
 800e7da:	2010      	movs	r0, #16
 800e7dc:	f7ff ff42 	bl	800e664 <malloc>
 800e7e0:	4602      	mov	r2, r0
 800e7e2:	61e0      	str	r0, [r4, #28]
 800e7e4:	b920      	cbnz	r0, 800e7f0 <_Balloc+0x20>
 800e7e6:	4b18      	ldr	r3, [pc, #96]	@ (800e848 <_Balloc+0x78>)
 800e7e8:	4818      	ldr	r0, [pc, #96]	@ (800e84c <_Balloc+0x7c>)
 800e7ea:	216b      	movs	r1, #107	@ 0x6b
 800e7ec:	f000 fdf4 	bl	800f3d8 <__assert_func>
 800e7f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e7f4:	6006      	str	r6, [r0, #0]
 800e7f6:	60c6      	str	r6, [r0, #12]
 800e7f8:	69e6      	ldr	r6, [r4, #28]
 800e7fa:	68f3      	ldr	r3, [r6, #12]
 800e7fc:	b183      	cbz	r3, 800e820 <_Balloc+0x50>
 800e7fe:	69e3      	ldr	r3, [r4, #28]
 800e800:	68db      	ldr	r3, [r3, #12]
 800e802:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e806:	b9b8      	cbnz	r0, 800e838 <_Balloc+0x68>
 800e808:	2101      	movs	r1, #1
 800e80a:	fa01 f605 	lsl.w	r6, r1, r5
 800e80e:	1d72      	adds	r2, r6, #5
 800e810:	0092      	lsls	r2, r2, #2
 800e812:	4620      	mov	r0, r4
 800e814:	f000 fdfe 	bl	800f414 <_calloc_r>
 800e818:	b160      	cbz	r0, 800e834 <_Balloc+0x64>
 800e81a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e81e:	e00e      	b.n	800e83e <_Balloc+0x6e>
 800e820:	2221      	movs	r2, #33	@ 0x21
 800e822:	2104      	movs	r1, #4
 800e824:	4620      	mov	r0, r4
 800e826:	f000 fdf5 	bl	800f414 <_calloc_r>
 800e82a:	69e3      	ldr	r3, [r4, #28]
 800e82c:	60f0      	str	r0, [r6, #12]
 800e82e:	68db      	ldr	r3, [r3, #12]
 800e830:	2b00      	cmp	r3, #0
 800e832:	d1e4      	bne.n	800e7fe <_Balloc+0x2e>
 800e834:	2000      	movs	r0, #0
 800e836:	bd70      	pop	{r4, r5, r6, pc}
 800e838:	6802      	ldr	r2, [r0, #0]
 800e83a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e83e:	2300      	movs	r3, #0
 800e840:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e844:	e7f7      	b.n	800e836 <_Balloc+0x66>
 800e846:	bf00      	nop
 800e848:	0800f631 	.word	0x0800f631
 800e84c:	0800f6b1 	.word	0x0800f6b1

0800e850 <_Bfree>:
 800e850:	b570      	push	{r4, r5, r6, lr}
 800e852:	69c6      	ldr	r6, [r0, #28]
 800e854:	4605      	mov	r5, r0
 800e856:	460c      	mov	r4, r1
 800e858:	b976      	cbnz	r6, 800e878 <_Bfree+0x28>
 800e85a:	2010      	movs	r0, #16
 800e85c:	f7ff ff02 	bl	800e664 <malloc>
 800e860:	4602      	mov	r2, r0
 800e862:	61e8      	str	r0, [r5, #28]
 800e864:	b920      	cbnz	r0, 800e870 <_Bfree+0x20>
 800e866:	4b09      	ldr	r3, [pc, #36]	@ (800e88c <_Bfree+0x3c>)
 800e868:	4809      	ldr	r0, [pc, #36]	@ (800e890 <_Bfree+0x40>)
 800e86a:	218f      	movs	r1, #143	@ 0x8f
 800e86c:	f000 fdb4 	bl	800f3d8 <__assert_func>
 800e870:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e874:	6006      	str	r6, [r0, #0]
 800e876:	60c6      	str	r6, [r0, #12]
 800e878:	b13c      	cbz	r4, 800e88a <_Bfree+0x3a>
 800e87a:	69eb      	ldr	r3, [r5, #28]
 800e87c:	6862      	ldr	r2, [r4, #4]
 800e87e:	68db      	ldr	r3, [r3, #12]
 800e880:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800e884:	6021      	str	r1, [r4, #0]
 800e886:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800e88a:	bd70      	pop	{r4, r5, r6, pc}
 800e88c:	0800f631 	.word	0x0800f631
 800e890:	0800f6b1 	.word	0x0800f6b1

0800e894 <__multadd>:
 800e894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e898:	690d      	ldr	r5, [r1, #16]
 800e89a:	4607      	mov	r7, r0
 800e89c:	460c      	mov	r4, r1
 800e89e:	461e      	mov	r6, r3
 800e8a0:	f101 0c14 	add.w	ip, r1, #20
 800e8a4:	2000      	movs	r0, #0
 800e8a6:	f8dc 3000 	ldr.w	r3, [ip]
 800e8aa:	b299      	uxth	r1, r3
 800e8ac:	fb02 6101 	mla	r1, r2, r1, r6
 800e8b0:	0c1e      	lsrs	r6, r3, #16
 800e8b2:	0c0b      	lsrs	r3, r1, #16
 800e8b4:	fb02 3306 	mla	r3, r2, r6, r3
 800e8b8:	b289      	uxth	r1, r1
 800e8ba:	3001      	adds	r0, #1
 800e8bc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e8c0:	4285      	cmp	r5, r0
 800e8c2:	f84c 1b04 	str.w	r1, [ip], #4
 800e8c6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e8ca:	dcec      	bgt.n	800e8a6 <__multadd+0x12>
 800e8cc:	b30e      	cbz	r6, 800e912 <__multadd+0x7e>
 800e8ce:	68a3      	ldr	r3, [r4, #8]
 800e8d0:	42ab      	cmp	r3, r5
 800e8d2:	dc19      	bgt.n	800e908 <__multadd+0x74>
 800e8d4:	6861      	ldr	r1, [r4, #4]
 800e8d6:	4638      	mov	r0, r7
 800e8d8:	3101      	adds	r1, #1
 800e8da:	f7ff ff79 	bl	800e7d0 <_Balloc>
 800e8de:	4680      	mov	r8, r0
 800e8e0:	b928      	cbnz	r0, 800e8ee <__multadd+0x5a>
 800e8e2:	4602      	mov	r2, r0
 800e8e4:	4b0c      	ldr	r3, [pc, #48]	@ (800e918 <__multadd+0x84>)
 800e8e6:	480d      	ldr	r0, [pc, #52]	@ (800e91c <__multadd+0x88>)
 800e8e8:	21ba      	movs	r1, #186	@ 0xba
 800e8ea:	f000 fd75 	bl	800f3d8 <__assert_func>
 800e8ee:	6922      	ldr	r2, [r4, #16]
 800e8f0:	3202      	adds	r2, #2
 800e8f2:	f104 010c 	add.w	r1, r4, #12
 800e8f6:	0092      	lsls	r2, r2, #2
 800e8f8:	300c      	adds	r0, #12
 800e8fa:	f7ff f80e 	bl	800d91a <memcpy>
 800e8fe:	4621      	mov	r1, r4
 800e900:	4638      	mov	r0, r7
 800e902:	f7ff ffa5 	bl	800e850 <_Bfree>
 800e906:	4644      	mov	r4, r8
 800e908:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e90c:	3501      	adds	r5, #1
 800e90e:	615e      	str	r6, [r3, #20]
 800e910:	6125      	str	r5, [r4, #16]
 800e912:	4620      	mov	r0, r4
 800e914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e918:	0800f6a0 	.word	0x0800f6a0
 800e91c:	0800f6b1 	.word	0x0800f6b1

0800e920 <__hi0bits>:
 800e920:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800e924:	4603      	mov	r3, r0
 800e926:	bf36      	itet	cc
 800e928:	0403      	lslcc	r3, r0, #16
 800e92a:	2000      	movcs	r0, #0
 800e92c:	2010      	movcc	r0, #16
 800e92e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800e932:	bf3c      	itt	cc
 800e934:	021b      	lslcc	r3, r3, #8
 800e936:	3008      	addcc	r0, #8
 800e938:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800e93c:	bf3c      	itt	cc
 800e93e:	011b      	lslcc	r3, r3, #4
 800e940:	3004      	addcc	r0, #4
 800e942:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800e946:	bf3c      	itt	cc
 800e948:	009b      	lslcc	r3, r3, #2
 800e94a:	3002      	addcc	r0, #2
 800e94c:	2b00      	cmp	r3, #0
 800e94e:	db05      	blt.n	800e95c <__hi0bits+0x3c>
 800e950:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800e954:	f100 0001 	add.w	r0, r0, #1
 800e958:	bf08      	it	eq
 800e95a:	2020      	moveq	r0, #32
 800e95c:	4770      	bx	lr

0800e95e <__lo0bits>:
 800e95e:	6803      	ldr	r3, [r0, #0]
 800e960:	4602      	mov	r2, r0
 800e962:	f013 0007 	ands.w	r0, r3, #7
 800e966:	d00b      	beq.n	800e980 <__lo0bits+0x22>
 800e968:	07d9      	lsls	r1, r3, #31
 800e96a:	d421      	bmi.n	800e9b0 <__lo0bits+0x52>
 800e96c:	0798      	lsls	r0, r3, #30
 800e96e:	bf49      	itett	mi
 800e970:	085b      	lsrmi	r3, r3, #1
 800e972:	089b      	lsrpl	r3, r3, #2
 800e974:	2001      	movmi	r0, #1
 800e976:	6013      	strmi	r3, [r2, #0]
 800e978:	bf5c      	itt	pl
 800e97a:	6013      	strpl	r3, [r2, #0]
 800e97c:	2002      	movpl	r0, #2
 800e97e:	4770      	bx	lr
 800e980:	b299      	uxth	r1, r3
 800e982:	b909      	cbnz	r1, 800e988 <__lo0bits+0x2a>
 800e984:	0c1b      	lsrs	r3, r3, #16
 800e986:	2010      	movs	r0, #16
 800e988:	b2d9      	uxtb	r1, r3
 800e98a:	b909      	cbnz	r1, 800e990 <__lo0bits+0x32>
 800e98c:	3008      	adds	r0, #8
 800e98e:	0a1b      	lsrs	r3, r3, #8
 800e990:	0719      	lsls	r1, r3, #28
 800e992:	bf04      	itt	eq
 800e994:	091b      	lsreq	r3, r3, #4
 800e996:	3004      	addeq	r0, #4
 800e998:	0799      	lsls	r1, r3, #30
 800e99a:	bf04      	itt	eq
 800e99c:	089b      	lsreq	r3, r3, #2
 800e99e:	3002      	addeq	r0, #2
 800e9a0:	07d9      	lsls	r1, r3, #31
 800e9a2:	d403      	bmi.n	800e9ac <__lo0bits+0x4e>
 800e9a4:	085b      	lsrs	r3, r3, #1
 800e9a6:	f100 0001 	add.w	r0, r0, #1
 800e9aa:	d003      	beq.n	800e9b4 <__lo0bits+0x56>
 800e9ac:	6013      	str	r3, [r2, #0]
 800e9ae:	4770      	bx	lr
 800e9b0:	2000      	movs	r0, #0
 800e9b2:	4770      	bx	lr
 800e9b4:	2020      	movs	r0, #32
 800e9b6:	4770      	bx	lr

0800e9b8 <__i2b>:
 800e9b8:	b510      	push	{r4, lr}
 800e9ba:	460c      	mov	r4, r1
 800e9bc:	2101      	movs	r1, #1
 800e9be:	f7ff ff07 	bl	800e7d0 <_Balloc>
 800e9c2:	4602      	mov	r2, r0
 800e9c4:	b928      	cbnz	r0, 800e9d2 <__i2b+0x1a>
 800e9c6:	4b05      	ldr	r3, [pc, #20]	@ (800e9dc <__i2b+0x24>)
 800e9c8:	4805      	ldr	r0, [pc, #20]	@ (800e9e0 <__i2b+0x28>)
 800e9ca:	f240 1145 	movw	r1, #325	@ 0x145
 800e9ce:	f000 fd03 	bl	800f3d8 <__assert_func>
 800e9d2:	2301      	movs	r3, #1
 800e9d4:	6144      	str	r4, [r0, #20]
 800e9d6:	6103      	str	r3, [r0, #16]
 800e9d8:	bd10      	pop	{r4, pc}
 800e9da:	bf00      	nop
 800e9dc:	0800f6a0 	.word	0x0800f6a0
 800e9e0:	0800f6b1 	.word	0x0800f6b1

0800e9e4 <__multiply>:
 800e9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9e8:	4614      	mov	r4, r2
 800e9ea:	690a      	ldr	r2, [r1, #16]
 800e9ec:	6923      	ldr	r3, [r4, #16]
 800e9ee:	429a      	cmp	r2, r3
 800e9f0:	bfa8      	it	ge
 800e9f2:	4623      	movge	r3, r4
 800e9f4:	460f      	mov	r7, r1
 800e9f6:	bfa4      	itt	ge
 800e9f8:	460c      	movge	r4, r1
 800e9fa:	461f      	movge	r7, r3
 800e9fc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800ea00:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800ea04:	68a3      	ldr	r3, [r4, #8]
 800ea06:	6861      	ldr	r1, [r4, #4]
 800ea08:	eb0a 0609 	add.w	r6, sl, r9
 800ea0c:	42b3      	cmp	r3, r6
 800ea0e:	b085      	sub	sp, #20
 800ea10:	bfb8      	it	lt
 800ea12:	3101      	addlt	r1, #1
 800ea14:	f7ff fedc 	bl	800e7d0 <_Balloc>
 800ea18:	b930      	cbnz	r0, 800ea28 <__multiply+0x44>
 800ea1a:	4602      	mov	r2, r0
 800ea1c:	4b44      	ldr	r3, [pc, #272]	@ (800eb30 <__multiply+0x14c>)
 800ea1e:	4845      	ldr	r0, [pc, #276]	@ (800eb34 <__multiply+0x150>)
 800ea20:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800ea24:	f000 fcd8 	bl	800f3d8 <__assert_func>
 800ea28:	f100 0514 	add.w	r5, r0, #20
 800ea2c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800ea30:	462b      	mov	r3, r5
 800ea32:	2200      	movs	r2, #0
 800ea34:	4543      	cmp	r3, r8
 800ea36:	d321      	bcc.n	800ea7c <__multiply+0x98>
 800ea38:	f107 0114 	add.w	r1, r7, #20
 800ea3c:	f104 0214 	add.w	r2, r4, #20
 800ea40:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800ea44:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800ea48:	9302      	str	r3, [sp, #8]
 800ea4a:	1b13      	subs	r3, r2, r4
 800ea4c:	3b15      	subs	r3, #21
 800ea4e:	f023 0303 	bic.w	r3, r3, #3
 800ea52:	3304      	adds	r3, #4
 800ea54:	f104 0715 	add.w	r7, r4, #21
 800ea58:	42ba      	cmp	r2, r7
 800ea5a:	bf38      	it	cc
 800ea5c:	2304      	movcc	r3, #4
 800ea5e:	9301      	str	r3, [sp, #4]
 800ea60:	9b02      	ldr	r3, [sp, #8]
 800ea62:	9103      	str	r1, [sp, #12]
 800ea64:	428b      	cmp	r3, r1
 800ea66:	d80c      	bhi.n	800ea82 <__multiply+0x9e>
 800ea68:	2e00      	cmp	r6, #0
 800ea6a:	dd03      	ble.n	800ea74 <__multiply+0x90>
 800ea6c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800ea70:	2b00      	cmp	r3, #0
 800ea72:	d05b      	beq.n	800eb2c <__multiply+0x148>
 800ea74:	6106      	str	r6, [r0, #16]
 800ea76:	b005      	add	sp, #20
 800ea78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea7c:	f843 2b04 	str.w	r2, [r3], #4
 800ea80:	e7d8      	b.n	800ea34 <__multiply+0x50>
 800ea82:	f8b1 a000 	ldrh.w	sl, [r1]
 800ea86:	f1ba 0f00 	cmp.w	sl, #0
 800ea8a:	d024      	beq.n	800ead6 <__multiply+0xf2>
 800ea8c:	f104 0e14 	add.w	lr, r4, #20
 800ea90:	46a9      	mov	r9, r5
 800ea92:	f04f 0c00 	mov.w	ip, #0
 800ea96:	f85e 7b04 	ldr.w	r7, [lr], #4
 800ea9a:	f8d9 3000 	ldr.w	r3, [r9]
 800ea9e:	fa1f fb87 	uxth.w	fp, r7
 800eaa2:	b29b      	uxth	r3, r3
 800eaa4:	fb0a 330b 	mla	r3, sl, fp, r3
 800eaa8:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800eaac:	f8d9 7000 	ldr.w	r7, [r9]
 800eab0:	4463      	add	r3, ip
 800eab2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800eab6:	fb0a c70b 	mla	r7, sl, fp, ip
 800eaba:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800eabe:	b29b      	uxth	r3, r3
 800eac0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800eac4:	4572      	cmp	r2, lr
 800eac6:	f849 3b04 	str.w	r3, [r9], #4
 800eaca:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800eace:	d8e2      	bhi.n	800ea96 <__multiply+0xb2>
 800ead0:	9b01      	ldr	r3, [sp, #4]
 800ead2:	f845 c003 	str.w	ip, [r5, r3]
 800ead6:	9b03      	ldr	r3, [sp, #12]
 800ead8:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800eadc:	3104      	adds	r1, #4
 800eade:	f1b9 0f00 	cmp.w	r9, #0
 800eae2:	d021      	beq.n	800eb28 <__multiply+0x144>
 800eae4:	682b      	ldr	r3, [r5, #0]
 800eae6:	f104 0c14 	add.w	ip, r4, #20
 800eaea:	46ae      	mov	lr, r5
 800eaec:	f04f 0a00 	mov.w	sl, #0
 800eaf0:	f8bc b000 	ldrh.w	fp, [ip]
 800eaf4:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800eaf8:	fb09 770b 	mla	r7, r9, fp, r7
 800eafc:	4457      	add	r7, sl
 800eafe:	b29b      	uxth	r3, r3
 800eb00:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800eb04:	f84e 3b04 	str.w	r3, [lr], #4
 800eb08:	f85c 3b04 	ldr.w	r3, [ip], #4
 800eb0c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800eb10:	f8be 3000 	ldrh.w	r3, [lr]
 800eb14:	fb09 330a 	mla	r3, r9, sl, r3
 800eb18:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800eb1c:	4562      	cmp	r2, ip
 800eb1e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800eb22:	d8e5      	bhi.n	800eaf0 <__multiply+0x10c>
 800eb24:	9f01      	ldr	r7, [sp, #4]
 800eb26:	51eb      	str	r3, [r5, r7]
 800eb28:	3504      	adds	r5, #4
 800eb2a:	e799      	b.n	800ea60 <__multiply+0x7c>
 800eb2c:	3e01      	subs	r6, #1
 800eb2e:	e79b      	b.n	800ea68 <__multiply+0x84>
 800eb30:	0800f6a0 	.word	0x0800f6a0
 800eb34:	0800f6b1 	.word	0x0800f6b1

0800eb38 <__pow5mult>:
 800eb38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb3c:	4615      	mov	r5, r2
 800eb3e:	f012 0203 	ands.w	r2, r2, #3
 800eb42:	4607      	mov	r7, r0
 800eb44:	460e      	mov	r6, r1
 800eb46:	d007      	beq.n	800eb58 <__pow5mult+0x20>
 800eb48:	4c25      	ldr	r4, [pc, #148]	@ (800ebe0 <__pow5mult+0xa8>)
 800eb4a:	3a01      	subs	r2, #1
 800eb4c:	2300      	movs	r3, #0
 800eb4e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800eb52:	f7ff fe9f 	bl	800e894 <__multadd>
 800eb56:	4606      	mov	r6, r0
 800eb58:	10ad      	asrs	r5, r5, #2
 800eb5a:	d03d      	beq.n	800ebd8 <__pow5mult+0xa0>
 800eb5c:	69fc      	ldr	r4, [r7, #28]
 800eb5e:	b97c      	cbnz	r4, 800eb80 <__pow5mult+0x48>
 800eb60:	2010      	movs	r0, #16
 800eb62:	f7ff fd7f 	bl	800e664 <malloc>
 800eb66:	4602      	mov	r2, r0
 800eb68:	61f8      	str	r0, [r7, #28]
 800eb6a:	b928      	cbnz	r0, 800eb78 <__pow5mult+0x40>
 800eb6c:	4b1d      	ldr	r3, [pc, #116]	@ (800ebe4 <__pow5mult+0xac>)
 800eb6e:	481e      	ldr	r0, [pc, #120]	@ (800ebe8 <__pow5mult+0xb0>)
 800eb70:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800eb74:	f000 fc30 	bl	800f3d8 <__assert_func>
 800eb78:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800eb7c:	6004      	str	r4, [r0, #0]
 800eb7e:	60c4      	str	r4, [r0, #12]
 800eb80:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800eb84:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800eb88:	b94c      	cbnz	r4, 800eb9e <__pow5mult+0x66>
 800eb8a:	f240 2171 	movw	r1, #625	@ 0x271
 800eb8e:	4638      	mov	r0, r7
 800eb90:	f7ff ff12 	bl	800e9b8 <__i2b>
 800eb94:	2300      	movs	r3, #0
 800eb96:	f8c8 0008 	str.w	r0, [r8, #8]
 800eb9a:	4604      	mov	r4, r0
 800eb9c:	6003      	str	r3, [r0, #0]
 800eb9e:	f04f 0900 	mov.w	r9, #0
 800eba2:	07eb      	lsls	r3, r5, #31
 800eba4:	d50a      	bpl.n	800ebbc <__pow5mult+0x84>
 800eba6:	4631      	mov	r1, r6
 800eba8:	4622      	mov	r2, r4
 800ebaa:	4638      	mov	r0, r7
 800ebac:	f7ff ff1a 	bl	800e9e4 <__multiply>
 800ebb0:	4631      	mov	r1, r6
 800ebb2:	4680      	mov	r8, r0
 800ebb4:	4638      	mov	r0, r7
 800ebb6:	f7ff fe4b 	bl	800e850 <_Bfree>
 800ebba:	4646      	mov	r6, r8
 800ebbc:	106d      	asrs	r5, r5, #1
 800ebbe:	d00b      	beq.n	800ebd8 <__pow5mult+0xa0>
 800ebc0:	6820      	ldr	r0, [r4, #0]
 800ebc2:	b938      	cbnz	r0, 800ebd4 <__pow5mult+0x9c>
 800ebc4:	4622      	mov	r2, r4
 800ebc6:	4621      	mov	r1, r4
 800ebc8:	4638      	mov	r0, r7
 800ebca:	f7ff ff0b 	bl	800e9e4 <__multiply>
 800ebce:	6020      	str	r0, [r4, #0]
 800ebd0:	f8c0 9000 	str.w	r9, [r0]
 800ebd4:	4604      	mov	r4, r0
 800ebd6:	e7e4      	b.n	800eba2 <__pow5mult+0x6a>
 800ebd8:	4630      	mov	r0, r6
 800ebda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ebde:	bf00      	nop
 800ebe0:	0800f70c 	.word	0x0800f70c
 800ebe4:	0800f631 	.word	0x0800f631
 800ebe8:	0800f6b1 	.word	0x0800f6b1

0800ebec <__lshift>:
 800ebec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ebf0:	460c      	mov	r4, r1
 800ebf2:	6849      	ldr	r1, [r1, #4]
 800ebf4:	6923      	ldr	r3, [r4, #16]
 800ebf6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800ebfa:	68a3      	ldr	r3, [r4, #8]
 800ebfc:	4607      	mov	r7, r0
 800ebfe:	4691      	mov	r9, r2
 800ec00:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800ec04:	f108 0601 	add.w	r6, r8, #1
 800ec08:	42b3      	cmp	r3, r6
 800ec0a:	db0b      	blt.n	800ec24 <__lshift+0x38>
 800ec0c:	4638      	mov	r0, r7
 800ec0e:	f7ff fddf 	bl	800e7d0 <_Balloc>
 800ec12:	4605      	mov	r5, r0
 800ec14:	b948      	cbnz	r0, 800ec2a <__lshift+0x3e>
 800ec16:	4602      	mov	r2, r0
 800ec18:	4b28      	ldr	r3, [pc, #160]	@ (800ecbc <__lshift+0xd0>)
 800ec1a:	4829      	ldr	r0, [pc, #164]	@ (800ecc0 <__lshift+0xd4>)
 800ec1c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800ec20:	f000 fbda 	bl	800f3d8 <__assert_func>
 800ec24:	3101      	adds	r1, #1
 800ec26:	005b      	lsls	r3, r3, #1
 800ec28:	e7ee      	b.n	800ec08 <__lshift+0x1c>
 800ec2a:	2300      	movs	r3, #0
 800ec2c:	f100 0114 	add.w	r1, r0, #20
 800ec30:	f100 0210 	add.w	r2, r0, #16
 800ec34:	4618      	mov	r0, r3
 800ec36:	4553      	cmp	r3, sl
 800ec38:	db33      	blt.n	800eca2 <__lshift+0xb6>
 800ec3a:	6920      	ldr	r0, [r4, #16]
 800ec3c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800ec40:	f104 0314 	add.w	r3, r4, #20
 800ec44:	f019 091f 	ands.w	r9, r9, #31
 800ec48:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800ec4c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800ec50:	d02b      	beq.n	800ecaa <__lshift+0xbe>
 800ec52:	f1c9 0e20 	rsb	lr, r9, #32
 800ec56:	468a      	mov	sl, r1
 800ec58:	2200      	movs	r2, #0
 800ec5a:	6818      	ldr	r0, [r3, #0]
 800ec5c:	fa00 f009 	lsl.w	r0, r0, r9
 800ec60:	4310      	orrs	r0, r2
 800ec62:	f84a 0b04 	str.w	r0, [sl], #4
 800ec66:	f853 2b04 	ldr.w	r2, [r3], #4
 800ec6a:	459c      	cmp	ip, r3
 800ec6c:	fa22 f20e 	lsr.w	r2, r2, lr
 800ec70:	d8f3      	bhi.n	800ec5a <__lshift+0x6e>
 800ec72:	ebac 0304 	sub.w	r3, ip, r4
 800ec76:	3b15      	subs	r3, #21
 800ec78:	f023 0303 	bic.w	r3, r3, #3
 800ec7c:	3304      	adds	r3, #4
 800ec7e:	f104 0015 	add.w	r0, r4, #21
 800ec82:	4584      	cmp	ip, r0
 800ec84:	bf38      	it	cc
 800ec86:	2304      	movcc	r3, #4
 800ec88:	50ca      	str	r2, [r1, r3]
 800ec8a:	b10a      	cbz	r2, 800ec90 <__lshift+0xa4>
 800ec8c:	f108 0602 	add.w	r6, r8, #2
 800ec90:	3e01      	subs	r6, #1
 800ec92:	4638      	mov	r0, r7
 800ec94:	612e      	str	r6, [r5, #16]
 800ec96:	4621      	mov	r1, r4
 800ec98:	f7ff fdda 	bl	800e850 <_Bfree>
 800ec9c:	4628      	mov	r0, r5
 800ec9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eca2:	f842 0f04 	str.w	r0, [r2, #4]!
 800eca6:	3301      	adds	r3, #1
 800eca8:	e7c5      	b.n	800ec36 <__lshift+0x4a>
 800ecaa:	3904      	subs	r1, #4
 800ecac:	f853 2b04 	ldr.w	r2, [r3], #4
 800ecb0:	f841 2f04 	str.w	r2, [r1, #4]!
 800ecb4:	459c      	cmp	ip, r3
 800ecb6:	d8f9      	bhi.n	800ecac <__lshift+0xc0>
 800ecb8:	e7ea      	b.n	800ec90 <__lshift+0xa4>
 800ecba:	bf00      	nop
 800ecbc:	0800f6a0 	.word	0x0800f6a0
 800ecc0:	0800f6b1 	.word	0x0800f6b1

0800ecc4 <__mcmp>:
 800ecc4:	690a      	ldr	r2, [r1, #16]
 800ecc6:	4603      	mov	r3, r0
 800ecc8:	6900      	ldr	r0, [r0, #16]
 800ecca:	1a80      	subs	r0, r0, r2
 800eccc:	b530      	push	{r4, r5, lr}
 800ecce:	d10e      	bne.n	800ecee <__mcmp+0x2a>
 800ecd0:	3314      	adds	r3, #20
 800ecd2:	3114      	adds	r1, #20
 800ecd4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800ecd8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ecdc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800ece0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800ece4:	4295      	cmp	r5, r2
 800ece6:	d003      	beq.n	800ecf0 <__mcmp+0x2c>
 800ece8:	d205      	bcs.n	800ecf6 <__mcmp+0x32>
 800ecea:	f04f 30ff 	mov.w	r0, #4294967295
 800ecee:	bd30      	pop	{r4, r5, pc}
 800ecf0:	42a3      	cmp	r3, r4
 800ecf2:	d3f3      	bcc.n	800ecdc <__mcmp+0x18>
 800ecf4:	e7fb      	b.n	800ecee <__mcmp+0x2a>
 800ecf6:	2001      	movs	r0, #1
 800ecf8:	e7f9      	b.n	800ecee <__mcmp+0x2a>
	...

0800ecfc <__mdiff>:
 800ecfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed00:	4689      	mov	r9, r1
 800ed02:	4606      	mov	r6, r0
 800ed04:	4611      	mov	r1, r2
 800ed06:	4648      	mov	r0, r9
 800ed08:	4614      	mov	r4, r2
 800ed0a:	f7ff ffdb 	bl	800ecc4 <__mcmp>
 800ed0e:	1e05      	subs	r5, r0, #0
 800ed10:	d112      	bne.n	800ed38 <__mdiff+0x3c>
 800ed12:	4629      	mov	r1, r5
 800ed14:	4630      	mov	r0, r6
 800ed16:	f7ff fd5b 	bl	800e7d0 <_Balloc>
 800ed1a:	4602      	mov	r2, r0
 800ed1c:	b928      	cbnz	r0, 800ed2a <__mdiff+0x2e>
 800ed1e:	4b3f      	ldr	r3, [pc, #252]	@ (800ee1c <__mdiff+0x120>)
 800ed20:	f240 2137 	movw	r1, #567	@ 0x237
 800ed24:	483e      	ldr	r0, [pc, #248]	@ (800ee20 <__mdiff+0x124>)
 800ed26:	f000 fb57 	bl	800f3d8 <__assert_func>
 800ed2a:	2301      	movs	r3, #1
 800ed2c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ed30:	4610      	mov	r0, r2
 800ed32:	b003      	add	sp, #12
 800ed34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed38:	bfbc      	itt	lt
 800ed3a:	464b      	movlt	r3, r9
 800ed3c:	46a1      	movlt	r9, r4
 800ed3e:	4630      	mov	r0, r6
 800ed40:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800ed44:	bfba      	itte	lt
 800ed46:	461c      	movlt	r4, r3
 800ed48:	2501      	movlt	r5, #1
 800ed4a:	2500      	movge	r5, #0
 800ed4c:	f7ff fd40 	bl	800e7d0 <_Balloc>
 800ed50:	4602      	mov	r2, r0
 800ed52:	b918      	cbnz	r0, 800ed5c <__mdiff+0x60>
 800ed54:	4b31      	ldr	r3, [pc, #196]	@ (800ee1c <__mdiff+0x120>)
 800ed56:	f240 2145 	movw	r1, #581	@ 0x245
 800ed5a:	e7e3      	b.n	800ed24 <__mdiff+0x28>
 800ed5c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800ed60:	6926      	ldr	r6, [r4, #16]
 800ed62:	60c5      	str	r5, [r0, #12]
 800ed64:	f109 0310 	add.w	r3, r9, #16
 800ed68:	f109 0514 	add.w	r5, r9, #20
 800ed6c:	f104 0e14 	add.w	lr, r4, #20
 800ed70:	f100 0b14 	add.w	fp, r0, #20
 800ed74:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800ed78:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800ed7c:	9301      	str	r3, [sp, #4]
 800ed7e:	46d9      	mov	r9, fp
 800ed80:	f04f 0c00 	mov.w	ip, #0
 800ed84:	9b01      	ldr	r3, [sp, #4]
 800ed86:	f85e 0b04 	ldr.w	r0, [lr], #4
 800ed8a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800ed8e:	9301      	str	r3, [sp, #4]
 800ed90:	fa1f f38a 	uxth.w	r3, sl
 800ed94:	4619      	mov	r1, r3
 800ed96:	b283      	uxth	r3, r0
 800ed98:	1acb      	subs	r3, r1, r3
 800ed9a:	0c00      	lsrs	r0, r0, #16
 800ed9c:	4463      	add	r3, ip
 800ed9e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800eda2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800eda6:	b29b      	uxth	r3, r3
 800eda8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800edac:	4576      	cmp	r6, lr
 800edae:	f849 3b04 	str.w	r3, [r9], #4
 800edb2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800edb6:	d8e5      	bhi.n	800ed84 <__mdiff+0x88>
 800edb8:	1b33      	subs	r3, r6, r4
 800edba:	3b15      	subs	r3, #21
 800edbc:	f023 0303 	bic.w	r3, r3, #3
 800edc0:	3415      	adds	r4, #21
 800edc2:	3304      	adds	r3, #4
 800edc4:	42a6      	cmp	r6, r4
 800edc6:	bf38      	it	cc
 800edc8:	2304      	movcc	r3, #4
 800edca:	441d      	add	r5, r3
 800edcc:	445b      	add	r3, fp
 800edce:	461e      	mov	r6, r3
 800edd0:	462c      	mov	r4, r5
 800edd2:	4544      	cmp	r4, r8
 800edd4:	d30e      	bcc.n	800edf4 <__mdiff+0xf8>
 800edd6:	f108 0103 	add.w	r1, r8, #3
 800edda:	1b49      	subs	r1, r1, r5
 800eddc:	f021 0103 	bic.w	r1, r1, #3
 800ede0:	3d03      	subs	r5, #3
 800ede2:	45a8      	cmp	r8, r5
 800ede4:	bf38      	it	cc
 800ede6:	2100      	movcc	r1, #0
 800ede8:	440b      	add	r3, r1
 800edea:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800edee:	b191      	cbz	r1, 800ee16 <__mdiff+0x11a>
 800edf0:	6117      	str	r7, [r2, #16]
 800edf2:	e79d      	b.n	800ed30 <__mdiff+0x34>
 800edf4:	f854 1b04 	ldr.w	r1, [r4], #4
 800edf8:	46e6      	mov	lr, ip
 800edfa:	0c08      	lsrs	r0, r1, #16
 800edfc:	fa1c fc81 	uxtah	ip, ip, r1
 800ee00:	4471      	add	r1, lr
 800ee02:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800ee06:	b289      	uxth	r1, r1
 800ee08:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800ee0c:	f846 1b04 	str.w	r1, [r6], #4
 800ee10:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800ee14:	e7dd      	b.n	800edd2 <__mdiff+0xd6>
 800ee16:	3f01      	subs	r7, #1
 800ee18:	e7e7      	b.n	800edea <__mdiff+0xee>
 800ee1a:	bf00      	nop
 800ee1c:	0800f6a0 	.word	0x0800f6a0
 800ee20:	0800f6b1 	.word	0x0800f6b1

0800ee24 <__d2b>:
 800ee24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ee28:	460f      	mov	r7, r1
 800ee2a:	2101      	movs	r1, #1
 800ee2c:	ec59 8b10 	vmov	r8, r9, d0
 800ee30:	4616      	mov	r6, r2
 800ee32:	f7ff fccd 	bl	800e7d0 <_Balloc>
 800ee36:	4604      	mov	r4, r0
 800ee38:	b930      	cbnz	r0, 800ee48 <__d2b+0x24>
 800ee3a:	4602      	mov	r2, r0
 800ee3c:	4b23      	ldr	r3, [pc, #140]	@ (800eecc <__d2b+0xa8>)
 800ee3e:	4824      	ldr	r0, [pc, #144]	@ (800eed0 <__d2b+0xac>)
 800ee40:	f240 310f 	movw	r1, #783	@ 0x30f
 800ee44:	f000 fac8 	bl	800f3d8 <__assert_func>
 800ee48:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800ee4c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800ee50:	b10d      	cbz	r5, 800ee56 <__d2b+0x32>
 800ee52:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800ee56:	9301      	str	r3, [sp, #4]
 800ee58:	f1b8 0300 	subs.w	r3, r8, #0
 800ee5c:	d023      	beq.n	800eea6 <__d2b+0x82>
 800ee5e:	4668      	mov	r0, sp
 800ee60:	9300      	str	r3, [sp, #0]
 800ee62:	f7ff fd7c 	bl	800e95e <__lo0bits>
 800ee66:	e9dd 1200 	ldrd	r1, r2, [sp]
 800ee6a:	b1d0      	cbz	r0, 800eea2 <__d2b+0x7e>
 800ee6c:	f1c0 0320 	rsb	r3, r0, #32
 800ee70:	fa02 f303 	lsl.w	r3, r2, r3
 800ee74:	430b      	orrs	r3, r1
 800ee76:	40c2      	lsrs	r2, r0
 800ee78:	6163      	str	r3, [r4, #20]
 800ee7a:	9201      	str	r2, [sp, #4]
 800ee7c:	9b01      	ldr	r3, [sp, #4]
 800ee7e:	61a3      	str	r3, [r4, #24]
 800ee80:	2b00      	cmp	r3, #0
 800ee82:	bf0c      	ite	eq
 800ee84:	2201      	moveq	r2, #1
 800ee86:	2202      	movne	r2, #2
 800ee88:	6122      	str	r2, [r4, #16]
 800ee8a:	b1a5      	cbz	r5, 800eeb6 <__d2b+0x92>
 800ee8c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800ee90:	4405      	add	r5, r0
 800ee92:	603d      	str	r5, [r7, #0]
 800ee94:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800ee98:	6030      	str	r0, [r6, #0]
 800ee9a:	4620      	mov	r0, r4
 800ee9c:	b003      	add	sp, #12
 800ee9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eea2:	6161      	str	r1, [r4, #20]
 800eea4:	e7ea      	b.n	800ee7c <__d2b+0x58>
 800eea6:	a801      	add	r0, sp, #4
 800eea8:	f7ff fd59 	bl	800e95e <__lo0bits>
 800eeac:	9b01      	ldr	r3, [sp, #4]
 800eeae:	6163      	str	r3, [r4, #20]
 800eeb0:	3020      	adds	r0, #32
 800eeb2:	2201      	movs	r2, #1
 800eeb4:	e7e8      	b.n	800ee88 <__d2b+0x64>
 800eeb6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800eeba:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800eebe:	6038      	str	r0, [r7, #0]
 800eec0:	6918      	ldr	r0, [r3, #16]
 800eec2:	f7ff fd2d 	bl	800e920 <__hi0bits>
 800eec6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800eeca:	e7e5      	b.n	800ee98 <__d2b+0x74>
 800eecc:	0800f6a0 	.word	0x0800f6a0
 800eed0:	0800f6b1 	.word	0x0800f6b1

0800eed4 <__sfputc_r>:
 800eed4:	6893      	ldr	r3, [r2, #8]
 800eed6:	3b01      	subs	r3, #1
 800eed8:	2b00      	cmp	r3, #0
 800eeda:	b410      	push	{r4}
 800eedc:	6093      	str	r3, [r2, #8]
 800eede:	da08      	bge.n	800eef2 <__sfputc_r+0x1e>
 800eee0:	6994      	ldr	r4, [r2, #24]
 800eee2:	42a3      	cmp	r3, r4
 800eee4:	db01      	blt.n	800eeea <__sfputc_r+0x16>
 800eee6:	290a      	cmp	r1, #10
 800eee8:	d103      	bne.n	800eef2 <__sfputc_r+0x1e>
 800eeea:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eeee:	f7fe bc00 	b.w	800d6f2 <__swbuf_r>
 800eef2:	6813      	ldr	r3, [r2, #0]
 800eef4:	1c58      	adds	r0, r3, #1
 800eef6:	6010      	str	r0, [r2, #0]
 800eef8:	7019      	strb	r1, [r3, #0]
 800eefa:	4608      	mov	r0, r1
 800eefc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef00:	4770      	bx	lr

0800ef02 <__sfputs_r>:
 800ef02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ef04:	4606      	mov	r6, r0
 800ef06:	460f      	mov	r7, r1
 800ef08:	4614      	mov	r4, r2
 800ef0a:	18d5      	adds	r5, r2, r3
 800ef0c:	42ac      	cmp	r4, r5
 800ef0e:	d101      	bne.n	800ef14 <__sfputs_r+0x12>
 800ef10:	2000      	movs	r0, #0
 800ef12:	e007      	b.n	800ef24 <__sfputs_r+0x22>
 800ef14:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ef18:	463a      	mov	r2, r7
 800ef1a:	4630      	mov	r0, r6
 800ef1c:	f7ff ffda 	bl	800eed4 <__sfputc_r>
 800ef20:	1c43      	adds	r3, r0, #1
 800ef22:	d1f3      	bne.n	800ef0c <__sfputs_r+0xa>
 800ef24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800ef28 <_vfiprintf_r>:
 800ef28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef2c:	460d      	mov	r5, r1
 800ef2e:	b09d      	sub	sp, #116	@ 0x74
 800ef30:	4614      	mov	r4, r2
 800ef32:	4698      	mov	r8, r3
 800ef34:	4606      	mov	r6, r0
 800ef36:	b118      	cbz	r0, 800ef40 <_vfiprintf_r+0x18>
 800ef38:	6a03      	ldr	r3, [r0, #32]
 800ef3a:	b90b      	cbnz	r3, 800ef40 <_vfiprintf_r+0x18>
 800ef3c:	f7fe fb02 	bl	800d544 <__sinit>
 800ef40:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800ef42:	07d9      	lsls	r1, r3, #31
 800ef44:	d405      	bmi.n	800ef52 <_vfiprintf_r+0x2a>
 800ef46:	89ab      	ldrh	r3, [r5, #12]
 800ef48:	059a      	lsls	r2, r3, #22
 800ef4a:	d402      	bmi.n	800ef52 <_vfiprintf_r+0x2a>
 800ef4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800ef4e:	f7fe fce2 	bl	800d916 <__retarget_lock_acquire_recursive>
 800ef52:	89ab      	ldrh	r3, [r5, #12]
 800ef54:	071b      	lsls	r3, r3, #28
 800ef56:	d501      	bpl.n	800ef5c <_vfiprintf_r+0x34>
 800ef58:	692b      	ldr	r3, [r5, #16]
 800ef5a:	b99b      	cbnz	r3, 800ef84 <_vfiprintf_r+0x5c>
 800ef5c:	4629      	mov	r1, r5
 800ef5e:	4630      	mov	r0, r6
 800ef60:	f7fe fc06 	bl	800d770 <__swsetup_r>
 800ef64:	b170      	cbz	r0, 800ef84 <_vfiprintf_r+0x5c>
 800ef66:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800ef68:	07dc      	lsls	r4, r3, #31
 800ef6a:	d504      	bpl.n	800ef76 <_vfiprintf_r+0x4e>
 800ef6c:	f04f 30ff 	mov.w	r0, #4294967295
 800ef70:	b01d      	add	sp, #116	@ 0x74
 800ef72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef76:	89ab      	ldrh	r3, [r5, #12]
 800ef78:	0598      	lsls	r0, r3, #22
 800ef7a:	d4f7      	bmi.n	800ef6c <_vfiprintf_r+0x44>
 800ef7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800ef7e:	f7fe fccb 	bl	800d918 <__retarget_lock_release_recursive>
 800ef82:	e7f3      	b.n	800ef6c <_vfiprintf_r+0x44>
 800ef84:	2300      	movs	r3, #0
 800ef86:	9309      	str	r3, [sp, #36]	@ 0x24
 800ef88:	2320      	movs	r3, #32
 800ef8a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800ef8e:	f8cd 800c 	str.w	r8, [sp, #12]
 800ef92:	2330      	movs	r3, #48	@ 0x30
 800ef94:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800f144 <_vfiprintf_r+0x21c>
 800ef98:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800ef9c:	f04f 0901 	mov.w	r9, #1
 800efa0:	4623      	mov	r3, r4
 800efa2:	469a      	mov	sl, r3
 800efa4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800efa8:	b10a      	cbz	r2, 800efae <_vfiprintf_r+0x86>
 800efaa:	2a25      	cmp	r2, #37	@ 0x25
 800efac:	d1f9      	bne.n	800efa2 <_vfiprintf_r+0x7a>
 800efae:	ebba 0b04 	subs.w	fp, sl, r4
 800efb2:	d00b      	beq.n	800efcc <_vfiprintf_r+0xa4>
 800efb4:	465b      	mov	r3, fp
 800efb6:	4622      	mov	r2, r4
 800efb8:	4629      	mov	r1, r5
 800efba:	4630      	mov	r0, r6
 800efbc:	f7ff ffa1 	bl	800ef02 <__sfputs_r>
 800efc0:	3001      	adds	r0, #1
 800efc2:	f000 80a7 	beq.w	800f114 <_vfiprintf_r+0x1ec>
 800efc6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800efc8:	445a      	add	r2, fp
 800efca:	9209      	str	r2, [sp, #36]	@ 0x24
 800efcc:	f89a 3000 	ldrb.w	r3, [sl]
 800efd0:	2b00      	cmp	r3, #0
 800efd2:	f000 809f 	beq.w	800f114 <_vfiprintf_r+0x1ec>
 800efd6:	2300      	movs	r3, #0
 800efd8:	f04f 32ff 	mov.w	r2, #4294967295
 800efdc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800efe0:	f10a 0a01 	add.w	sl, sl, #1
 800efe4:	9304      	str	r3, [sp, #16]
 800efe6:	9307      	str	r3, [sp, #28]
 800efe8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800efec:	931a      	str	r3, [sp, #104]	@ 0x68
 800efee:	4654      	mov	r4, sl
 800eff0:	2205      	movs	r2, #5
 800eff2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800eff6:	4853      	ldr	r0, [pc, #332]	@ (800f144 <_vfiprintf_r+0x21c>)
 800eff8:	f7f1 f8ea 	bl	80001d0 <memchr>
 800effc:	9a04      	ldr	r2, [sp, #16]
 800effe:	b9d8      	cbnz	r0, 800f038 <_vfiprintf_r+0x110>
 800f000:	06d1      	lsls	r1, r2, #27
 800f002:	bf44      	itt	mi
 800f004:	2320      	movmi	r3, #32
 800f006:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800f00a:	0713      	lsls	r3, r2, #28
 800f00c:	bf44      	itt	mi
 800f00e:	232b      	movmi	r3, #43	@ 0x2b
 800f010:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800f014:	f89a 3000 	ldrb.w	r3, [sl]
 800f018:	2b2a      	cmp	r3, #42	@ 0x2a
 800f01a:	d015      	beq.n	800f048 <_vfiprintf_r+0x120>
 800f01c:	9a07      	ldr	r2, [sp, #28]
 800f01e:	4654      	mov	r4, sl
 800f020:	2000      	movs	r0, #0
 800f022:	f04f 0c0a 	mov.w	ip, #10
 800f026:	4621      	mov	r1, r4
 800f028:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f02c:	3b30      	subs	r3, #48	@ 0x30
 800f02e:	2b09      	cmp	r3, #9
 800f030:	d94b      	bls.n	800f0ca <_vfiprintf_r+0x1a2>
 800f032:	b1b0      	cbz	r0, 800f062 <_vfiprintf_r+0x13a>
 800f034:	9207      	str	r2, [sp, #28]
 800f036:	e014      	b.n	800f062 <_vfiprintf_r+0x13a>
 800f038:	eba0 0308 	sub.w	r3, r0, r8
 800f03c:	fa09 f303 	lsl.w	r3, r9, r3
 800f040:	4313      	orrs	r3, r2
 800f042:	9304      	str	r3, [sp, #16]
 800f044:	46a2      	mov	sl, r4
 800f046:	e7d2      	b.n	800efee <_vfiprintf_r+0xc6>
 800f048:	9b03      	ldr	r3, [sp, #12]
 800f04a:	1d19      	adds	r1, r3, #4
 800f04c:	681b      	ldr	r3, [r3, #0]
 800f04e:	9103      	str	r1, [sp, #12]
 800f050:	2b00      	cmp	r3, #0
 800f052:	bfbb      	ittet	lt
 800f054:	425b      	neglt	r3, r3
 800f056:	f042 0202 	orrlt.w	r2, r2, #2
 800f05a:	9307      	strge	r3, [sp, #28]
 800f05c:	9307      	strlt	r3, [sp, #28]
 800f05e:	bfb8      	it	lt
 800f060:	9204      	strlt	r2, [sp, #16]
 800f062:	7823      	ldrb	r3, [r4, #0]
 800f064:	2b2e      	cmp	r3, #46	@ 0x2e
 800f066:	d10a      	bne.n	800f07e <_vfiprintf_r+0x156>
 800f068:	7863      	ldrb	r3, [r4, #1]
 800f06a:	2b2a      	cmp	r3, #42	@ 0x2a
 800f06c:	d132      	bne.n	800f0d4 <_vfiprintf_r+0x1ac>
 800f06e:	9b03      	ldr	r3, [sp, #12]
 800f070:	1d1a      	adds	r2, r3, #4
 800f072:	681b      	ldr	r3, [r3, #0]
 800f074:	9203      	str	r2, [sp, #12]
 800f076:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800f07a:	3402      	adds	r4, #2
 800f07c:	9305      	str	r3, [sp, #20]
 800f07e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800f154 <_vfiprintf_r+0x22c>
 800f082:	7821      	ldrb	r1, [r4, #0]
 800f084:	2203      	movs	r2, #3
 800f086:	4650      	mov	r0, sl
 800f088:	f7f1 f8a2 	bl	80001d0 <memchr>
 800f08c:	b138      	cbz	r0, 800f09e <_vfiprintf_r+0x176>
 800f08e:	9b04      	ldr	r3, [sp, #16]
 800f090:	eba0 000a 	sub.w	r0, r0, sl
 800f094:	2240      	movs	r2, #64	@ 0x40
 800f096:	4082      	lsls	r2, r0
 800f098:	4313      	orrs	r3, r2
 800f09a:	3401      	adds	r4, #1
 800f09c:	9304      	str	r3, [sp, #16]
 800f09e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f0a2:	4829      	ldr	r0, [pc, #164]	@ (800f148 <_vfiprintf_r+0x220>)
 800f0a4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800f0a8:	2206      	movs	r2, #6
 800f0aa:	f7f1 f891 	bl	80001d0 <memchr>
 800f0ae:	2800      	cmp	r0, #0
 800f0b0:	d03f      	beq.n	800f132 <_vfiprintf_r+0x20a>
 800f0b2:	4b26      	ldr	r3, [pc, #152]	@ (800f14c <_vfiprintf_r+0x224>)
 800f0b4:	bb1b      	cbnz	r3, 800f0fe <_vfiprintf_r+0x1d6>
 800f0b6:	9b03      	ldr	r3, [sp, #12]
 800f0b8:	3307      	adds	r3, #7
 800f0ba:	f023 0307 	bic.w	r3, r3, #7
 800f0be:	3308      	adds	r3, #8
 800f0c0:	9303      	str	r3, [sp, #12]
 800f0c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f0c4:	443b      	add	r3, r7
 800f0c6:	9309      	str	r3, [sp, #36]	@ 0x24
 800f0c8:	e76a      	b.n	800efa0 <_vfiprintf_r+0x78>
 800f0ca:	fb0c 3202 	mla	r2, ip, r2, r3
 800f0ce:	460c      	mov	r4, r1
 800f0d0:	2001      	movs	r0, #1
 800f0d2:	e7a8      	b.n	800f026 <_vfiprintf_r+0xfe>
 800f0d4:	2300      	movs	r3, #0
 800f0d6:	3401      	adds	r4, #1
 800f0d8:	9305      	str	r3, [sp, #20]
 800f0da:	4619      	mov	r1, r3
 800f0dc:	f04f 0c0a 	mov.w	ip, #10
 800f0e0:	4620      	mov	r0, r4
 800f0e2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f0e6:	3a30      	subs	r2, #48	@ 0x30
 800f0e8:	2a09      	cmp	r2, #9
 800f0ea:	d903      	bls.n	800f0f4 <_vfiprintf_r+0x1cc>
 800f0ec:	2b00      	cmp	r3, #0
 800f0ee:	d0c6      	beq.n	800f07e <_vfiprintf_r+0x156>
 800f0f0:	9105      	str	r1, [sp, #20]
 800f0f2:	e7c4      	b.n	800f07e <_vfiprintf_r+0x156>
 800f0f4:	fb0c 2101 	mla	r1, ip, r1, r2
 800f0f8:	4604      	mov	r4, r0
 800f0fa:	2301      	movs	r3, #1
 800f0fc:	e7f0      	b.n	800f0e0 <_vfiprintf_r+0x1b8>
 800f0fe:	ab03      	add	r3, sp, #12
 800f100:	9300      	str	r3, [sp, #0]
 800f102:	462a      	mov	r2, r5
 800f104:	4b12      	ldr	r3, [pc, #72]	@ (800f150 <_vfiprintf_r+0x228>)
 800f106:	a904      	add	r1, sp, #16
 800f108:	4630      	mov	r0, r6
 800f10a:	f7fd fdd7 	bl	800ccbc <_printf_float>
 800f10e:	4607      	mov	r7, r0
 800f110:	1c78      	adds	r0, r7, #1
 800f112:	d1d6      	bne.n	800f0c2 <_vfiprintf_r+0x19a>
 800f114:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800f116:	07d9      	lsls	r1, r3, #31
 800f118:	d405      	bmi.n	800f126 <_vfiprintf_r+0x1fe>
 800f11a:	89ab      	ldrh	r3, [r5, #12]
 800f11c:	059a      	lsls	r2, r3, #22
 800f11e:	d402      	bmi.n	800f126 <_vfiprintf_r+0x1fe>
 800f120:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800f122:	f7fe fbf9 	bl	800d918 <__retarget_lock_release_recursive>
 800f126:	89ab      	ldrh	r3, [r5, #12]
 800f128:	065b      	lsls	r3, r3, #25
 800f12a:	f53f af1f 	bmi.w	800ef6c <_vfiprintf_r+0x44>
 800f12e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f130:	e71e      	b.n	800ef70 <_vfiprintf_r+0x48>
 800f132:	ab03      	add	r3, sp, #12
 800f134:	9300      	str	r3, [sp, #0]
 800f136:	462a      	mov	r2, r5
 800f138:	4b05      	ldr	r3, [pc, #20]	@ (800f150 <_vfiprintf_r+0x228>)
 800f13a:	a904      	add	r1, sp, #16
 800f13c:	4630      	mov	r0, r6
 800f13e:	f7fe f855 	bl	800d1ec <_printf_i>
 800f142:	e7e4      	b.n	800f10e <_vfiprintf_r+0x1e6>
 800f144:	0800f808 	.word	0x0800f808
 800f148:	0800f812 	.word	0x0800f812
 800f14c:	0800ccbd 	.word	0x0800ccbd
 800f150:	0800ef03 	.word	0x0800ef03
 800f154:	0800f80e 	.word	0x0800f80e

0800f158 <__sflush_r>:
 800f158:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800f15c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f160:	0716      	lsls	r6, r2, #28
 800f162:	4605      	mov	r5, r0
 800f164:	460c      	mov	r4, r1
 800f166:	d454      	bmi.n	800f212 <__sflush_r+0xba>
 800f168:	684b      	ldr	r3, [r1, #4]
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	dc02      	bgt.n	800f174 <__sflush_r+0x1c>
 800f16e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800f170:	2b00      	cmp	r3, #0
 800f172:	dd48      	ble.n	800f206 <__sflush_r+0xae>
 800f174:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800f176:	2e00      	cmp	r6, #0
 800f178:	d045      	beq.n	800f206 <__sflush_r+0xae>
 800f17a:	2300      	movs	r3, #0
 800f17c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800f180:	682f      	ldr	r7, [r5, #0]
 800f182:	6a21      	ldr	r1, [r4, #32]
 800f184:	602b      	str	r3, [r5, #0]
 800f186:	d030      	beq.n	800f1ea <__sflush_r+0x92>
 800f188:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800f18a:	89a3      	ldrh	r3, [r4, #12]
 800f18c:	0759      	lsls	r1, r3, #29
 800f18e:	d505      	bpl.n	800f19c <__sflush_r+0x44>
 800f190:	6863      	ldr	r3, [r4, #4]
 800f192:	1ad2      	subs	r2, r2, r3
 800f194:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800f196:	b10b      	cbz	r3, 800f19c <__sflush_r+0x44>
 800f198:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800f19a:	1ad2      	subs	r2, r2, r3
 800f19c:	2300      	movs	r3, #0
 800f19e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800f1a0:	6a21      	ldr	r1, [r4, #32]
 800f1a2:	4628      	mov	r0, r5
 800f1a4:	47b0      	blx	r6
 800f1a6:	1c43      	adds	r3, r0, #1
 800f1a8:	89a3      	ldrh	r3, [r4, #12]
 800f1aa:	d106      	bne.n	800f1ba <__sflush_r+0x62>
 800f1ac:	6829      	ldr	r1, [r5, #0]
 800f1ae:	291d      	cmp	r1, #29
 800f1b0:	d82b      	bhi.n	800f20a <__sflush_r+0xb2>
 800f1b2:	4a2a      	ldr	r2, [pc, #168]	@ (800f25c <__sflush_r+0x104>)
 800f1b4:	410a      	asrs	r2, r1
 800f1b6:	07d6      	lsls	r6, r2, #31
 800f1b8:	d427      	bmi.n	800f20a <__sflush_r+0xb2>
 800f1ba:	2200      	movs	r2, #0
 800f1bc:	6062      	str	r2, [r4, #4]
 800f1be:	04d9      	lsls	r1, r3, #19
 800f1c0:	6922      	ldr	r2, [r4, #16]
 800f1c2:	6022      	str	r2, [r4, #0]
 800f1c4:	d504      	bpl.n	800f1d0 <__sflush_r+0x78>
 800f1c6:	1c42      	adds	r2, r0, #1
 800f1c8:	d101      	bne.n	800f1ce <__sflush_r+0x76>
 800f1ca:	682b      	ldr	r3, [r5, #0]
 800f1cc:	b903      	cbnz	r3, 800f1d0 <__sflush_r+0x78>
 800f1ce:	6560      	str	r0, [r4, #84]	@ 0x54
 800f1d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800f1d2:	602f      	str	r7, [r5, #0]
 800f1d4:	b1b9      	cbz	r1, 800f206 <__sflush_r+0xae>
 800f1d6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800f1da:	4299      	cmp	r1, r3
 800f1dc:	d002      	beq.n	800f1e4 <__sflush_r+0x8c>
 800f1de:	4628      	mov	r0, r5
 800f1e0:	f7ff f9f6 	bl	800e5d0 <_free_r>
 800f1e4:	2300      	movs	r3, #0
 800f1e6:	6363      	str	r3, [r4, #52]	@ 0x34
 800f1e8:	e00d      	b.n	800f206 <__sflush_r+0xae>
 800f1ea:	2301      	movs	r3, #1
 800f1ec:	4628      	mov	r0, r5
 800f1ee:	47b0      	blx	r6
 800f1f0:	4602      	mov	r2, r0
 800f1f2:	1c50      	adds	r0, r2, #1
 800f1f4:	d1c9      	bne.n	800f18a <__sflush_r+0x32>
 800f1f6:	682b      	ldr	r3, [r5, #0]
 800f1f8:	2b00      	cmp	r3, #0
 800f1fa:	d0c6      	beq.n	800f18a <__sflush_r+0x32>
 800f1fc:	2b1d      	cmp	r3, #29
 800f1fe:	d001      	beq.n	800f204 <__sflush_r+0xac>
 800f200:	2b16      	cmp	r3, #22
 800f202:	d11e      	bne.n	800f242 <__sflush_r+0xea>
 800f204:	602f      	str	r7, [r5, #0]
 800f206:	2000      	movs	r0, #0
 800f208:	e022      	b.n	800f250 <__sflush_r+0xf8>
 800f20a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800f20e:	b21b      	sxth	r3, r3
 800f210:	e01b      	b.n	800f24a <__sflush_r+0xf2>
 800f212:	690f      	ldr	r7, [r1, #16]
 800f214:	2f00      	cmp	r7, #0
 800f216:	d0f6      	beq.n	800f206 <__sflush_r+0xae>
 800f218:	0793      	lsls	r3, r2, #30
 800f21a:	680e      	ldr	r6, [r1, #0]
 800f21c:	bf08      	it	eq
 800f21e:	694b      	ldreq	r3, [r1, #20]
 800f220:	600f      	str	r7, [r1, #0]
 800f222:	bf18      	it	ne
 800f224:	2300      	movne	r3, #0
 800f226:	eba6 0807 	sub.w	r8, r6, r7
 800f22a:	608b      	str	r3, [r1, #8]
 800f22c:	f1b8 0f00 	cmp.w	r8, #0
 800f230:	dde9      	ble.n	800f206 <__sflush_r+0xae>
 800f232:	6a21      	ldr	r1, [r4, #32]
 800f234:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800f236:	4643      	mov	r3, r8
 800f238:	463a      	mov	r2, r7
 800f23a:	4628      	mov	r0, r5
 800f23c:	47b0      	blx	r6
 800f23e:	2800      	cmp	r0, #0
 800f240:	dc08      	bgt.n	800f254 <__sflush_r+0xfc>
 800f242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f246:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800f24a:	81a3      	strh	r3, [r4, #12]
 800f24c:	f04f 30ff 	mov.w	r0, #4294967295
 800f250:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f254:	4407      	add	r7, r0
 800f256:	eba8 0800 	sub.w	r8, r8, r0
 800f25a:	e7e7      	b.n	800f22c <__sflush_r+0xd4>
 800f25c:	dfbffffe 	.word	0xdfbffffe

0800f260 <_fflush_r>:
 800f260:	b538      	push	{r3, r4, r5, lr}
 800f262:	690b      	ldr	r3, [r1, #16]
 800f264:	4605      	mov	r5, r0
 800f266:	460c      	mov	r4, r1
 800f268:	b913      	cbnz	r3, 800f270 <_fflush_r+0x10>
 800f26a:	2500      	movs	r5, #0
 800f26c:	4628      	mov	r0, r5
 800f26e:	bd38      	pop	{r3, r4, r5, pc}
 800f270:	b118      	cbz	r0, 800f27a <_fflush_r+0x1a>
 800f272:	6a03      	ldr	r3, [r0, #32]
 800f274:	b90b      	cbnz	r3, 800f27a <_fflush_r+0x1a>
 800f276:	f7fe f965 	bl	800d544 <__sinit>
 800f27a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f27e:	2b00      	cmp	r3, #0
 800f280:	d0f3      	beq.n	800f26a <_fflush_r+0xa>
 800f282:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800f284:	07d0      	lsls	r0, r2, #31
 800f286:	d404      	bmi.n	800f292 <_fflush_r+0x32>
 800f288:	0599      	lsls	r1, r3, #22
 800f28a:	d402      	bmi.n	800f292 <_fflush_r+0x32>
 800f28c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800f28e:	f7fe fb42 	bl	800d916 <__retarget_lock_acquire_recursive>
 800f292:	4628      	mov	r0, r5
 800f294:	4621      	mov	r1, r4
 800f296:	f7ff ff5f 	bl	800f158 <__sflush_r>
 800f29a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800f29c:	07da      	lsls	r2, r3, #31
 800f29e:	4605      	mov	r5, r0
 800f2a0:	d4e4      	bmi.n	800f26c <_fflush_r+0xc>
 800f2a2:	89a3      	ldrh	r3, [r4, #12]
 800f2a4:	059b      	lsls	r3, r3, #22
 800f2a6:	d4e1      	bmi.n	800f26c <_fflush_r+0xc>
 800f2a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800f2aa:	f7fe fb35 	bl	800d918 <__retarget_lock_release_recursive>
 800f2ae:	e7dd      	b.n	800f26c <_fflush_r+0xc>

0800f2b0 <__swhatbuf_r>:
 800f2b0:	b570      	push	{r4, r5, r6, lr}
 800f2b2:	460c      	mov	r4, r1
 800f2b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f2b8:	2900      	cmp	r1, #0
 800f2ba:	b096      	sub	sp, #88	@ 0x58
 800f2bc:	4615      	mov	r5, r2
 800f2be:	461e      	mov	r6, r3
 800f2c0:	da0d      	bge.n	800f2de <__swhatbuf_r+0x2e>
 800f2c2:	89a3      	ldrh	r3, [r4, #12]
 800f2c4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800f2c8:	f04f 0100 	mov.w	r1, #0
 800f2cc:	bf14      	ite	ne
 800f2ce:	2340      	movne	r3, #64	@ 0x40
 800f2d0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800f2d4:	2000      	movs	r0, #0
 800f2d6:	6031      	str	r1, [r6, #0]
 800f2d8:	602b      	str	r3, [r5, #0]
 800f2da:	b016      	add	sp, #88	@ 0x58
 800f2dc:	bd70      	pop	{r4, r5, r6, pc}
 800f2de:	466a      	mov	r2, sp
 800f2e0:	f000 f848 	bl	800f374 <_fstat_r>
 800f2e4:	2800      	cmp	r0, #0
 800f2e6:	dbec      	blt.n	800f2c2 <__swhatbuf_r+0x12>
 800f2e8:	9901      	ldr	r1, [sp, #4]
 800f2ea:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800f2ee:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800f2f2:	4259      	negs	r1, r3
 800f2f4:	4159      	adcs	r1, r3
 800f2f6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800f2fa:	e7eb      	b.n	800f2d4 <__swhatbuf_r+0x24>

0800f2fc <__smakebuf_r>:
 800f2fc:	898b      	ldrh	r3, [r1, #12]
 800f2fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f300:	079d      	lsls	r5, r3, #30
 800f302:	4606      	mov	r6, r0
 800f304:	460c      	mov	r4, r1
 800f306:	d507      	bpl.n	800f318 <__smakebuf_r+0x1c>
 800f308:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800f30c:	6023      	str	r3, [r4, #0]
 800f30e:	6123      	str	r3, [r4, #16]
 800f310:	2301      	movs	r3, #1
 800f312:	6163      	str	r3, [r4, #20]
 800f314:	b003      	add	sp, #12
 800f316:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f318:	ab01      	add	r3, sp, #4
 800f31a:	466a      	mov	r2, sp
 800f31c:	f7ff ffc8 	bl	800f2b0 <__swhatbuf_r>
 800f320:	9f00      	ldr	r7, [sp, #0]
 800f322:	4605      	mov	r5, r0
 800f324:	4639      	mov	r1, r7
 800f326:	4630      	mov	r0, r6
 800f328:	f7ff f9c6 	bl	800e6b8 <_malloc_r>
 800f32c:	b948      	cbnz	r0, 800f342 <__smakebuf_r+0x46>
 800f32e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f332:	059a      	lsls	r2, r3, #22
 800f334:	d4ee      	bmi.n	800f314 <__smakebuf_r+0x18>
 800f336:	f023 0303 	bic.w	r3, r3, #3
 800f33a:	f043 0302 	orr.w	r3, r3, #2
 800f33e:	81a3      	strh	r3, [r4, #12]
 800f340:	e7e2      	b.n	800f308 <__smakebuf_r+0xc>
 800f342:	89a3      	ldrh	r3, [r4, #12]
 800f344:	6020      	str	r0, [r4, #0]
 800f346:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800f34a:	81a3      	strh	r3, [r4, #12]
 800f34c:	9b01      	ldr	r3, [sp, #4]
 800f34e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800f352:	b15b      	cbz	r3, 800f36c <__smakebuf_r+0x70>
 800f354:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f358:	4630      	mov	r0, r6
 800f35a:	f000 f81d 	bl	800f398 <_isatty_r>
 800f35e:	b128      	cbz	r0, 800f36c <__smakebuf_r+0x70>
 800f360:	89a3      	ldrh	r3, [r4, #12]
 800f362:	f023 0303 	bic.w	r3, r3, #3
 800f366:	f043 0301 	orr.w	r3, r3, #1
 800f36a:	81a3      	strh	r3, [r4, #12]
 800f36c:	89a3      	ldrh	r3, [r4, #12]
 800f36e:	431d      	orrs	r5, r3
 800f370:	81a5      	strh	r5, [r4, #12]
 800f372:	e7cf      	b.n	800f314 <__smakebuf_r+0x18>

0800f374 <_fstat_r>:
 800f374:	b538      	push	{r3, r4, r5, lr}
 800f376:	4d07      	ldr	r5, [pc, #28]	@ (800f394 <_fstat_r+0x20>)
 800f378:	2300      	movs	r3, #0
 800f37a:	4604      	mov	r4, r0
 800f37c:	4608      	mov	r0, r1
 800f37e:	4611      	mov	r1, r2
 800f380:	602b      	str	r3, [r5, #0]
 800f382:	f7f2 fe79 	bl	8002078 <_fstat>
 800f386:	1c43      	adds	r3, r0, #1
 800f388:	d102      	bne.n	800f390 <_fstat_r+0x1c>
 800f38a:	682b      	ldr	r3, [r5, #0]
 800f38c:	b103      	cbz	r3, 800f390 <_fstat_r+0x1c>
 800f38e:	6023      	str	r3, [r4, #0]
 800f390:	bd38      	pop	{r3, r4, r5, pc}
 800f392:	bf00      	nop
 800f394:	200010c8 	.word	0x200010c8

0800f398 <_isatty_r>:
 800f398:	b538      	push	{r3, r4, r5, lr}
 800f39a:	4d06      	ldr	r5, [pc, #24]	@ (800f3b4 <_isatty_r+0x1c>)
 800f39c:	2300      	movs	r3, #0
 800f39e:	4604      	mov	r4, r0
 800f3a0:	4608      	mov	r0, r1
 800f3a2:	602b      	str	r3, [r5, #0]
 800f3a4:	f7f2 fe78 	bl	8002098 <_isatty>
 800f3a8:	1c43      	adds	r3, r0, #1
 800f3aa:	d102      	bne.n	800f3b2 <_isatty_r+0x1a>
 800f3ac:	682b      	ldr	r3, [r5, #0]
 800f3ae:	b103      	cbz	r3, 800f3b2 <_isatty_r+0x1a>
 800f3b0:	6023      	str	r3, [r4, #0]
 800f3b2:	bd38      	pop	{r3, r4, r5, pc}
 800f3b4:	200010c8 	.word	0x200010c8

0800f3b8 <_sbrk_r>:
 800f3b8:	b538      	push	{r3, r4, r5, lr}
 800f3ba:	4d06      	ldr	r5, [pc, #24]	@ (800f3d4 <_sbrk_r+0x1c>)
 800f3bc:	2300      	movs	r3, #0
 800f3be:	4604      	mov	r4, r0
 800f3c0:	4608      	mov	r0, r1
 800f3c2:	602b      	str	r3, [r5, #0]
 800f3c4:	f7f2 fe80 	bl	80020c8 <_sbrk>
 800f3c8:	1c43      	adds	r3, r0, #1
 800f3ca:	d102      	bne.n	800f3d2 <_sbrk_r+0x1a>
 800f3cc:	682b      	ldr	r3, [r5, #0]
 800f3ce:	b103      	cbz	r3, 800f3d2 <_sbrk_r+0x1a>
 800f3d0:	6023      	str	r3, [r4, #0]
 800f3d2:	bd38      	pop	{r3, r4, r5, pc}
 800f3d4:	200010c8 	.word	0x200010c8

0800f3d8 <__assert_func>:
 800f3d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f3da:	4614      	mov	r4, r2
 800f3dc:	461a      	mov	r2, r3
 800f3de:	4b09      	ldr	r3, [pc, #36]	@ (800f404 <__assert_func+0x2c>)
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	4605      	mov	r5, r0
 800f3e4:	68d8      	ldr	r0, [r3, #12]
 800f3e6:	b954      	cbnz	r4, 800f3fe <__assert_func+0x26>
 800f3e8:	4b07      	ldr	r3, [pc, #28]	@ (800f408 <__assert_func+0x30>)
 800f3ea:	461c      	mov	r4, r3
 800f3ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f3f0:	9100      	str	r1, [sp, #0]
 800f3f2:	462b      	mov	r3, r5
 800f3f4:	4905      	ldr	r1, [pc, #20]	@ (800f40c <__assert_func+0x34>)
 800f3f6:	f000 f841 	bl	800f47c <fiprintf>
 800f3fa:	f000 f851 	bl	800f4a0 <abort>
 800f3fe:	4b04      	ldr	r3, [pc, #16]	@ (800f410 <__assert_func+0x38>)
 800f400:	e7f4      	b.n	800f3ec <__assert_func+0x14>
 800f402:	bf00      	nop
 800f404:	20000170 	.word	0x20000170
 800f408:	0800f85e 	.word	0x0800f85e
 800f40c:	0800f830 	.word	0x0800f830
 800f410:	0800f823 	.word	0x0800f823

0800f414 <_calloc_r>:
 800f414:	b570      	push	{r4, r5, r6, lr}
 800f416:	fba1 5402 	umull	r5, r4, r1, r2
 800f41a:	b93c      	cbnz	r4, 800f42c <_calloc_r+0x18>
 800f41c:	4629      	mov	r1, r5
 800f41e:	f7ff f94b 	bl	800e6b8 <_malloc_r>
 800f422:	4606      	mov	r6, r0
 800f424:	b928      	cbnz	r0, 800f432 <_calloc_r+0x1e>
 800f426:	2600      	movs	r6, #0
 800f428:	4630      	mov	r0, r6
 800f42a:	bd70      	pop	{r4, r5, r6, pc}
 800f42c:	220c      	movs	r2, #12
 800f42e:	6002      	str	r2, [r0, #0]
 800f430:	e7f9      	b.n	800f426 <_calloc_r+0x12>
 800f432:	462a      	mov	r2, r5
 800f434:	4621      	mov	r1, r4
 800f436:	f7fe f9f1 	bl	800d81c <memset>
 800f43a:	e7f5      	b.n	800f428 <_calloc_r+0x14>

0800f43c <__ascii_mbtowc>:
 800f43c:	b082      	sub	sp, #8
 800f43e:	b901      	cbnz	r1, 800f442 <__ascii_mbtowc+0x6>
 800f440:	a901      	add	r1, sp, #4
 800f442:	b142      	cbz	r2, 800f456 <__ascii_mbtowc+0x1a>
 800f444:	b14b      	cbz	r3, 800f45a <__ascii_mbtowc+0x1e>
 800f446:	7813      	ldrb	r3, [r2, #0]
 800f448:	600b      	str	r3, [r1, #0]
 800f44a:	7812      	ldrb	r2, [r2, #0]
 800f44c:	1e10      	subs	r0, r2, #0
 800f44e:	bf18      	it	ne
 800f450:	2001      	movne	r0, #1
 800f452:	b002      	add	sp, #8
 800f454:	4770      	bx	lr
 800f456:	4610      	mov	r0, r2
 800f458:	e7fb      	b.n	800f452 <__ascii_mbtowc+0x16>
 800f45a:	f06f 0001 	mvn.w	r0, #1
 800f45e:	e7f8      	b.n	800f452 <__ascii_mbtowc+0x16>

0800f460 <__ascii_wctomb>:
 800f460:	4603      	mov	r3, r0
 800f462:	4608      	mov	r0, r1
 800f464:	b141      	cbz	r1, 800f478 <__ascii_wctomb+0x18>
 800f466:	2aff      	cmp	r2, #255	@ 0xff
 800f468:	d904      	bls.n	800f474 <__ascii_wctomb+0x14>
 800f46a:	228a      	movs	r2, #138	@ 0x8a
 800f46c:	601a      	str	r2, [r3, #0]
 800f46e:	f04f 30ff 	mov.w	r0, #4294967295
 800f472:	4770      	bx	lr
 800f474:	700a      	strb	r2, [r1, #0]
 800f476:	2001      	movs	r0, #1
 800f478:	4770      	bx	lr
	...

0800f47c <fiprintf>:
 800f47c:	b40e      	push	{r1, r2, r3}
 800f47e:	b503      	push	{r0, r1, lr}
 800f480:	4601      	mov	r1, r0
 800f482:	ab03      	add	r3, sp, #12
 800f484:	4805      	ldr	r0, [pc, #20]	@ (800f49c <fiprintf+0x20>)
 800f486:	f853 2b04 	ldr.w	r2, [r3], #4
 800f48a:	6800      	ldr	r0, [r0, #0]
 800f48c:	9301      	str	r3, [sp, #4]
 800f48e:	f7ff fd4b 	bl	800ef28 <_vfiprintf_r>
 800f492:	b002      	add	sp, #8
 800f494:	f85d eb04 	ldr.w	lr, [sp], #4
 800f498:	b003      	add	sp, #12
 800f49a:	4770      	bx	lr
 800f49c:	20000170 	.word	0x20000170

0800f4a0 <abort>:
 800f4a0:	b508      	push	{r3, lr}
 800f4a2:	2006      	movs	r0, #6
 800f4a4:	f000 f82c 	bl	800f500 <raise>
 800f4a8:	2001      	movs	r0, #1
 800f4aa:	f7f2 fd95 	bl	8001fd8 <_exit>

0800f4ae <_raise_r>:
 800f4ae:	291f      	cmp	r1, #31
 800f4b0:	b538      	push	{r3, r4, r5, lr}
 800f4b2:	4605      	mov	r5, r0
 800f4b4:	460c      	mov	r4, r1
 800f4b6:	d904      	bls.n	800f4c2 <_raise_r+0x14>
 800f4b8:	2316      	movs	r3, #22
 800f4ba:	6003      	str	r3, [r0, #0]
 800f4bc:	f04f 30ff 	mov.w	r0, #4294967295
 800f4c0:	bd38      	pop	{r3, r4, r5, pc}
 800f4c2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800f4c4:	b112      	cbz	r2, 800f4cc <_raise_r+0x1e>
 800f4c6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800f4ca:	b94b      	cbnz	r3, 800f4e0 <_raise_r+0x32>
 800f4cc:	4628      	mov	r0, r5
 800f4ce:	f000 f831 	bl	800f534 <_getpid_r>
 800f4d2:	4622      	mov	r2, r4
 800f4d4:	4601      	mov	r1, r0
 800f4d6:	4628      	mov	r0, r5
 800f4d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f4dc:	f000 b818 	b.w	800f510 <_kill_r>
 800f4e0:	2b01      	cmp	r3, #1
 800f4e2:	d00a      	beq.n	800f4fa <_raise_r+0x4c>
 800f4e4:	1c59      	adds	r1, r3, #1
 800f4e6:	d103      	bne.n	800f4f0 <_raise_r+0x42>
 800f4e8:	2316      	movs	r3, #22
 800f4ea:	6003      	str	r3, [r0, #0]
 800f4ec:	2001      	movs	r0, #1
 800f4ee:	e7e7      	b.n	800f4c0 <_raise_r+0x12>
 800f4f0:	2100      	movs	r1, #0
 800f4f2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800f4f6:	4620      	mov	r0, r4
 800f4f8:	4798      	blx	r3
 800f4fa:	2000      	movs	r0, #0
 800f4fc:	e7e0      	b.n	800f4c0 <_raise_r+0x12>
	...

0800f500 <raise>:
 800f500:	4b02      	ldr	r3, [pc, #8]	@ (800f50c <raise+0xc>)
 800f502:	4601      	mov	r1, r0
 800f504:	6818      	ldr	r0, [r3, #0]
 800f506:	f7ff bfd2 	b.w	800f4ae <_raise_r>
 800f50a:	bf00      	nop
 800f50c:	20000170 	.word	0x20000170

0800f510 <_kill_r>:
 800f510:	b538      	push	{r3, r4, r5, lr}
 800f512:	4d07      	ldr	r5, [pc, #28]	@ (800f530 <_kill_r+0x20>)
 800f514:	2300      	movs	r3, #0
 800f516:	4604      	mov	r4, r0
 800f518:	4608      	mov	r0, r1
 800f51a:	4611      	mov	r1, r2
 800f51c:	602b      	str	r3, [r5, #0]
 800f51e:	f7f2 fd4b 	bl	8001fb8 <_kill>
 800f522:	1c43      	adds	r3, r0, #1
 800f524:	d102      	bne.n	800f52c <_kill_r+0x1c>
 800f526:	682b      	ldr	r3, [r5, #0]
 800f528:	b103      	cbz	r3, 800f52c <_kill_r+0x1c>
 800f52a:	6023      	str	r3, [r4, #0]
 800f52c:	bd38      	pop	{r3, r4, r5, pc}
 800f52e:	bf00      	nop
 800f530:	200010c8 	.word	0x200010c8

0800f534 <_getpid_r>:
 800f534:	f7f2 bd38 	b.w	8001fa8 <_getpid>

0800f538 <_init>:
 800f538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f53a:	bf00      	nop
 800f53c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f53e:	bc08      	pop	{r3}
 800f540:	469e      	mov	lr, r3
 800f542:	4770      	bx	lr

0800f544 <_fini>:
 800f544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f546:	bf00      	nop
 800f548:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f54a:	bc08      	pop	{r3}
 800f54c:	469e      	mov	lr, r3
 800f54e:	4770      	bx	lr
